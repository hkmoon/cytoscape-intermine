{"version":3,"sources":["node_modules/browserify/node_modules/browser-pack/_prelude.js","bundle.js","bower_components/cytoscape/dist/cytoscape.js","bower_components/imjs/js/im.js","js/cymine.js","js/main.js","js/nodeDataDisplay.js","node_modules/browserify/node_modules/os-browserify/browser.js","node_modules/browserify/node_modules/path-browserify/index.js","node_modules/browserify/node_modules/process/browser.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length",1,"module","process","__dirname","cytoscape","window","$$","init","apply","arguments","version","options","undefined","is","plainObject","Core","string","extension","fn","define","amd","this","STATE_PENDING","STATE_FULFILLED","STATE_REJECTED","api","executor","id","state","fulfillValue","rejectReason","onFulfilled","onRejected","proxy","then","bind","fulfill","reject","prototype","value","deliver","curr","next","push","resolver","execute","name","execute_handlers","handlers","func","nextTick","setImmediate","setTimeout","cb","method","result","resolve","promise","x","TypeError","resolved","y","Promise","all","ps","resolveAll","rejectAll","vals","Array","doneCount","val","p","isPromise","err","typeofstr","typeofobj","typeoffn","defined","obj","array","isArray","constructor","Object","object","number","isNaN","integer","Math","floor","color","$","Color","toString","bool","elementOrCollection","element","collection","Element","_private","single","Collection","core","style","Style","stylesheet","Stylesheet","event","Event","thread","Thread","fabric","Fabric","emptyString","match","nonemptyString","domElement","HTMLElement","boundingBox","x1","x2","y1","y2","touch","DocumentTouch","document","gecko","InstallTrigger","documentElement","webkit","webkitURL","chromium","chrome","khtml","navigator","vendor","khtmlEtc","trident","ActiveXObject","windows","appVersion","mac","linux","unix","util","extend","src","copy","copyIsArray","clone","target","deep","callback","ret","msgIfNotFound","done","fulfil","checkWindow","onCheckWindowDone","checkCommonJs","onCheckCommonJsDone","checkAmd","onCheckAmdDone","nameImpl","error","requires","names","impls","gotImpl","checkDone","index","impl","throttle","wait","leading","trailing","maxWait","debounce","now","Date","args","maxTimeoutId","stamp","thisArg","timeoutId","trailingCall","lastCalled","max","delayed","remaining","clearTimeout","isCalled","maxDelayed","leadingCall","msg","console","log","hasOwnProperty","slice","makeBoundingBox","bb","w","h","mapEmpty","map","empty","pushMap","getMap","setMap","key","keys","deleteMap","keepChildren","lastKey","child","capitalize","str","charAt","toUpperCase","substring","camel2dash","ch","chLowerCase","toLowerCase","isUpperCase","noUpperCases","join","dash2camel","nextIsUpper","isDash","trim","first","last","hex2tuple","hex","g","b","shortHex","base","parseInt","hsl2tuple","hsl","hue2rgb","q","m","RegExp","regex","hsla","exec","parseFloat","round","rgb2tuple","rgb","rgba","isPct","channel","atLeastOneIsPct","allArePct","alpha","colorname2tuple","colors","color2tuple","tuple2hex","tuple","ch2hex","transparent","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","grey","green","greenyellow","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","rgbaNoBackRefs","hslaNoBackRefs","hex3","hex6","raf","requestAnimationFrame","mozRequestAnimationFrame","webkitRequestAnimationFrame","msRequestAnimationFrame","math","signum","distance","p1","p2","dx","dy","sqrt","qbezierAt","p0","qbezierPtAt","boundingBoxesIntersect","bb1","bb2","inBoundingBox","pointInBoundingBox","pt","roundRectangleIntersectLine","nodeX","nodeY","width","height","padding","straightLineIntersections","cornerRadius","getRoundRectangleRadius","halfWidth","halfHeight","topStartX","topStartY","topEndX","topEndY","finiteLinesIntersect","rightStartX","rightStartY","rightEndX","rightEndY","bottomStartX","bottomStartY","bottomEndX","bottomEndY","leftStartX","leftStartY","leftEndX","leftEndY","arcIntersections","topLeftCenterX","topLeftCenterY","intersectLineCircle","topRightCenterX","topRightCenterY","bottomRightCenterX","bottomRightCenterY","bottomLeftCenterX","bottomLeftCenterY","roundRectangleIntersectBox","boxX1","boxY1","boxX2","boxY2","centerX","centerY","hBoxTopLeftX","hBoxTopLeftY","hBoxBottomRightX","hBoxBottomRightY","vBoxTopLeftX","vBoxTopLeftY","vBoxBottomRightX","vBoxBottomRightY","boxMinX","min","boxMaxX","boxMinY","boxMaxY","boxIntersectEllipse","checkInBoundingCircle","farthestPointSqDistance","boxInBezierVicinity","x1box","y1box","x2box","y2box","x3","y3","tolerance","midX","midY","curveMinX","curveMinY","curveMaxX","curveMaxY","checkBezierInBox","sampleInBox","checkStraightEdgeInBox","checkStraightEdgeCrossesBox","yValue","xValue","aX","bX","aY","bY","abs","tLeft","tRight","tTop","tBottom","checkBezierCrossesBox","cX","xIntervals","leftParam","rightParam","tX1","tX2","discriminantX1","tX3","tX4","discriminantX2","sort","cY","yIntervals","topParam","bottomParam","tY1","tY2","discriminantY1","tY3","tY4","discriminantY2","yIndex","inLineVicinity","lx1","ly1","lx2","ly2","inBezierVicinity","toleranceSquared","solveCubic","c","d","discriminant","dum1","term1","r13","pow","acos","cos","PI","sqDistanceToQuadraticBezier","roots","zeroThreshold","params","closestParam","curX","curY","distSquared","minDistanceSquared","sqDistanceToFiniteLine","offset","line","lineSq","hypSq","dotProduct","adjSq","pointInsidePolygon","basePoints","direction","transformedPoints","angle","asin","sin","points","expandedLineSet","expandPolygon","joinLines","up","down","lineSet","currentLineStartX","currentLineStartY","currentLineEndX","currentLineEndY","nextLineStartX","nextLineStartY","nextLineEndX","nextLineEndY","vertices","intersection","pad","currentPointX","currentPointY","nextPointX","nextPointY","offsetX","offsetY","offsetLength","normalizedOffsetX","normalizedOffsetY","intersectLineEllipse","ellipseWradius","ellipseHradius","dispX","dispY","len","newLength","lenProportion","vec1","vec2","radius","t1","t2","tMin","tMax","inRangeParams","nearIntersectionX","nearIntersectionY","farIntersectionX","farIntersectionY","findCircleNearPoint","farX","farY","displacementX","displacementY","unitDisplacementX","unitDisplacementY","findMaxSqDistanceToOrigin","sqDistance","maxSqDistance","x4","y4","infiniteLines","ua_t","ub_t","u_b","ua","ub","oldX1","oldY1","west","east","north","south","boxIntersectPolygon","minTransformedX","maxTransformedX","minTransformedY","maxTransformedY","nextX","nextY","currentX","currentY","polygonIntersectLine","intersections","shortenIntersection","amount","disp","lenRatio","generateUnitNgonPointsFitToSquare","sides","rotationRadians","generateUnitNgonPoints","fitPolygonToSquare","minX","Infinity","minY","maxX","maxY","sx","sy","increment","startAngle","currentAngle","setExtension","type","registrant","layoutProto","optLayoutFns","fnName","start","run","stop","opts","animate","eles","on","layout","one","unbindSelfOnTrigger","once","unbindAllBindersOnTrigger","off","trigger","eventAliasesOn","extensions","getExtension","setModule","moduleType","moduleName","modules","getModule","cyReg","$ele","_cyreg","$this","cy","ready","isReady","data","readies","each","container","jQuery","returnFalse","returnTrue","props","originalEvent","isDefaultPrevented","cyTarget","cyPosition","cyRenderedPosition","namespace","message","timeStamp","preventDefault","stopPropagation","isPropagationStopped","stopImmediatePropagation","isImmediatePropagationStopped","defaults","field","bindingEvent","allowBinding","allowSetting","allowGetting","settingEvent","settingTriggersEvent","triggerFnName","immutableKeys","updateStyle","onSet","self","canSet","selfIsArrayLike","valid","k","v","removeData","triggerEvent","split","i_a","l_a","_privateFields","validKeyToDelete","optionalTypeRegex","falseCallback","events","selector","eventsIsString","evts","evt","listener","delegated","selObj","Selector","binders","j","_p","listeners","proto","addListener","listen","removeListener","unlisten","unbind","emit","pon","promiseOn","offArgs","onArgs","concat","nsMatches","typeMatches","cbMatches","listenerMatches","splice","extraParams","fnToTrigger","eventsIsObject","eventsIsEvent","hasCompounds","hasCompoundNodes","eventArgObj","evtObj","triggerer","triggererIsElement","bubbleUp","pos","zoom","pan","lis","targetMatches","matches","binder","binderListeners","binderListener","context","parent","hasParent","animated","fnParams","styleEnabled","ele","animation","current","clearQueue","queue","delay","time","complete","duration","properties","isCore","isEles","callTime","propertiesEmpty","css","getValueStyle","renderedPosition","rpos","position","panBy","cyPan","center","centre","centerPan","getCenterPan","fit","fitVp","getFitViewport","addToAnimationPool","jumpToEnd","anis","notify","onlyThisGroup","selectorText","invalid","newQuery","group","filter","currentSubject","classes","colonSelectors","ids","meta","ancestor","subject","descendant","tokens","metaChar","comparatorOp","boolOp","separator","variable","className","cleanMetaChars","replace","$1","original","ops","op","indexOf","exprs","query","populate","dataExists","dataCompare","valueIsString","operator","dataBool","metaCompare","nextQuery","childQuery","descendantQuery","modifier","consumeExpr","expectation","expr","consumed","consumeWhitespace","check","selfn","size","eq","find","queryMatches","allColonSelectorsMatch","sel","selected","selectable","locked","visible","grabbed","removed","grabbable","isNode","children","nonempty","isEdge","active","backgrounding","allIdsMatch","actualId","allClassesMatch","cls","hasClass","operandsMatch","allDataMatches","fieldVal","fieldValue","fieldStr","valStr","caseInsensitive","notExpr","handledNotExpr","search","fieldTruthy","fieldUndefined","fieldRef","allMetaMatches","matchesAny","confirmRelations","elements","parents","descendants","selectorFunction","filteredCollection","clean","isValue","queryToString","coreStyle","newStyle","addDefaultStylesheet","styfn","fnMap","prefix","mapData","types","units","implicitUnits","percent","zeroOneNumber","unitless","nOneOneNumber","nonNegativeInt","enums","autoSize","bgSize","allowPercent","bgWH","bgPos","bgRepeat","bgFit","bgClip","lineStyle","borderStyle","curveStyle","fontFamily","fontVariant","fontStyle","fontWeight","textDecoration","textTransform","textWrap","textBackgroundShape","nodeShape","compoundIncludeLabels","arrowShape","arrowFill","display","visibility","valign","halign","text","mapping","layoutData","scratch","mapLayoutData","mapScratch","url","propList","textRotation","pieBackgroundN","prop","fontSize","textMaxWidth","text-valign","text-halign","text-outline-color","text-outline-width","text-outline-opacity","text-opacity","text-decoration","text-transform","text-wrap","text-max-width","text-background-color","text-background-opacity","text-border-opacity","text-border-width","text-border-style","text-border-color","text-background-shape","font-family","font-style","font-weight","font-size","min-zoomed-font-size","edge-text-rotation","opacity","z-index","content","overlay-opacity","overlay-color","overlay-padding","shadow-opacity","shadow-color","shadow-blur","shadow-offset-x","shadow-offset-y","text-shadow-opacity","text-shadow-color","text-shadow-blur","text-shadow-offset-x","text-shadow-offset-y","transition-property","transition-duration","transition-delay","background-blacken","background-color","background-opacity","background-image","background-image-opacity","background-position-x","background-position-y","background-repeat","background-fit","background-clip","background-width","background-height","border-color","border-opacity","border-width","border-style","shape","padding-top","padding-bottom","padding-left","padding-right","compound-sizing-wrt-labels","pie-size","pie-1-background-color","pie-2-background-color","pie-3-background-color","pie-4-background-color","pie-5-background-color","pie-6-background-color","pie-7-background-color","pie-8-background-color","pie-9-background-color","pie-10-background-color","pie-11-background-color","pie-12-background-color","pie-13-background-color","pie-14-background-color","pie-15-background-color","pie-16-background-color","pie-1-background-size","pie-2-background-size","pie-3-background-size","pie-4-background-size","pie-5-background-size","pie-6-background-size","pie-7-background-size","pie-8-background-size","pie-9-background-size","pie-10-background-size","pie-11-background-size","pie-12-background-size","pie-13-background-size","pie-14-background-size","pie-15-background-size","pie-16-background-size","pie-1-background-opacity","pie-2-background-opacity","pie-3-background-opacity","pie-4-background-opacity","pie-5-background-opacity","pie-6-background-opacity","pie-7-background-opacity","pie-8-background-opacity","pie-9-background-opacity","pie-10-background-opacity","pie-11-background-opacity","pie-12-background-opacity","pie-13-background-opacity","pie-14-background-opacity","pie-15-background-opacity","pie-16-background-opacity","source-arrow-shape","mid-source-arrow-shape","target-arrow-shape","mid-target-arrow-shape","source-arrow-color","mid-source-arrow-color","target-arrow-color","mid-target-arrow-color","source-arrow-fill","mid-source-arrow-fill","target-arrow-fill","mid-target-arrow-fill","line-style","line-color","control-point-step-size","control-point-weight","curve-style","haystack-radius","selection-box-color","selection-box-opacity","selection-box-border-color","selection-box-border-width","active-bg-color","active-bg-opacity","active-bg-size","outside-texture-bg-color","outside-texture-bg-opacity","defaultLength","clear","resetToDefault","parse","propIsBypass","propIsFlat","property","passedValue","bypass","deleteBypass","hasPie","strValue","mapped","valueMin","valueMax","c1","c2","same","fieldMin","fieldMax","unitsRegex","en","pxValue","getEmSizeInPixels","msValue","propsStr","propsSplit","propName","selectorStr","mappedProperties","mapVal","cssRule","currentSelectorIsCore","contextStyles","propDiffs","ie","cxtMeta","getContextMeta","cxtStyle","getContextStyle","app","applyContextStyle","updateTransitions","diffProps","updateStyleHints","getPropertiesDiff","oldCxtKey","newCxtKey","cache","dualCxtKey","cachedVal","addedProp","cxt","oldHasCxt","newHasCxt","cxtHasDiffed","cxtHasMappedProps","laterCxtOverrides","laterCxt","hasLaterCxt","cxtKey","prevKey","styleCxtKey","contextSelectorMatches","diffPropNames","cxtStyles","hasCxt","styProp","retDiffProps","diffPropName","cxtProp","eleProp","retDiffProp","prev","applyParsedProperty","bypassed","transform","fStyle","family","weight","oWidth","wrap","wrapW","labelKey","fontKey","borderW","boundingBoxKey","cpss","cpd","cpw","curve","styleKey","parsedProp","flatProp","origProp","origPropIsBypass","isParent","currentProp","printMappingErr","isLayout","isScratch","fields","r1","r2","g1","g2","b1","b2","a1","a2","clr","calcValue","flatPropVal","fnRetVal","update","updateMappers","propInStyle","isBypass","anyPrev","diffProp","prevProp","fromProp","toProp","diff","applyBypass","transitioning","removeBypasses","specifiedProps","overrideBypass","removeAllBypasses","getComputedStyle","pxAsStr","getPropertyValue","px","containerCss","containerProperty","propStr","containerPropertyAsString","getRenderedStyle","rstyle","styleProp","getRawStyle","applyFromJson","json","fromJson","applyFromString","removeSelAndBlockFromRemaining","selAndBlockStr","substr","removePropAndValFromRem","blockRem","propAndValStr","nothingLeftToParse","selAndBlock","blockStr","invalidBlock","propAndVal","fromString","sheetfn","generateStyle","files","pass","thdfn","stringifyFieldVal","JSON","stringify","fnAsRequire","req","fnAs","protoreq","subname","protoNonempty","protoStr","isPathStr","as","shift","stopped","running","useWW","useNode","runP","threadTechAlreadyExists","ran","fnImplStr","fnStr","wwifyFile","file","location","origin","pathname","fnBlob","fnUrl","fnPre","Blob","URL","createObjectURL","ww","webworker","Worker","postMessage","$$eval","addEventListener","isObject","removeEventListener","$$resolve","$$reject","path","child_process","fork","send","terminate","kill","defineFnal","arg1","reduce","reduceRight","halt","include","worker","N","defN","hardwareConcurrency","cpus","fabfn","random","broadcast","spreadSize","subsize","ceil","spread","runPs","doneEarly","thens","postpass","origResolve","oldLen","_$_$_fabmap","nothingInsdByResolve","datum","incDatum","cmp","P","sortedSplit","_$_$_cmp","joined","merge","sorted","eleI","eleJ","splitL","defineRandomPasser","threadFn","randomMap","origDefaults","reg","firstChild","removeChild","head","headless","renderer","defVal","def","altVal","initrender","id2index","onRenders","aniEles","notificationsEnabled","minZoom","maxZoom","zoomingEnabled","userZoomingEnabled","panningEnabled","userPanningEnabled","boxSelectionEnabled","autolock","autolockNodes","autoungrabify","autoungrabifyNodes","autounselectify","deferredExecQueue","selType","selectionType","loadExtData","anyIsPromise","extData","initStyle","initEles","setStyle","initRenderer","hideEdgesOnViewport","hideLabelsOnViewport","textureOnViewport","wheelSensitivity","motionBlur","motionBlurOpacity","pixelRatio","desktopTapThreshold","touchTapThreshold","load","startAnimationLoop","corefn","destroy","domEle","parEle","parentNode","getElementById","addToPool","alreadyInPool","removeFromPool","inPool","jid","defer","deferredTimeout","readyState","add","restore","jsons","nodes","edges","elesByGroup","grs","il","elesArray","jl","remove","onload","ondone","notifications","layoutOpts","oldEles","globalAnimationStep","handleElements","handleElement","ranAnis","completes","ani","started","startAnimation","step","doneEles","ranCoreAni","toNotify","updatedEles","updateCompoundBounds","unmerge","startPosition","startStyle","startPan","startZoom","startTime","startPos","endPos","ease","endPan","animatingPan","endZoom","animatingZoom","end","easedVal","startProp","endProp","ch1","ch2","removeScratch","png","jpg","bg","jpeg","initLayout","makeLayout","LayoutProto","createLayout","batchingNotify","bEles","batchNotifyEles","bTypes","batchNotifyTypes","noNotifications","startBatch","batchingStyle","batchStyleEles","endBatch","batch","batchData","renderTo","pxRatio","forceRender","resize","RendererProto","triggerOnRender","cbs","onRender","offRender","dim","dims","viewportState","bbe","level","z","pan1","zoom1","zoom2","pan2","posChanged","viewport","zoomDefd","panDefd","zoomFailed","panFailed","cancelOnFailedZoom","reset","clientWidth","clientHeight","extent","rb","renderedExtent","idFactory","generate","tryThisId","autoWidth","autoHeight","styleCxts","rscratch","indexes","createdElements","elesIds","unique","elefn","elesfn","elesArr","notifyRenderer","restored","numNodes","numEdges","edge","fieldsLength","badSourceOrTarget","source","tgt","node","parentId","specifiedParent","selfAsParent","toUpdateStyle","connectedNodes","rtrigger","inside","addConnectedEdges","addChildren","alreadyAdded","elesToRemoveIds","elesToRemove","unshift","removeEdgeRef","connectedEdges","connectedEdge","removeChildRef","elesStillInside","removedElements","checkedParentId","move","struct","srcId","tgtId","srcExists","tgtExists","parentExists","descs","descsEtc","stdBreadthFirstSearch","std","breadthFirstSearch","directed","visit","found","Q","connectedBy","id2depth","V","depth","prevEdge","prevNode","not","vwEdges","intersect","connectedEles","stdDepthFirstSearch","depthFirstSearch","S","discovered","pop","kruskal","weightFn","findSet","forest","anySame","A","toArray","weightA","weightB","setU","setV","dijkstra","root","dist","knownDist","isLoop","valueFn","heap","Minheap","distBetween","smallestEdge","uvs","edgesTo","edgesWith","smallestDistance","smallestEl","smalletsDist","uid","Infinite","neighbors","neighborhood","vid","vDist","alt","getValueById","edit","distanceTo","pathTo","bfs","dfs","stdBfs","stdDfs","aStar","reconstructPath","cameFromMap","pathAcum","previous","previousEdge","cameFromEdge","findMin","openSet","fScore","minPos","tempScore","goal","heuristic","closedSet","cameFrom","gScore","stdFilter","steps","cMin","rPath","reverse","floydWarshall","id2position","newRow","edgeNext","initMatrix","sourceIndex","targetIndex","position2id","res","from","to","fromId","toId","reconstructPathAux","pathArr","bellmanFord","cost","predecessor","predEdge","flag","temp","hasNegativeWeightCycle","fromPos","toPos","acumPath","predPos","kargerStein","colapse","edgeIndex","nodeMap","remainingEdges","edgeInfo","sourceIn","targetIn","partition1","partition2","newEdges","contractUntil","metaNodeMap","sizeLimit","numIter","LN2","stopSize","edgeIndexes","minCut","minCutSize","originalMetaNode","iter","edgesState","metaNodeMap2","res1","res2","resEdges","witnessNodePartition","partitionId","cut","pageRank","normalizeVector","vector","total","dampingfactor","dampingFactor","precision","epsilon","iterations","matrix","columnSum","additionalProb","eigenvector","nullVector","rank","nodeId","degreeCentralityNormalized","indegrees","outdegrees","maxIndegree","maxOutdegree","currDegree","degreeCentrality","indegree","outdegree","degrees","maxDegree","degree","callingEles","incoming","outgoing","k_in","k_out","s_in","s_out","connEdges","closenessCentralityNormalized","harmonic","closenesses","maxCloseness","fw","currCloseness","closeness","closenessCentrality","totalDistance","betweennessCentrality","weighted","priorityInsert","tmp","C","outgoers","openNeighborhood","Number","POSITIVE_INFINITY","forEach","edgeWeight","betweenness","betweennessNormalized","betweennessNormalised","dc","dcn","degreeCentralityNormalised","cc","ccn","closenessCentralityNormalised","bc","addClass","changed","toggleClass","classesStr","toggle","shouldAdd","removeClass","flashClass","allAre","some","every","allAreNeighbors","allAreNeighbours","commonAncestors","ancestors","orphans","nonorphans","siblings","isChild","borderWidthMultiplier","borderWidthAdjustment","removeRscratch","validKeys","silentPosition","positions","silent","elePos","toTrigger","silentPositions","includeLabels","includeEdges","top","bottom","left","right","didUpdate","updated","setting","relativePosition","ppos","relativeToParent","outerWidth","border","renderedWidth","renderedOuterWidth","owidth","outerHeight","renderedHeight","renderedOuterHeight","oheight","renderedBoundingBox","cy_p","includeNodes","recalculateRenderedStyle","ex1","ex2","ey1","ey2","includedEle","halfW","halfH","n1","n1_p","n1pos","n2","n2_p","n2pos","bpts","bezierPts","wHalf","bpt","hpts","haystackPts","label","labelWidth","labelHeight","labelX","labelY","lh","lw","noninf","attr","removeAttr","modelPosition","point","modelPositions","renderedPoint","relativePoint","boundingbox","renderedBoundingbox","defineDegreeFunction","includeLoops","defineDegreeBoundsFunction","degreeFn","minDegree","minIndegree","minOutdegree","totalDegree","toRemove","absoluteComplement","other","col1","col2","col1Smaller","ids2","col","xor","inOther","both","retEles","toAdd","toAddEle","unmergeOne","unmergedLastEle","lastEleI","lastEle","mapFn","arr","filterEles","valFn","maxEle","minEle","union","or","difference","relativeComplement","and","symmetricDifference","symdiff","fnFilter","filterFn","complement","abscomp","isSimple","thisSize","sortFn","sortByZIndex","zIndexSort","zDepth","MAX_VALUE","srcDepth","tgtDepth","a_p","b_p","zDiff","depthA","depthB","aIsNode","aIsEdge","bIsNode","bIsEdge","depthDiff","sameDepth","layoutPositions","lastNode","newPos","animationDuration","updatedCompounds","renderedCss","renstyle","removeCss","show","hide","pStyle","pVis","pDis","hidden","effectiveOpacity","parentOpacity","isFullAutoParent","autoW","autoH","renderedStyle","removeBypass","removeStyle","defineSwitchFunction","changedEles","handler","able","ableField","overrideAble","changedColl","defineSwitchSet","overrideField","deselect","unselect","inactive","defineSourceFunction","sources","defineEdgesWithFunction","otherNodes","thisIds","otherIds","edgeData","thisToOther","otherToThis","edgeConnectsThisAndOther","thisIs","defineParallelEdgesFunction","codirected","edge1","src1","srcid1","tgt1","tgtid1","srcEdges1","edge2","edge2data","tgtid2","srcid2","oppdirected","hasEdgesPointingIn","leaves","hasEdgesPointingOut","oEles","eleId","successors","sEles","sElesIds","newOutgoers","outgoer","outgoerId","incomers","predecessors","pEles","pElesIds","newIncomers","incomer","incomerId","otherNode","closedNeighborhood","neighbourhood","closedNeighbourhood","openNeighbourhood","targets","parallelEdges","codirectedEdges","Heap","minHeapComparator","Maxheap","maxHeapComparator","comparator","idFn","elesLen","sourceHeap","pointers","getArgumentAsCollection","extractor","heapify","heapfn","resultArray","sourceEles","isHeap","lCheck","rCheck","arrlen","heapSwap","swapValue","swapElems","idI","idJ","rootToLeaf","best","treeLen","condHeap","insert","elindex","elvalue","elid","elsize","elementId","elementIndex","contains","removeCandidate","removeValue","remId","lastIndex","findDirectionHeapify","elementValue","CanvasRenderer","select","canvases","CANVAS_LAYERS","contexts","canvasNeedsRedraw","bufferCanvases","BUFFER_COUNT","bufferContexts","hoverData","downTime","triggerMode","dragging","initialPan","capture","timeoutData","panTimeout","dragData","possibleDragElements","touchData","singleTouchStartTime","singleTouchMoved","earlier","zoomData","freeToZoom","lastPointerX","redraws","showFps","bindings","canvasContainer","createElement","containerStyle","zIndex","overflow","appendChild","getContext","setAttribute","String","topCanvas","NODE","SELECT_BOX","DRAG","motionBlurEnabled","forcedPixelRatio","motionBlurTransparency","motionBlurPxRatio","mbPxRBlurry","minMbLowQualFrames","fullQualityMb","clearedForMotionBlur","desktopTapThreshold2","touchTapThreshold2","tapholdDuration","TEXTURE_BUFFER","MOTIONBLUR_BUFFER_NODE","MOTIONBLUR_BUFFER_DRAG","panOrBoxSelectDelay","pathsImpld","Path2D","usePaths","updateNodesCache","updateEdgesCache","updateCachedZSortedEles","invalidateContainerClientCoordsCache","matchCanvasSize","redraw","destroyed","binding","useCapture","removeObserver","disconnect","labelCalcDiv","body","rendFunc","arrowShapes","arrowShapeHeight","bbCollide","translation","xRotated","yRotated","xScaled","yScaled","xTranslated","yTranslated","_points","collide","roughCollide","draw","lineTo","spacing","gap","_ctrlPt","firstPt","ctrlPt","ctrlPtTrans","quadraticCurveTo","_pointsTee","triPts","teePts","firstTeePt","moveTo","leavePathOpen","matchEdgeWidth","_baseRadius","aspectRatio","arc","getArrowWidth","CRp","getCachedNodes","cachedNodes","getCachedEdges","cachedEdges","projectIntoViewport","clientX","clientY","offsets","findContainerClientCoords","offsetLeft","offsetTop","containerBB","getBoundingClientRect","findNearestElement","visibleElementsOnly","isTouch","checkNode","nodeThreshold","hw","hh","nodeShapes","getNodeShape","checkPoint","near","checkEdge","sqDist","passedVisibilityCheck","rs","edgeThreshold","widthSq","width2","inEdgeBB","passesVisibilityCheck","edgeType","startX","startY","cp2ax","cp2ay","selfEdgeMidX","selfEdgeMidY","cp2cx","cp2cy","endX","endY","halfRadius","tgtPos","tgtW","tgtH","srcPos","srcW","srcH","cp2x","cp2y","srcShape","tgtShape","srcArW","srcArH","getArrowHeight","tgtArW","tgtArH","arrowStartX","arrowStartY","arrowEndX","arrowEndY","getCachedZSortedEles","getAllInBox","box","x1c","x2c","y1c","y2c","heur","nShape","getNodeWidth","getNodeHeight","shapeObj","intersectBox","startInBox","endInBox","getNodePadding","zOrderSort","forceRecalc","lastNodes","lastZOrderCachedNodes","lastEdges","lastZOrderCachedEdges","cachedZSortedEles","projectBezier","pushBezierPts","pts","mid","recalculateNodeLabelProjection","textX","textY","nodeWidth","nodeHeight","nodePos","textHalign","textValign","applyLabelDimensions","recalculateEdgeLabelProjection","edgeCenterX","edgeCenterY","getLabelText","labelDims","calculateLabelDimensions","labelWrapKey","labelWrapCachedText","lines","maxW","wrappedLines","lineDims","lineW","words","subline","word","testLine","testDims","testW","labelWrapCachedLines","extraKey","cacheKey","labelDimCache","div","ds","pointerEvents","lineHeight","whiteSpace","textContent","handledEdge","bbStyleSame","labelStyleSame","styleSame","posSame","wSame","nodeW","hSame","nodeH","srcSame","srcX","srcY","tgtSame","tgtX","tgtY","positionsSame","curveType","pEdge","pId","recalculateEdgeProjections","recalculateLabelProjections","findEdgeControlPoints","pairId","hashTable","pairIds","haystackEdges","edgeIsUnbundled","hasUnbundled","srcBorder","tgtBorder","vectorNormInverse","badBezier","pairEdges","srcOutside","intersectLine","tgtOutside","midptSrcPts","vectorNorm","edgeIndex1","lastEdgeIndex","edgeIndex2","numEdges1","lastNumEdges","numEdges2","eStyle","stepSize","stepDist","stepWeight","swappedDirection","srcX1","lastSrcCtlPtX","srcX2","srcY1","lastSrcCtlPtY","srcY2","srcW1","lastSrcCtlPtW","srcW2","srcH1","lastSrcCtlPtH","srcH2","tgtX1","lastTgtCtlPtX","tgtX2","tgtY1","lastTgtCtlPtY","tgtY2","tgtW1","lastTgtCtlPtW","tgtW2","tgtH1","lastTgtCtlPtH","tgtH2","width1","lastW","lastWidth","loopDist","loopW","loopaPos","loopbPos","minCompoundStretch","compoundStretchA","compoundStretchB","manStepDist","normStepDist","sign","distanceFromMidpoint","w1","w2","adjustedMidpt","findEndpoints","badStart","badAStart","badEnd","badAEnd","minCpADistFactor","arrowW","minCpADist","startACpDist","closeStartACp","endACpDist","closeEndACp","overlapping","cpD","cpL","cpM","cpProj","srcCtrlPtIntn","tgtCtrlPtIntn","haystack","tgtArShape","srcArShape","tgtBorderW","srcBorderW","cp","arrowEnd","edgeEnd","arrowStart","edgeStart","noArrowPlacement","badLine","isArcEdge","findEdges","nodeSet","adjacentEdges","edgeWidth","arrowWidthCache","drawEdge","drawOverlayInstead","overlayPadding","overlayOpacity","overlayColor","strokeStyle","lineCap","lineColor","startNode","endNode","lineWidth","shadowBlur","shadowOpacity","shadowColor","shadowOffsetX","shadowOffsetY","shadowStyle","drawStyledEdge","details","nodeDirectionX","nodeDirectionY","edgeDirectionX","edgeDirectionY","straightEdgeTooShort","drawArrowheads","canvasCxt","pathCacheHit","pathCacheKey","keyLengthMatches","keyMatches","pathCache","setLineDash","beginPath","stroke","drawArrowhead","gco","globalCompositeOperation","arrowClearFill","fillStyle","drawArrowShape","isHaystack","arrowType","fill","canvasContext","shapeImpl","arrowPathCacheKey","arrowPathCache","alreadyCached","closePath","lineJoin","getCachedImage","onLoad","imageCache","image","Image","safeDrawImage","img","ix","iy","iw","ih","drawImage","drawingImage","drawInscribedImage","xPos","yPos","repeat","clip","shouldClip","imgOpacity","bgW","bgH","scale","gAlpha","globalAlpha","save","drawPath","pattern","createPattern","translate","roundRect","ctx","drawEdgeText","didDrag","pinching","wheel","swipePanning","computedSize","minSize","textAlign","textBaseline","theta","autorotate","atan","rotate","drawText","drawNodeText","getFontCache","fontCaches","setupTextStyle","labelStyle","labelSize","labelFamily","labelWeight","outlineOpacity","outlineColor","fontCacheKey","font","backgroundOpacity","borderOpacity","textBorderWidth","margin","bgWidth","bgHeight","bgX","bgY","textFill","textBackgroundColor","styleShape","fillRect","textStroke","textLineWidth","textBorderColor","textBorderStyle","strokeRect","whiteWidth","strokeText","fillText","drawNode","prevBging","bgColor","borderColor","npos","darkness","borderWidth","drawPie","nodeOpacity","pieSize","lastPercent","angleStart","angleDelta","angleEnd","CR","getPixelRatio","backingStore","backingStorePixelRatio","webkitBackingStorePixelRatio","mozBackingStorePixelRatio","msBackingStorePixelRatio","oBackingStorePixelRatio","devicePixelRatio","paintCache","caches","paintCaches","needToCreateCache","blur","mbPxRatio","canvas","canvasWidth","canvasHeight","textureMult","forcedContext","forcedZoom","forcedPan","drawAllLayers","forcedPxRatio","timeToRender","redrawTotalTime","redrawCount","minRedrawLimit","maxRedrawLimit","motionBlurDelay","drawToContext","mbclear","setContextTransform","ePan","eZoom","clearingMotionBlur","effectivePan","effectiveZoom","setTransform","clearRect","drawElements","list","hideLabels","hideEdges","textureDrawLastFrame","textureDraw","needDraw","vp","prevVp","prevViewport","viewportIsDiff","inNodeDragGesture","drag","nondrag","textureCache","texture","drawOnlyNodeLayer","mpan","outsideBgColor","outsideBgOpacity","vpManip","wheelZooming","draggingEles","zEles","insideExtent","inDragLayer","needMbClear","useBuffer","selecting","bgActivePosistion","averageRedrawTime","fps","maxFps","cxtNode","txtNode","cxtDrag","txtDrag","drawMotionBlur","txt","needClear","motionBlurFadeEffect","pxr","endTime","lastRedrawTime","currentlyDrawing","motionBlurCleared","motionBlurTimeout","mbFrames","inBoxSelection","redrawTimeout","redrawLimit","lastDrawTime","nowTime","timeElapsed","callAfterLimit","drawPolygonPath","drawPolygon","drawRoundRectanglePath","arcTo","drawRoundRectangle","createBuffer","buffer","bufferCanvasImage","full","maxWidth","maxHeight","maxScaleW","maxScaleH","buffCanvas","buffCxt","rect","toDataURL","registerBinding","nodeIsDraggable","getDragListIds","listHasId","addToList","hasId","addDescendantsToDrag","innerNodes","iNode","addNodeToDrag","updateAncestorsInDragLayer","freeDraggedElements","draggedElements","dEi_p","sEdges","MutationObserver","mutns","mutn","rNodes","removedNodes","rNode","observe","childList","invalCtnrBBOnScroll","bbCtnr","which","mdownPos","needsRedraw","checkForTaphold","tapholdCancelled","tapholdTimeout","cxtStarted","cxtEvt","activate","getTime","cxtDragged","grabEvent","selectedNodes","timeUntilActive","bgActiveTimeout","unactivate","containerPageCoords","cyContainer","tParent","containerIsTarget","dx2","dy2","dist2","rdist2","updateDragDelta","dragDelta","cxtOver","deltaP","justStartedPan","mdPos","dragged","justStartedDrag","dEle","dPos","tcol","shiftDown","shiftKey","cxtTap","newlySelected","newlySelCol","wheelHandler","scrollingPage","wheelTimeout","deltaY","wheelDeltaY","wheelDelta","needsWheelFix","deltaMode","scrollingPageTimeout","f1x1","f1y1","f2x1","f2y1","distance1","distance1Sq","center1","modelCenter1","containerWidth","containerHeight","twoFingersStartInside","distanceSq","threeFingerSelectTimeout","link","touches","release","cxtDistThreshold","cxtDistThresholdSq","near1","near2","draggedEles","touchDragEles","selectedNode","f1x2","f1y2","f2x2","f2y2","distance2Sq","factorSq","distThreshold","distThresholdSq","factorThreshold","factorThresholdSq","lastThreeTouch","distance2","factor","df1x","df1y","df2x","df2y","tx","ty","ctrx","ctry","start_p","draggedEle","ctxTapend","ctxTap","updateStartStyle","startWasGrabbed","generatePolygon","sin0","cos0","ellipseStepSize","rw","rh","checkInEllipse","star5Points","outerPoints","innerPoints","innerRadius","ArborLayout","maxSimulationTime","ungrabifyWhileSimulating","repulsion","stiffness","friction","gravity","nodeMass","edgeLength","stableEnergy","energy","mean","infinite","arbor","calculateValueForElement","addNode","mass","nPos","sys","fromScreen","fixed","addEdge","simUpdatingPos","liveUpdate","system","ParticleSystem","parameters","dt","doneTimeout","doneTime","lastDraw","sysRenderer","doneHandler","movedNodes","eachNode","screenSize","screenPadding","screenStep","grabHandler","apos","Point","lockHandler","removeHandler","addHandler","resizeHandler","grabbableNodes","ungrabify","grabify","BreadthFirstLayout","circle","spacingFactor","avoidOverlap","maximalAdjustments","graph","rootsArray","components","unhandledNodes","currComp","pNode","comp","compRoots","depths","foundByBfs","prevId","succ","orphanNodes","maxChecks","checks","assignedDepth","assignDepthsToEles","breadthfirst","intersectsDepth","highestOther","thisInfo","highestDepthOfOther","otherInfo","adj","nDepths","elesToMove","nDepth","info","intEle","intInfo","newDepth","minDistance","cachedWeightedPercent","getWeightedPercent","eleDepth","samples","neighbor","bf","apct","bpct","times","biggestDepthSize","getPosition","isBottomDepth","depthSize","distanceX","distanceY","radiusStepSize","epos","CircleLayout","counterclockwise","dTheta","dcos","dsin","rMin","getPos","rx","ry","ColaLayout","refresh","randomize","handleDisconnected","nodeSpacing","flow","alignment","edgeSymDiffLength","edgeJaccardLength","unconstrIter","userConstIter","allConstIter","manuallyStopped","cola","getOptVal","updateNodePositions","updatedDims","nbb","retPos","onReady","onDone","ticksPerFrame","tickSkip","adaptor","TICK","EventType","tick","END","kick","inftick","resume","multitick","frame","scrCola","dragstart","dragend","nonparentNodes","offsetsX","offsetsY","align","constraints","axis","groups","optPadding","pleft","pright","ptop","pbottom","lengthFnName","lengthGetter","calcLength","links","defAxis","defMinSep","minSeparation","flowLayout","avoidOverlaps","ConcentricLayout","minNodeSpacing","concentric","levelWidth","nodeValues","maxNodeSize","levels","currentLevel","minDist","firstLvlHasMulti","maxR","rStep","CoseLayout","DEBUG","debug","nodeRepulsion","nodeOverlap","idealEdgeLength","edgeElasticity","nestingFactor","initialTemp","coolingFactor","minTemp","layoutInfo","createLayoutInfo","printLayoutInfo","randomizePositions","updatePositions","mainLoop","temperature","refreshPositions","loopRet","layoutNodes","idToIndex","nodeSize","graphSet","indexToGraph","layoutEdges","edgeSize","tempNode","positionX","positionY","padLeft","padRight","padTop","padBottom","tempGraph","p_id","node_id","node_ix","tempEdge","sourceId","targetId","idealLength","sourceIx","targetIx","sourceGraph","targetGraph","lca","findLCA","lcaGraph","inArray","node1","node2","findLCA_aux","count","graphIx","nodeIx","childGraphIx","set","coseBB","lnode","pctX","pctY","calculateNodeForces","calculateEdgeForces","calculateGravityForces","propagateForces","directionX","directionY","overlap","nodesOverlap","force","forceX","forceY","point1","findClippingPoint","point2","distanceSqr","dX","dY","X","Y","H","W","dirSlope","nodeSlope","overlapX","overlapY","lx","ly","fx","fy","nodeIndex","offX","offY","childNode","tempForce","limitForce","updateAncestryBoundaries","DagreLayout","nodeSep","edgeSep","rankSep","rankDir","minLen","dagre","getVal","graphlib","Graph","multigraph","compound","gObj","setGObj","setGraph","setDefaultEdgeLabel","setDefaultNodeLabel","setNode","setParent","setEdge","minlen","gNodeIds","dagreBB","dModel","constrainPos","xPct","yPct","GridLayout","rows","columns","cells","splits","cols","small","large","sm","lg","cellWidth","cellHeight","cellUsed","used","row","use","moveToNextCell","id2manPos","rcPos","NullLayout","PresetLayout","posIsFn","RandomLayout","SpreadLayout","cellCentroid","cell","hes","halfedges","area","getEndpoint","getStartpoint","sitesDistance","ls","expandingFactor","maxFruchtermanReingoldIterations","maxExpandIterations","foograph","Voronoi","setPositions","pData","dataVertices","dv","vertex","simBB","cWidth","cHeight","simulationBounds","simBBFactor","expFact","expIt","maxExpIt","srcNodeId","tgtNodeId","didLayoutReady","checkMinDist","ee","infractions","eei","lSite","rSite","lMinDist","eval","lWidth","lHeight","lExpFact","lMaxExpIt","lMaxFruchtermanReingoldIterations","savePositions","expandIteration","fv","messagePositions","frg","frgNodes","ni","Vertex","insertVertex","dataEdges","ei","insertEdge","frLayoutManager","ForceDirectedVertexLayout","voronoi","bbox","xl","xr","yt","yb","vSites","diagram","compute","site","centroid","currv","prevInfractions","bStop","voronoiIteration","it","recycle","currInfractions","SpringyLayout","damping","Springy","setLayoutPositionForElement","fdId","model","fdP","fdRenderer","nodePoints","positionInFd","newNode","fdSrc","fdTgt","newEdge","sim","Layout","ForceDirected","minEnergyThreshold","currentBB","getBoundingBox","toScreen","topright","subtract","bottomleft","divide","Vector","py","drawnNodes","Renderer","dragHandler","stopSystem","filterNodes","NullRenderer","_process","os",2,"global","intermine","imjs","_dereq_","ACCEPT_HEADER","xml","tsv","tab","csv","fasta","gff3","bed","objects","jsonobjects","jsontable","jsonrows","jsoncount","jsonp","jsonpobjects","jsonptable","jsonprows","jsonpcount","expose","utils","thing","./service","./shiv",3,"JSONStream","PESKY_COMMA","URLENC","USER_AGENT","VERSION","blocking","getMsg","http","invoke","parseOptions","rejectAfter","streaming","_ref","supports","resp","errors","results","pipe","statusCode","pause","_arg","containerBuffer","chunk","ct","parsed","_ref1","headers","test","dataType","format","_error","iterReq","page","eb","onEnd","attach","readErrors","isFunction","toXML","stream","sc","makeRequest","timeout","cancelTimeout","postdata","sep","_ref2","_ref3","querystring","withCredentials","port","User-Agent","Accept","contentType","auth","doReq","request","write","./constants","./util","./version",4,"CategoryResults","IDResolutionJob","IdResults","ONE_MINUTE","concatMap","fold","funcutils","get","uniqBy","withCB","__hasProp","__indexOf","item","__bind","me","getIssueMatches","getStats","stats","getMatches","getMatchIds","allMatchIds","goodMatchIds","combineIds","_this","issueSet","flatten","getReasons","isGood","_results","identifiers","getObjectStats","getIdentifierStats","allIdents","issues","matchIdents","toIdents","ms","ident","_i","_len","_results1","service","del","fetchResults","fetchErrorMessage","fetchStatus","gettingRes","gettingVer","fetchVersion","decay","poll","onSuccess","onError","onProgress","backOff","status","create",5,"INVITES","List","REQUIRES_VERSION","SHARES","TAGS_PATH","dejoin","getFolderName","isFolder","_updateTags","hasTag","dateCreated","folders","tags","getTags","view","where","fetchTags","addTags","removeTags","contents","rename","newName","post","oldname","newname","fetchList","baseName","fetchLists","description","enrichment","shareWithUser","recipient","with","inviteUserToShare",6,"JAVA_LANG_OBJ","Model","PathInfo","Table","omap","displayName","attributes","references","collections","liftToTable","findCommonType","findSharedAncestor","getAncestorsOf","getSubclassesOf","getPathInfo","subcls","cd","clazz","_","classA","classB","a_ancestry","b_ancestry","firstCommon","xs","makePath","findCommonTypeOfMultipleClasses","INTEGRAL_TYPES","FRACTIONAL_TYPES","NUMERIC_TYPES","BOOLEAN_TYPES","./path","./table",7,"NAMES","PARSED","any","makeKey","success","__slice","subclasses","descriptors","allDescriptors","getChildNodes","getDisplayName","isa","append","getParent","getEndClass","containsCollection","isCollection","isReverseReference","isReference","isClass","isAttribute","isRoot","referencedType","gp","reverseReference","fld","getType","cached","custom","namePromise","_name","equals","toPathString","keyPath","part","parts","flushCache",8,"es6-promise",9,"BASIC_ATTRS","CODES","Events","LIST_PIPE","Query","RESULTS_METHODS","SIMPLE_ATTRS","bioUriArgs","conAttrs","conStr","conToJSON","conValStr","copyCon","decapitate","didntRemove","get_canonical_op","headLess","idConStr","interpretConArray","interpretConstraint","mth","multiConStr","noUndefVals","noValueConStr","partition","removeIrrelevantSortOrders","simpleConStr","stringToSortOrder","stringifySortOrder","toQueryString","typeConStr","_fn","_get_data_fetcher","_j","_len1","orig","canonical","OP_DICT","compose","escape","values","NULL_OPS","con","editable","extraValue","switchable","switched","reduced","constraint","conArgs","a0","sortOrder","oe","pathIndices","oldOrder","isRelevant","summaryFields","_ref10","_ref4","_ref5","_ref6","_ref7","_ref8","_ref9","addConstraint","expandStar","adjustPath","views","joins","displayNames","aliases","maxRows","limit","addConstraints","addJoins","orderBy","constraintLogic","addPI","cAttrs","kids","parseSummary","qAttrs","scFold","toAttrPairs","toPathAndType","xmlAttr","JOIN_STYLES","BIO_FORMATS","ATTRIBUTE_VALUE_OPS","MULTIVALUE_OPS","RANGE_OPS","TERNARY_OPS","LOOP_OPS","LIST_OPS","=","==","eqq","!=","ne",">","gt",">=","ge","<","lt","<=","le","CONTAINS","does not contain","DOES NOT CONTAIN","like","LIKE","not like","NOT LIKE","lookup","IS NULL","is null","IS NOT NULL","is not null","ONE OF","one of","NONE OF","none of","in","not in","IN","NOT IN","WITHIN","within","OVERLAPS","overlaps","DOES NOT OVERLAP","does not overlap","OUTSIDE","outside","ISA","el","attrs","hasAttribute","getAttribute","kid","getElementsByTagName","fromXML","dom","pathOf","styleOf","pairsToObj","tn","_k","_len2","_results2","childNodes","title","comment","removeFromSelect","unwanted","so","uw","stringList","removeConstraint","iscon","addToSelect","dups","oldViews","getPossiblePaths","allowReverseReferences","predicate","getPaths","_base","others","subPaths","ref","_possiblePaths","adjusted","pi","getSubclasses","getViewNodes","toParentNode","isInView","pstr","isConstrained","includeAttrs","canHaveMultipleValues","getQueryNodes","constrainedNodes","viewNodes","isInQuery","sought","attrViews","expand","pathStem","starViews","lastIndexOf","hasView","isOuterJoin","cont","appendToList","processor","toRun","updateTarget","makeListQuery","listName","selectPreservingImpliedConstraints","paths","isOuterJoined","saveAsList","summarise","filterSummary","summarize","isNumeric","uniqueValues","filteredCount","term","summaryPath","filterTerm","cloneEvents","cloned","_callbacks","getSortDirection","dir","jp","getOuterJoin","joinPaths","_parse_sort_order","input","addOrSetSortOrder","currentDirection","addSortOrder","oes","oldSO","getSorting","addJoin","setJoinStyle","conj","oldLogic","__silent__","logic","needsLogicClause","newConLen","newLogic","getConstraintXML","toSerialise","getJoinXML","strs","headAttrs","toJSON","fetchCode","lang","VERIFIER","setName","authorise","authed","queries","store","getName","updateName","saveAsTemplate","getCodeURI","token","getExportURI","needsAuthentication","fetchQID","__bio_req","isSuitable","take","_fasta_req","_gff3_req","_bed_req","ys","ATTRIBUTE_OPS","REFERENCE_OPS","reqMeth","ensureAttr","getMeth","uriMeth","server_fn","mixin","./xml","backbone-events-standalone",10,"ALWAYS_AUTH","CLASSKEYS","CLASSKEY_PATH","DEFAULT_ERROR_HANDLER","DEFAULT_PROTOCOL","ENRICHMENT_PATH","HAS_PROTOCOL","HAS_SUFFIX","ID_RESOLUTION_PATH","LISTS_PATH","LIST_OPERATION_PATHS","MODELS","MODEL_PATH","NEEDS_AUTH","NO_AUTH","PATH_VALUES_PATH","PREF_PATH","QUERY_RESULTS_PATH","QUICKSEARCH_PATH","RELEASES","RELEASE_PATH","SUBTRACT_PATH","SUFFIX","SUMMARYFIELDS_PATH","SUMMARY_FIELDS","Service","TABLE_ROW_PATH","TEMPLATES_PATH","TO_NAMES","USER_TOKENS","User","VERSIONS","VERSION_PATH","WHOAMI_PATH","WIDGETS","WIDGETS_PATH","WITH_OBJ_PATH","getListFinder","to_query_string","_get_or_fetch","useCache","lists","noCache","errorHandler","help","connectAs","createList","resolveIds","templateQuery","savedQuery","fetchRelease","fetchClassKeys","fetchSummaryFields","fetchModel","fetchWidgetMap","fetchWidgets","fetchListsContaining","findLists","fetchTemplates","tableRows","records","table","pathValues","fetchUser","whoami","findById","getFormat","intended","FIVE_MIN","checkNameParam","getNewUserToken","loadQ","pathValuesReq","toMapByName","indiv","errBack","getMethod","pathAdditions","Authorization","maxp","correction","typeConstraints","wanted","doPagedRequest","combineLists","operation","defaultDesc","exclude","__wmap__","buildQuery","parallel","manageUserPreferences","resolutionJob","adjust","user","temporaryToken","connect","register","password","getDeregistrationToken","validity","deregister","deregistrationToken","login","logout","rowByRow","eachRow","recordByRecord","eachRecord","flushCaches","./http","./id-resolution-job","./lists","./model","./promise","./query","./user",11,"FakeDomParser","DOMParser",12,"HAS_CONSOLE","HAS_JSON","NOT_ENUM","hasDontEnumBug","script","propertyIsEnumerable","nonEnum","initValue","oldM",13,"dest","__parents__",14,"do_pref_req","prefs","preferences","username","clearPreferences","clearPreference","setPreferences","setPreference","hasPreferences","createToken","fetchCurrentTokens","revokeAllTokens","revokeToken",15,"REQUIRES","curry","encode","entities","invokeWith","pairFold","qsFromList","thenFold","deferred","encodeURIComponent","pairs","pair","subList","sv","rest","promises","fs","onErr","onSucc","&","\"","'","withEntities","entity","charCodeAt","merger","oldk","oldv","newk","newv","falses","trues","flatMap","xx","sum","newObj","objs","required","got","sequence","fns",16,17,"sanitize","parser","parseFromString","xmldom",18,"Buffer","Parser","through","recurse","onValue","stack","nextKey","actualPath","_onToken","onToken","cl","indent","anyData","stringifyObject","stdin","argv","stdout","/home/alex/projects/javascript/imjs/node_modules/insert-module-globals/node_modules/process/browser.js","jsonparse",19,"toknam","tState","START","unicode","negative","magnatude","exponent","negativeExponent","mode","VALUE","bytes_remaining","bytes_in_sequence","temp_buffs","LEFT_BRACE","RIGHT_BRACE","LEFT_BRACKET","RIGHT_BRACKET","COLON","COMMA","TRUE","FALSE","NULL","STRING","NUMBER","TRUE1","TRUE2","TRUE3","FALSE1","FALSE2","FALSE3","FALSE4","NULL1","NULL2","NULL3","NUMBER1","NUMBER2","NUMBER3","NUMBER4","NUMBER5","NUMBER6","NUMBER7","NUMBER8","STRING1","STRING2","STRING3","STRING4","STRING5","STRING6","KEY","OBJECT","ARRAY","charError","fromCharCode","parseError",20,"miniscore","uniqueId","idCounter","has","iterator","nativeForEach","breaker","memo","eventsApi","_events","_callback","retain","ev","allEvents","triggerEvents","stopListening","_listeners","deleteListener","_listenerId","eventSplitter","action","a3","listenMethods","listenTo","listenToOnce","implementation","BackboneEvents",21,"./backbone-events-standalone",22,"$$utils$$objectOrFunction","$$utils$$isFunction","$$utils$$isMaybeThenable","$$utils$$F","$$asap$$useNextTick","$$asap$$flush","$$asap$$useMutationObserver","observer","$$asap$$BrowserMutationObserver","createTextNode","characterData","$$asap$$useMessageChannel","MessageChannel","port1","onmessage","port2","$$asap$$useSetTimeout","$$asap$$len","$$asap$$queue","arg","$$$internal$$noop","$$$internal$$selfFullfillment","$$$internal$$cannotReturnOwn","$$$internal$$getThen","$$$internal$$GET_THEN_ERROR","$$$internal$$tryThen","fulfillmentHandler","rejectionHandler","$$$internal$$handleForeignThenable","thenable","$$asap$$default","sealed","$$$internal$$resolve","$$$internal$$fulfill","reason","$$$internal$$reject","_label","$$$internal$$handleOwnThenable","_state","$$$internal$$FULFILLED","_result","$$$internal$$REJECTED","$$$internal$$subscribe","$$$internal$$handleMaybeThenable","maybeThenable","$$$internal$$publishRejection","_onerror","$$$internal$$publish","$$$internal$$PENDING","_subscribers","onFulfillment","onRejection","subscribers","settled","detail","$$$internal$$invokeCallback","$$$internal$$ErrorObject","$$$internal$$tryCatch","$$$internal$$TRY_CATCH_ERROR","succeeded","failed","hasCallback","$$$internal$$initializePromise","$$$enumerator$$Enumerator","Constructor","abortOnReject","_instanceConstructor","_abortOnReject","_validateInput","_input","_remaining","_init","_enumerate","_validationError","$$es6$promise$promise$$needsResolver","$$es6$promise$promise$$needsNew","$$es6$promise$promise$$Promise","_id","$$es6$promise$promise$$counter","$$utils$$_isArray","$$asap$$scheduleFlush","$$utils$$isArray","$$asap$$browserGlobal","WebKitMutationObserver","$$asap$$isWorker","Uint8ClampedArray","importScripts","$$$enumerator$$default","_eachEntry","entry","_settledAt","_willSettleAt","_makeResult","enumerator","$$promise$all$$default","entries","$$promise$race$$default","$$promise$resolve$$default","$$promise$reject$$default","$$es6$promise$promise$$default","race","catch","$$es6$promise$polyfill$$default","local","es6PromiseSupport","es6$promise$umd$$ES6Promise","polyfill",23,"encoding","noZero","base64clean","byteLength","kMaxLength","RangeError","buf","TYPED_ARRAY_SUPPORT","_augment","Uint8Array","_isBuffer","_set","isArrayish","isBuffer","readUInt8","hexWrite","strLen","byte","utf8Write","charsWritten","blitBuffer","utf8ToBytes","asciiWrite","asciiToBytes","binaryWrite","base64Write","base64ToBytes","utf16leWrite","utf16leToBytes","base64Slice","base64","fromByteArray","utf8Slice","decodeUtf8Char","asciiSlice","binarySlice","hexSlice","out","toHex","utf16leSlice","bytes","checkOffset","ext","checkInt","objectWriteUInt16","littleEndian","objectWriteUInt32","checkIEEE754","writeFloat","noAssert","ieee754","writeDouble","stringtrim","INVALID_BASE64_RE","byteArray","hi","lo","toByteArray","dst","unitSize","decodeURIComponent","SlowBuffer","INSPECT_MAX_BYTES","poolSize","ArrayBuffer","foo","subarray","compare","isEncoding","totalLength","loweredCase","inspect","writeUInt8","isFinite","swap","_arr","sliceLen","newBuf","readUInt16LE","readUInt16BE","readUInt32LE","readUInt32BE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readFloatLE","read","readFloatBE","readDoubleLE","readDoubleBE","writeUInt16LE","writeUInt16BE","writeUInt32LE","writeUInt32BE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","target_start","toArrayBuffer","BP","_get","toLocaleString","base64-js","is-array",24,"decode","elt","PLUS","SLASH","UPPER","LOWER","b64ToByteArray","b64","L","placeHolders","Arr","uint8ToBase64","uint8","num","tripletToBase64","extraBytes","output","base64js",25,"isLE","mLen","nBytes","eLen","eMax","eBias","nBits","NaN","rt",26,27,"EventEmitter","_maxListeners","isNumber","isUndefined","defaultMaxListeners","setMaxListeners","er","newListener","warned","trace","fired","removeAllListeners","listenerCount","emitter",28,"ctor","superCtor","super_","enumerable","writable","configurable","TempCtor",29,30,"mapDomain","regexSeparators","ucs2decode","extra","counter","ucs2encode","stringFromCharCode","basicToDigit","codePoint","digitToBasic","digit","adapt","delta","numPoints","firstTime","damp","baseMinusTMin","skew","basic","oldi","baseMinusT","inputLength","initialN","bias","initialBias","delimiter","maxInt","handledCPCount","basicLength","currentValue","handledCPCountPlusOne","qMinusT","toUnicode","domain","regexPunycode","toASCII","regexNonASCII","freeExports","freeModule","freeGlobal","punycode","not-basic","invalid-input","ucs2","nodeType",31,"qs","regexp","maxKeys","kstr","vstr","idx",32,"stringifyPrimitive","objectKeys","ks",33,"./decode","./encode",34,"./lib/_stream_duplex.js",35,"Duplex","Readable","Writable","readable","allowHalfOpen","onend","_writableState","ended","inherits","./_stream_readable","./_stream_writable","core-util-is",36,"PassThrough","Transform","_transform","./_stream_transform",37,"ReadableState","hwm","highWaterMark","pipes","pipesCount","flowing","endEmitted","reading","calledRead","sync","needReadable","emittedReadable","readableListening","objectMode","defaultEncoding","ranOut","awaitDrain","readingMore","decoder","StringDecoder","_readableState","Stream","readableAddChunk","addToFront","chunkInvalid","onEofChunk","emitReadable","maybeReadMore","needMoreData","roundUpToNextPowerOf2","MAX_HWM","howMuchToRead","endReadable","emitReadable_","maybeReadMore_","pipeOnDrain","written","EE","emitDataEvents","pipeOnReadable","startPaused","paused","fromList","stringMode","cpy","setEncoding","enc","nOrig","doRead","_read","pipeOpts","onunpipe","cleanup","onclose","onfinish","ondrain","onerror","needDrain","unpipe","doEnd","stderr","endFn","dests","_fromList","isarray","string_decoder/",38,"TransformState","afterTransform","needTransform","transforming","writecb","writechunk","ts","_transformState","_flush","ws","_write","writeencoding","./_stream_duplex",39,"WriteReq","WritableState","ending","finished","noDecode","decodeStrings","writing","bufferProcessing","onwrite","writelen","errorEmitted","writeAfterEnd","validChunk","decodeChunk","writeOrBuffer","doWrite","onwriteError","onwriteStateUpdate","needFinish","clearBuffer","afterWrite","onwriteDrain","finishMaybe","need","endWritable",40,"ar","isBoolean","isNull","isNullOrUndefined","isString","isSymbol","isRegExp","re","objectToString","isDate","isError","isPrimitive",41,"./lib/_stream_passthrough.js",42,"./lib/_stream_readable.js","./lib/_stream_transform.js","./lib/_stream_writable.js",43,44,45,"ondata","didOnEnd","_isStdio","readable-stream/duplex.js","readable-stream/passthrough.js","readable-stream/readable.js","readable-stream/transform.js","readable-stream/writable.js",46,"assertEncoding","isBufferEncoding","passThroughWrite","utf16DetectIncompleteChar","charReceived","charLength","base64DetectIncompleteChar","surrogateSize","detectIncompleteChar","charBuffer","charStr","available","charCode","cr",47,"Url","protocol","slashes","host","hostname","hash","href","urlParse","parseQueryString","slashesDenoteHost","urlFormat","urlResolve","relative","urlResolveObject","resolveObject","protocolPattern","portPattern","delims","unwise","autoEscape","nonHostChars","hostEndingChars","hostnameMaxLen","hostnamePartPattern","hostnamePartStart","unsafeProtocol","javascript","javascript:","hostlessProtocol","slashedProtocol","https","ftp","gopher","http:","https:","ftp:","gopher:","file:","lowerProto","hostEnd","hec","atSign","parseHost","ipv6Hostname","hostparts","newpart","validParts","notHost","bit","domainArray","newOut","ae","esc","qm","rel","relPath","isSourceAbs","isRelAbs","mustEndAbs","removeAllDots","srcPath","psychotic","authInHost","hasTrailingSlash","isAbsolute",48,49,"seen","stylize","stylizeNoColor","showHidden","_extend","customInspect","stylizeWithColor","formatValue","styleType","styles","arrayToHash","recurseTimes","primitive","formatPrimitive","visibleKeys","getOwnPropertyNames","formatError","braces","toUTCString","formatArray","formatProperty","reduceToSingleString","simple","desc","getOwnPropertyDescriptor","numLinesEst","cur","timestamp","getHours","getMinutes","getSeconds","getDate","months","getMonth","formatRegExp","deprecate","deprecated","throwDeprecation","traceDeprecation","noDeprecation","debugEnviron","debugs","debuglog","env","NODE_DEBUG","pid","bold","italic","underline","inverse","special","boolean","null","date","./support/isBuffer",50,"Request","scheme","xhrHttp","Agent","defaultMaxSockets","XMLHttpRequest","axs","ax","ax_","STATUS_CODES",100,101,102,200,201,202,203,204,205,206,207,300,301,302,303,304,305,307,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,422,423,424,425,426,428,429,431,500,501,502,503,504,505,506,507,509,510,511,"./lib/request",51,"Response","Base64","xhr","uri","responseType","open","_headers","isSafeRequestHeader","setHeader","btoa","onreadystatechange","__aborted","handle","getHeader","removeHeader","abort","setRequestHeader","isXHR2Compatible","unsafeHeaders","headerName","FormData","./response",52,"parseHeaders","getAllResponseHeaders","capable","status2","getResponse","respType","responseBlob","response","responseText","_emitData","respBody",53,"InvalidCharacterError","chars","block","atob","bs",54,"/home/alex/projects/javascript/imjs/node_modules/grunt-browserify/node_modules/browserify/node_modules/inherits/inherits_browser.js",55,"noop","canSetImmediate","canPost","browser","cwd","chdir",56,"drain","_end","autoDestroy","_ended","cymine","toNodesAndEdges","thisNode","recordToNode","interactions","mergeObjects","interactionToEdge","gene2","addDetails","nameNode","class","symbol","objectId","obj1","obj2","obj3","attrname","nodeDataDisplay","humanmine","targetElem","statusBar","querySelector","./../bower_components/cytoscape/dist/cytoscape","./../bower_components/imjs/js/im.js","./cymine","./nodeDataDisplay","nodeInfo","setTitle","listProperties","innerHTML","expandPropertyVals","addProperty","endianness","loadavg","uptime","freemem","totalmem","networkInterfaces","getNetworkInterfaces","arch","platform","tmpdir","tmpDir","EOL","normalizeArray","allowAboveRoot","splitPathRe","splitPath","filename","resolvedPath","resolvedAbsolute","normalize","trailingSlash","fromParts","toParts","samePartsLength","outputParts","dirname","basename","extname","cleanUpNextTick","draining","currentQueue","queueIndex","drainQueue","Item","fun","versions","umask"],"mappings":"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","file":"bundle.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})",null,"/*!\n * This file is part of Cytoscape.js 2.4.5.\n * \n * Cytoscape.js is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by the Free\n * Software Foundation, either version 3 of the License, or (at your option) any\n * later version.\n * \n * Cytoscape.js is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more\n * details.\n * \n * You should have received a copy of the GNU Lesser General Public License along with\n * Cytoscape.js. If not, see <http://www.gnu.org/licenses/>.\n */\n \n\n// this is put as a global var in the browser\n// or it's just a global to this module if commonjs\n\nvar cytoscape;\n\n(function(window){ 'use strict';\n\n  // the object iteself is a function that init's an instance of cytoscape\n\n  var $$ = cytoscape = function(){ // jshint ignore:line\n    return cytoscape.init.apply(cytoscape, arguments);\n  };\n\n  $$.version = '2.4.5';\n  \n  // allow functional access to cytoscape.js\n  // e.g. var cyto = $.cytoscape({ selector: \"#foo\", ... });\n  //      var nodes = cyto.nodes();\n  $$.init = function( options ){\n    \n    // if no options specified, use default\n    if( options === undefined ){\n      options = {};\n    }\n\n    // create instance\n    if( $$.is.plainObject( options ) ){\n      return new $$.Core( options );\n    } \n    \n    // allow for registration of extensions\n    // e.g. $.cytoscape('renderer', 'svg', SvgRenderer);\n    // e.g. $.cytoscape('renderer', 'svg', 'nodeshape', 'ellipse', SvgEllipseNodeShape);\n    // e.g. $.cytoscape('core', 'doSomething', function(){ /* doSomething code */ });\n    // e.g. $.cytoscape('collection', 'doSomething', function(){ /* doSomething code */ });\n    else if( $$.is.string( options ) ) {\n      return $$.extension.apply($$.extension, arguments);\n    }\n  };\n\n  // define the function namespace here, since it has members in many places\n  $$.fn = {};\n\n  if( typeof module !== 'undefined' && module.exports ){ // expose as a commonjs module\n    module.exports = cytoscape;\n  }\n\n  if( typeof define !== 'undefined' && define.amd ){ // expose as an amd/requirejs module\n    define('cytoscape', function(){\n      return cytoscape;\n    });\n  }\n\n  // make sure we always register in the window just in case (e.g. w/ derbyjs)\n  if( window ){\n    window.cytoscape = cytoscape;\n  }\n  \n})( typeof window === 'undefined' ? null : window );\n\n// extra set to `this` is necessary for meteor\nthis.cytoscape = cytoscape;\n\n// internal, minimal Promise impl s.t. apis can return promises in old envs\n// based on thenable (http://github.com/rse/thenable)\n\n// NB: you must use `new $$.Promise`, because you may have native promises that don't autonew for you\n\n;(function($$){ 'use strict';\n  \n  /*  promise states [Promises/A+ 2.1]  */\n  var STATE_PENDING   = 0;                                         /*  [Promises/A+ 2.1.1]  */\n  var STATE_FULFILLED = 1;                                         /*  [Promises/A+ 2.1.2]  */\n  var STATE_REJECTED  = 2;                                         /*  [Promises/A+ 2.1.3]  */\n\n  /*  promise object constructor  */\n  var api = function (executor) {\n    /*  optionally support non-constructor/plain-function call  */\n    if (!(this instanceof api))\n      return new api(executor);\n\n    /*  initialize object  */\n    this.id           = \"Thenable/1.0.7\";\n    this.state        = STATE_PENDING; /*  initial state  */\n    this.fulfillValue = undefined;     /*  initial value  */     /*  [Promises/A+ 1.3, 2.1.2.2]  */\n    this.rejectReason = undefined;     /*  initial reason */     /*  [Promises/A+ 1.5, 2.1.3.2]  */\n    this.onFulfilled  = [];            /*  initial handlers  */\n    this.onRejected   = [];            /*  initial handlers  */\n\n    /*  provide optional information-hiding proxy  */\n    this.proxy = {\n      then: this.then.bind(this)\n    };\n\n    /*  support optional executor function  */\n    if (typeof executor === \"function\")\n      executor.call(this, this.fulfill.bind(this), this.reject.bind(this));\n  };\n\n  /*  promise API methods  */\n  api.prototype = {\n    /*  promise resolving methods  */\n    fulfill: function (value) { return deliver(this, STATE_FULFILLED, \"fulfillValue\", value); },\n    reject:  function (value) { return deliver(this, STATE_REJECTED,  \"rejectReason\", value); },\n\n    /*  \"The then Method\" [Promises/A+ 1.1, 1.2, 2.2]  */\n    then: function (onFulfilled, onRejected) {\n      var curr = this;\n      var next = new api();                                    /*  [Promises/A+ 2.2.7]  */\n      curr.onFulfilled.push(\n        resolver(onFulfilled, next, \"fulfill\"));             /*  [Promises/A+ 2.2.2/2.2.6]  */\n      curr.onRejected.push(\n        resolver(onRejected,  next, \"reject\" ));             /*  [Promises/A+ 2.2.3/2.2.6]  */\n      execute(curr);\n      return next.proxy;                                       /*  [Promises/A+ 2.2.7, 3.3]  */\n    }\n  };\n\n  /*  deliver an action  */\n  var deliver = function (curr, state, name, value) {\n    if (curr.state === STATE_PENDING) {\n      curr.state = state;                                      /*  [Promises/A+ 2.1.2.1, 2.1.3.1]  */\n      curr[name] = value;                                      /*  [Promises/A+ 2.1.2.2, 2.1.3.2]  */\n      execute(curr);\n    }\n    return curr;\n  };\n\n  /*  execute all handlers  */\n  var execute = function (curr) {\n    if (curr.state === STATE_FULFILLED)\n      execute_handlers(curr, \"onFulfilled\", curr.fulfillValue);\n    else if (curr.state === STATE_REJECTED)\n      execute_handlers(curr, \"onRejected\",  curr.rejectReason);\n  };\n\n  /*  execute particular set of handlers  */\n  var execute_handlers = function (curr, name, value) {\n    /* global process: true */\n    /* global setImmediate: true */\n    /* global setTimeout: true */\n\n    /*  short-circuit processing  */\n    if (curr[name].length === 0)\n      return;\n\n    /*  iterate over all handlers, exactly once  */\n    var handlers = curr[name];\n    curr[name] = [];                                             /*  [Promises/A+ 2.2.2.3, 2.2.3.3]  */\n    var func = function () {\n      for (var i = 0; i < handlers.length; i++)\n        handlers[i](value);                                  /*  [Promises/A+ 2.2.5]  */\n    };\n\n    /*  execute procedure asynchronously  */                     /*  [Promises/A+ 2.2.4, 3.1]  */\n    if (typeof process === \"object\" && typeof process.nextTick === \"function\")\n      process.nextTick(func);\n    else if (typeof setImmediate === \"function\")\n      setImmediate(func);\n    else\n      setTimeout(func, 0);\n  };\n\n  /*  generate a resolver function  */\n  var resolver = function (cb, next, method) {\n    return function (value) {\n      if (typeof cb !== \"function\")                            /*  [Promises/A+ 2.2.1, 2.2.7.3, 2.2.7.4]  */\n        next[method].call(next, value);                      /*  [Promises/A+ 2.2.7.3, 2.2.7.4]  */\n      else {\n        var result;\n        try { result = cb(value); }                          /*  [Promises/A+ 2.2.2.1, 2.2.3.1, 2.2.5, 3.2]  */\n        catch (e) {\n          next.reject(e);                                  /*  [Promises/A+ 2.2.7.2]  */\n          return;\n        }\n        resolve(next, result);                               /*  [Promises/A+ 2.2.7.1]  */\n      }\n    };\n  };\n\n  /*  \"Promise Resolution Procedure\"  */                           /*  [Promises/A+ 2.3]  */\n  var resolve = function (promise, x) {\n    /*  sanity check arguments  */                               /*  [Promises/A+ 2.3.1]  */\n    if (promise === x || promise.proxy === x) {\n      promise.reject(new TypeError(\"cannot resolve promise with itself\"));\n      return;\n    }\n\n    /*  surgically check for a \"then\" method\n      (mainly to just call the \"getter\" of \"then\" only once)  */\n    var then;\n    if ((typeof x === \"object\" && x !== null) || typeof x === \"function\") {\n      try { then = x.then; }                                   /*  [Promises/A+ 2.3.3.1, 3.5]  */\n      catch (e) {\n        promise.reject(e);                                   /*  [Promises/A+ 2.3.3.2]  */\n        return;\n      }\n    }\n\n    /*  handle own Thenables    [Promises/A+ 2.3.2]\n      and similar \"thenables\" [Promises/A+ 2.3.3]  */\n    if (typeof then === \"function\") {\n      var resolved = false;\n      try {\n        /*  call retrieved \"then\" method */                  /*  [Promises/A+ 2.3.3.3]  */\n        then.call(x,\n          /*  resolvePromise  */                           /*  [Promises/A+ 2.3.3.3.1]  */\n          function (y) {\n            if (resolved) return; resolved = true;       /*  [Promises/A+ 2.3.3.3.3]  */\n            if (y === x)                                 /*  [Promises/A+ 3.6]  */\n              promise.reject(new TypeError(\"circular thenable chain\"));\n            else\n              resolve(promise, y);\n          },\n\n          /*  rejectPromise  */                            /*  [Promises/A+ 2.3.3.3.2]  */\n          function (r) {\n            if (resolved) return; resolved = true;       /*  [Promises/A+ 2.3.3.3.3]  */\n            promise.reject(r);\n          }\n        );\n      }\n      catch (e) {\n        if (!resolved)                                       /*  [Promises/A+ 2.3.3.3.3]  */\n          promise.reject(e);                               /*  [Promises/A+ 2.3.3.3.4]  */\n      }\n      return;\n    }\n\n    /*  handle other values  */\n    promise.fulfill(x);                                          /*  [Promises/A+ 2.3.4, 2.3.3.4]  */\n  };\n\n  // use native promises where possible\n  $$.Promise = typeof Promise === 'undefined' ? api : Promise;\n\n  // so we always have Promise.all()\n  $$.Promise.all = $$.Promise.all || function( ps ){\n    return new $$.Promise(function( resolveAll, rejectAll ){\n      var vals = new Array( ps.length );\n      var doneCount = 0;\n\n      var fulfill = function( i, val ){\n        vals[i] = val;\n        doneCount++;\n\n        if( doneCount === ps.length ){\n          resolveAll( vals );\n        }\n      };\n\n      for( var i = 0; i < ps.length; i++ ){\n        (function( i ){\n          var p = ps[i];\n          var isPromise = p.then != null;\n\n          if( isPromise ){\n            p.then(function( val ){\n              fulfill( i, val );\n            }, function( err ){\n              rejectAll( err );\n            });\n          } else {\n            var val = p;\n            fulfill( i, val );\n          }\n        })( i );\n      }\n\n    });\n  };\n\n})( cytoscape );\n// type testing utility functions\n\n;(function($$, window){ 'use strict';\n\n  var typeofstr = typeof '';\n  var typeofobj = typeof {};\n  var typeoffn = typeof function(){};\n\n  $$.is = {\n    defined: function(obj){\n      return obj != null; // not undefined or null\n    },\n\n    string: function(obj){\n      return obj != null && typeof obj == typeofstr;\n    },\n    \n    fn: function(obj){\n      return obj != null && typeof obj === typeoffn;\n    },\n    \n    array: function(obj){\n      return Array.isArray ? Array.isArray(obj) : obj != null && obj instanceof Array;\n    },\n    \n    plainObject: function(obj){\n      return obj != null && typeof obj === typeofobj && !$$.is.array(obj) && obj.constructor === Object;\n    },\n\n    object: function(obj){\n      return obj != null && typeof obj === typeofobj;\n    },\n    \n    number: function(obj){\n      return obj != null && typeof obj === typeof 1 && !isNaN(obj);\n    },\n\n    integer: function( obj ){\n      return $$.is.number(obj) && Math.floor(obj) === obj;\n    },\n    \n    color: function(obj){\n      return obj != null && typeof obj === typeof '' && $.Color(obj).toString() !== '';\n    },\n    \n    bool: function(obj){\n      return obj != null && typeof obj === typeof true;\n    },\n    \n    elementOrCollection: function(obj){\n      return $$.is.element(obj) || $$.is.collection(obj);\n    },\n    \n    element: function(obj){\n      return obj instanceof $$.Element && obj._private.single;\n    },\n    \n    collection: function(obj){\n      return obj instanceof $$.Collection && !obj._private.single;\n    },\n    \n    core: function(obj){\n      return obj instanceof $$.Core;\n    },\n\n    style: function(obj){\n      return obj instanceof $$.Style;\n    },\n\n    stylesheet: function(obj){\n      return obj instanceof $$.Stylesheet;\n    },\n\n    event: function(obj){\n      return obj instanceof $$.Event;\n    },\n\n    thread: function(obj){\n      return obj instanceof $$.Thread;\n    },\n\n    fabric: function(obj){\n      return obj instanceof $$.Fabric;\n    },\n\n    emptyString: function(obj){\n      if( !obj ){ // null is empty\n        return true; \n      } else if( $$.is.string(obj) ){\n        if( obj === '' || obj.match(/^\\s+$/) ){\n          return true; // empty string is empty\n        }\n      }\n      \n      return false; // otherwise, we don't know what we've got\n    },\n    \n    nonemptyString: function(obj){\n      if( obj && $$.is.string(obj) && obj !== '' && !obj.match(/^\\s+$/) ){\n        return true;\n      }\n\n      return false;\n    },\n\n    domElement: function(obj){\n      if( typeof HTMLElement === 'undefined' ){\n        return false; // we're not in a browser so it doesn't matter\n      } else {\n        return obj instanceof HTMLElement;\n      }\n    },\n\n    boundingBox: function(obj){\n      return $$.is.plainObject(obj) && \n        $$.is.number(obj.x1) && $$.is.number(obj.x2) &&\n        $$.is.number(obj.y1) && $$.is.number(obj.y2)\n      ;\n    },\n\n    promise: function(obj){\n      return $$.is.object(obj) && $$.is.fn(obj.then);\n    },\n\n    touch: function(){\n      return window && ( ('ontouchstart' in window) || window.DocumentTouch && document instanceof DocumentTouch );\n    },\n\n    gecko: function(){\n      return typeof InstallTrigger !== 'undefined' || ('MozAppearance' in document.documentElement.style);\n    },\n\n    webkit: function(){\n      return typeof webkitURL !== 'undefined' || ('WebkitAppearance' in document.documentElement.style);\n    },\n\n    chromium: function(){\n      return typeof chrome !== 'undefined';\n    },\n\n    khtml: function(){\n      return navigator.vendor.match(/kde/i); // TODO probably a better way to detect this...\n    },\n\n    khtmlEtc: function(){\n      return $$.is.khtml() || $$.is.webkit() || $$.is.chromium();\n    },\n\n    trident: function(){\n       return typeof ActiveXObject !== 'undefined' || /*@cc_on!@*/false;\n    },\n\n    windows: function(){\n      return typeof navigator !== 'undefined' && navigator.appVersion.match(/Win/i);\n    },\n\n    mac: function(){\n      return typeof navigator !== 'undefined' && navigator.appVersion.match(/Mac/i);\n    },\n\n    linux: function(){\n      return typeof navigator !== 'undefined' && navigator.appVersion.match(/Linux/i);\n    },\n\n    unix: function(){\n      return typeof navigator !== 'undefined' && navigator.appVersion.match(/X11/i);\n    }\n  };  \n  \n})( cytoscape, typeof window === 'undefined' ? null : window );\n\n;(function($$, window){ 'use strict';\n  \n  // utility functions only for internal use\n\n  $$.util = {\n\n    // the jquery extend() function\n    // NB: modified to use $$.is etc since we can't use jquery functions\n    extend: function() {\n      var options, name, src, copy, copyIsArray, clone,\n        target = arguments[0] || {},\n        i = 1,\n        length = arguments.length,\n        deep = false;\n\n      // Handle a deep copy situation\n      if ( typeof target === 'boolean' ) {\n        deep = target;\n        target = arguments[1] || {};\n        // skip the boolean and the target\n        i = 2;\n      }\n\n      // Handle case when target is a string or something (possible in deep copy)\n      if ( typeof target !== 'object' && !$$.is.fn(target) ) {\n        target = {};\n      }\n\n      // extend jQuery itself if only one argument is passed\n      if ( length === i ) {\n        target = this;\n        --i;\n      }\n\n      for ( ; i < length; i++ ) {\n        // Only deal with non-null/undefined values\n        if ( (options = arguments[ i ]) != null ) {\n          // Extend the base object\n          for ( name in options ) {\n            src = target[ name ];\n            copy = options[ name ];\n\n            // Prevent never-ending loop\n            if ( target === copy ) {\n              continue;\n            }\n\n            // Recurse if we're merging plain objects or arrays\n            if ( deep && copy && ( $$.is.plainObject(copy) || (copyIsArray = $$.is.array(copy)) ) ) {\n              if ( copyIsArray ) {\n                copyIsArray = false;\n                clone = src && $$.is.array(src) ? src : [];\n\n              } else {\n                clone = src && $$.is.plainObject(src) ? src : {};\n              }\n\n              // Never move original objects, clone them\n              target[ name ] = $$.util.extend( deep, clone, copy );\n\n            // Don't bring in undefined values\n            } else if ( copy !== undefined ) {\n              target[ name ] = copy;\n            }\n          }\n        }\n      }\n\n      // Return the modified object\n      return target;\n    },\n\n    // require that pulls in module from commonjs, amd, or window (falling back until found)\n    require: function( name, callback, options ){\n      var ret;\n      options = $$.util.extend({\n        msgIfNotFound: true\n      }, options);\n\n      var done = false;\n      var fulfil = function( ret ){\n        done = true;\n        callback( ret );\n      };\n\n      var checkWindow = function( next ){\n        if( window ){ // detected browser/window env\n          ret = window[ name ];\n        }\n\n        if( ret !== undefined ){ fulfil(ret); }\n        if( next ){ next(); }\n      };\n      var onCheckWindowDone = function(){\n        if( !done ){\n          checkCommonJs( onCheckCommonJsDone );\n        }\n      };\n\n      var checkCommonJs = function( next ){\n        if( typeof module !== 'undefined' && module.exports && require ){ // detected commonjs env\n          ret = require( name ); // regular require\n        }\n\n        if( ret !== undefined ){ fulfil(ret); }\n        if( next ){ next(); }\n      };\n      var onCheckCommonJsDone = function(){\n        if( !done ){\n          checkAmd( onCheckAmdDone );\n        }\n      };\n\n      var checkAmd = function( next ){\n        if( typeof define !== 'undefined' && define.amd && require ){ // detected amd env w/ defined module\n          require([ name ], function( nameImpl ){\n            ret = nameImpl;\n            \n            if( ret !== undefined ){ fulfil(ret); }\n            if( next ){ next(); }\n          });\n        }\n      };\n      var onCheckAmdDone = function(){\n        if( !done && options.msgIfNotFound ){\n          $$.util.error('Cytoscape.js tried to pull in dependency `' + name + '` but no module (i.e. CommonJS, AMD, or window) was found');\n        }\n      };\n\n      // kick off 1st check: window\n      checkWindow( onCheckWindowDone );\n\n    },\n\n    // multiple requires in one callback\n    requires: function( names, callback ){\n      var impls = [];\n      var gotImpl = [];\n\n      var checkDone = function(){\n        for( var i = 0; i < names.length; i++ ){ // check have all impls\n          if( !gotImpl[i] ){ return; }\n        }\n\n        // otherwise, all got all impls => done\n        callback.apply( callback, impls ); \n      };\n\n      for( var i = 0; i < names.length; i++ ){ (function(){ // w/scope\n        var name = names[i];\n        var index = i;\n\n        $$.util.require(name, function(impl){\n          impls[index] = impl;\n          gotImpl[index] = true;\n\n          checkDone();\n        });\n      })(); }\n    },\n\n    // ported lodash throttle function\n    throttle: function(func, wait, options) {\n      var leading = true,\n          trailing = true;\n\n      if (options === false) {\n        leading = false;\n      } else if ($$.is.plainObject(options)) {\n        leading = 'leading' in options ? options.leading : leading;\n        trailing = 'trailing' in options ? options.trailing : trailing;\n      }\n      options = options || {};\n      options.leading = leading;\n      options.maxWait = wait;\n      options.trailing = trailing;\n\n      return $$.util.debounce(func, wait, options);\n    },\n\n    now: function(){\n      return +new Date();\n    },\n\n    // ported lodash debounce function\n    debounce: function(func, wait, options) {\n      var args,\n          maxTimeoutId,\n          result,\n          stamp,\n          thisArg,\n          timeoutId,\n          trailingCall,\n          lastCalled = 0,\n          maxWait = false,\n          trailing = true;\n\n      if (!$$.is.fn(func)) {\n        return;\n      }\n      wait = Math.max(0, wait) || 0;\n      if (options === true) {\n        var leading = true;\n        trailing = false;\n      } else if ($$.is.plainObject(options)) {\n        leading = options.leading;\n        maxWait = 'maxWait' in options && (Math.max(wait, options.maxWait) || 0);\n        trailing = 'trailing' in options ? options.trailing : trailing;\n      }\n      var delayed = function() {\n        var remaining = wait - ($$.util.now() - stamp);\n        if (remaining <= 0) {\n          if (maxTimeoutId) {\n            clearTimeout(maxTimeoutId);\n          }\n          var isCalled = trailingCall;\n          maxTimeoutId = timeoutId = trailingCall = undefined;\n          if (isCalled) {\n            lastCalled = $$.util.now();\n            result = func.apply(thisArg, args);\n            if (!timeoutId && !maxTimeoutId) {\n              args = thisArg = null;\n            }\n          }\n        } else {\n          timeoutId = setTimeout(delayed, remaining);\n        }\n      };\n\n      var maxDelayed = function() {\n        if (timeoutId) {\n          clearTimeout(timeoutId);\n        }\n        maxTimeoutId = timeoutId = trailingCall = undefined;\n        if (trailing || (maxWait !== wait)) {\n          lastCalled = $$.util.now();\n          result = func.apply(thisArg, args);\n          if (!timeoutId && !maxTimeoutId) {\n            args = thisArg = null;\n          }\n        }\n      };\n\n      return function() {\n        args = arguments;\n        stamp = $$.util.now();\n        thisArg = this;\n        trailingCall = trailing && (timeoutId || !leading);\n\n        if (maxWait === false) {\n          var leadingCall = leading && !timeoutId;\n        } else {\n          if (!maxTimeoutId && !leading) {\n            lastCalled = stamp;\n          }\n          var remaining = maxWait - (stamp - lastCalled),\n              isCalled = remaining <= 0;\n\n          if (isCalled) {\n            if (maxTimeoutId) {\n              maxTimeoutId = clearTimeout(maxTimeoutId);\n            }\n            lastCalled = stamp;\n            result = func.apply(thisArg, args);\n          }\n          else if (!maxTimeoutId) {\n            maxTimeoutId = setTimeout(maxDelayed, remaining);\n          }\n        }\n        if (isCalled && timeoutId) {\n          timeoutId = clearTimeout(timeoutId);\n        }\n        else if (!timeoutId && wait !== maxWait) {\n          timeoutId = setTimeout(delayed, wait);\n        }\n        if (leadingCall) {\n          isCalled = true;\n          result = func.apply(thisArg, args);\n        }\n        if (isCalled && !timeoutId && !maxTimeoutId) {\n          args = thisArg = null;\n        }\n        return result;\n      };\n    },\n\n    error: function( msg ){\n      if( console ){\n        if( console.error ){\n          console.error.apply( console, arguments );\n        } else if( console.log ){\n          console.log.apply( console, arguments );\n        } else {\n          throw msg;\n        }\n      } else {\n        throw msg;\n      }\n    },    \n\n    clone: function( obj ){\n      var target = {};\n      for (var i in obj) {\n        if ( obj.hasOwnProperty(i) ) { // TODO is this hasOwnProperty() call necessary for our use?\n          target[i] = obj[i];\n        }\n      }\n      return target;\n    },\n\n    // gets a shallow copy of the argument\n    copy: function( obj ){\n      if( obj == null ){\n        return obj;\n      } if( $$.is.array(obj) ){\n        return obj.slice();\n      } else if( $$.is.plainObject(obj) ){\n        return $$.util.clone( obj );\n      } else {\n        return obj;\n      }\n    },\n    \n    // makes a full bb (x1, y1, x2, y2, w, h) from implicit params\n    makeBoundingBox: function( bb ){\n      if( bb.x1 != null && bb.y1 != null ){\n        if( bb.x2 != null && bb.y2 != null && bb.x2 >= bb.x1 && bb.y2 >= bb.y1 ){\n          return {\n            x1: bb.x1,\n            y1: bb.y1,\n            x2: bb.x2,\n            y2: bb.y2,\n            w: bb.x2 - bb.x1,\n            h: bb.y2 - bb.y1\n          };\n        } else if( bb.w != null && bb.h != null && bb.w >= 0 && bb.h >= 0 ){\n          return {\n            x1: bb.x1,\n            y1: bb.y1,\n            x2: bb.x1 + bb.w,\n            y2: bb.y1 + bb.h,\n            w: bb.w,\n            h: bb.h\n          };\n        }\n      } \n    },\n\n    // has anything been set in the map\n    mapEmpty: function( map ){\n      var empty = true;\n\n      if( map != null ){\n        for(var i in map){ // jshint ignore:line\n          empty = false;\n          break;\n        }\n      }\n\n      return empty;\n    },\n\n    // pushes to the array at the end of a map (map may not be built)\n    pushMap: function( options ){\n      var array = $$.util.getMap(options);\n\n      if( array == null ){ // if empty, put initial array\n        $$.util.setMap( $.extend({}, options, {\n          value: [ options.value ]\n        }) );\n      } else {\n        array.push( options.value );\n      }\n    },\n\n    // sets the value in a map (map may not be built)\n    setMap: function( options ){\n      var obj = options.map;\n      var key;\n      var keys = options.keys;\n      var l = keys.length;\n\n      for(var i = 0; i < l; i++){\n        var key = keys[i];\n\n        if( $$.is.plainObject( key ) ){\n          $$.util.error('Tried to set map with object key');\n        }\n\n        if( i < keys.length - 1 ){\n          \n          // extend the map if necessary\n          if( obj[key] == null ){\n            obj[key] = {};\n          }\n          \n          obj = obj[key];\n        } else {\n          // set the value\n          obj[key] = options.value;\n        }\n      }\n    },\n    \n    // gets the value in a map even if it's not built in places\n    getMap: function( options ){\n      var obj = options.map;\n      var keys = options.keys;\n      var l = keys.length;\n      \n      for(var i = 0; i < l; i++){\n        var key = keys[i];\n\n        if( $$.is.plainObject( key ) ){\n          $$.util.error('Tried to get map with object key');\n        }\n\n        obj = obj[key];\n        \n        if( obj == null ){\n          return obj;\n        }\n      }\n      \n      return obj;\n    },\n\n    // deletes the entry in the map\n    deleteMap: function( options ){\n      var obj = options.map;\n      var keys = options.keys;\n      var l = keys.length;\n      var keepChildren = options.keepChildren;\n      \n      for(var i = 0; i < l; i++){\n        var key = keys[i];\n\n        if( $$.is.plainObject( key ) ){\n          $$.util.error('Tried to delete map with object key');\n        }\n\n        var lastKey = i === options.keys.length - 1;\n        if( lastKey ){\n          \n          if( keepChildren ){ // then only delete child fields not in keepChildren\n            for( var child in obj ){\n              if( !keepChildren[child] ){\n                obj[child] = undefined;\n              }\n            }\n          } else {\n            obj[key] = undefined;\n          }\n\n        } else {\n          obj = obj[key];\n        }\n      }\n    },\n    \n    capitalize: function(str){\n      if( $$.is.emptyString(str) ){\n        return str;\n      }\n      \n      return str.charAt(0).toUpperCase() + str.substring(1);\n    },\n\n    camel2dash: function( str ){\n      var ret = [];\n\n      for( var i = 0; i < str.length; i++ ){\n        var ch = str[i];\n        var chLowerCase = ch.toLowerCase();\n        var isUpperCase = ch !== chLowerCase;\n\n        if( isUpperCase ){\n          ret.push( '-' );\n          ret.push( chLowerCase );\n        } else {\n          ret.push( ch );\n        }\n      }\n\n      var noUpperCases = ret.length === str.length;\n      if( noUpperCases ){ return str; } // cheaper than .join()\n\n      return ret.join('');\n    },\n\n    dash2camel: function( str ){\n      var ret = [];\n      var nextIsUpper = false;\n\n      for( var i = 0; i < str.length; i++ ){\n        var ch = str[i];\n        var isDash = ch === '-';\n\n        if( isDash ){\n          nextIsUpper = true;\n        } else {\n          if( nextIsUpper ){\n            ret.push( ch.toUpperCase() );\n          } else {\n            ret.push( ch );\n          }\n\n          nextIsUpper = false;\n        }\n      }\n\n      return ret.join('');\n    },\n\n    // strip spaces from beginning of string and end of string\n    trim: function( str ){\n      var first, last;\n\n      // find first non-space char\n      for( first = 0; first < str.length && str[first] === ' '; first++ ){}\n\n      // find last non-space char\n      for( last = str.length - 1; last > first && str[last] === ' '; last-- ){}\n\n      return str.substring(first, last + 1);\n    },\n\n    // get [r, g, b] from #abc or #aabbcc\n    hex2tuple: function( hex ){\n      if( !(hex.length === 4 || hex.length === 7) || hex[0] !== \"#\" ){ return; }\n\n      var shortHex = hex.length === 4;\n      var r, g, b;\n      var base = 16;\n\n      if( shortHex ){\n        r = parseInt( hex[1] + hex[1], base );\n        g = parseInt( hex[2] + hex[2], base );\n        b = parseInt( hex[3] + hex[3], base );\n      } else {\n        r = parseInt( hex[1] + hex[2], base );\n        g = parseInt( hex[3] + hex[4], base );\n        b = parseInt( hex[5] + hex[6], base );\n      }\n\n      return [r, g, b];\n    },\n\n    // get [r, g, b, a] from hsl(0, 0, 0) or hsla(0, 0, 0, 0)\n    hsl2tuple: function( hsl ){\n      var ret;\n      var h, s, l, a, r, g, b;\n      function hue2rgb(p, q, t){\n        if(t < 0) t += 1;\n        if(t > 1) t -= 1;\n        if(t < 1/6) return p + (q - p) * 6 * t;\n        if(t < 1/2) return q;\n        if(t < 2/3) return p + (q - p) * (2/3 - t) * 6;\n        return p;\n      }\n\n      var m = new RegExp(\"^\" + $$.util.regex.hsla + \"$\").exec(hsl);\n      if( m ){\n\n        // get hue\n        h = parseInt( m[1] ); \n        if( h < 0 ){\n          h = ( 360 - (-1*h % 360) ) % 360;\n        } else if( h > 360 ){\n          h = h % 360;\n        }\n        h /= 360; // normalise on [0, 1]\n\n        s = parseFloat( m[2] );\n        if( s < 0 || s > 100 ){ return; } // saturation is [0, 100]\n        s = s/100; // normalise on [0, 1]\n\n        l = parseFloat( m[3] );\n        if( l < 0 || l > 100 ){ return; } // lightness is [0, 100]\n        l = l/100; // normalise on [0, 1]\n\n        a = m[4];\n        if( a !== undefined ){\n          a = parseFloat( a );\n\n          if( a < 0 || a > 1 ){ return; } // alpha is [0, 1]\n        }\n\n        // now, convert to rgb\n        // code from http://mjijackson.com/2008/02/rgb-to-hsl-and-rgb-to-hsv-color-model-conversion-algorithms-in-javascript\n        if( s === 0 ){\n          r = g = b = Math.round(l * 255); // achromatic\n        } else {\n          var q = l < 0.5 ? l * (1 + s) : l + s - l * s;\n          var p = 2 * l - q;\n          r = Math.round( 255 * hue2rgb(p, q, h + 1/3) );\n          g = Math.round( 255 * hue2rgb(p, q, h) );\n          b = Math.round( 255 * hue2rgb(p, q, h - 1/3) );\n        }\n\n        ret = [r, g, b, a];\n      }\n\n      return ret;\n    },\n\n    // get [r, g, b, a] from rgb(0, 0, 0) or rgba(0, 0, 0, 0)\n    rgb2tuple: function( rgb ){\n      var ret;\n\n      var m = new RegExp(\"^\" + $$.util.regex.rgba + \"$\").exec(rgb);\n      if( m ){\n        ret = [];\n\n        var isPct = [];\n        for( var i = 1; i <= 3; i++ ){\n          var channel = m[i];\n\n          if( channel[ channel.length - 1 ] === \"%\" ){\n            isPct[i] = true;\n          }\n          channel = parseFloat( channel );\n\n          if( isPct[i] ){\n            channel = channel/100 * 255; // normalise to [0, 255]\n          }\n\n          if( channel < 0 || channel > 255 ){ return; } // invalid channel value\n\n          ret.push( Math.floor(channel) );\n        }\n\n        var atLeastOneIsPct = isPct[1] || isPct[2] || isPct[3];\n        var allArePct = isPct[1] && isPct[2] && isPct[3];\n        if( atLeastOneIsPct && !allArePct ){ return; } // must all be percent values if one is\n\n        var alpha = m[4];\n        if( alpha !== undefined ){\n          alpha = parseFloat( alpha );\n\n          if( alpha < 0 || alpha > 1 ){ return; } // invalid alpha value\n\n          ret.push( alpha );\n        }\n      }\n\n      return ret;\n    },\n\n    colorname2tuple: function( color ){\n      return $$.util.colors[ color.toLowerCase() ];\n    },\n\n    color2tuple: function( color ){\n      return ( $$.is.array(color) ? color : null ) \n        || $$.util.colorname2tuple(color)\n        || $$.util.hex2tuple(color)\n        || $$.util.rgb2tuple(color)\n        || $$.util.hsl2tuple(color);\n    },\n\n    tuple2hex: function( tuple ){\n      var r = tuple[0];\n      var g = tuple[1];\n      var b = tuple[2];\n\n      function ch2hex( ch ){\n        var hex = ch.toString(16);\n\n        if( hex.length === 1 ){\n          hex = '0' + hex;\n        }\n\n        return hex;\n      }\n\n      return '#' + ch2hex(r) + ch2hex(g) + ch2hex(b);\n    },\n\n    colors: {\n      // special colour names\n      transparent:      [0,0,0,0], // NB alpha === 0\n\n      // regular colours\n      aliceblue:        [240,248,255],\n      antiquewhite:      [250,235,215],\n      aqua:          [0,255,255],\n      aquamarine:        [127,255,212],\n      azure:          [240,255,255],\n      beige:          [245,245,220],\n      bisque:          [255,228,196],\n      black:          [0,0,0],\n      blanchedalmond:      [255,235,205],\n      blue:          [0,0,255],\n      blueviolet:        [138,43,226],\n      brown:          [165,42,42],\n      burlywood:        [222,184,135],\n      cadetblue:        [95,158,160],\n      chartreuse:        [127,255,0],\n      chocolate:        [210,105,30],\n      coral:          [255,127,80],\n      cornflowerblue:      [100,149,237],\n      cornsilk:        [255,248,220],\n      crimson:        [220,20,60],\n      cyan:          [0,255,255],\n      darkblue:        [0,0,139],\n      darkcyan:        [0,139,139],\n      darkgoldenrod:      [184,134,11],\n      darkgray:        [169,169,169],\n      darkgreen:        [0,100,0],\n      darkgrey:        [169,169,169],\n      darkkhaki:        [189,183,107],\n      darkmagenta:      [139,0,139],\n      darkolivegreen:      [85,107,47],\n      darkorange:        [255,140,0],\n      darkorchid:        [153,50,204],\n      darkred:        [139,0,0],\n      darksalmon:        [233,150,122],\n      darkseagreen:      [143,188,143],\n      darkslateblue:      [72,61,139],\n      darkslategray:      [47,79,79],\n      darkslategrey:      [47,79,79],\n      darkturquoise:      [0,206,209],\n      darkviolet:        [148,0,211],\n      deeppink:        [255,20,147],\n      deepskyblue:      [0,191,255],\n      dimgray:        [105,105,105],\n      dimgrey:        [105,105,105],\n      dodgerblue:        [30,144,255],\n      firebrick:        [178,34,34],\n      floralwhite:      [255,250,240],\n      forestgreen:      [34,139,34],\n      fuchsia:        [255,0,255],\n      gainsboro:        [220,220,220],\n      ghostwhite:        [248,248,255],\n      gold:          [255,215,0],\n      goldenrod:        [218,165,32],\n      gray:          [128,128,128],\n      grey:          [128,128,128],\n      green:          [0,128,0],\n      greenyellow:      [173,255,47],\n      honeydew:        [240,255,240],\n      hotpink:        [255,105,180],\n      indianred:        [205,92,92],\n      indigo:          [75,0,130],\n      ivory:          [255,255,240],\n      khaki:          [240,230,140],\n      lavender:        [230,230,250],\n      lavenderblush:      [255,240,245],\n      lawngreen:        [124,252,0],\n      lemonchiffon:      [255,250,205],\n      lightblue:        [173,216,230],\n      lightcoral:        [240,128,128],\n      lightcyan:        [224,255,255],\n      lightgoldenrodyellow:  [250,250,210],\n      lightgray:        [211,211,211],\n      lightgreen:        [144,238,144],\n      lightgrey:        [211,211,211],\n      lightpink:        [255,182,193],\n      lightsalmon:      [255,160,122],\n      lightseagreen:      [32,178,170],\n      lightskyblue:      [135,206,250],\n      lightslategray:      [119,136,153],\n      lightslategrey:      [119,136,153],\n      lightsteelblue:      [176,196,222],\n      lightyellow:      [255,255,224],\n      lime:          [0,255,0],\n      limegreen:        [50,205,50],\n      linen:          [250,240,230],\n      magenta:        [255,0,255],\n      maroon:          [128,0,0],\n      mediumaquamarine:    [102,205,170],\n      mediumblue:        [0,0,205],\n      mediumorchid:      [186,85,211],\n      mediumpurple:      [147,112,219],\n      mediumseagreen:      [60,179,113],\n      mediumslateblue:    [123,104,238],\n      mediumspringgreen:    [0,250,154],\n      mediumturquoise:    [72,209,204],\n      mediumvioletred:    [199,21,133],\n      midnightblue:      [25,25,112],\n      mintcream:        [245,255,250],\n      mistyrose:        [255,228,225],\n      moccasin:        [255,228,181],\n      navajowhite:      [255,222,173],\n      navy:          [0,0,128],\n      oldlace:        [253,245,230],\n      olive:          [128,128,0],\n      olivedrab:        [107,142,35],\n      orange:          [255,165,0],\n      orangered:        [255,69,0],\n      orchid:          [218,112,214],\n      palegoldenrod:      [238,232,170],\n      palegreen:        [152,251,152],\n      paleturquoise:      [175,238,238],\n      palevioletred:      [219,112,147],\n      papayawhip:        [255,239,213],\n      peachpuff:        [255,218,185],\n      peru:          [205,133,63],\n      pink:          [255,192,203],\n      plum:          [221,160,221],\n      powderblue:        [176,224,230],\n      purple:          [128,0,128],\n      red:          [255,0,0],\n      rosybrown:        [188,143,143],\n      royalblue:        [65,105,225],\n      saddlebrown:      [139,69,19],\n      salmon:          [250,128,114],\n      sandybrown:        [244,164,96],\n      seagreen:        [46,139,87],\n      seashell:        [255,245,238],\n      sienna:          [160,82,45],\n      silver:          [192,192,192],\n      skyblue:        [135,206,235],\n      slateblue:        [106,90,205],\n      slategray:        [112,128,144],\n      slategrey:        [112,128,144],\n      snow:          [255,250,250],\n      springgreen:      [0,255,127],\n      steelblue:        [70,130,180],\n      tan:          [210,180,140],\n      teal:          [0,128,128],\n      thistle:        [216,191,216],\n      tomato:          [255,99,71],\n      turquoise:        [64,224,208],\n      violet:          [238,130,238],\n      wheat:          [245,222,179],\n      white:          [255,255,255],\n      whitesmoke:        [245,245,245],\n      yellow:          [255,255,0],\n      yellowgreen:      [154,205,50]\n    }\n      \n  };\n\n  $$.util.regex = {};\n  \n  $$.util.regex.number = \"(?:[-]?\\\\d*\\\\.\\\\d+|[-]?\\\\d+|[-]?\\\\d*\\\\.\\\\d+[eE]\\\\d+)\";\n  \n  $$.util.regex.rgba = \"rgb[a]?\\\\((\"+ $$.util.regex.number +\"[%]?)\\\\s*,\\\\s*(\"+ $$.util.regex.number +\"[%]?)\\\\s*,\\\\s*(\"+ $$.util.regex.number +\"[%]?)(?:\\\\s*,\\\\s*(\"+ $$.util.regex.number +\"))?\\\\)\";\n  $$.util.regex.rgbaNoBackRefs = \"rgb[a]?\\\\((?:\"+ $$.util.regex.number +\"[%]?)\\\\s*,\\\\s*(?:\"+ $$.util.regex.number +\"[%]?)\\\\s*,\\\\s*(?:\"+ $$.util.regex.number +\"[%]?)(?:\\\\s*,\\\\s*(?:\"+ $$.util.regex.number +\"))?\\\\)\";\n  \n  $$.util.regex.hsla = \"hsl[a]?\\\\((\"+ $$.util.regex.number +\")\\\\s*,\\\\s*(\"+ $$.util.regex.number +\"[%])\\\\s*,\\\\s*(\"+ $$.util.regex.number +\"[%])(?:\\\\s*,\\\\s*(\"+ $$.util.regex.number +\"))?\\\\)\";\n  $$.util.regex.hslaNoBackRefs = \"hsl[a]?\\\\((?:\"+ $$.util.regex.number +\")\\\\s*,\\\\s*(?:\"+ $$.util.regex.number +\"[%])\\\\s*,\\\\s*(?:\"+ $$.util.regex.number +\"[%])(?:\\\\s*,\\\\s*(?:\"+ $$.util.regex.number +\"))?\\\\)\";\n  \n  $$.util.regex.hex3 = \"\\\\#[0-9a-fA-F]{3}\";\n  $$.util.regex.hex6 = \"\\\\#[0-9a-fA-F]{6}\";\n\n  var raf = !window ? null : ( window.requestAnimationFrame || window.mozRequestAnimationFrame ||  \n        window.webkitRequestAnimationFrame || window.msRequestAnimationFrame );\n\n  raf = raf || function(fn){ if(fn){ setTimeout(fn, 1000/60); } };\n\n  $$.util.requestAnimationFrame = function(fn){\n    raf( fn );\n  };\n\n})( cytoscape, typeof window === 'undefined' ? null : window  );\n\n;(function($$){ 'use strict';\n  \n  $$.math = {};\n  \n  $$.math.signum = function(x){\n    if( x > 0 ){\n      return 1;\n    } else if( x < 0 ){\n      return -1;\n    } else {\n      return 0;\n    }\n  };\n\n  $$.math.distance = function( p1, p2 ){\n    var dx = p2.x - p1.x;\n    var dy = p2.y - p1.y;\n\n    return Math.sqrt( dx*dx + dy*dy );\n  };\n\n  // from http://en.wikipedia.org/wiki/Bézier_curve#Quadratic_curves\n  $$.math.qbezierAt = function(p0, p1, p2, t){\n    return (1 - t)*(1 - t)*p0 + 2*(1 - t)*t*p1 + t*t*p2;\n  };\n\n  $$.math.qbezierPtAt = function(p0, p1, p2, t){\n    return {\n      x: $$.math.qbezierAt( p0.x, p1.x, p2.x, t ),\n      y: $$.math.qbezierAt( p0.y, p1.y, p2.y, t )\n    };\n  };\n\n  $$.math.boundingBoxesIntersect = function( bb1, bb2 ){\n    // case: one bb to right of other\n    if( bb1.x1 > bb2.x2 ){ return false; }\n    if( bb2.x1 > bb1.x2 ){ return false; }\n\n    // case: one bb to left of other\n    if( bb1.x2 < bb2.x1 ){ return false; }\n    if( bb2.x2 < bb1.x1 ){ return false; }\n\n    // case: one bb above other\n    if( bb1.y2 < bb2.y1 ){ return false; }\n    if( bb2.y2 < bb1.y1 ){ return false; }\n\n    // case: one bb below other\n    if( bb1.y1 > bb2.y2 ){ return false; }\n    if( bb2.y1 > bb1.y2 ){ return false; }\n\n    // otherwise, must have some overlap\n    return true;\n  };\n\n  $$.math.inBoundingBox = function( bb, x, y ){\n    return bb.x1 <= x && x <= bb.x2 && bb.y1 <= y && y <= bb.y2;\n  };\n\n  $$.math.pointInBoundingBox = function( bb, pt ){\n    return this.inBoundingBox( bb, pt.x, pt.y );\n  };\n\n  $$.math.roundRectangleIntersectLine = function(\n    x, y, nodeX, nodeY, width, height, padding) {\n    \n    var cornerRadius = this.getRoundRectangleRadius(width, height);\n    \n    var halfWidth = width / 2;\n    var halfHeight = height / 2;\n    \n    // Check intersections with straight line segments\n    var straightLineIntersections;\n    \n    // Top segment, left to right\n    {\n      var topStartX = nodeX - halfWidth + cornerRadius - padding;\n      var topStartY = nodeY - halfHeight - padding;\n      var topEndX = nodeX + halfWidth - cornerRadius + padding;\n      var topEndY = topStartY;\n      \n      straightLineIntersections = this.finiteLinesIntersect(\n        x, y, nodeX, nodeY, topStartX, topStartY, topEndX, topEndY, false);\n      \n      if (straightLineIntersections.length > 0) {\n        return straightLineIntersections;\n      }\n    }\n    \n    // Right segment, top to bottom\n    {\n      var rightStartX = nodeX + halfWidth + padding;\n      var rightStartY = nodeY - halfHeight + cornerRadius - padding;\n      var rightEndX = rightStartX;\n      var rightEndY = nodeY + halfHeight - cornerRadius + padding;\n      \n      straightLineIntersections = this.finiteLinesIntersect(\n        x, y, nodeX, nodeY, rightStartX, rightStartY, rightEndX, rightEndY, false);\n      \n      if (straightLineIntersections.length > 0) {\n        return straightLineIntersections;\n      }\n    }\n    \n    // Bottom segment, left to right\n    {\n      var bottomStartX = nodeX - halfWidth + cornerRadius - padding;\n      var bottomStartY = nodeY + halfHeight + padding;\n      var bottomEndX = nodeX + halfWidth - cornerRadius + padding;\n      var bottomEndY = bottomStartY;\n      \n      straightLineIntersections = this.finiteLinesIntersect(\n        x, y, nodeX, nodeY, bottomStartX, bottomStartY, bottomEndX, bottomEndY, false);\n      \n      if (straightLineIntersections.length > 0) {\n        return straightLineIntersections;\n      }\n    }\n    \n    // Left segment, top to bottom\n    {\n      var leftStartX = nodeX - halfWidth - padding;\n      var leftStartY = nodeY - halfHeight + cornerRadius - padding;\n      var leftEndX = leftStartX;\n      var leftEndY = nodeY + halfHeight - cornerRadius + padding;\n      \n      straightLineIntersections = this.finiteLinesIntersect(\n        x, y, nodeX, nodeY, leftStartX, leftStartY, leftEndX, leftEndY, false);\n      \n      if (straightLineIntersections.length > 0) {\n        return straightLineIntersections;\n      }\n    }\n    \n    // Check intersections with arc segments\n    var arcIntersections;\n    \n    // Top Left\n    {\n      var topLeftCenterX = nodeX - halfWidth + cornerRadius;\n      var topLeftCenterY = nodeY - halfHeight + cornerRadius;\n      arcIntersections = this.intersectLineCircle(\n        x, y, nodeX, nodeY, \n        topLeftCenterX, topLeftCenterY, cornerRadius + padding);\n      \n      // Ensure the intersection is on the desired quarter of the circle\n      if (arcIntersections.length > 0\n        && arcIntersections[0] <= topLeftCenterX\n        && arcIntersections[1] <= topLeftCenterY) {\n        return [arcIntersections[0], arcIntersections[1]];\n      }\n    }\n    \n    // Top Right\n    {\n      var topRightCenterX = nodeX + halfWidth - cornerRadius;\n      var topRightCenterY = nodeY - halfHeight + cornerRadius;\n      arcIntersections = this.intersectLineCircle(\n        x, y, nodeX, nodeY, \n        topRightCenterX, topRightCenterY, cornerRadius + padding);\n      \n      // Ensure the intersection is on the desired quarter of the circle\n      if (arcIntersections.length > 0\n        && arcIntersections[0] >= topRightCenterX\n        && arcIntersections[1] <= topRightCenterY) {\n        return [arcIntersections[0], arcIntersections[1]];\n      }\n    }\n    \n    // Bottom Right\n    {\n      var bottomRightCenterX = nodeX + halfWidth - cornerRadius;\n      var bottomRightCenterY = nodeY + halfHeight - cornerRadius;\n      arcIntersections = this.intersectLineCircle(\n        x, y, nodeX, nodeY, \n        bottomRightCenterX, bottomRightCenterY, cornerRadius + padding);\n      \n      // Ensure the intersection is on the desired quarter of the circle\n      if (arcIntersections.length > 0\n        && arcIntersections[0] >= bottomRightCenterX\n        && arcIntersections[1] >= bottomRightCenterY) {\n        return [arcIntersections[0], arcIntersections[1]];\n      }\n    }\n    \n    // Bottom Left\n    {\n      var bottomLeftCenterX = nodeX - halfWidth + cornerRadius;\n      var bottomLeftCenterY = nodeY + halfHeight - cornerRadius;\n      arcIntersections = this.intersectLineCircle(\n        x, y, nodeX, nodeY, \n        bottomLeftCenterX, bottomLeftCenterY, cornerRadius + padding);\n      \n      // Ensure the intersection is on the desired quarter of the circle\n      if (arcIntersections.length > 0\n        && arcIntersections[0] <= bottomLeftCenterX\n        && arcIntersections[1] >= bottomLeftCenterY) {\n        return [arcIntersections[0], arcIntersections[1]];\n      }\n    }\n\n    return []; // if nothing\n  };\n  \n  $$.math.roundRectangleIntersectBox = function(\n    boxX1, boxY1, boxX2, boxY2, width, height, centerX, centerY, padding) {\n    \n    // We have the following shpae\n    \n    //    _____\n    //  _|     |_\n    // |         |\n    // |_       _|\n    //   |_____|\n    //\n    // With a quarter circle at each corner.\n    \n    var cornerRadius = this.getRoundRectangleRadius(width, height);\n    \n    var hBoxTopLeftX = centerX - width / 2 - padding;\n    var hBoxTopLeftY = centerY - height / 2 + cornerRadius - padding;\n    var hBoxBottomRightX = centerX + width / 2 + padding;\n    var hBoxBottomRightY = centerY + height / 2 - cornerRadius + padding;\n    \n    var vBoxTopLeftX = centerX - width / 2 + cornerRadius - padding;\n    var vBoxTopLeftY = centerY - height / 2 - padding;\n    var vBoxBottomRightX = centerX + width / 2 - cornerRadius + padding;\n    var vBoxBottomRightY = centerY + height / 2 + padding;\n    \n    // Check if the box is out of bounds\n    var boxMinX = Math.min(boxX1, boxX2);\n    var boxMaxX = Math.max(boxX1, boxX2);\n    var boxMinY = Math.min(boxY1, boxY2);\n    var boxMaxY = Math.max(boxY1, boxY2);\n    \n    if (boxMaxX < hBoxTopLeftX) {\n      return false;\n    } else if (boxMinX > hBoxBottomRightX) {\n      return false;\n    }\n    \n    if (boxMaxY < vBoxTopLeftY) {\n      return false;\n    } else if (boxMinY > vBoxBottomRightY) {\n      return false;\n    }\n    \n    // Check if an hBox point is in given box\n    if (hBoxTopLeftX >= boxMinX && hBoxTopLeftX <= boxMaxX\n        && hBoxTopLeftY >= boxMinY && hBoxTopLeftY <= boxMaxY) {\n      return true;\n    }\n    \n    if (hBoxBottomRightX >= boxMinX && hBoxBottomRightX <= boxMaxX\n        && hBoxTopLeftY >= boxMinY && hBoxTopLeftY <= boxMaxY) {\n      return true;\n    }\n    \n    if (hBoxBottomRightX >= boxMinX && hBoxBottomRightX <= boxMaxX\n        && hBoxBottomRightY >= boxMinY && hBoxBottomRightY <= boxMaxY) {\n      return true;\n    }\n    \n    if (hBoxTopLeftX >= boxMinX && hBoxTopLeftX <= boxMaxX\n        && hBoxBottomRightY >= boxMinY && hBoxBottomRightY <= boxMaxY) {\n      return true;\n    }\n    \n    // Check if a given point box is in the hBox\n    if (boxMinX >= hBoxTopLeftX && boxMinX <= hBoxBottomRightX\n      && boxMinY >= hBoxTopLeftY && boxMinY <= hBoxBottomRightY) {\n      return true;\n    }\n    \n    if (boxMaxX >= hBoxTopLeftX && boxMaxX <= hBoxBottomRightX\n      && boxMinY >= hBoxTopLeftY && boxMinY <= hBoxBottomRightY) {\n      return true;\n    }\n    \n    if (boxMaxX >= hBoxTopLeftX && boxMaxX <= hBoxBottomRightX\n      && boxMaxY >= hBoxTopLeftY && boxMaxY <= hBoxBottomRightY) {\n      return true;\n    }\n    \n    if (boxMinX >= hBoxTopLeftX && boxMinX <= hBoxBottomRightX\n      && boxMaxY >= hBoxTopLeftY && boxMaxY <= hBoxBottomRightY) {\n      return true;\n    }\n    \n    // Check if an vBox point is in given box\n    if (vBoxTopLeftX >= boxMinX && vBoxTopLeftX <= boxMaxX\n        && vBoxTopLeftY >= boxMinY && vBoxTopLeftY <= boxMaxY) {\n      return true;\n    }\n    \n    if (vBoxBottomRightX >= boxMinX && vBoxBottomRightX <= boxMaxX\n        && vBoxTopLeftY >= boxMinY && vBoxTopLeftY <= boxMaxY) {\n      return true;\n    }\n    \n    if (vBoxBottomRightX >= boxMinX && vBoxBottomRightX <= boxMaxX\n        && vBoxBottomRightY >= boxMinY && vBoxBottomRightY <= boxMaxY) {\n      return true;\n    }\n    \n    if (vBoxTopLeftX >= boxMinX && vBoxTopLeftX <= boxMaxX\n        && vBoxBottomRightY >= boxMinY && vBoxBottomRightY <= boxMaxY) {\n      return true;\n    }\n    \n    // Check if a given point box is in the vBox\n    if (boxMinX >= vBoxTopLeftX && boxMinX <= vBoxBottomRightX\n      && boxMinY >= vBoxTopLeftY && boxMinY <= vBoxBottomRightY) {\n      return true;\n    }\n    \n    if (boxMaxX >= vBoxTopLeftX && boxMaxX <= vBoxBottomRightX\n      && boxMinY >= vBoxTopLeftY && boxMinY <= vBoxBottomRightY) {\n      return true;\n    }\n    \n    if (boxMaxX >= vBoxTopLeftX && boxMaxX <= vBoxBottomRightX\n      && boxMaxY >= vBoxTopLeftY && boxMaxY <= vBoxBottomRightY) {\n      return true;\n    }\n    \n    if (boxMinX >= vBoxTopLeftX && boxMinX <= vBoxBottomRightX\n      && boxMaxY >= vBoxTopLeftY && boxMaxY <= vBoxBottomRightY) {\n      return true;\n    }\n    \n    // Lastly, check if one of the ellipses coincide with the box\n    \n    if (this.boxIntersectEllipse(boxMinX, boxMinY, boxMaxX, boxMaxY, padding,\n        cornerRadius * 2, cornerRadius * 2, vBoxTopLeftX + padding, hBoxTopLeftY + padding)) {\n      return true;\n    }\n    \n    if (this.boxIntersectEllipse(boxMinX, boxMinY, boxMaxX, boxMaxY, padding,\n        cornerRadius * 2, cornerRadius * 2, vBoxBottomRightX - padding, hBoxTopLeftY + padding)) {\n      return true;\n    }\n    \n    if (this.boxIntersectEllipse(boxMinX, boxMinY, boxMaxX, boxMaxY, padding,\n        cornerRadius * 2, cornerRadius * 2, vBoxBottomRightX - padding, hBoxBottomRightY - padding)) {\n      return true;\n    }\n    \n    if (this.boxIntersectEllipse(boxMinX, boxMinY, boxMaxX, boxMaxY, padding,\n        cornerRadius * 2, cornerRadius * 2, vBoxTopLeftX + padding, hBoxBottomRightY - padding)) {\n      return true;\n    }\n    \n    return false;\n  };\n  \n  // @O Approximate collision functions\n  $$.math.checkInBoundingCircle = function(\n    x, y, farthestPointSqDistance, padding, width, height, centerX, centerY) {\n    \n    x = (x - centerX) / (width + padding);\n    y = (y - centerY) / (height + padding);\n    \n    return (x * x + y * y) <= farthestPointSqDistance;\n  };\n  \n  $$.math.boxInBezierVicinity = function(\n    x1box, y1box, x2box, y2box, x1, y1, x2, y2, x3, y3, tolerance) {\n    \n    // Return values:\n    // 0 - curve is not in box\n    // 1 - curve may be in box; needs precise check\n    // 2 - curve is in box\n    \n    // midpoint\n    var midX = 0.25 * x1 + 0.5 * x2 + 0.25 * x3;\n    var midY = 0.25 * y1 + 0.5 * y2 + 0.25 * y3;\n\n    var boxMinX = Math.min(x1box, x2box) - tolerance;\n    var boxMinY = Math.min(y1box, y2box) - tolerance;\n    var boxMaxX = Math.max(x1box, x2box) + tolerance;\n    var boxMaxY = Math.max(y1box, y2box) + tolerance;\n    \n    if (x1 >= boxMinX && x1 <= boxMaxX && y1 >= boxMinY && y1 <= boxMaxY) { // (x1, y1) in box\n      return 1;\n    } else if (x3 >= boxMinX && x3 <= boxMaxX && y3 >= boxMinY && y3 <= boxMaxY) { // (x3, y3) in box\n      return 1;\n    } else if (midX >= boxMinX && midX <= boxMaxX && midY >= boxMinY && midY <= boxMaxY) { // (midX, midY) in box\n      return 1;\n    } else if (x2 >= boxMinX && x2 <= boxMaxX && y2 >= boxMinY && y2 <= boxMaxY) { // ctrl pt in box\n      return 1;\n    }\n    \n    var curveMinX = Math.min(x1, midX, x3);\n    var curveMinY = Math.min(y1, midY, y3);\n    var curveMaxX = Math.max(x1, midX, x3);\n    var curveMaxY = Math.max(y1, midY, y3);\n    \n    /*\n    console.log(curveMinX + \", \" + curveMinY + \", \" + curveMaxX \n      + \", \" + curveMaxY);\n    if (curveMinX == undefined) {\n      console.log(\"undefined curveMinX: \" + x1 + \", \" + x2 + \", \" + x3);\n    }\n    */\n    \n    if (curveMinX > boxMaxX\n      || curveMaxX < boxMinX\n      || curveMinY > boxMaxY\n      || curveMaxY < boxMinY) {\n      \n      return 0;  \n    }\n    \n    return 1;\n  };\n\n  $$.math.checkBezierInBox = function(\n    x1box, y1box, x2box, y2box, x1, y1, x2, y2, x3, y3, tolerance) {\n\n    function sampleInBox(t){\n      var x = $$.math.qbezierAt(x1, x2, x3, t);\n      var y = $$.math.qbezierAt(y1, y2, y3, t);\n\n      return x1box <= x && x <= x2box\n        && y1box <= y && y <= y2box\n      ;\n    }\n\n    for( var t = 0; t <= 1; t += 0.25 ){\n      if( !sampleInBox(t) ){\n        return false;\n      }\n    }\n\n    return true;\n  };\n  \n  $$.math.checkStraightEdgeInBox = function(\n    x1box, y1box, x2box, y2box, x1, y1, x2, y2, tolerance) {\n\n    return x1box <= x1 && x1 <= x2box\n      && x1box <= x2 && x2 <= x2box\n      && y1box <= y1 && y1 <= y2box\n      && y1box <= y2 && y2 <= y2box\n    ;\n  };\n\n  $$.math.checkStraightEdgeCrossesBox = function(\n    x1box, y1box, x2box, y2box, x1, y1, x2, y2, tolerance) {\n    \n   //console.log(arguments);\n    \n    var boxMinX = Math.min(x1box, x2box) - tolerance;\n    var boxMinY = Math.min(y1box, y2box) - tolerance;\n    var boxMaxX = Math.max(x1box, x2box) + tolerance;\n    var boxMaxY = Math.max(y1box, y2box) + tolerance;\n    \n    // Check left + right bounds\n    var aX = x2 - x1;\n    var bX = x1;\n    var yValue;\n    \n    // Top and bottom\n    var aY = y2 - y1;\n    var bY = y1;\n    var xValue;\n    \n    if (Math.abs(aX) < 0.0001) {\n      return (x1 >= boxMinX && x1 <= boxMaxX\n        && Math.min(y1, y2) <= boxMinY\n        && Math.max(y1, y2) >= boxMaxY);  \n    }\n    \n    var tLeft = (boxMinX - bX) / aX;\n    if (tLeft > 0 && tLeft <= 1) {\n      yValue = aY * tLeft + bY;\n      if (yValue >= boxMinY && yValue <= boxMaxY) {\n        return true;\n      } \n    }\n    \n    var tRight = (boxMaxX - bX) / aX;\n    if (tRight > 0 && tRight <= 1) {\n      yValue = aY * tRight + bY;\n      if (yValue >= boxMinY && yValue <= boxMaxY) {\n        return true;\n      } \n    }\n    \n    var tTop = (boxMinY - bY) / aY;\n    if (tTop > 0 && tTop <= 1) {\n      xValue = aX * tTop + bX;\n      if (xValue >= boxMinX && xValue <= boxMaxX) {\n        return true;\n      } \n    }\n    \n    var tBottom = (boxMaxY - bY) / aY;\n    if (tBottom > 0 && tBottom <= 1) {\n      xValue = aX * tBottom + bX;\n      if (xValue >= boxMinX && xValue <= boxMaxX) {\n        return true;\n      } \n    }\n    \n    return false;\n  };\n  \n  $$.math.checkBezierCrossesBox = function(\n    x1box, y1box, x2box, y2box, x1, y1, x2, y2, x3, y3, tolerance) {\n    \n    var boxMinX = Math.min(x1box, x2box) - tolerance;\n    var boxMinY = Math.min(y1box, y2box) - tolerance;\n    var boxMaxX = Math.max(x1box, x2box) + tolerance;\n    var boxMaxY = Math.max(y1box, y2box) + tolerance;\n    \n    if (x1 >= boxMinX && x1 <= boxMaxX && y1 >= boxMinY && y1 <= boxMaxY) {\n      return true;\n    } else if (x3 >= boxMinX && x3 <= boxMaxX && y3 >= boxMinY && y3 <= boxMaxY) {\n      return true;\n    }\n    \n    var aX = x1 - 2 * x2 + x3;\n    var bX = -2 * x1 + 2 * x2;\n    var cX = x1;\n\n    var xIntervals = [];\n    \n    if (Math.abs(aX) < 0.0001) {\n      var leftParam = (boxMinX - x1) / bX;\n      var rightParam = (boxMaxX - x1) / bX;\n      \n      xIntervals.push(leftParam, rightParam);\n    } else {\n      // Find when x coordinate of the curve crosses the left side of the box\n      var discriminantX1 = bX * bX - 4 * aX * (cX - boxMinX);\n      var tX1, tX2;\n      if (discriminantX1 > 0) {\n        var sqrt = Math.sqrt(discriminantX1);\n        tX1 = (-bX + sqrt) / (2 * aX);\n        tX2 = (-bX - sqrt) / (2 * aX);\n        \n        xIntervals.push(tX1, tX2);\n      }\n      \n      var discriminantX2 = bX * bX - 4 * aX * (cX - boxMaxX);\n      var tX3, tX4;\n      if (discriminantX2 > 0) {\n        var sqrt = Math.sqrt(discriminantX2);\n        tX3 = (-bX + sqrt) / (2 * aX);\n        tX4 = (-bX - sqrt) / (2 * aX);\n        \n        xIntervals.push(tX3, tX4);\n      }\n    }\n    \n    xIntervals.sort(function(a, b) { return a - b; });\n    \n    var aY = y1 - 2 * y2 + y3;\n    var bY = -2 * y1 + 2 * y2;\n    var cY = y1;\n    \n    var yIntervals = [];\n    \n    if (Math.abs(aY) < 0.0001) {\n      var topParam = (boxMinY - y1) / bY;\n      var bottomParam = (boxMaxY - y1) / bY;\n      \n      yIntervals.push(topParam, bottomParam);\n    } else {\n      var discriminantY1 = bY * bY - 4 * aY * (cY - boxMinY);\n      \n      var tY1, tY2;\n      if (discriminantY1 > 0) {\n        var sqrt = Math.sqrt(discriminantY1);\n        tY1 = (-bY + sqrt) / (2 * aY);\n        tY2 = (-bY - sqrt) / (2 * aY);\n        \n        yIntervals.push(tY1, tY2);\n      }\n  \n      var discriminantY2 = bY * bY - 4 * aY * (cY - boxMaxY);\n      \n      var tY3, tY4;\n      if (discriminantY2 > 0) {\n        var sqrt = Math.sqrt(discriminantY2);\n        tY3 = (-bY + sqrt) / (2 * aY);\n        tY4 = (-bY - sqrt) / (2 * aY);\n        \n        yIntervals.push(tY3, tY4);\n      }\n    }\n        \n    yIntervals.sort(function(a, b) { return a - b; });\n\n    for (var index = 0; index < xIntervals.length; index += 2) {\n      for (var yIndex = 1; yIndex < yIntervals.length; yIndex += 2) {\n        \n        // Check if there exists values for the Bezier curve\n        // parameter between 0 and 1 where both the curve's\n        // x and y coordinates are within the bounds specified by the box\n        if (xIntervals[index] < yIntervals[yIndex]\n          && yIntervals[yIndex] >= 0.0\n          && xIntervals[index] <= 1.0\n          && xIntervals[index + 1] > yIntervals[yIndex - 1]\n          && yIntervals[yIndex - 1] <= 1.0\n          && xIntervals[index + 1] >= 0.0) {\n          \n          return true;\n        }\n      }\n    }\n    \n    return false;\n  };\n  \n  $$.math.inLineVicinity = function(x, y, lx1, ly1, lx2, ly2, tolerance){\n    var t = tolerance;\n\n    var x1 = Math.min(lx1, lx2);\n    var x2 = Math.max(lx1, lx2);\n    var y1 = Math.min(ly1, ly2);\n    var y2 = Math.max(ly1, ly2);\n\n    return x1 - t <= x && x <= x2 + t\n      && y1 - t <= y && y <= y2 + t;\n  };\n\n  $$.math.inBezierVicinity = function(\n    x, y, x1, y1, x2, y2, x3, y3, toleranceSquared) {\n\n    var bb = {\n      x1: Math.min( x1, x3, x2 ),\n      x2: Math.max( x1, x3, x2 ),\n      y1: Math.min( y1, y3, y2 ),\n      y2: Math.max( y1, y3, y2 )\n    };\n\n    // if outside the rough bounding box for the bezier, then it can't be a hit\n    if( x < bb.x1 || x > bb.x2 || y < bb.y1 || y > bb.y2 ){\n      // console.log('bezier out of rough bb')\n      return false;\n    } else {\n      // console.log('do more expensive check');\n      return true;\n    }\n\n  };\n  \n  $$.math.solveCubic = function(a, b, c, d, result) {\n    \n    // Solves a cubic function, returns root in form [r1, i1, r2, i2, r3, i3], where\n    // r is the real component, i is the imaginary component\n\n    // An implementation of the Cardano method from the year 1545\n    // http://en.wikipedia.org/wiki/Cubic_function#The_nature_of_the_roots\n\n    b /= a;\n    c /= a;\n    d /= a;\n    \n    var discriminant, q, r, dum1, s, t, term1, r13;\n\n    q = (3.0 * c - (b * b)) / 9.0;\n    r = -(27.0 * d) + b * (9.0 * c - 2.0 * (b * b));\n    r /= 54.0;\n    \n    discriminant = q * q * q + r * r;\n    result[1] = 0;\n    term1 = (b / 3.0);\n    \n    if (discriminant > 0) {\n      s = r + Math.sqrt(discriminant);\n      s = ((s < 0) ? -Math.pow(-s, (1.0 / 3.0)) : Math.pow(s, (1.0 / 3.0)));\n      t = r - Math.sqrt(discriminant);\n      t = ((t < 0) ? -Math.pow(-t, (1.0 / 3.0)) : Math.pow(t, (1.0 / 3.0)));\n      result[0] = -term1 + s + t;\n      term1 += (s + t) / 2.0;\n      result[4] = result[2] = -term1;\n      term1 = Math.sqrt(3.0) * (-t + s) / 2;\n      result[3] = term1;\n      result[5] = -term1;\n      return;\n    }\n    \n    result[5] = result[3] = 0;\n    \n    if (discriminant === 0) {\n      r13 = ((r < 0) ? -Math.pow(-r, (1.0 / 3.0)) : Math.pow(r, (1.0 / 3.0)));\n      result[0] = -term1 + 2.0 * r13;\n      result[4] = result[2] = -(r13 + term1);\n      return;\n    }\n    \n    q = -q;\n    dum1 = q * q * q;\n    dum1 = Math.acos(r / Math.sqrt(dum1));\n    r13 = 2.0 * Math.sqrt(q);\n    result[0] = -term1 + r13 * Math.cos(dum1 / 3.0);\n    result[2] = -term1 + r13 * Math.cos((dum1 + 2.0 * Math.PI) / 3.0);\n    result[4] = -term1 + r13 * Math.cos((dum1 + 4.0 * Math.PI) / 3.0);\n    \n    return;\n  };\n\n  $$.math.sqDistanceToQuadraticBezier = function(\n    x, y, x1, y1, x2, y2, x3, y3) {\n    \n    // Find minimum distance by using the minimum of the distance \n    // function between the given point and the curve\n    \n    // This gives the coefficients of the resulting cubic equation\n    // whose roots tell us where a possible minimum is\n    // (Coefficients are divided by 4)\n    \n    var a = 1.0 * x1*x1 - 4*x1*x2 + 2*x1*x3 + 4*x2*x2 - 4*x2*x3 + x3*x3\n      + y1*y1 - 4*y1*y2 + 2*y1*y3 + 4*y2*y2 - 4*y2*y3 + y3*y3;\n    \n    var b = 1.0 * 9*x1*x2 - 3*x1*x1 - 3*x1*x3 - 6*x2*x2 + 3*x2*x3\n      + 9*y1*y2 - 3*y1*y1 - 3*y1*y3 - 6*y2*y2 + 3*y2*y3;\n    \n    var c = 1.0 * 3*x1*x1 - 6*x1*x2 + x1*x3 - x1*x + 2*x2*x2 + 2*x2*x - x3*x\n      + 3*y1*y1 - 6*y1*y2 + y1*y3 - y1*y + 2*y2*y2 + 2*y2*y - y3*y;\n      \n    var d = 1.0 * x1*x2 - x1*x1 + x1*x - x2*x\n      + y1*y2 - y1*y1 + y1*y - y2*y;\n    \n    // debug(\"coefficients: \" + a / a + \", \" + b / a + \", \" + c / a + \", \" + d / a);\n    \n    var roots = [];\n    \n    // Use the cubic solving algorithm\n    this.solveCubic(a, b, c, d, roots);\n    \n    var zeroThreshold = 0.0000001;\n    \n    var params = [];\n    \n    for (var index = 0; index < 6; index += 2) {\n      if (Math.abs(roots[index + 1]) < zeroThreshold\n          && roots[index] >= 0\n          && roots[index] <= 1.0) {\n        params.push(roots[index]);\n      }\n    }\n    \n    params.push(1.0);\n    params.push(0.0);\n    \n    var minDistanceSquared = -1;\n    var closestParam;\n    \n    var curX, curY, distSquared;\n    for (var i = 0; i < params.length; i++) {\n      curX = Math.pow(1.0 - params[i], 2.0) * x1\n        + 2.0 * (1 - params[i]) * params[i] * x2\n        + params[i] * params[i] * x3;\n        \n      curY = Math.pow(1 - params[i], 2.0) * y1\n        + 2 * (1.0 - params[i]) * params[i] * y2\n        + params[i] * params[i] * y3;\n        \n      distSquared = Math.pow(curX - x, 2) + Math.pow(curY - y, 2);\n      // debug('distance for param ' + params[i] + \": \" + Math.sqrt(distSquared));\n      if (minDistanceSquared >= 0) {\n        if (distSquared < minDistanceSquared) {\n          minDistanceSquared = distSquared;\n          closestParam = params[i];\n        }\n      } else {\n        minDistanceSquared = distSquared;\n        closestParam = params[i];\n      }\n    }\n    \n    /*\n    debugStats.clickX = x;\n    debugStats.clickY = y;\n    \n    debugStats.closestX = Math.pow(1.0 - closestParam, 2.0) * x1\n        + 2.0 * (1.0 - closestParam) * closestParam * x2\n        + closestParam * closestParam * x3;\n        \n    debugStats.closestY = Math.pow(1.0 - closestParam, 2.0) * y1\n        + 2.0 * (1.0 - closestParam) * closestParam * y2\n        + closestParam * closestParam * y3;\n    */\n    \n    // debug(\"given: \" \n    //   + \"( \" + x + \", \" + y + \"), \" \n    //   + \"( \" + x1 + \", \" + y1 + \"), \" \n    //   + \"( \" + x2 + \", \" + y2 + \"), \"\n    //   + \"( \" + x3 + \", \" + y3 + \")\");\n    \n    \n    // debug(\"roots: \" + roots);\n    // debug(\"params: \" + params);\n    // debug(\"closest param: \" + closestParam);\n    return minDistanceSquared;\n  };\n  \n  $$.math.sqDistanceToFiniteLine = function(x, y, x1, y1, x2, y2) {\n    var offset = [x - x1, y - y1];\n    var line = [x2 - x1, y2 - y1];\n    \n    var lineSq = line[0] * line[0] + line[1] * line[1];\n    var hypSq = offset[0] * offset[0] + offset[1] * offset[1];\n    \n    var dotProduct = offset[0] * line[0] + offset[1] * line[1];\n    var adjSq = dotProduct * dotProduct / lineSq;\n    \n    if (dotProduct < 0) {\n      return hypSq;\n    }\n    \n    if (adjSq > lineSq) {\n      return (x - x2) * (x - x2) + (y - y2) * (y - y2);\n    }\n    \n    return hypSq - adjSq;\n  };\n\n  $$.math.pointInsidePolygon = function(\n    x, y, basePoints, centerX, centerY, width, height, direction, padding) {\n\n    //var direction = arguments[6];\n    var transformedPoints = new Array(basePoints.length);\n\n    // Gives negative angle\n    var angle = Math.asin(direction[1] / (Math.sqrt(direction[0] * direction[0] \n      + direction[1] * direction[1])));\n    \n    if (direction[0] < 0) {\n      angle = angle + Math.PI / 2;\n    } else {\n      angle = -angle - Math.PI / 2;\n    }\n        \n    var cos = Math.cos(-angle);\n    var sin = Math.sin(-angle);\n    \n//    console.log(\"base: \" + basePoints);\n    for (var i = 0; i < transformedPoints.length / 2; i++) {\n      transformedPoints[i * 2] = \n        width / 2 * (basePoints[i * 2] * cos\n          - basePoints[i * 2 + 1] * sin);\n      \n      transformedPoints[i * 2 + 1] = \n        height / 2 * (basePoints[i * 2 + 1] * cos \n          + basePoints[i * 2] * sin);\n\n      transformedPoints[i * 2] += centerX;\n      transformedPoints[i * 2 + 1] += centerY;\n    }\n    \n    var points;\n    \n    if (padding > 0) {\n      var expandedLineSet = this.expandPolygon(\n        transformedPoints,\n        -padding);\n      \n      points = this.joinLines(expandedLineSet);\n    } else {\n      points = transformedPoints;\n    }\n    \n    var x1, y1, x2, y2;\n    var y3;\n    \n    // Intersect with vertical line through (x, y)\n    var up = 0;\n    var down = 0;\n    for (var i = 0; i < points.length / 2; i++) {\n      \n      x1 = points[i * 2];\n      y1 = points[i * 2 + 1];\n      \n      if (i + 1 < points.length / 2) {\n        x2 = points[(i + 1) * 2];\n        y2 = points[(i + 1) * 2 + 1];\n      } else {\n        x2 = points[(i + 1 - points.length / 2) * 2];\n        y2 = points[(i + 1 - points.length / 2) * 2 + 1];\n      }\n      \n//*      console.log(\"line from (\" + x1 + \", \" + y1 + \") to (\" + x2 + \", \" + y2 + \")\");\n\n//&      console.log(x1, x, x2);\n\n      if (x1 == x && x2 == x) {\n        \n      } else if ((x1 >= x && x >= x2)\n        || (x1 <= x && x <= x2)) {\n        \n        y3 = (x - x1) / (x2 - x1) * (y2 - y1) + y1;\n        \n        if (y3 > y) {\n          up++;\n        }\n        \n        if (y3 < y) {\n          down++;\n        }\n        \n//*        console.log(y3, y);\n        \n      } else {\n//*        console.log('22');\n        continue;\n      }\n      \n    }\n    \n//*    console.log(\"up: \" + up + \", down: \" + down);\n    \n    if (up % 2 === 0) {\n      return false;\n    } else {\n      return true;\n    }\n  };\n\n  $$.math.joinLines = function(lineSet) {\n    \n    var vertices = new Array(lineSet.length / 2);\n    \n    var currentLineStartX, currentLineStartY, currentLineEndX, currentLineEndY;\n    var nextLineStartX, nextLineStartY, nextLineEndX, nextLineEndY;\n    \n    for (var i = 0; i < lineSet.length / 4; i++) {\n      currentLineStartX = lineSet[i * 4];\n      currentLineStartY = lineSet[i * 4 + 1];\n      currentLineEndX = lineSet[i * 4 + 2];\n      currentLineEndY = lineSet[i * 4 + 3];\n      \n      if (i < lineSet.length / 4 - 1) {\n        nextLineStartX = lineSet[(i + 1) * 4];\n        nextLineStartY = lineSet[(i + 1) * 4 + 1];\n        nextLineEndX = lineSet[(i + 1) * 4 + 2];\n        nextLineEndY = lineSet[(i + 1) * 4 + 3];\n      } else {\n        nextLineStartX = lineSet[0];\n        nextLineStartY = lineSet[1];\n        nextLineEndX = lineSet[2];\n        nextLineEndY = lineSet[3];\n      }\n      \n      var intersection = this.finiteLinesIntersect(\n        currentLineStartX, currentLineStartY,\n        currentLineEndX, currentLineEndY,\n        nextLineStartX, nextLineStartY,\n        nextLineEndX, nextLineEndY,\n        true);\n      \n      vertices[i * 2] = intersection[0];\n      vertices[i * 2 + 1] = intersection[1];\n    }\n    \n    return vertices;\n  };\n\n  $$.math.expandPolygon = function(points, pad) {\n    \n    var expandedLineSet = new Array(points.length * 2);\n    \n    var currentPointX, currentPointY, nextPointX, nextPointY;\n    \n    for (var i = 0; i < points.length / 2; i++) {\n      currentPointX = points[i * 2];\n      currentPointY = points[i * 2 + 1];\n      \n      if (i < points.length / 2 - 1) {\n        nextPointX = points[(i + 1) * 2];\n        nextPointY = points[(i + 1) * 2 + 1];\n      } else {\n        nextPointX = points[0];\n        nextPointY = points[1];\n      }\n      \n      // Current line: [currentPointX, currentPointY] to [nextPointX, nextPointY]\n      \n      // Assume CCW polygon winding\n      \n      var offsetX = (nextPointY - currentPointY);\n      var offsetY = -(nextPointX - currentPointX);\n      \n      // Normalize\n      var offsetLength = Math.sqrt(offsetX * offsetX + offsetY * offsetY);\n      var normalizedOffsetX = offsetX / offsetLength;\n      var normalizedOffsetY = offsetY / offsetLength;\n      \n      expandedLineSet[i * 4] = currentPointX + normalizedOffsetX * pad;\n      expandedLineSet[i * 4 + 1] = currentPointY + normalizedOffsetY * pad;\n      expandedLineSet[i * 4 + 2] = nextPointX + normalizedOffsetX * pad;\n      expandedLineSet[i * 4 + 3] = nextPointY + normalizedOffsetY * pad;\n    }\n    \n    return expandedLineSet;\n  };\n\n  $$.math.intersectLineEllipse = function(\n    x, y, centerX, centerY, ellipseWradius, ellipseHradius) {\n    \n    var dispX = centerX - x;\n    var dispY = centerY - y;\n    \n    dispX /= ellipseWradius;\n    dispY /= ellipseHradius;\n    \n    var len = Math.sqrt(dispX * dispX + dispY * dispY);\n    \n    var newLength = len - 1;\n    \n    if (newLength < 0) {\n      return [];\n    }\n    \n    var lenProportion = newLength / len;\n    \n    return [(centerX - x) * lenProportion + x, (centerY - y) * lenProportion + y];\n  };\n  \n  $$.math.dotProduct = function(\n    vec1, vec2) {\n    \n    if (vec1.length != 2 || vec2.length != 2) {\n      throw 'dot product: arguments are not vectors';\n    }\n    \n    return (vec1[0] * vec2[0] + vec1[1] * vec2[1]);\n  };\n  \n  // Returns intersections of increasing distance from line's start point\n  $$.math.intersectLineCircle = function(\n    x1, y1, x2, y2, centerX, centerY, radius) {\n    \n    // Calculate d, direction vector of line\n    var d = [x2 - x1, y2 - y1]; // Direction vector of line\n    var c = [centerX, centerY]; // Center of circle\n    var f = [x1 - centerX, y1 - centerY];\n    \n    var a = d[0] * d[0] + d[1] * d[1];\n    var b = 2 * (f[0] * d[0] + f[1] * d[1]);\n    var c = (f[0] * f[0] + f[1] * f[1]) - radius * radius ;\n    \n    var discriminant = b*b-4*a*c;\n    \n    if (discriminant < 0) {\n      return [];\n    }\n    \n    var t1 = (-b + Math.sqrt(discriminant)) / (2 * a);\n    var t2 = (-b - Math.sqrt(discriminant)) / (2 * a);\n    \n    var tMin = Math.min(t1, t2);\n    var tMax = Math.max(t1, t2);\n    var inRangeParams = [];\n    \n    if (tMin >= 0 && tMin <= 1) {\n      inRangeParams.push(tMin);\n    }\n    \n    if (tMax >= 0 && tMax <= 1) {\n      inRangeParams.push(tMax);\n    }\n    \n    if (inRangeParams.length === 0) {\n      return [];\n    }\n    \n    var nearIntersectionX = inRangeParams[0] * d[0] + x1;\n    var nearIntersectionY = inRangeParams[0] * d[1] + y1;\n    \n    if (inRangeParams.length > 1) {\n    \n      if (inRangeParams[0] == inRangeParams[1]) {\n        return [nearIntersectionX, nearIntersectionY];\n      } else {\n        \n        var farIntersectionX = inRangeParams[1] * d[0] + x1;\n        var farIntersectionY = inRangeParams[1] * d[1] + y1;\n      \n        return [nearIntersectionX, nearIntersectionY, farIntersectionX, farIntersectionY];\n      }\n      \n    } else {\n      return [nearIntersectionX, nearIntersectionY];\n    }\n    \n  };\n  \n  $$.math.findCircleNearPoint = function(centerX, centerY, \n    radius, farX, farY) {\n    \n    var displacementX = farX - centerX;\n    var displacementY = farY - centerY;\n    var distance = Math.sqrt(displacementX * displacementX \n      + displacementY * displacementY);\n    \n    var unitDisplacementX = displacementX / distance;\n    var unitDisplacementY = displacementY / distance;\n    \n    return [centerX + unitDisplacementX * radius, \n      centerY + unitDisplacementY * radius];\n  };\n  \n  $$.math.findMaxSqDistanceToOrigin = function(points) {\n    var maxSqDistance = 0.000001;\n    var sqDistance;\n    \n    for (var i = 0; i < points.length / 2; i++) {\n      \n      sqDistance = points[i * 2] * points[i * 2] \n        + points[i * 2 + 1] * points[i * 2 + 1];\n      \n      if (sqDistance > maxSqDistance) {\n        maxSqDistance = sqDistance;\n      }\n    }\n    \n    return maxSqDistance;\n  };\n  \n  $$.math.finiteLinesIntersect = function(\n    x1, y1, x2, y2, x3, y3, x4, y4, infiniteLines) {\n    \n    var ua_t = (x4 - x3) * (y1 - y3) - (y4 - y3) * (x1 - x3);\n    var ub_t = (x2 - x1) * (y1 - y3) - (y2 - y1) * (x1 - x3);\n    var u_b = (y4 - y3) * (x2 - x1) - (x4 - x3) * (y2 - y1);\n\n    if (u_b !== 0) {\n      var ua = ua_t / u_b;\n      var ub = ub_t / u_b;\n      \n      if (0 <= ua && ua <= 1 && 0 <= ub && ub <= 1) {  \n        return [x1 + ua * (x2 - x1), y1 + ua * (y2 - y1)];\n        \n      } else {\n        if (!infiniteLines) {\n          return [];\n        } else {\n          return [x1 + ua * (x2 - x1), y1 + ua * (y2 - y1)];\n        }\n      }\n    } else {\n      if (ua_t === 0 || ub_t === 0) {\n\n        // Parallel, coincident lines. Check if overlap\n\n        // Check endpoint of second line\n        if ([x1, x2, x4].sort()[1] === x4) {\n          return [x4, y4];\n        }\n        \n        // Check start point of second line\n        if ([x1, x2, x3].sort()[1] === x3) {\n          return [x3, y3];\n        }\n        \n        // Endpoint of first line\n        if ([x3, x4, x2].sort()[1] === x2) {\n          return [x2, y2];\n        }\n        \n        return [];\n      } else {\n      \n        // Parallel, non-coincident\n        return [];\n      }\n    }\n  };\n  \n  // (boxMinX, boxMinY, boxMaxX, boxMaxY, padding,\n  //      cornerRadius * 2, cornerRadius * 2, vBoxTopLeftX + padding, hBoxTopLeftY + padding)) {\n  \n  $$.math.boxIntersectEllipse = function(\n    x1, y1, x2, y2, padding, width, height, centerX, centerY) {\n    \n    if (x2 < x1) {\n      var oldX1 = x1;\n      x1 = x2;\n      x2 = oldX1;\n    }\n    \n    if (y2 < y1) {\n      var oldY1 = y1;\n      y1 = y2;\n      y2 = oldY1;\n    }\n    \n    // 4 ortho extreme points\n    var west = [centerX - width / 2 - padding, centerY];\n    var east = [centerX + width / 2 + padding, centerY];\n    var north = [centerX, centerY - height / 2 - padding];\n    var south = [centerX, centerY + height / 2 + padding];\n    \n    // out of bounds: return false\n    if (x2 < west[0]) {\n      return false;\n    }\n    \n    if (x1 > east[0]) {\n      return false;\n    }\n    \n    if (y1 > south[1]) {\n      return false;\n    }\n    \n    if (y2 < north[1]) {\n      return false;\n    }\n    \n    // 1 of 4 ortho extreme points in box: return true\n    if (x1 <= east[0] && east[0] <= x2\n        && y1 <= east[1] && east[1] <= y2) {\n      return true;\n    }\n    \n    if (x1 <= west[0] && west[0] <= x2\n        && y1 <= west[1] && west[1] <= y2) {\n      return true;\n    }\n    \n    if (x1 <= north[0] && north[0] <= x2\n        && y1 <= north[1] && north[1] <= y2) {\n      return true;\n    }\n    \n    if (x1 <= south[0] && south[0] <= x2\n        && y1 <= south[1] && south[1] <= y2) {\n      return true;\n    }\n    \n    // box corner in ellipse: return true    \n    x1 = (x1 - centerX) / (width / 2 + padding);\n    x2 = (x2 - centerX) / (width / 2 + padding);\n    \n    y1 = (y1 - centerY) / (height / 2 + padding);\n    y2 = (y2 - centerY) / (height / 2 + padding);\n    \n    if (x1 * x1 + y1 * y1 <= 1) {\n      return true;\n    }\n    \n    if (x2 * x2 + y1 * y1 <= 1) {\n      return true;\n    }\n    \n    if (x2 * x2 + y2 * y2 <= 1) {\n      return true;\n    }\n    \n    if (x1 * x1 + y2 * y2 <= 1) {\n      return true;\n    }\n    \n    return false;\n  };\n  \n  $$.math.boxIntersectPolygon = function(\n    x1, y1, x2, y2, basePoints, width, height, centerX, centerY, direction, padding) {\n    \n//    console.log(arguments);\n    \n    if (x2 < x1) {\n      var oldX1 = x1;\n      x1 = x2;\n      x2 = oldX1;\n    }\n    \n    if (y2 < y1) {\n      var oldY1 = y1;\n      y1 = y2;\n      y2 = oldY1;\n    }\n    \n    var transformedPoints = new Array(basePoints.length);\n    \n    // Gives negative of angle\n    var angle = Math.asin(direction[1] / (Math.sqrt(direction[0] * direction[0] \n      + direction[1] * direction[1])));\n    \n    if (direction[0] < 0) {\n      angle = angle + Math.PI / 2;\n    } else {\n      angle = -angle - Math.PI / 2;\n    }\n    \n    var cos = Math.cos(-angle);\n    var sin = Math.sin(-angle);\n    \n    for (var i = 0; i < transformedPoints.length / 2; i++) {\n      transformedPoints[i * 2] = \n        width / 2 * (basePoints[i * 2] * cos\n          - basePoints[i * 2 + 1] * sin);\n      \n      transformedPoints[i * 2 + 1] = \n        height / 2 * (basePoints[i * 2 + 1] * cos \n          + basePoints[i * 2] * sin);\n      \n      transformedPoints[i * 2] += centerX;\n      transformedPoints[i * 2 + 1] += centerY;\n    }\n    \n    // Assume transformedPoints.length > 0, and check if intersection is possible\n    var minTransformedX = transformedPoints[0];\n    var maxTransformedX = transformedPoints[0];\n    var minTransformedY = transformedPoints[1];\n    var maxTransformedY = transformedPoints[1];\n    \n    for (var i = 1; i < transformedPoints.length / 2; i++) {\n      if (transformedPoints[i * 2] > maxTransformedX) {\n        maxTransformedX = transformedPoints[i * 2];\n      }\n      \n      if (transformedPoints[i * 2] < minTransformedX) {\n        minTransformedX = transformedPoints[i * 2];\n      }\n      \n      if (transformedPoints[i * 2 + 1] > maxTransformedY) {\n        maxTransformedY = transformedPoints[i * 2 + 1];\n      }\n      \n      if (transformedPoints[i * 2 + 1] < minTransformedY) {\n        minTransformedY = transformedPoints[i * 2 + 1];\n      }\n    }\n    \n    if (x2 < minTransformedX - padding) {\n      return false;\n    }\n    \n    if (x1 > maxTransformedX + padding) {\n      return false;\n    }\n    \n    if (y2 < minTransformedY - padding) {\n      return false;\n    }\n    \n    if (y1 > maxTransformedY + padding) {\n      return false;\n    }\n    \n    // Continue checking with padding-corrected points\n    var points;\n    \n    if (padding > 0) {\n      var expandedLineSet = $$.math.expandPolygon(\n        transformedPoints,\n        -padding);\n      \n      points = $$.math.joinLines(expandedLineSet);\n    } else {\n      points = transformedPoints;\n    }\n    \n    // Check if a point is in box\n    for (var i = 0; i < transformedPoints.length / 2; i++) {\n      if (x1 <= transformedPoints[i * 2]\n          && transformedPoints[i * 2] <= x2) {\n        \n        if (y1 <= transformedPoints[i * 2 + 1]\n            && transformedPoints[i * 2 + 1] <= y2) {\n          \n          return true;\n        }\n      }\n    }\n    \n    \n    // Check for intersections with the selection box\n    for (var i = 0; i < points.length / 2; i++) {\n      \n      var currentX = points[i * 2];\n      var currentY = points[i * 2 + 1];\n      var nextX;\n      var nextY;\n      \n      if (i < points.length / 2 - 1) {\n        nextX = points[(i + 1) * 2];\n        nextY = points[(i + 1) * 2 + 1];\n      } else {\n        nextX = points[0];\n        nextY = points[1];\n      }\n      \n      // Intersection with top of selection box\n      if ($$.math.finiteLinesIntersect(currentX, currentY, nextX, nextY, x1, y1, x2, y1, false).length > 0) {\n        return true;\n      }\n      \n      // Intersection with bottom of selection box\n      if ($$.math.finiteLinesIntersect(currentX, currentY, nextX, nextY, x1, y2, x2, y2, false).length > 0) {\n        return true;\n      }\n      \n      // Intersection with left side of selection box\n      if ($$.math.finiteLinesIntersect(currentX, currentY, nextX, nextY, x1, y1, x1, y2, false).length > 0) {\n        return true;\n      }\n      \n      // Intersection with right side of selection box\n      if ($$.math.finiteLinesIntersect(currentX, currentY, nextX, nextY, x2, y1, x2, y2, false).length > 0) {\n        return true;\n      }\n    }\n\n    /*\n    // Check if box corner in the polygon\n    if ($$.math.pointInsidePolygon(\n      x1, y1, points, 0, 0, 1, 1, 0, direction)) {\n      \n      return true;\n    } else if ($$.math.pointInsidePolygon(\n      x1, y2, points, 0, 0, 1, 1, 0, direction)) {\n      \n      return true;\n    } else if ($$.math.pointInsidePolygon(\n      x2, y2, points, 0, 0, 1, 1, 0, direction)) {\n       \n      return true; \n    } else if ($$.math.pointInsidePolygon(\n      x2, y1, points, 0, 0, 1, 1, 0, direction)) {\n      \n      return true;\n    }\n    */\n    return false;\n  };\n  \n  $$.math.polygonIntersectLine = function(\n    x, y, basePoints, centerX, centerY, width, height, padding) {\n    \n    var intersections = [];\n    var intersection;\n    \n    var transformedPoints = new Array(basePoints.length);\n    \n    for (var i = 0; i < transformedPoints.length / 2; i++) {\n      transformedPoints[i * 2] = basePoints[i * 2] * width + centerX;\n      transformedPoints[i * 2 + 1] = basePoints[i * 2 + 1] * height + centerY;\n    }\n    \n    var points;\n    \n    if (padding > 0) {\n      var expandedLineSet = $$.math.expandPolygon(\n        transformedPoints,\n        -padding);\n      \n      points = $$.math.joinLines(expandedLineSet);\n    } else {\n      points = transformedPoints;\n    }\n    // var points = transformedPoints;\n    \n    var currentX, currentY, nextX, nextY;\n    \n    for (var i = 0; i < points.length / 2; i++) {\n    \n      currentX = points[i * 2];\n      currentY = points[i * 2 + 1];\n\n      if (i < points.length / 2 - 1) {\n        nextX = points[(i + 1) * 2]; \n        nextY = points[(i + 1) * 2 + 1];\n      } else {\n        nextX = points[0]; \n        nextY = points[1];\n      }\n      \n      intersection = this.finiteLinesIntersect(\n        x, y, centerX, centerY,\n        currentX, currentY,\n        nextX, nextY);\n      \n      if (intersection.length !== 0) {\n        intersections.push(intersection[0], intersection[1]);\n      }\n    }\n    \n    return intersections;\n  };\n  \n  $$.math.shortenIntersection = function(\n    intersection, offset, amount) {\n    \n    var disp = [intersection[0] - offset[0], intersection[1] - offset[1]];\n    \n    var length = Math.sqrt(disp[0] * disp[0] + disp[1] * disp[1]);\n    \n    var lenRatio = (length - amount) / length;\n    \n    if (lenRatio < 0) {\n      lenRatio = 0.00001;\n    }\n\n    return [offset[0] + lenRatio * disp[0], offset[1] + lenRatio * disp[1]];\n  };\n\n  $$.math.generateUnitNgonPointsFitToSquare = function(sides, rotationRadians) {\n    var points = $$.math.generateUnitNgonPoints(sides, rotationRadians);\n    points = $$.math.fitPolygonToSquare(points);\n\n    return points;\n  };\n\n  $$.math.fitPolygonToSquare = function(points){\n    var x, y;\n    var sides = points.length/2;\n    var minX = Infinity, minY = Infinity, maxX = -Infinity, maxY = -Infinity;\n\n    for (var i = 0; i < sides; i++) {\n      x = points[2 * i];\n      y = points[2 * i + 1];\n\n      minX = Math.min( minX, x );\n      maxX = Math.max( maxX, x );\n      minY = Math.min( minY, y );\n      maxY = Math.max( maxY, y );\n    }\n    \n    // stretch factors\n    var sx = 2 / (maxX - minX);\n    var sy = 2 / (maxY - minY);\n\n    for (var i = 0; i < sides; i++){\n      x = points[2 * i] = points[2 * i] * sx;\n      y = points[2 * i + 1] = points[2 * i + 1] * sy;\n\n      minX = Math.min( minX, x );\n      maxX = Math.max( maxX, x );\n      minY = Math.min( minY, y );\n      maxY = Math.max( maxY, y );\n    }\n\n    if( minY < -1 ){\n      for (var i = 0; i < sides; i++){\n        y = points[2 * i + 1] = points[2 * i + 1] + (-1 -minY);\n      }\n    }\n    \n    return points;\n  };\n\n  $$.math.generateUnitNgonPoints = function(sides, rotationRadians) {\n    \n    var increment = 1.0 / sides * 2 * Math.PI;\n    var startAngle = sides % 2 === 0 ? \n      Math.PI / 2.0 + increment / 2.0 : Math.PI / 2.0;\n//    console.log(nodeShapes['square']);\n    startAngle += rotationRadians;\n    \n    var points = new Array(sides * 2);\n\n    var currentAngle, x, y;\n    for (var i = 0; i < sides; i++) {\n      currentAngle = i * increment + startAngle;\n      \n      x = points[2 * i] = Math.cos(currentAngle);// * (1 + i/2);\n      y = points[2 * i + 1] = Math.sin(-currentAngle);//  * (1 + i/2);\n    }\n    \n    return points;\n  };\n\n  $$.math.getRoundRectangleRadius = function(width, height) {\n    \n    // Set the default radius, unless half of width or height is smaller than default\n    return Math.min(width / 4, height / 4, 8);\n  };\n  \n})( cytoscape );\n\n;(function($$){ 'use strict';\n  \n  // registered extensions to cytoscape, indexed by name\n  var extensions = {};\n  $$.extensions = extensions;\n  \n  // registered modules for extensions, indexed by name\n  var modules = {};\n  $$.modules = modules;\n  \n  function setExtension(type, name, registrant){\n    var impl = {};\n    impl[name] = registrant;\n    \n    switch( type ){\n    case 'core':\n    case 'collection':\n      $$.fn[type]( impl );\n    }\n    \n    // fill in missing layout functions in the prototype\n    if( type === 'layout' ){\n      var layoutProto = registrant.prototype;\n      var optLayoutFns = [];\n\n      for( var i = 0; i < optLayoutFns.length; i++ ){\n        var fnName = optLayoutFns[i];\n\n        layoutProto[fnName] = layoutProto[fnName] || function(){ return this; };\n      }\n\n      // either .start() or .run() is defined, so autogen the other\n      if( layoutProto.start && !layoutProto.run ){\n        layoutProto.run = function(){ this.start(); return this; };\n      } else if( !layoutProto.start && layoutProto.run ){\n        layoutProto.start = function(){ this.run(); return this; };\n      }\n      \n      if( !layoutProto.stop ){\n        layoutProto.stop = function(){\n          var opts = this.options;\n          \n          if( opts && opts.animate ){\n            opts.eles.stop();\n          }\n          \n          return this;\n        };\n      }\n\n      layoutProto.on = $$.define.on({ layout: true });\n      layoutProto.one = $$.define.on({ layout: true, unbindSelfOnTrigger: true });\n      layoutProto.once = $$.define.on({ layout: true, unbindAllBindersOnTrigger: true });\n      layoutProto.off = $$.define.off({ layout: true });\n      layoutProto.trigger = $$.define.trigger({ layout: true });\n\n      $$.define.eventAliasesOn( layoutProto );\n    }\n\n    return $$.util.setMap({\n      map: extensions,\n      keys: [ type, name ],\n      value: registrant\n    });\n  }\n  \n  function getExtension(type, name){\n    return $$.util.getMap({\n      map: extensions,\n      keys: [ type, name ]\n    });\n  }\n  \n  function setModule(type, name, moduleType, moduleName, registrant){\n    return $$.util.setMap({\n      map: modules,\n      keys: [ type, name, moduleType, moduleName ],\n      value: registrant\n    });\n  }\n  \n  function getModule(type, name, moduleType, moduleName){\n    return $$.util.getMap({\n      map: modules,\n      keys: [ type, name, moduleType, moduleName ]\n    });\n  }\n  \n  $$.extension = function(){\n    // e.g. $$.extension('renderer', 'svg')\n    if( arguments.length == 2 ){\n      return getExtension.apply(this, arguments);\n    }\n    \n    // e.g. $$.extension('renderer', 'svg', { ... })\n    else if( arguments.length == 3 ){\n      return setExtension.apply(this, arguments);\n    }\n    \n    // e.g. $$.extension('renderer', 'svg', 'nodeShape', 'ellipse')\n    else if( arguments.length == 4 ){\n      return getModule.apply(this, arguments);\n    }\n    \n    // e.g. $$.extension('renderer', 'svg', 'nodeShape', 'ellipse', { ... })\n    else if( arguments.length == 5 ){\n      return setModule.apply(this, arguments);\n    }\n    \n    else {\n      $$.util.error('Invalid extension access syntax');\n    }\n  \n  };\n  \n})( cytoscape );\n\n;(function($, $$){ 'use strict';\n  \n  if( !$ ){ return; } // no jquery => don't need this\n\n  var cyReg = function( $ele ){\n    var d = $ele[0]._cyreg = $ele[0]._cyreg || {};\n\n    return d;\n  };\n\n  // allow calls on a jQuery selector by proxying calls to $.cytoscape\n  // e.g. $(\"#foo\").cytoscape(options) => $.cytoscape(options) on #foo\n  $.fn.cytoscape = function(opts){\n    var $this = $(this);\n\n    // get object\n    if( opts === 'get' ){\n      return cyReg( $this ).cy;\n    }\n    \n    // bind to ready\n    else if( $$.is.fn(opts) ){\n\n      var ready = opts;\n      var cy = cyReg( $this ).cy;\n      \n      if( cy && cy.isReady() ){ // already ready so just trigger now\n        cy.trigger('ready', [], ready);\n\n      } else { // not yet ready, so add to readies list\n        var data = cyReg( $this );\n        var readies = data.readies = data.readies || [];\n\n        readies.push( ready );\n      } \n      \n    }\n    \n    // proxy to create instance\n    else if( $$.is.plainObject(opts) ){\n      return $this.each(function(){\n        var options = $.extend({}, opts, {\n          container: $(this)[0]\n        });\n      \n        cytoscape(options);\n      });\n    }\n  };\n  \n  // allow access to the global cytoscape object under jquery for legacy reasons\n  $.cytoscape = cytoscape;\n  \n  // use short alias (cy) if not already defined\n  if( $.fn.cy == null && $.cy == null ){\n    $.fn.cy = $.fn.cytoscape;\n    $.cy = $.cytoscape;\n  }\n  \n})(typeof jQuery !== 'undefined' ? jQuery : null , cytoscape);\n\n;(function($$){ 'use strict';\n  \n  // shamelessly taken from jQuery\n  // https://github.com/jquery/jquery/blob/master/src/event.js\n\n  $$.Event = function( src, props ) {\n    // Allow instantiation without the 'new' keyword\n    if ( !(this instanceof $$.Event) ) {\n      return new $$.Event( src, props );\n    }\n\n    // Event object\n    if ( src && src.type ) {\n      this.originalEvent = src;\n      this.type = src.type;\n\n      // Events bubbling up the document may have been marked as prevented\n      // by a handler lower down the tree; reflect the correct value.\n      this.isDefaultPrevented = ( src.defaultPrevented ) ? returnTrue : returnFalse;\n\n    // Event type\n    } else {\n      this.type = src;\n    }\n\n    // Put explicitly provided properties onto the event object\n    if ( props ) {\n      // $$.util.extend( this, props );\n\n      // more efficient to manually copy fields we use\n      this.type = props.type !== undefined ? props.type : this.type;\n      this.cy = props.cy;\n      this.cyTarget = props.cyTarget;\n      this.cyPosition = props.cyPosition;\n      this.cyRenderedPosition = props.cyRenderedPosition;\n      this.namespace = props.namespace;\n      this.layout = props.layout;\n      this.data = props.data;\n      this.message = props.message;\n    }\n\n    // Create a timestamp if incoming event doesn't have one\n    this.timeStamp = src && src.timeStamp || +new Date();\n  };\n\n  function returnFalse() {\n    return false;\n  }\n  function returnTrue() {\n    return true;\n  }\n\n  // jQuery.Event is based on DOM3 Events as specified by the ECMAScript Language Binding\n  // http://www.w3.org/TR/2003/WD-DOM-Level-3-Events-20030331/ecma-script-binding.html\n  $$.Event.prototype = {\n    preventDefault: function() {\n      this.isDefaultPrevented = returnTrue;\n\n      var e = this.originalEvent;\n      if ( !e ) {\n        return;\n      }\n\n      // if preventDefault exists run it on the original event\n      if ( e.preventDefault ) {\n        e.preventDefault();\n      }\n    },\n    stopPropagation: function() {\n      this.isPropagationStopped = returnTrue;\n\n      var e = this.originalEvent;\n      if ( !e ) {\n        return;\n      }\n      // if stopPropagation exists run it on the original event\n      if ( e.stopPropagation ) {\n        e.stopPropagation();\n      }\n    },\n    stopImmediatePropagation: function() {\n      this.isImmediatePropagationStopped = returnTrue;\n      this.stopPropagation();\n    },\n    isDefaultPrevented: returnFalse,\n    isPropagationStopped: returnFalse,\n    isImmediatePropagationStopped: returnFalse\n  };\n  \n  \n})( cytoscape );\n\n;(function($$){ 'use strict';\n\n  // use this module to cherry pick functions into your prototype\n  // (useful for functions shared between the core and collections, for example)\n\n  // e.g.\n  // $$.fn.collection({\n  //   foo: $$.define.foo({ /* params... */ })\n  // });\n\n  $$.define = {\n\n    // access data field\n    data: function( params ){\n      var defaults = { \n        field: 'data',\n        bindingEvent: 'data',\n        allowBinding: false,\n        allowSetting: false,\n        allowGetting: false,\n        settingEvent: 'data',\n        settingTriggersEvent: false,\n        triggerFnName: 'trigger',\n        immutableKeys: {}, // key => true if immutable\n        updateStyle: false,\n        onSet: function( self ){},\n        canSet: function( self ){ return true; }\n      };\n      params = $$.util.extend({}, defaults, params);\n\n      return function dataImpl( name, value ){\n        var p = params;\n        var self = this;\n        var selfIsArrayLike = self.length !== undefined;\n        var all = selfIsArrayLike ? self : [self]; // put in array if not array-like\n        var single = selfIsArrayLike ? self[0] : self;\n\n        // .data('foo', ...)\n        if( $$.is.string(name) ){ // set or get property\n\n          // .data('foo')\n          if( p.allowGetting && value === undefined ){ // get\n\n            var ret;\n            if( single ){\n              ret = single._private[ p.field ][ name ];\n            }\n            return ret;\n          \n          // .data('foo', 'bar')\n          } else if( p.allowSetting && value !== undefined ) { // set\n            var valid = !p.immutableKeys[name];\n            if( valid ){\n              for( var i = 0, l = all.length; i < l; i++ ){\n                if( p.canSet( all[i] ) ){\n                  all[i]._private[ p.field ][ name ] = value;\n                }\n              }\n\n              // update mappers if asked\n              if( p.updateStyle ){ self.updateStyle(); }\n\n              // call onSet callback\n              p.onSet( self );\n\n              if( p.settingTriggersEvent ){\n                self[ p.triggerFnName ]( p.settingEvent );\n              }\n            }\n          }\n\n        // .data({ 'foo': 'bar' })\n        } else if( p.allowSetting && $$.is.plainObject(name) ){ // extend\n          var obj = name;\n          var k, v;\n\n          for( k in obj ){\n            v = obj[ k ];\n\n            var valid = !p.immutableKeys[k];\n            if( valid ){\n              for( var i = 0, l = all.length; i < l; i++ ){\n                if( p.canSet( all[i] ) ){\n                  all[i]._private[ p.field ][ k ] = v;\n                }\n              }\n            }\n          }\n          \n          // update mappers if asked\n          if( p.updateStyle ){ self.updateStyle(); }\n\n          // call onSet callback\n          p.onSet( self );\n\n          if( p.settingTriggersEvent ){\n            self[ p.triggerFnName ]( p.settingEvent );\n          }\n        \n        // .data(function(){ ... })\n        } else if( p.allowBinding && $$.is.fn(name) ){ // bind to event\n          var fn = name;\n          self.bind( p.bindingEvent, fn );\n        \n        // .data()\n        } else if( p.allowGetting && name === undefined ){ // get whole object\n          var ret;\n          if( single ){\n            ret = single._private[ p.field ];\n          }\n          return ret;\n        }\n\n        return self; // maintain chainability\n      }; // function\n    }, // data\n\n    // remove data field\n    removeData: function( params ){\n      var defaults = { \n        field: 'data',\n        event: 'data',\n        triggerFnName: 'trigger',\n        triggerEvent: false,\n        immutableKeys: {} // key => true if immutable\n      };\n      params = $$.util.extend({}, defaults, params);\n\n      return function removeDataImpl( names ){\n        var p = params;\n        var self = this;\n        var selfIsArrayLike = self.length !== undefined;\n        var all = selfIsArrayLike ? self : [self]; // put in array if not array-like\n        \n        // .removeData('foo bar')\n        if( $$.is.string(names) ){ // then get the list of keys, and delete them\n          var keys = names.split(/\\s+/);\n          var l = keys.length;\n\n          for( var i = 0; i < l; i++ ){ // delete each non-empty key\n            var key = keys[i];\n            if( $$.is.emptyString(key) ){ continue; }\n\n            var valid = !p.immutableKeys[ key ]; // not valid if immutable\n            if( valid ){\n              for( var i_a = 0, l_a = all.length; i_a < l_a; i_a++ ){\n                all[ i_a ]._private[ p.field ][ key ] = undefined;\n              }\n            }\n          }\n\n          if( p.triggerEvent ){\n            self[ p.triggerFnName ]( p.event );\n          }\n\n        // .removeData()\n        } else if( names === undefined ){ // then delete all keys\n\n          for( var i_a = 0, l_a = all.length; i_a < l_a; i_a++ ){\n            var _privateFields = all[ i_a ]._private[ p.field ];\n            \n            for( var key in _privateFields ){\n              var validKeyToDelete = !p.immutableKeys[ key ];\n\n              if( validKeyToDelete ){\n                _privateFields[ key ] = undefined;\n              }\n            }\n          }\n\n          if( p.triggerEvent ){\n            self[ p.triggerFnName ]( p.event );\n          }\n        }\n\n        return self; // maintain chaining\n      }; // function\n    }, // removeData\n\n    // event function reusable stuff\n    event: {\n      regex: /(\\w+)(\\.\\w+)?/, // regex for matching event strings (e.g. \"click.namespace\")\n      optionalTypeRegex: /(\\w+)?(\\.\\w+)?/,\n      falseCallback: function(){ return false; }\n    },\n\n    // event binding\n    on: function( params ){\n      var defaults = {\n        unbindSelfOnTrigger: false,\n        unbindAllBindersOnTrigger: false\n      };\n      params = $$.util.extend({}, defaults, params);\n      \n      return function onImpl(events, selector, data, callback){\n        var self = this;\n        var selfIsArrayLike = self.length !== undefined;\n        var all = selfIsArrayLike ? self : [self]; // put in array if not array-like\n        var eventsIsString = $$.is.string(events);\n        var p = params;\n\n        if( $$.is.plainObject(selector) ){ // selector is actually data\n          callback = data;\n          data = selector;\n          selector = undefined;\n        } else if( $$.is.fn(selector) || selector === false ){ // selector is actually callback\n          callback = selector;\n          data = undefined;\n          selector = undefined;\n        }\n\n        if( $$.is.fn(data) || data === false ){ // data is actually callback\n          callback = data;\n          data = undefined;\n        }\n\n        // if there isn't a callback, we can't really do anything\n        // (can't speak for mapped events arg version)\n        if( !($$.is.fn(callback) || callback === false) && eventsIsString ){\n          return self; // maintain chaining\n        }\n\n        if( eventsIsString ){ // then convert to map\n          var map = {};\n          map[ events ] = callback;\n          events = map;\n        }\n\n        for( var evts in events ){\n          callback = events[evts];\n          if( callback === false ){\n            callback = $$.define.event.falseCallback;\n          }\n\n          if( !$$.is.fn(callback) ){ continue; }\n\n          evts = evts.split(/\\s+/);\n          for( var i = 0; i < evts.length; i++ ){\n            var evt = evts[i];\n            if( $$.is.emptyString(evt) ){ continue; }\n\n            var match = evt.match( $$.define.event.regex ); // type[.namespace]\n\n            if( match ){\n              var type = match[1];\n              var namespace = match[2] ? match[2] : undefined;\n\n              var listener = {\n                callback: callback, // callback to run\n                data: data, // extra data in eventObj.data\n                delegated: selector ? true : false, // whether the evt is delegated\n                selector: selector, // the selector to match for delegated events\n                selObj: new $$.Selector(selector), // cached selector object to save rebuilding\n                type: type, // the event type (e.g. 'click')\n                namespace: namespace, // the event namespace (e.g. \".foo\")\n                unbindSelfOnTrigger: p.unbindSelfOnTrigger,\n                unbindAllBindersOnTrigger: p.unbindAllBindersOnTrigger,\n                binders: all // who bound together\n              };\n\n              for( var j = 0; j < all.length; j++ ){\n                var _p = all[j]._private;\n\n                _p.listeners = _p.listeners || [];\n                _p.listeners.push( listener );\n              }\n            }\n          } // for events array\n        } // for events map\n        \n        return self; // maintain chaining\n      }; // function\n    }, // on\n\n    eventAliasesOn: function( proto ){\n      var p = proto;\n\n      p.addListener = p.listen = p.bind = p.on;\n      p.removeListener = p.unlisten = p.unbind = p.off;\n      p.emit = p.trigger;\n\n      // this is just a wrapper alias of .on()\n      p.pon = p.promiseOn = function( events, selector ){\n        var self = this;\n        var args = Array.prototype.slice.call( arguments, 0 );\n\n        return new $$.Promise(function( resolve, reject ){\n          var callback = function( e ){\n            self.off.apply( self, offArgs );\n\n            resolve( e );\n          };\n\n          var onArgs = args.concat([ callback ]);\n          var offArgs = onArgs.concat([]);\n\n          self.on.apply( self, onArgs );\n        });\n      };\n    },\n\n    off: function offImpl( params ){\n      var defaults = {\n      };\n      params = $$.util.extend({}, defaults, params);\n      \n      return function(events, selector, callback){\n        var self = this;\n        var selfIsArrayLike = self.length !== undefined;\n        var all = selfIsArrayLike ? self : [self]; // put in array if not array-like\n        var eventsIsString = $$.is.string(events);\n\n        if( arguments.length === 0 ){ // then unbind all\n\n          for( var i = 0; i < all.length; i++ ){\n            all[i]._private.listeners = [];\n          }\n\n          return self; // maintain chaining\n        }\n\n        if( $$.is.fn(selector) || selector === false ){ // selector is actually callback\n          callback = selector;\n          selector = undefined;\n        }\n\n        if( eventsIsString ){ // then convert to map\n          var map = {};\n          map[ events ] = callback;\n          events = map;\n        }\n\n        for( var evts in events ){\n          callback = events[evts];\n\n          if( callback === false ){\n            callback = $$.define.event.falseCallback;\n          }\n\n          evts = evts.split(/\\s+/);\n          for( var h = 0; h < evts.length; h++ ){\n            var evt = evts[h];\n            if( $$.is.emptyString(evt) ){ continue; }\n\n            var match = evt.match( $$.define.event.optionalTypeRegex ); // [type][.namespace]\n            if( match ){\n              var type = match[1] ? match[1] : undefined;\n              var namespace = match[2] ? match[2] : undefined;\n\n              for( var i = 0; i < all.length; i++ ){ //\n                var listeners = all[i]._private.listeners = all[i]._private.listeners || [];\n\n                for( var j = 0; j < listeners.length; j++ ){\n                  var listener = listeners[j];\n                  var nsMatches = !namespace || namespace === listener.namespace;\n                  var typeMatches = !type || listener.type === type;\n                  var cbMatches = !callback || callback === listener.callback;\n                  var listenerMatches = nsMatches && typeMatches && cbMatches;\n\n                  // delete listener if it matches\n                  if( listenerMatches ){\n                    listeners.splice(j, 1);\n                    j--;\n                  }\n                } // for listeners\n              } // for all\n            } // if match\n          } // for events array\n\n        } // for events map\n        \n        return self; // maintain chaining\n      }; // function\n    }, // off\n\n    trigger: function( params ){\n      var defaults = {};\n      params = $$.util.extend({}, defaults, params);\n      \n      return function triggerImpl(events, extraParams, fnToTrigger){\n        var self = this;\n        var selfIsArrayLike = self.length !== undefined;\n        var all = selfIsArrayLike ? self : [self]; // put in array if not array-like\n        var eventsIsString = $$.is.string(events);\n        var eventsIsObject = $$.is.plainObject(events);\n        var eventsIsEvent = $$.is.event(events);\n        var cy = this._private.cy || ( $$.is.core(this) ? this : null );\n        var hasCompounds = cy ? cy.hasCompoundNodes() : false;\n\n        if( eventsIsString ){ // then make a plain event object for each event name\n          var evts = events.split(/\\s+/);\n          events = [];\n\n          for( var i = 0; i < evts.length; i++ ){\n            var evt = evts[i];\n            if( $$.is.emptyString(evt) ){ continue; }\n\n            var match = evt.match( $$.define.event.regex ); // type[.namespace]\n            var type = match[1];\n            var namespace = match[2] ? match[2] : undefined;\n\n            events.push( {\n              type: type,\n              namespace: namespace\n            } );\n          }\n        } else if( eventsIsObject ){ // put in length 1 array\n          var eventArgObj = events;\n\n          events = [ eventArgObj ];\n        }\n\n        if( extraParams ){\n          if( !$$.is.array(extraParams) ){ // make sure extra params are in an array if specified\n            extraParams = [ extraParams ];\n          }\n        } else { // otherwise, we've got nothing\n          extraParams = [];\n        }\n\n        for( var i = 0; i < events.length; i++ ){ // trigger each event in order\n          var evtObj = events[i];\n          \n          for( var j = 0; j < all.length; j++ ){ // for each\n            var triggerer = all[j];\n            var listeners = triggerer._private.listeners = triggerer._private.listeners || [];\n            var triggererIsElement = $$.is.element(triggerer);\n            var bubbleUp = triggererIsElement || params.layout;\n\n            // create the event for this element from the event object\n            var evt;\n\n            if( eventsIsEvent ){ // then just get the object\n              evt = evtObj;\n              \n              evt.cyTarget = evt.cyTarget || triggerer;\n              evt.cy = evt.cy || cy;\n\n            } else { // then we have to make one\n              evt = new $$.Event( evtObj, {\n                cyTarget: triggerer,\n                cy: cy,\n                namespace: evtObj.namespace\n              } );\n            }\n\n            // if a layout was specified, then put it in the typed event\n            if( evtObj.layout ){\n              evt.layout = evtObj.layout;\n            }\n\n            // if triggered by layout, put in event\n            if( params.layout ){\n              evt.layout = triggerer;\n            }\n\n            // create a rendered position based on the passed position\n            if( evt.cyPosition ){\n              var pos = evt.cyPosition;\n              var zoom = cy.zoom();\n              var pan = cy.pan();\n\n              evt.cyRenderedPosition = {\n                x: pos.x * zoom + pan.x,\n                y: pos.y * zoom + pan.y\n              };\n            }\n\n            if( fnToTrigger ){ // then override the listeners list with just the one we specified\n              listeners = [{\n                namespace: evt.namespace,\n                type: evt.type,\n                callback: fnToTrigger\n              }];\n            }\n\n            for( var k = 0; k < listeners.length; k++ ){ // check each listener\n              var lis = listeners[k];\n              var nsMatches = !lis.namespace || lis.namespace === evt.namespace;\n              var typeMatches = lis.type === evt.type;\n              var targetMatches = lis.delegated ? ( triggerer !== evt.cyTarget && $$.is.element(evt.cyTarget) && lis.selObj.matches(evt.cyTarget) ) : (true); // we're not going to validate the hierarchy; that's too expensive\n              var listenerMatches = nsMatches && typeMatches && targetMatches;\n\n              if( listenerMatches ){ // then trigger it\n                var args = [ evt ];\n                args = args.concat( extraParams ); // add extra params to args list\n\n                if( lis.data ){ // add on data plugged into binding\n                  evt.data = lis.data;\n                } else { // or clear it in case the event obj is reused\n                  evt.data = undefined;\n                }\n\n                if( lis.unbindSelfOnTrigger || lis.unbindAllBindersOnTrigger ){ // then remove listener\n                  listeners.splice(k, 1);\n                  k--;\n                }\n\n                if( lis.unbindAllBindersOnTrigger ){ // then delete the listener for all binders\n                  var binders = lis.binders;\n                  for( var l = 0; l < binders.length; l++ ){\n                    var binder = binders[l];\n                    if( !binder || binder === triggerer ){ continue; } // already handled triggerer or we can't handle it\n\n                    var binderListeners = binder._private.listeners;\n                    for( var m = 0; m < binderListeners.length; m++ ){\n                      var binderListener = binderListeners[m];\n\n                      if( binderListener === lis ){ // delete listener from list\n                        binderListeners.splice(m, 1);\n                        m--;\n                      }\n                    }\n                  }\n                }\n\n                // run the callback\n                var context = lis.delegated ? evt.cyTarget : triggerer;\n                var ret = lis.callback.apply( context, args );\n\n                if( ret === false || evt.isPropagationStopped() ){\n                  // then don't bubble\n                  bubbleUp = false;\n\n                  if( ret === false ){\n                    // returning false is a shorthand for stopping propagation and preventing the def. action\n                    evt.stopPropagation();\n                    evt.preventDefault();\n                  }\n                }\n              } // if listener matches\n            } // for each listener\n\n            // bubble up event for elements\n            if( bubbleUp ){\n              var parent = hasCompounds ? triggerer._private.parent : null;\n              var hasParent = parent != null && parent.length !== 0;\n\n              if( hasParent ){ // then bubble up to parent\n                parent = parent[0];\n                parent.trigger(evt);\n              } else { // otherwise, bubble up to the core\n                cy.trigger(evt);\n              }\n            }\n\n          } // for each of all\n        } // for each event\n        \n        return self; // maintain chaining\n      }; // function\n    }, // trigger\n\n\n    animated: function( fnParams ){\n      var defaults = {};\n      fnParams = $$.util.extend({}, defaults, fnParams);\n\n      return function animatedImpl(){\n        var self = this;\n        var selfIsArrayLike = self.length !== undefined;\n        var all = selfIsArrayLike ? self : [self]; // put in array if not array-like\n        var cy = this._private.cy || this;\n\n        if( !cy.styleEnabled() ){ return false; }\n\n        var ele = all[0];\n\n        if( ele ){\n          return ele._private.animation.current.length > 0;\n        }\n      };\n    }, // animated\n\n    clearQueue: function( fnParams ){\n      var defaults = {};\n      fnParams = $$.util.extend({}, defaults, fnParams);\n\n      return function clearQueueImpl(){\n        var self = this;\n        var selfIsArrayLike = self.length !== undefined;\n        var all = selfIsArrayLike ? self : [self]; // put in array if not array-like\n        var cy = this._private.cy || this;\n\n        if( !cy.styleEnabled() ){ return this; }\n\n        for( var i = 0; i < all.length; i++ ){\n          var ele = all[i];\n          ele._private.animation.queue = [];\n        }\n\n        return this;\n      };\n    }, // clearQueue\n\n    delay: function( fnParams ){\n      var defaults = {};\n      fnParams = $$.util.extend({}, defaults, fnParams);\n\n      return function delayImpl( time, complete ){\n        var cy = this._private.cy || this;\n\n        if( !cy.styleEnabled() ){ return this; }\n\n        this.animate({\n          delay: time\n        }, {\n          duration: time,\n          complete: complete\n        });\n\n        return this;\n      };\n    }, // delay\n\n    animate: function( fnParams ){\n      var defaults = {};\n      fnParams = $$.util.extend({}, defaults, fnParams);\n\n      return function animateImpl( properties, params ){\n        var self = this;\n        var selfIsArrayLike = self.length !== undefined;\n        var all = selfIsArrayLike ? self : [self]; // put in array if not array-like\n        var cy = this._private.cy || this;\n        var isCore = !selfIsArrayLike;\n        var isEles = !isCore;\n\n        if( !cy.styleEnabled() ){ return this; }\n\n        var callTime = +new Date();\n        var style = cy.style();\n        var q;\n        \n        if( params === undefined ){\n          params = {};\n        }\n\n        if( params.duration === undefined ){\n          params.duration = 400;\n        }\n        \n        switch( params.duration ){\n        case 'slow':\n          params.duration = 600;\n          break;\n        case 'fast':\n          params.duration = 200;\n          break;\n        }\n        \n        var propertiesEmpty = true;\n        if( properties ){ for( var i in properties ){\n          propertiesEmpty = false;\n          break;\n        } }\n\n        if( propertiesEmpty ){\n          return this; // nothing to animate\n        }\n\n        if( properties.css && isEles ){\n          properties.css = style.getValueStyle( properties.css, { array: true } );\n        }\n\n        if( properties.renderedPosition && isEles ){\n          var rpos = properties.renderedPosition;\n          var pan = cy.pan();\n          var zoom = cy.zoom();\n\n          properties.position = {\n            x: ( rpos.x - pan.x ) /zoom,\n            y: ( rpos.y - pan.y ) /zoom\n          };\n        }\n\n        // override pan w/ panBy if set\n        if( properties.panBy && isCore ){\n          var panBy = properties.panBy;\n          var cyPan = cy.pan();\n\n          properties.pan = {\n            x: cyPan.x + panBy.x,\n            y: cyPan.y + panBy.y\n          };\n        }\n\n        // override pan w/ center if set\n        var center = properties.center || properties.centre;\n        if( center && isCore ){\n          var centerPan = cy.getCenterPan( center.eles, properties.zoom );\n\n          if( centerPan ){\n            properties.pan = centerPan;\n          }\n        }\n\n        // override pan & zoom w/ fit if set\n        if( properties.fit && isCore ){\n          var fit = properties.fit;\n          var fitVp = cy.getFitViewport( fit.eles || fit.boundingBox, fit.padding );\n\n          if( fitVp ){\n            properties.pan = fitVp.pan; //{ x: fitVp.pan.x, y: fitVp.pan.y };\n            properties.zoom = fitVp.zoom;\n          }\n        }\n\n        for( var i = 0; i < all.length; i++ ){\n          var ele = all[i];\n         \n          if( ele.animated() && (params.queue === undefined || params.queue) ){\n            q = ele._private.animation.queue;\n          } else {\n            q = ele._private.animation.current;\n          }\n\n          q.push({\n            properties: properties,\n            duration: params.duration,\n            params: params,\n            callTime: callTime\n          });\n        }\n\n        if( isEles ){\n          cy.addToAnimationPool( this );\n        }\n\n        return this; // chaining\n      };\n    }, // animate\n\n    stop: function( fnParams ){\n      var defaults = {};\n      fnParams = $$.util.extend({}, defaults, fnParams);\n\n      return function stopImpl( clearQueue, jumpToEnd ){\n        var self = this;\n        var selfIsArrayLike = self.length !== undefined;\n        var all = selfIsArrayLike ? self : [self]; // put in array if not array-like\n        var cy = this._private.cy || this;\n\n        if( !cy.styleEnabled() ){ return this; }\n\n        for( var i = 0; i < all.length; i++ ){\n          var ele = all[i];\n          var anis = ele._private.animation.current;\n\n          for( var j = 0; j < anis.length; j++ ){\n            var animation = anis[j];    \n            if( jumpToEnd ){\n              // next iteration of the animation loop, the animation\n              // will go straight to the end and be removed\n              animation.duration = 0; \n            }\n          }\n          \n          // clear the queue of future animations\n          if( clearQueue ){\n            ele._private.animation.queue = [];\n          }\n\n          if( !jumpToEnd ){\n            ele._private.animation.current = [];\n          }\n        }\n        \n        // we have to notify (the animation loop doesn't do it for us on `stop`)\n        cy.notify({\n          collection: this,\n          type: 'draw'\n        });\n        \n        return this;\n      };\n    } // stop\n\n  }; // define\n\n  \n})( cytoscape );\n\n;(function($$){ 'use strict';\n\n  $$.fn.selector = function(map, options){\n    for( var name in map ){\n      var fn = map[name];\n      $$.Selector.prototype[ name ] = fn;\n    }\n  };\n\n  $$.Selector = function(onlyThisGroup, selector){\n    \n    if( !(this instanceof $$.Selector) ){\n      return new $$.Selector(onlyThisGroup, selector);\n    }\n  \n    if( selector === undefined && onlyThisGroup !== undefined ){\n      selector = onlyThisGroup;\n      onlyThisGroup = undefined;\n    }\n    \n    var self = this;\n    \n    self._private = {\n      selectorText: null,\n      invalid: true\n    };\n    \n    if( !selector || ( $$.is.string(selector) && selector.match(/^\\s*$/) ) ){\n      \n      if( onlyThisGroup == null ){\n        // ignore\n        self.length = 0;\n      } else {\n        self[0] = newQuery();\n        self[0].group = onlyThisGroup;\n        self.length = 1;\n      }\n              \n    } else if( $$.is.element( selector ) ){\n      var collection = new $$.Collection(self.cy(), [ selector ]);\n      \n      self[0] = newQuery();\n      self[0].collection = collection;\n      self.length = 1;\n      \n    } else if( $$.is.collection( selector ) ){\n      self[0] = newQuery();\n      self[0].collection = selector;\n      self.length = 1;\n      \n    } else if( $$.is.fn( selector ) ) {\n      self[0] = newQuery();\n      self[0].filter = selector;\n      self.length = 1;\n      \n    } else if( $$.is.string( selector ) ){\n\n      // the current subject in the query\n      var currentSubject = null;\n      \n      // storage for parsed queries\n      var newQuery = function(){\n        return {\n          classes: [], \n          colonSelectors: [],\n          data: [],\n          group: null,\n          ids: [],\n          meta: [],\n\n          // fake selectors\n          collection: null, // a collection to match against\n          filter: null, // filter function\n\n          // these are defined in the upward direction rather than down (e.g. child)\n          // because we need to go up in Selector.filter()\n          parent: null, // parent query obj\n          ancestor: null, // ancestor query obj\n          subject: null, // defines subject in compound query (subject query obj; points to self if subject)\n\n          // use these only when subject has been defined\n          child: null,\n          descendant: null\n        };\n      };\n\n      // tokens in the query language\n      var tokens = {\n        metaChar: '[\\\\!\\\\\"\\\\#\\\\$\\\\%\\\\&\\\\\\'\\\\(\\\\)\\\\*\\\\+\\\\,\\\\.\\\\/\\\\:\\\\;\\\\<\\\\=\\\\>\\\\?\\\\@\\\\[\\\\]\\\\^\\\\`\\\\{\\\\|\\\\}\\\\~]', // chars we need to escape in var names, etc\n        comparatorOp: '=|\\\\!=|>|>=|<|<=|\\\\$=|\\\\^=|\\\\*=', // binary comparison op (used in data selectors)\n        boolOp: '\\\\?|\\\\!|\\\\^', // boolean (unary) operators (used in data selectors)\n        string: '\"(?:\\\\\\\\\"|[^\"])+\"' + '|' + \"'(?:\\\\\\\\'|[^'])+'\", // string literals (used in data selectors) -- doublequotes | singlequotes\n        number: $$.util.regex.number, // number literal (used in data selectors) --- e.g. 0.1234, 1234, 12e123\n        meta: 'degree|indegree|outdegree', // allowed metadata fields (i.e. allowed functions to use from $$.Collection)\n        separator: '\\\\s*,\\\\s*', // queries are separated by commas, e.g. edge[foo = 'bar'], node.someClass\n        descendant: '\\\\s+',\n        child: '\\\\s+>\\\\s+',\n        subject: '\\\\$'\n      };\n      tokens.variable = '(?:[\\\\w-]|(?:\\\\\\\\'+ tokens.metaChar +'))+'; // a variable name\n      tokens.value = tokens.string + '|' + tokens.number; // a value literal, either a string or number\n      tokens.className = tokens.variable; // a class name (follows variable conventions)\n      tokens.id = tokens.variable; // an element id (follows variable conventions)\n\n      // when a token like a variable has escaped meta characters, we need to clean the backslashes out\n      // so that values get compared properly in Selector.filter()\n      var cleanMetaChars = function(str){\n        return str.replace(new RegExp('\\\\\\\\(' + tokens.metaChar + ')', 'g'), function(match, $1, offset, original){\n          return $1;\n        });\n      };\n      \n      // add @ variants to comparatorOp\n      var ops = tokens.comparatorOp.split('|');\n      for( var i = 0; i < ops.length; i++ ){\n        var op = ops[i];\n        tokens.comparatorOp += '|@' + op;\n      }\n\n      // add ! variants to comparatorOp\n      var ops = tokens.comparatorOp.split('|');\n      for( var i = 0; i < ops.length; i++ ){\n        var op = ops[i];\n\n        if( op.indexOf('!') >= 0 ){ continue; } // skip ops that explicitly contain !\n        if( op === '=' ){ continue; } // skip = b/c != is explicitly defined\n\n        tokens.comparatorOp += '|\\\\!' + op;\n      }\n\n      // NOTE: add new expression syntax here to have it recognised by the parser;\n      // - a query contains all adjacent (i.e. no separator in between) expressions;\n      // - the current query is stored in self[i] --- you can use the reference to `this` in the populate function;\n      // - you need to check the query objects in Selector.filter() for it actually filter properly, but that's pretty straight forward\n      // - when you add something here, also add to Selector.toString()\n      var exprs = {\n        group: {\n          query: true,\n          regex: '(node|edge|\\\\*)',\n          populate: function( group ){\n            this.group = group == \"*\" ? group : group + 's';\n          }\n        },\n        \n        state: {\n          query: true,\n          // NB: if one colon selector is a substring of another from its start, place the longer one first\n          // e.g. :foobar|:foo\n          regex: '(:selected|:unselected|:locked|:unlocked|:visible|:hidden|:transparent|:grabbed|:free|:removed|:inside|:grabbable|:ungrabbable|:animated|:unanimated|:selectable|:unselectable|:orphan|:nonorphan|:parent|:child|:loop|:simple|:active|:inactive|:touch|:backgrounding|:nonbackgrounding)',\n          populate: function( state ){\n            this.colonSelectors.push( state );\n          }\n        },\n        \n        id: {\n          query: true,\n          regex: '\\\\#('+ tokens.id +')',\n          populate: function( id ){\n            this.ids.push( cleanMetaChars(id) );\n          }\n        },\n        \n        className: {\n          query: true,\n          regex: '\\\\.('+ tokens.className +')',\n          populate: function( className ){\n            this.classes.push( cleanMetaChars(className) );\n          }\n        },\n        \n        dataExists: {\n          query: true,\n          regex: '\\\\[\\\\s*('+ tokens.variable +')\\\\s*\\\\]',\n          populate: function( variable ){\n            this.data.push({\n              field: cleanMetaChars(variable)\n            });\n          }\n        },\n        \n        dataCompare: {\n          query: true,\n          regex: '\\\\[\\\\s*('+ tokens.variable +')\\\\s*('+ tokens.comparatorOp +')\\\\s*('+ tokens.value +')\\\\s*\\\\]',\n          populate: function( variable, comparatorOp, value ){ \n            var valueIsString = new RegExp('^' + tokens.string + '$').exec(value) != null;\n\n            if( valueIsString ){\n              value = value.substring(1, value.length - 1);\n            } else {\n              value = parseFloat(value);\n            }\n\n            this.data.push({\n              field: cleanMetaChars(variable),\n              operator: comparatorOp,\n              value: value\n            });\n          }\n        },\n        \n        dataBool: {\n          query: true,\n          regex: '\\\\[\\\\s*('+ tokens.boolOp +')\\\\s*('+ tokens.variable +')\\\\s*\\\\]',\n          populate: function( boolOp, variable ){\n            this.data.push({\n              field: cleanMetaChars(variable),\n              operator: boolOp\n            });\n          }\n        },\n        \n        metaCompare: {\n          query: true,\n          regex: '\\\\[\\\\[\\\\s*('+ tokens.meta +')\\\\s*('+ tokens.comparatorOp +')\\\\s*('+ tokens.number +')\\\\s*\\\\]\\\\]',\n          populate: function( meta, comparatorOp, number ){\n            this.meta.push({\n              field: cleanMetaChars(meta),\n              operator: comparatorOp,\n              value: parseFloat(number)\n            });\n          }\n        },\n\n        nextQuery: {\n          separator: true,\n          regex: tokens.separator,\n          populate: function(){\n            // go on to next query\n            self[++i] = newQuery();\n            currentSubject = null;\n          }\n        },\n\n        child: {\n          separator: true,\n          regex: tokens.child,\n          populate: function(){\n            // this query is the parent of the following query\n            var childQuery = newQuery();\n            childQuery.parent = this;\n            childQuery.subject = currentSubject;\n\n            // we're now populating the child query with expressions that follow\n            self[i] = childQuery;\n          }\n        },\n\n        descendant: {\n          separator: true,\n          regex: tokens.descendant,\n          populate: function(){\n            // this query is the ancestor of the following query\n            var descendantQuery = newQuery();\n            descendantQuery.ancestor = this;\n            descendantQuery.subject = currentSubject;\n\n            // we're now populating the descendant query with expressions that follow\n            self[i] = descendantQuery;\n          }\n        },\n\n        subject: {\n          modifier: true,\n          regex: tokens.subject,\n          populate: function(){\n            if( currentSubject != null && this.subject != this ){\n              $$.util.error('Redefinition of subject in selector `' + selector + '`');\n              return false;\n            }\n\n            currentSubject = this;\n            this.subject = this;\n          }\n\n        }\n      };\n\n      var j = 0;\n      for( var name in exprs ){\n        exprs[j] = exprs[name];\n        exprs[j].name = name;\n\n        j++;\n      }\n      exprs.length = j;\n\n      self._private.selectorText = selector;\n      var remaining = selector;\n      var i = 0;\n      \n      // of all the expressions, find the first match in the remaining text\n      var consumeExpr = function( expectation ){\n        var expr;\n        var match;\n        var name;\n        \n        for( var j = 0; j < exprs.length; j++ ){\n          var e = exprs[j];\n          var n = e.name;\n\n          // ignore this expression if it doesn't meet the expectation function\n          if( $$.is.fn( expectation ) && !expectation(n, e) ){ continue; }\n\n          var m = remaining.match(new RegExp( '^' + e.regex ));\n          \n          if( m != null ){\n            match = m;\n            expr = e;\n            name = n;\n            \n            var consumed = m[0];\n            remaining = remaining.substring( consumed.length );                \n            \n            break; // we've consumed one expr, so we can return now\n          }\n        }\n        \n        return {\n          expr: expr,\n          match: match,\n          name: name\n        };\n      };\n      \n      // consume all leading whitespace\n      var consumeWhitespace = function(){\n        var match = remaining.match(/^\\s+/);\n        \n        if( match ){\n          var consumed = match[0];\n          remaining = remaining.substring( consumed.length );\n        }\n      };\n      \n      self[0] = newQuery(); // get started\n\n      consumeWhitespace(); // get rid of leading whitespace\n      for(;;){        \n        var check = consumeExpr();\n        \n        if( check.expr == null ){\n          $$.util.error('The selector `'+ selector +'`is invalid');\n          return;\n        } else {\n          var args = [];\n          for(var j = 1; j < check.match.length; j++){\n            args.push( check.match[j] );\n          }\n          \n          // let the token populate the selector object (i.e. in self[i])\n          var ret = check.expr.populate.apply( self[i], args );\n\n          if( ret === false ){ return; } // exit if population failed\n        }\n        \n        // we're done when there's nothing left to parse\n        if( remaining.match(/^\\s*$/) ){\n          break;\n        }\n      }\n      \n      self.length = i + 1;\n\n      // adjust references for subject\n      for(j = 0; j < self.length; j++){\n        var query = self[j];\n\n        if( query.subject != null ){\n          // go up the tree until we reach the subject\n          for(;;){\n            if( query.subject == query ){ break; } // done if subject is self\n\n            if( query.parent != null ){ // swap parent/child reference\n              var parent = query.parent;\n              var child = query;\n\n              child.parent = null;\n              parent.child = child;\n\n              query = parent; // go up the tree\n            } else if( query.ancestor != null ){ // swap ancestor/descendant\n              var ancestor = query.ancestor;\n              var descendant = query;\n\n              descendant.ancestor = null;\n              ancestor.descendant = descendant;\n\n              query = ancestor; // go up the tree\n            } else {\n              $$.util.error('When adjusting references for the selector `'+ query +'`, neither parent nor ancestor was found');\n              break;\n            }\n          } // for\n\n          self[j] = query.subject; // subject should be the root query\n        } // if\n      } // for\n\n      // make sure for each query that the subject group matches the implicit group if any\n      if( onlyThisGroup != null ){\n        for(var j = 0; j < self.length; j++){\n          if( self[j].group != null && self[j].group != onlyThisGroup ){\n            $$.util.error('Group `'+ self[j].group +'` conflicts with implicit group `'+ onlyThisGroup +'` in selector `'+ selector +'`');\n            return;\n          }\n\n          self[j].group = onlyThisGroup; // set to implicit group\n        }\n      }\n      \n    } else {\n      $$.util.error('A selector must be created from a string; found ' + selector);\n      return;\n    }\n\n    self._private.invalid = false;\n    \n  };\n\n  $$.selfn = $$.Selector.prototype;\n  \n  $$.selfn.size = function(){\n    return this.length;\n  };\n  \n  $$.selfn.eq = function(i){\n    return this[i];\n  };\n  \n  // get elements from the core and then filter them\n  $$.selfn.find = function(){\n    // TODO impl if we decide to use a DB for storing elements\n  };\n  \n  var queryMatches = function(query, element){\n    // check group\n    if( query.group != null && query.group != '*' && query.group != element._private.group ){\n      return false;\n    }\n\n    var cy = element.cy();\n    \n    // check colon selectors\n    var allColonSelectorsMatch = true;\n    for(var k = 0; k < query.colonSelectors.length; k++){\n      var sel = query.colonSelectors[k];\n      \n      switch(sel){\n      case ':selected':\n        allColonSelectorsMatch = element.selected();\n        break;\n      case ':unselected':\n        allColonSelectorsMatch = !element.selected();\n        break;\n      case ':selectable':\n        allColonSelectorsMatch = element.selectable();\n        break;\n      case ':unselectable':\n        allColonSelectorsMatch = !element.selectable();\n        break;\n      case ':locked':\n        allColonSelectorsMatch = element.locked();\n        break;\n      case ':unlocked':\n        allColonSelectorsMatch = !element.locked();\n        break;\n      case ':visible':\n        allColonSelectorsMatch = element.visible();\n        break;\n      case ':hidden':\n        allColonSelectorsMatch = !element.visible();\n        break;\n      case ':transparent':\n        allColonSelectorsMatch = element.transparent();\n        break;\n      case ':grabbed':\n        allColonSelectorsMatch = element.grabbed();\n        break;\n      case ':free':\n        allColonSelectorsMatch = !element.grabbed();\n        break;\n      case ':removed':\n        allColonSelectorsMatch = element.removed();\n        break;\n      case ':inside':\n        allColonSelectorsMatch = !element.removed();\n        break;\n      case ':grabbable':\n        allColonSelectorsMatch = element.grabbable();\n        break;\n      case ':ungrabbable':\n        allColonSelectorsMatch = !element.grabbable();\n        break;\n      case ':animated':\n        allColonSelectorsMatch = element.animated();\n        break;\n      case ':unanimated':\n        allColonSelectorsMatch = !element.animated();\n        break;\n      case ':parent':\n        allColonSelectorsMatch = element.isNode() && element.children().nonempty();\n        break;\n      case ':child':\n      case ':nonorphan':\n        allColonSelectorsMatch = element.isNode() && element.parent().nonempty();\n        break;\n      case ':orphan':\n        allColonSelectorsMatch = element.isNode() && element.parent().empty();\n        break;\n      case ':loop':\n        allColonSelectorsMatch = element.isEdge() && element.data('source') === element.data('target');\n        break;\n      case ':simple':\n        allColonSelectorsMatch = element.isEdge() && element.data('source') !== element.data('target');\n        break;\n      case ':active':\n        allColonSelectorsMatch = element.active();\n        break;\n      case ':inactive':\n        allColonSelectorsMatch = !element.active();\n        break;\n      case ':touch':\n        allColonSelectorsMatch = $$.is.touch();\n        break;\n      case ':backgrounding':\n        allColonSelectorsMatch = element.backgrounding();\n        break;\n      case ':nonbackgrounding':\n        allColonSelectorsMatch = !element.backgrounding();\n        break;\n      }\n      \n      if( !allColonSelectorsMatch ) break;\n    }\n    if( !allColonSelectorsMatch ) return false;\n    \n    // check id\n    var allIdsMatch = true;\n    for(var k = 0; k < query.ids.length; k++){\n      var id = query.ids[k];\n      var actualId = element._private.data.id;\n      \n      allIdsMatch = allIdsMatch && (id == actualId);\n      \n      if( !allIdsMatch ) break;\n    }\n    if( !allIdsMatch ) return false;\n    \n    // check classes\n    var allClassesMatch = true;\n    for(var k = 0; k < query.classes.length; k++){\n      var cls = query.classes[k];\n      \n      allClassesMatch = allClassesMatch && element.hasClass(cls);\n      \n      if( !allClassesMatch ) break;\n    }\n    if( !allClassesMatch ) return false;\n    \n    // generic checking for data/metadata\n    var operandsMatch = function(params){\n      var allDataMatches = true;\n      for(var k = 0; k < query[params.name].length; k++){\n        var data = query[params.name][k];\n        var operator = data.operator;\n        var value = data.value;\n        var field = data.field;\n        var matches;\n        \n        if( operator != null && value != null ){\n          \n          var fieldVal = params.fieldValue(field);\n          var fieldStr = !$$.is.string(fieldVal) && !$$.is.number(fieldVal) ? '' : '' + fieldVal;\n          var valStr = '' + value;\n          \n          var caseInsensitive = false;\n          if( operator.indexOf('@') >= 0 ){\n            fieldStr = fieldStr.toLowerCase();\n            valStr = valStr.toLowerCase();\n            \n            operator = operator.replace('@', '');\n            caseInsensitive = true;\n          }\n\n          var notExpr = false;\n          var handledNotExpr = false;\n          if( operator.indexOf('!') >= 0 ){\n            operator = operator.replace('!', '');\n            notExpr = true;\n          }\n          \n          // if we're doing a case insensitive comparison, then we're using a STRING comparison\n          // even if we're comparing numbers\n          if( caseInsensitive ){\n            value = valStr.toLowerCase();\n            fieldVal = fieldStr.toLowerCase();\n          }\n\n          switch(operator){\n          case '*=':\n            matches = fieldStr.search(valStr) >= 0;\n            break;\n          case '$=':\n            matches = new RegExp(valStr + '$').exec(fieldStr) != null;\n            break;\n          case '^=':\n            matches = new RegExp('^' + valStr).exec(fieldStr) != null;\n            break;\n          case '=':\n            matches = fieldVal === value;\n            break;\n          case '!=':\n            matches = fieldVal !== value;\n            break;\n          case '>':\n            matches = !notExpr ? fieldVal > value : fieldVal <= value;\n            handledNotExpr = true;\n            break;\n          case '>=':\n            matches = !notExpr ? fieldVal >= value : fieldVal < value;\n            handledNotExpr = true;\n            break;\n          case '<':\n            matches = !notExpr ? fieldVal < value : fieldVal >= value;\n            handledNotExpr = true;\n            break;\n          case '<=':\n            matches = !notExpr ? fieldVal <= value : fieldVal > value;\n            handledNotExpr = true;\n            break;\n          default:\n            matches = false;\n            break;\n            \n          }\n        } else if( operator != null ){\n          switch(operator){\n          case '?':\n            matches = params.fieldTruthy(field);\n            break;\n          case '!':\n            matches = !params.fieldTruthy(field);\n            break;\n          case '^':\n            matches = params.fieldUndefined(field);\n            break;\n          }\n        } else {   \n          matches = !params.fieldUndefined(field);\n        }\n\n        if( notExpr && !handledNotExpr ){\n          matches = !matches;\n          handledNotExpr = true;\n        }\n        \n        if( !matches ){\n          allDataMatches = false;\n          break;\n        }\n      } // for\n      \n      return allDataMatches;\n    }; // operandsMatch\n    \n    // check data matches\n    var allDataMatches = operandsMatch({\n      name: 'data',\n      fieldValue: function(field){\n        return element._private.data[field];\n      },\n      fieldRef: function(field){\n        return 'element._private.data.' + field;\n      },\n      fieldUndefined: function(field){\n        return element._private.data[field] === undefined;\n      },\n      fieldTruthy: function(field){\n        if( element._private.data[field] ){\n          return true;\n        }\n        return false;\n      }\n    });\n    \n    if( !allDataMatches ){\n      return false;\n    }\n    \n    // check metadata matches\n    var allMetaMatches = operandsMatch({\n      name: 'meta',\n      fieldValue: function(field){\n        return element[field]();\n      },\n      fieldRef: function(field){\n        return 'element.' + field + '()';\n      },\n      fieldUndefined: function(field){\n        return element[field]() == null;\n      },\n      fieldTruthy: function(field){\n        if( element[field]() ){\n          return true;\n        }\n        return false;\n      }\n    });\n    \n    if( !allMetaMatches ){\n      return false;\n    }\n    \n    // check collection\n    if( query.collection != null ){\n      var matchesAny = query.collection._private.ids[ element.id() ] != null;\n      \n      if( !matchesAny ){\n        return false;\n      }\n    }\n    \n    // check filter function\n    if( query.filter != null && element.collection().filter( query.filter ).size() === 0 ){\n      return false;\n    }\n    \n\n    // check parent/child relations\n    var confirmRelations = function( query, elements ){\n      if( query != null ){\n        var matches = false;\n\n        if( !cy.hasCompoundNodes() ){\n          return false;\n        }\n\n        elements = elements(); // make elements functional so we save cycles if query == null\n\n        // query must match for at least one element (may be recursive)\n        for(var i = 0; i < elements.length; i++){\n          if( queryMatches( query, elements[i] ) ){\n            matches = true;\n            break;\n          }\n        }\n\n        return matches;\n      } else {\n        return true;\n      }\n    };\n\n    if (! confirmRelations(query.parent, function(){\n      return element.parent();\n    }) ){ return false; }\n\n    if (! confirmRelations(query.ancestor, function(){\n      return element.parents();\n    }) ){ return false; }\n\n    if (! confirmRelations(query.child, function(){\n      return element.children();\n    }) ){ return false; }\n\n    if (! confirmRelations(query.descendant, function(){\n      return element.descendants();\n    }) ){ return false; }\n\n    // we've reached the end, so we've matched everything for this query\n    return true;\n  }; // queryMatches\n\n  // filter an existing collection\n  $$.selfn.filter = function(collection){\n    var self = this;\n    var cy = collection.cy();\n    \n    // don't bother trying if it's invalid\n    if( self._private.invalid ){\n      return new $$.Collection( cy );\n    }\n  \n    var selectorFunction = function(i, element){\n      for(var j = 0; j < self.length; j++){\n        var query = self[j];\n        \n        if( queryMatches(query, element) ){\n          return true;\n        }\n      }\n      \n      return false;\n    };\n    \n    if( self._private.selectorText == null ){\n      selectorFunction = function(){ return true; };\n    }\n    \n    var filteredCollection = collection.filter( selectorFunction );\n    \n    return filteredCollection;\n  }; // filter\n\n  // does selector match a single element?\n  $$.selfn.matches = function(ele){\n    var self = this;\n    \n    // don't bother trying if it's invalid\n    if( self._private.invalid ){\n      return false;\n    }\n  \n    for(var j = 0; j < self.length; j++){\n      var query = self[j];\n      \n      if( queryMatches(query, ele) ){\n        return true;\n      }\n    }\n    \n    return false;\n  }; // filter\n  \n  // ith query to string\n  $$.selfn.toString = $$.selfn.selector = function(){\n    \n    var str = '';\n    \n    var clean = function(obj, isValue){\n      if( $$.is.string(obj) ){\n        return isValue ? '\"' + obj + '\"' : obj;\n      } \n      return '';\n    };\n    \n    var queryToString = function(query){\n      var str = '';\n\n      if( query.subject === query ){\n        str += '$';\n      }\n\n      var group = clean(query.group);\n      str += group.substring(0, group.length - 1);\n      \n      for(var j = 0; j < query.data.length; j++){\n        var data = query.data[j];\n        \n        if( data.value ){\n          str += '[' + data.field + clean(data.operator) + clean(data.value, true) + ']';\n        } else {\n          str += '[' + clean(data.operator) + data.field + ']';\n        }\n      }\n\n      for(var j = 0; j < query.meta.length; j++){\n        var meta = query.meta[j];\n        str += '[[' + meta.field + clean(meta.operator) + clean(meta.value, true) + ']]';\n      }\n      \n      for(var j = 0; j < query.colonSelectors.length; j++){\n        var sel = query.colonSelectors[i];\n        str += sel;\n      }\n      \n      for(var j = 0; j < query.ids.length; j++){\n        var sel = '#' + query.ids[i];\n        str += sel;\n      }\n      \n      for(var j = 0; j < query.classes.length; j++){\n        var sel = '.' + query.classes[i];\n        str += sel;\n      }\n\n      if( query.parent != null ){\n        str = queryToString( query.parent ) + ' > ' + str; \n      }\n\n      if( query.ancestor != null ){\n        str = queryToString( query.ancestor ) + ' ' + str; \n      }\n\n      if( query.child != null ){\n        str += ' > ' + queryToString( query.child ); \n      }\n\n      if( query.descendant != null ){\n        str += ' ' + queryToString( query.descendant ); \n      }\n\n      return str;\n    };\n\n    for(var i = 0; i < this.length; i++){\n      var query = this[i];\n      \n      str += queryToString( query );\n      \n      if( this.length > 1 && i < this.length - 1 ){\n        str += ', ';\n      }\n    }\n    \n    return str;\n  };\n  \n})( cytoscape );\n\n;(function($$){ 'use strict';\n\n  $$.Style = function( cy ){\n\n    if( !(this instanceof $$.Style) ){\n      return new $$.Style(cy);\n    }\n\n    if( !$$.is.core(cy) ){\n      $$.util.error('A style must have a core reference');\n      return;\n    }\n\n    this._private = {\n      cy: cy,\n      coreStyle: {},\n      newStyle: true\n    };\n\n    this.length = 0;\n\n    this.addDefaultStylesheet();\n  };\n\n  // nice-to-have aliases\n  $$.style = $$.Style;\n  $$.styfn = $$.Style.prototype;\n\n  // define functions in the Style prototype\n  $$.fn.style = function( fnMap, options ){\n    for( var fnName in fnMap ){\n      var fn = fnMap[ fnName ];\n      $$.Style.prototype = fn;\n    }\n  };\n\n  (function(){\n    var number = $$.util.regex.number;\n    var rgba = $$.util.regex.rgbaNoBackRefs;\n    var hsla = $$.util.regex.hslaNoBackRefs;\n    var hex3 = $$.util.regex.hex3;\n    var hex6 = $$.util.regex.hex6;\n    var data = function( prefix ){ return '^' + prefix + '\\\\s*\\\\(\\\\s*([\\\\w\\\\.]+)\\\\s*\\\\)$'; };\n    var mapData = function( prefix ){ return '^' + prefix + '\\\\s*\\\\(([\\\\w\\\\.]+)\\\\s*\\\\,\\\\s*(' + number + ')\\\\s*\\\\,\\\\s*(' + number + ')\\\\s*,\\\\s*(' + number + '|\\\\w+|' + rgba + '|' + hsla + '|' + hex3 + '|' + hex6 + ')\\\\s*\\\\,\\\\s*(' + number + '|\\\\w+|' + rgba + '|' + hsla + '|' + hex3 + '|' + hex6 + ')\\\\)$'; };\n\n    // each visual style property has a type and needs to be validated according to it\n    $$.style.types = {\n      time: { number: true, min: 0, units: 's|ms', implicitUnits: 'ms' },\n      percent: { number: true, min: 0, max: 100, units: '%' },\n      zeroOneNumber: { number: true, min: 0, max: 1, unitless: true },\n      nOneOneNumber: { number: true, min: -1, max: 1, unitless: true },\n      nonNegativeInt: { number: true, min: 0, integer: true, unitless: true },\n      position: { enums: ['parent', 'origin'] },\n      autoSize: { number: true, min: 0, enums: ['auto'] },\n      number: { number: true },\n      size: { number: true, min: 0 },\n      bgSize: { number: true, min: 0, allowPercent: true },\n      bgWH: { number: true, min: 0, allowPercent: true, enums: ['auto'] },\n      bgPos: { number: true, allowPercent: true },\n      bgRepeat: { enums: ['repeat', 'repeat-x', 'repeat-y', 'no-repeat'] },\n      bgFit: { enums: ['none', 'contain', 'cover'] },\n      bgClip: { enums: ['none', 'node'] },\n      color: { color: true },\n      lineStyle: { enums: ['solid', 'dotted', 'dashed'] },\n      borderStyle: { enums: ['solid', 'dotted', 'dashed', 'double'] },\n      curveStyle: { enums: ['bezier', 'unbundled-bezier', 'haystack'] },\n      fontFamily: { regex: '^([\\\\w- \\\\\"]+(?:\\\\s*,\\\\s*[\\\\w- \\\\\"]+)*)$' },\n      fontVariant: { enums: ['small-caps', 'normal'] },\n      fontStyle: { enums: ['italic', 'normal', 'oblique'] },\n      fontWeight: { enums: ['normal', 'bold', 'bolder', 'lighter', '100', '200', '300', '400', '500', '600', '800', '900', 100, 200, 300, 400, 500, 600, 700, 800, 900] },\n      textDecoration: { enums: ['none', 'underline', 'overline', 'line-through'] },\n      textTransform: { enums: ['none', 'uppercase', 'lowercase'] },\n      textWrap: { enums: ['none', 'wrap'] },\n      textBackgroundShape: { enums: ['rectangle', 'roundrectangle']},\n      nodeShape: { enums: ['rectangle', 'roundrectangle', 'ellipse', 'triangle', 'square', 'pentagon', 'hexagon', 'heptagon', 'octagon', 'star', 'diamond', 'vee', 'rhomboid'] },\n      compoundIncludeLabels: { enums: ['include', 'exclude'] },\n      arrowShape: { enums: ['tee', 'triangle', 'triangle-tee', 'triangle-backcurve', 'half-triangle-overshot', 'square', 'circle', 'diamond', 'none'] },\n      arrowFill: { enums: ['filled', 'hollow'] },\n      display: { enums: ['element', 'none'] },\n      visibility: { enums: ['hidden', 'visible'] },\n      valign: { enums: ['top', 'center', 'bottom'] },\n      halign: { enums: ['left', 'center', 'right'] },\n      text: { string: true },\n      data: { mapping: true, regex: data('data') },\n      layoutData: { mapping: true, regex: data('layoutData') },\n      scratch: { mapping: true, regex: data('scratch') },\n      mapData: { mapping: true, regex: mapData('mapData') },\n      mapLayoutData: { mapping: true, regex: mapData('mapLayoutData') },\n      mapScratch: { mapping: true, regex: mapData('mapScratch') },\n      fn: { mapping: true, fn: true },\n      url: { regex: '^url\\\\s*\\\\(\\\\s*([^\\\\s]+)\\\\s*\\\\s*\\\\)|none|(.+)$' },\n      propList: { propList: true },\n      angle: { number: true, units: 'deg|rad' },\n      textRotation: { enums: ['none', 'autorotate'] }\n    };\n\n    // define visual style properties\n    var t = $$.style.types;\n    var props = $$.style.properties = [\n      // labels\n      { name: 'text-valign', type: t.valign },\n      { name: 'text-halign', type: t.halign },\n      { name: 'color', type: t.color },\n      { name: 'content', type: t.text },\n      { name: 'text-outline-color', type: t.color },\n      { name: 'text-outline-width', type: t.size },\n      { name: 'text-outline-opacity', type: t.zeroOneNumber },\n      { name: 'text-opacity', type: t.zeroOneNumber },\n      { name: 'text-background-color', type: t.color },\n      { name: 'text-background-opacity', type: t.zeroOneNumber },\n      { name: 'text-border-opacity', type: t.zeroOneNumber },\n      { name: 'text-border-color', type: t.color },\n      { name: 'text-border-width', type: t.size },\n      { name: 'text-border-style', type: t.borderStyle },\n      { name: 'text-background-shape', type: t.textBackgroundShape},\n      // { name: 'text-decoration', type: t.textDecoration }, // not supported in canvas\n      { name: 'text-transform', type: t.textTransform },\n      { name: 'text-wrap', type: t.textWrap },\n      { name: 'text-max-width', type: t.size },\n\n      // { name: 'text-rotation', type: t.angle }, // TODO disabled b/c rotation breaks bounding boxes\n      { name: 'font-family', type: t.fontFamily },\n      { name: 'font-style', type: t.fontStyle },\n      // { name: 'font-variant', type: t.fontVariant }, // not useful\n      { name: 'font-weight', type: t.fontWeight },\n      { name: 'font-size', type: t.size },\n      { name: 'min-zoomed-font-size', type: t.size },\n      { name: 'edge-text-rotation', type: t.textRotation },\n\n      // visibility\n      { name: 'display', type: t.display },\n      { name: 'visibility', type: t.visibility },\n      { name: 'opacity', type: t.zeroOneNumber },\n      { name: 'z-index', type: t.nonNegativeInt },\n\n      // overlays\n      { name: 'overlay-padding', type: t.size },\n      { name: 'overlay-color', type: t.color },\n      { name: 'overlay-opacity', type: t.zeroOneNumber },\n\n      // shadows\n      { name: 'shadow-blur', type: t.size },\n      { name: 'shadow-color', type: t.color },\n      { name: 'shadow-opacity', type: t.zeroOneNumber },\n      { name: 'shadow-offset-x', type: t.number },\n      { name: 'shadow-offset-y', type: t.number },\n\n      // label shadows\n      { name: 'text-shadow-blur', type: t.size },\n      { name: 'text-shadow-color', type: t.color },\n      { name: 'text-shadow-opacity', type: t.zeroOneNumber },\n      { name: 'text-shadow-offset-x', type: t.number },\n      { name: 'text-shadow-offset-y', type: t.number },\n\n      // transition anis\n      { name: 'transition-property', type: t.propList },\n      { name: 'transition-duration', type: t.time },\n      { name: 'transition-delay', type: t.time },\n\n      // node body\n      { name: 'height', type: t.autoSize },\n      { name: 'width', type: t.autoSize },\n      { name: 'shape', type: t.nodeShape },\n      { name: 'background-color', type: t.color },\n      { name: 'background-opacity', type: t.zeroOneNumber },\n      { name: 'background-blacken', type: t.nOneOneNumber },\n\n      // node border\n      { name: 'border-color', type: t.color },\n      { name: 'border-opacity', type: t.zeroOneNumber },\n      { name: 'border-width', type: t.size },\n      { name: 'border-style', type: t.borderStyle },\n\n      // node background images\n      { name: 'background-image', type: t.url },\n      { name: 'background-image-opacity', type: t.zeroOneNumber },\n      { name: 'background-position-x', type: t.bgPos },\n      { name: 'background-position-y', type: t.bgPos },\n      { name: 'background-repeat', type: t.bgRepeat },\n      { name: 'background-fit', type: t.bgFit },\n      { name: 'background-clip', type: t.bgClip },\n      { name: 'background-width', type: t.bgWH },\n      { name: 'background-height', type: t.bgWH },\n\n      // compound props\n      { name: 'padding-left', type: t.size },\n      { name: 'padding-right', type: t.size },\n      { name: 'padding-top', type: t.size },\n      { name: 'padding-bottom', type: t.size },\n      { name: 'position', type: t.position },\n      { name: 'compound-sizing-wrt-labels', type: t.compoundIncludeLabels },\n\n      // edge line\n      { name: 'line-style', type: t.lineStyle },\n      { name: 'line-color', type: t.color },\n      { name: 'control-point-step-size', type: t.size },\n      { name: 'control-point-distance', type: t.number },\n      { name: 'control-point-weight', type: t.zeroOneNumber },\n      { name: 'curve-style', type: t.curveStyle },\n      { name: 'haystack-radius', type: t.zeroOneNumber },\n\n      // edge arrows\n      { name: 'source-arrow-shape', type: t.arrowShape },\n      { name: 'target-arrow-shape', type: t.arrowShape },\n      { name: 'mid-source-arrow-shape', type: t.arrowShape },\n      { name: 'mid-target-arrow-shape', type: t.arrowShape },\n      { name: 'source-arrow-color', type: t.color },\n      { name: 'target-arrow-color', type: t.color },\n      { name: 'mid-source-arrow-color', type: t.color },\n      { name: 'mid-target-arrow-color', type: t.color },\n      { name: 'source-arrow-fill', type: t.arrowFill },\n      { name: 'target-arrow-fill', type: t.arrowFill },\n      { name: 'mid-source-arrow-fill', type: t.arrowFill },\n      { name: 'mid-target-arrow-fill', type: t.arrowFill },\n\n      // these are just for the core\n      { name: 'selection-box-color', type: t.color },\n      { name: 'selection-box-opacity', type: t.zeroOneNumber },\n      { name: 'selection-box-border-color', type: t.color },\n      { name: 'selection-box-border-width', type: t.size },\n      { name: 'active-bg-color', type: t.color },\n      { name: 'active-bg-opacity', type: t.zeroOneNumber },\n      { name: 'active-bg-size', type: t.size },\n      { name: 'outside-texture-bg-color', type: t.color },\n      { name: 'outside-texture-bg-opacity', type: t.zeroOneNumber }\n    ];\n\n    // pie backgrounds for nodes\n    $$.style.pieBackgroundN = 16; // because the pie properties are numbered, give access to a constant N (for renderer use)\n    props.push({ name: 'pie-size', type: t.bgSize });\n    for( var i = 1; i <= $$.style.pieBackgroundN; i++ ){\n      props.push({ name: 'pie-'+i+'-background-color', type: t.color });\n      props.push({ name: 'pie-'+i+'-background-size', type: t.percent });\n      props.push({ name: 'pie-'+i+'-background-opacity', type: t.zeroOneNumber });\n    }\n\n    // allow access of properties by name ( e.g. $$.style.properties.height )\n    for( var i = 0; i < props.length; i++ ){\n      var prop = props[i];\n\n      props[ prop.name ] = prop; // allow lookup by name\n    }\n  })();\n\n  // adds the default stylesheet to the current style\n  $$.styfn.addDefaultStylesheet = function(){\n    // to be nice, we build font related style properties from the core container\n    // so that cytoscape matches the style of its container by default\n    //\n    // unfortunately, this doesn't seem work consistently and can grab the default stylesheet values\n    // instead of the developer's values so let's just make it explicit for the dev for now\n    //\n    // delaying the read of these val's is not an opt'n: that would delay init'l load time\n    var fontFamily = 'Helvetica' || this.containerPropertyAsString('font-family') || 'sans-serif';\n    var fontStyle = 'normal' || this.containerPropertyAsString('font-style') || 'normal';\n    // var fontVariant = 'normal' || this.containerPropertyAsString('font-variant') || 'normal';\n    var fontWeight = 'normal' || this.containerPropertyAsString('font-weight') || 'normal';\n    var color = '#000' || this.containerPropertyAsString('color') || '#000';\n    var textTransform = 'none' || this.containerPropertyAsString('text-transform') || 'none';\n    var fontSize = 16 || this.containerPropertyAsString('font-size') || 16;\n    var textMaxWidth = 9999 || this.containerPropertyAsString('text-max-width') || 9999;\n\n    // fill the style with the default stylesheet\n    this\n      .selector('node, edge') // common properties\n        .css({\n          'text-valign': 'top',\n          'text-halign': 'center',\n          'color': color,\n          'text-outline-color': '#000',\n          'text-outline-width': 0,\n          'text-outline-opacity': 1,\n          'text-opacity': 1,\n          'text-decoration': 'none',\n          'text-transform': textTransform,\n          'text-wrap': 'none',\n          'text-max-width': textMaxWidth,\n          'text-background-color': '#000',\n          'text-background-opacity': 0,\n          'text-border-opacity': 0,\n          'text-border-width': 0,\n          'text-border-style': 'solid',\n          'text-border-color':'#000',\n          'text-background-shape':'rectangle',\n          'font-family': fontFamily,\n          'font-style': fontStyle,\n          // 'font-variant': fontVariant,\n          'font-weight': fontWeight,\n          'font-size': fontSize,\n          'min-zoomed-font-size': 0,\n          'edge-text-rotation': 'none',\n          'visibility': 'visible',\n          'display': 'element',\n          'opacity': 1,\n          'z-index': 0,\n          'content': '',\n          'overlay-opacity': 0,\n          'overlay-color': '#000',\n          'overlay-padding': 10,\n          'shadow-opacity': 0,\n          'shadow-color': '#000',\n          'shadow-blur': 10,\n          'shadow-offset-x': 0,\n          'shadow-offset-y': 0,\n          'text-shadow-opacity': 0,\n          'text-shadow-color': '#000',\n          'text-shadow-blur': 5,\n          'text-shadow-offset-x': 0,\n          'text-shadow-offset-y': 0,\n          'transition-property': 'none',\n          'transition-duration': 0,\n          'transition-delay': 0,\n\n          // node props\n          'background-blacken': 0,\n          'background-color': '#888',\n          'background-opacity': 1,\n          'background-image': 'none',\n          'background-image-opacity': 1,\n          'background-position-x': '50%',\n          'background-position-y': '50%',\n          'background-repeat': 'no-repeat',\n          'background-fit': 'none',\n          'background-clip': 'node',\n          'background-width': 'auto',\n          'background-height': 'auto',\n          'border-color': '#000',\n          'border-opacity': 1,\n          'border-width': 0,\n          'border-style': 'solid',\n          'height': 30,\n          'width': 30,\n          'shape': 'ellipse',\n\n          // compound props\n          'padding-top': 0,\n          'padding-bottom': 0,\n          'padding-left': 0,\n          'padding-right': 0,\n          'position': 'origin',\n          'compound-sizing-wrt-labels': 'include',\n\n\n          // node pie bg\n          'pie-size': '100%',\n          'pie-1-background-color': 'black',\n          'pie-2-background-color': 'black',\n          'pie-3-background-color': 'black',\n          'pie-4-background-color': 'black',\n          'pie-5-background-color': 'black',\n          'pie-6-background-color': 'black',\n          'pie-7-background-color': 'black',\n          'pie-8-background-color': 'black',\n          'pie-9-background-color': 'black',\n          'pie-10-background-color': 'black',\n          'pie-11-background-color': 'black',\n          'pie-12-background-color': 'black',\n          'pie-13-background-color': 'black',\n          'pie-14-background-color': 'black',\n          'pie-15-background-color': 'black',\n          'pie-16-background-color': 'black',\n          'pie-1-background-size': '0%',\n          'pie-2-background-size': '0%',\n          'pie-3-background-size': '0%',\n          'pie-4-background-size': '0%',\n          'pie-5-background-size': '0%',\n          'pie-6-background-size': '0%',\n          'pie-7-background-size': '0%',\n          'pie-8-background-size': '0%',\n          'pie-9-background-size': '0%',\n          'pie-10-background-size': '0%',\n          'pie-11-background-size': '0%',\n          'pie-12-background-size': '0%',\n          'pie-13-background-size': '0%',\n          'pie-14-background-size': '0%',\n          'pie-15-background-size': '0%',\n          'pie-16-background-size': '0%',\n          'pie-1-background-opacity': 1,\n          'pie-2-background-opacity': 1,\n          'pie-3-background-opacity': 1,\n          'pie-4-background-opacity': 1,\n          'pie-5-background-opacity': 1,\n          'pie-6-background-opacity': 1,\n          'pie-7-background-opacity': 1,\n          'pie-8-background-opacity': 1,\n          'pie-9-background-opacity': 1,\n          'pie-10-background-opacity': 1,\n          'pie-11-background-opacity': 1,\n          'pie-12-background-opacity': 1,\n          'pie-13-background-opacity': 1,\n          'pie-14-background-opacity': 1,\n          'pie-15-background-opacity': 1,\n          'pie-16-background-opacity': 1,\n\n          // edge props\n          'source-arrow-shape': 'none',\n          'mid-source-arrow-shape': 'none',\n          'target-arrow-shape': 'none',\n          'mid-target-arrow-shape': 'none',\n          'source-arrow-color': '#ddd',\n          'mid-source-arrow-color': '#ddd',\n          'target-arrow-color': '#ddd',\n          'mid-target-arrow-color': '#ddd',\n          'source-arrow-fill': 'filled',\n          'mid-source-arrow-fill': 'filled',\n          'target-arrow-fill': 'filled',\n          'mid-target-arrow-fill': 'filled',\n          'line-style': 'solid',\n          'line-color': '#ddd',\n          'control-point-step-size': 40,\n          'control-point-weight': 0.5,\n          'curve-style': 'bezier',\n          'haystack-radius': 0.8\n        })\n      .selector('$node > node') // compound (parent) node properties\n        .css({\n          'width': 'auto',\n          'height': 'auto',\n          'shape': 'rectangle',\n          'background-opacity': 0.5,\n          'padding-top': 10,\n          'padding-right': 10,\n          'padding-left': 10,\n          'padding-bottom': 10\n        })\n      .selector('edge') // just edge properties\n        .css({\n          'width': 1\n        })\n      .selector(':active')\n        .css({\n          'overlay-color': 'black',\n          'overlay-padding': 10,\n          'overlay-opacity': 0.25\n        })\n      .selector('core') // just core properties\n        .css({\n          'selection-box-color': '#ddd',\n          'selection-box-opacity': 0.65,\n          'selection-box-border-color': '#aaa',\n          'selection-box-border-width': 1,\n          'active-bg-color': 'black',\n          'active-bg-opacity': 0.15,\n          'active-bg-size': 30,\n          'outside-texture-bg-color': '#000',\n          'outside-texture-bg-opacity': 0.125\n        })\n    ;\n\n    this.defaultLength = this.length;\n  };\n\n  // remove all contexts\n  $$.styfn.clear = function(){\n    for( var i = 0; i < this.length; i++ ){\n      this[i] = undefined;\n    }\n    this.length = 0;\n    this._private.newStyle = true;\n\n    return this; // chaining\n  };\n\n  $$.styfn.resetToDefault = function(){\n    this.clear();\n    this.addDefaultStylesheet();\n\n    return this;\n  };\n\n  // builds a style object for the 'core' selector\n  $$.styfn.core = function(){\n    return this._private.coreStyle;\n  };\n\n  // parse a property; return null on invalid; return parsed property otherwise\n  // fields :\n  // - name : the name of the property\n  // - value : the parsed, native-typed value of the property\n  // - strValue : a string value that represents the property value in valid css\n  // - bypass : true iff the property is a bypass property\n  $$.styfn.parse = function( name, value, propIsBypass, propIsFlat ){\n\n    name = $$.util.camel2dash( name ); // make sure the property name is in dash form (e.g. 'property-name' not 'propertyName')\n    var property = $$.style.properties[ name ];\n    var passedValue = value;\n    var types = $$.style.types;\n\n    if( !property ){ return null; } // return null on property of unknown name\n    if( value === undefined || value === null ){ return null; } // can't assign null\n\n    var valueIsString = $$.is.string(value);\n    if( valueIsString ){ // trim the value to make parsing easier\n      value = $$.util.trim( value );\n    }\n\n    var type = property.type;\n    if( !type ){ return null; } // no type, no luck\n\n    // check if bypass is null or empty string (i.e. indication to delete bypass property)\n    if( propIsBypass && (value === '' || value === null) ){\n      return {\n        name: name,\n        value: value,\n        bypass: true,\n        deleteBypass: true\n      };\n    }\n\n    var hasPie = name.match(/pie-(\\d+)-background-size/);\n\n    // check if value is a function used as a mapper\n    if( $$.is.fn(value) ){\n      return {\n        name: name,\n        value: value,\n        strValue: 'fn',\n        mapped: types.fn,\n        bypass: propIsBypass,\n        hasPie: hasPie\n      };\n    }\n\n    // check if value is mapped\n    var data, mapData, layoutData, mapLayoutData, scratch, mapScratch;\n    if( !valueIsString || propIsFlat ){\n      // then don't bother to do the expensive regex checks\n\n    } else if(\n      ( data = new RegExp( types.data.regex ).exec( value ) ) ||\n      ( layoutData = new RegExp( types.layoutData.regex ).exec( value ) ) ||\n      ( scratch = new RegExp( types.scratch.regex ).exec( value ) )\n    ){\n      if( propIsBypass ){ return false; } // mappers not allowed in bypass\n\n      var mapped;\n      if( data ){\n        mapped = types.data;\n      } else if( layoutData ){\n        mapped = types.layoutData;\n      } else {\n        mapped = types.scratch;\n      }\n\n      data = data || layoutData || scratch;\n\n      return {\n        name: name,\n        value: data,\n        strValue: '' + value,\n        mapped: mapped,\n        field: data[1],\n        bypass: propIsBypass,\n        hasPie: hasPie\n      };\n\n    } else if(\n      ( mapData = new RegExp( types.mapData.regex ).exec( value ) ) ||\n      ( mapLayoutData = new RegExp( types.mapLayoutData.regex ).exec( value ) ) ||\n      ( mapScratch = new RegExp( types.mapScratch.regex ).exec( value ) )\n    ){\n      if( propIsBypass ){ return false; } // mappers not allowed in bypass\n\n      var mapped;\n      if( mapData ){\n        mapped = types.mapData;\n      } else if( mapLayoutData ){\n        mapped = types.mapLayoutData;\n      } else {\n        mapped = types.mapScratch;\n      }\n\n      mapData = mapData || mapLayoutData || mapScratch;\n\n      // we can map only if the type is a colour or a number\n      if( !(type.color || type.number) ){ return false; }\n\n      var valueMin = this.parse( name, mapData[4]); // parse to validate\n      if( !valueMin || valueMin.mapped ){ return false; } // can't be invalid or mapped\n\n      var valueMax = this.parse( name, mapData[5]); // parse to validate\n      if( !valueMax || valueMax.mapped ){ return false; } // can't be invalid or mapped\n\n      // check if valueMin and valueMax are the same\n      if( valueMin.value === valueMax.value ){\n        return false; // can't make much of a mapper without a range\n\n      } else if( type.color ){\n        var c1 = valueMin.value;\n        var c2 = valueMax.value;\n\n        var same = c1[0] === c2[0] // red\n          && c1[1] === c2[1] // green\n          && c1[2] === c2[2] // blue\n          && ( // optional alpha\n            c1[3] === c2[3] // same alpha outright\n            || (\n              (c1[3] == null || c1[3] === 1) // full opacity for colour 1?\n              &&\n              (c2[3] == null || c2[3] === 1) // full opacity for colour 2?\n            )\n          )\n        ;\n\n        if( same ){ return false; } // can't make a mapper without a range\n      }\n\n      return {\n        name: name,\n        value: mapData,\n        strValue: '' + value,\n        mapped: mapped,\n        field: mapData[1],\n        fieldMin: parseFloat( mapData[2] ), // min & max are numeric\n        fieldMax: parseFloat( mapData[3] ),\n        valueMin: valueMin.value,\n        valueMax: valueMax.value,\n        bypass: propIsBypass,\n        hasPie: hasPie\n      };\n    }\n\n    // check the type and return the appropriate object\n    if( type.number ){\n      var units;\n      var implicitUnits = 'px'; // not set => px\n\n      if( type.units ){ // use specified units if set\n        units = type.units;\n      }\n\n      if( type.implicitUnits ){\n        implicitUnits = type.implicitUnits;\n      }\n\n      if( !type.unitless ){\n        if( valueIsString ){\n          var unitsRegex = 'px|em' + (type.allowPercent ? '|\\\\%' : '');\n          if( units ){ unitsRegex = units; } // only allow explicit units if so set\n          var match = value.match( '^(' + $$.util.regex.number + ')(' + unitsRegex + ')?' + '$' );\n\n          if( match ){\n            value = match[1];\n            units = match[2] || implicitUnits;\n          }\n\n        } else if( !units || type.implicitUnits ) {\n          units = implicitUnits; // implicitly px if unspecified\n        }\n      }\n\n      value = parseFloat( value );\n\n      // if not a number and enums not allowed, then the value is invalid\n      if( isNaN(value) && type.enums === undefined ){\n        return null;\n      }\n\n      // check if this number type also accepts special keywords in place of numbers\n      // (i.e. `left`, `auto`, etc)\n      if( isNaN(value) && type.enums !== undefined ){\n        value = passedValue;\n\n        for( var i = 0; i < type.enums.length; i++ ){\n          var en = type.enums[i];\n\n          if( en === value ){\n            return {\n              name: name,\n              value: value,\n              strValue: '' + value,\n              bypass: propIsBypass\n            };\n          }\n        }\n\n        return null; // failed on enum after failing on number\n      }\n\n      // check if value must be an integer\n      if( type.integer && !$$.is.integer(value) ){\n        return null;\n      }\n\n      // check value is within range\n      if( (type.min !== undefined && value < type.min)\n      || (type.max !== undefined && value > type.max)\n      ){\n        return null;\n      }\n\n      var ret = {\n        name: name,\n        value: value,\n        strValue: '' + value + (units ? units : ''),\n        units: units,\n        bypass: propIsBypass,\n        hasPie: hasPie && value != null && value !== 0 && value !== ''\n      };\n\n      // normalise value in pixels\n      if( type.unitless || (units !== 'px' && units !== 'em') ){\n        // then pxValue does not apply\n      } else {\n        ret.pxValue = ( units === 'px' || !units ? (value) : (this.getEmSizeInPixels() * value) );\n      }\n\n      // normalise value in ms\n      if( units === 'ms' || units === 's' ){\n        ret.msValue = units === 'ms' ? value : 1000 * value;\n      }\n\n      return ret;\n\n    } else if( type.propList ) {\n\n      var props = [];\n      var propsStr = '' + value;\n\n      if( propsStr === 'none' ){\n        // leave empty\n\n      } else { // go over each prop\n\n        var propsSplit = propsStr.split(',');\n        for( var i = 0; i < propsSplit.length; i++ ){\n          var propName = $$.util.trim( propsSplit[i] );\n\n          if( $$.style.properties[propName] ){\n            props.push( propName );\n          }\n        }\n\n        if( props.length === 0 ){ return null; }\n\n      }\n\n      return {\n        name: name,\n        value: props,\n        strValue: props.length === 0 ? 'none' : props.join(', '),\n        bypass: propIsBypass\n      };\n\n    } else if( type.color ){\n      var tuple = $$.util.color2tuple( value );\n\n      if( !tuple ){ return null; }\n\n      return {\n        name: name,\n        value: tuple,\n        strValue: '' + value,\n        bypass: propIsBypass\n      };\n\n    } else if( type.enums ){\n      for( var i = 0; i < type.enums.length; i++ ){\n        var en = type.enums[i];\n\n        if( en === value ){\n          return {\n            name: name,\n            value: value,\n            strValue: '' + value,\n            bypass: propIsBypass\n          };\n        }\n      }\n\n      return null;\n\n    } else if( type.regex ){\n      var regex = new RegExp( type.regex ); // make a regex from the type\n      var m = regex.exec( value );\n\n      if( m ){ // regex matches\n        return {\n          name: name,\n          value: m,\n          strValue: '' + value,\n          bypass: propIsBypass\n        };\n      } else { // regex doesn't match\n        return null; // didn't match the regex so the value is bogus\n      }\n\n    } else if( type.string ){\n      // just return\n      return {\n        name: name,\n        value: value,\n        strValue: '' + value,\n        bypass: propIsBypass\n      };\n\n    } else {\n      return null; // not a type we can handle\n    }\n\n  };\n\n  // create a new context from the specified selector string and switch to that context\n  $$.styfn.selector = function( selectorStr ){\n    // 'core' is a special case and does not need a selector\n    var selector = selectorStr === 'core' ? null : new $$.Selector( selectorStr );\n\n    var i = this.length++; // new context means new index\n    this[i] = {\n      selector: selector,\n      properties: [],\n      mappedProperties: [],\n      index: i\n    };\n\n    return this; // chaining\n  };\n\n  // add one or many css rules to the current context\n  $$.styfn.css = function(){\n    var args = arguments;\n\n    switch( args.length ){\n    case 1:\n      var map = args[0];\n\n      for( var i = 0; i < $$.style.properties.length; i++ ){\n        var prop = $$.style.properties[i];\n        var mapVal = map[ prop.name ];\n\n        if( mapVal === undefined ){\n          mapVal = map[ $$.util.dash2camel(prop.name) ];\n        }\n\n        if( mapVal !== undefined ){\n          this.cssRule( prop.name, mapVal );\n        }\n      }\n\n      break;\n\n    case 2:\n      this.cssRule( args[0], args[1] );\n      break;\n\n    default:\n      break; // do nothing if args are invalid\n    }\n\n    return this; // chaining\n  };\n  $$.styfn.style = $$.styfn.css;\n\n  // add a single css rule to the current context\n  $$.styfn.cssRule = function( name, value ){\n    // name-value pair\n    var property = this.parse( name, value );\n\n    // add property to current context if valid\n    if( property ){\n      var i = this.length - 1;\n      this[i].properties.push( property );\n      this[i].properties[ property.name ] = property; // allow access by name as well\n\n      if( property.hasPie ){\n        this._private.hasPie = true;\n      }\n\n      if( property.mapped ){\n        this[i].mappedProperties.push( property );\n      }\n\n      // add to core style if necessary\n      var currentSelectorIsCore = !this[i].selector;\n      if( currentSelectorIsCore ){\n        this._private.coreStyle[ property.name ] = property;\n      }\n    }\n\n    return this; // chaining\n  };\n\n})( cytoscape );\n\n;(function($$){ 'use strict';\n\n  // (potentially expensive calculation)\n  // apply the style to the element based on\n  // - its bypass\n  // - what selectors match it\n  $$.styfn.apply = function( eles ){\n    var self = this;\n\n    if( self._private.newStyle ){ // clear style caches\n      this._private.contextStyles = {};\n      this._private.propDiffs = {};\n    }\n\n    for( var ie = 0; ie < eles.length; ie++ ){\n      var ele = eles[ie];\n      var cxtMeta = self.getContextMeta( ele );\n      var cxtStyle = self.getContextStyle( cxtMeta );\n      var app = self.applyContextStyle( cxtMeta, cxtStyle, ele );\n\n      self.updateTransitions( ele, app.diffProps );\n      self.updateStyleHints( ele );\n\n    } // for elements\n\n    self._private.newStyle = false;\n  };\n\n  $$.styfn.getPropertiesDiff = function( oldCxtKey, newCxtKey ){\n    var self = this;\n    var cache = self._private.propDiffs = self._private.propDiffs || {};\n    var dualCxtKey = oldCxtKey + '-' + newCxtKey;\n    var cachedVal = cache[dualCxtKey];\n\n    if( cachedVal ){\n      return cachedVal;\n    }\n\n    var diffProps = [];\n    var addedProp = {};\n\n    for( var i = 0; i < self.length; i++ ){\n      var cxt = self[i];\n      var oldHasCxt = oldCxtKey[i] === 't';\n      var newHasCxt = newCxtKey[i] === 't';\n      var cxtHasDiffed = oldHasCxt !== newHasCxt;\n      var cxtHasMappedProps = cxt.mappedProperties.length > 0;\n\n      if( cxtHasDiffed || cxtHasMappedProps ){\n        var props;\n\n        if( cxtHasDiffed && cxtHasMappedProps ){\n          props = cxt.properties; // suffices b/c mappedProperties is a subset of properties\n        } else if( cxtHasDiffed ){\n          props = cxt.properties; // need to check them all\n        } else if( cxtHasMappedProps ){\n          props = cxt.mappedProperties; // only need to check mapped\n        }\n\n        for( var j = 0; j < props.length; j++ ){\n          var prop = props[j];\n          var name = prop.name;\n\n          // if a later context overrides this property, then the fact that this context has switched/diffed doesn't matter\n          // (semi expensive check since it makes this function O(n^2) on context length, but worth it since overall result\n          // is cached)\n          var laterCxtOverrides = false;\n          for( var k = i + 1; k < self.length; k++ ){\n            var laterCxt = self[k];\n            var hasLaterCxt = newCxtKey[k] === 't';\n\n            if( !hasLaterCxt ){ continue; } // can't override unless the context is active\n\n            laterCxtOverrides = laterCxt.properties[ prop.name ] != null;\n\n            if( laterCxtOverrides ){ break; } // exit early as long as one later context overrides\n          }\n\n          if( !addedProp[name] && !laterCxtOverrides ){\n            addedProp[name] = true;\n            diffProps.push( name );\n          }\n        } // for props\n      } // if\n\n    } // for contexts\n\n    cache[ dualCxtKey ] = diffProps;\n    return diffProps;\n  };\n\n  $$.styfn.getContextMeta = function( ele ){\n    var self = this;\n    var cxtKey = '';\n    var diffProps;\n    var prevKey = ele._private.styleCxtKey || '';\n\n    if( self._private.newStyle ){\n      prevKey = ''; // since we need to apply all style if a fresh stylesheet\n    }\n\n    // get the cxt key\n    for( var i = 0; i < self.length; i++ ){\n      var context = self[i];\n      var contextSelectorMatches = context.selector && context.selector.matches( ele ); // NB: context.selector may be null for 'core'\n\n      if( contextSelectorMatches ){\n        cxtKey += 't';\n      } else {\n        cxtKey += 'f';\n      }\n    } // for context\n\n    diffProps = self.getPropertiesDiff( prevKey, cxtKey );\n\n    ele._private.styleCxtKey = cxtKey;\n\n    return {\n      key: cxtKey,\n      diffPropNames: diffProps\n    };\n  };\n\n  // gets a computed ele style object based on matched contexts\n  $$.styfn.getContextStyle = function( cxtMeta ){\n    var cxtKey = cxtMeta.key;\n    var self = this;\n    var cxtStyles = this._private.contextStyles = this._private.contextStyles || {};\n\n    // if already computed style, returned cached copy\n    if( cxtStyles[cxtKey] ){ return cxtStyles[cxtKey]; }\n\n    var style = {\n      _private: {\n        key: cxtKey\n      }\n    };\n\n    for( var i = 0; i < self.length; i++ ){\n      var cxt = self[i];\n      var hasCxt = cxtKey[i] === 't';\n\n      if( !hasCxt ){ continue; }\n\n      for( var j = 0; j < cxt.properties.length; j++ ){\n        var prop = cxt.properties[j];\n        var styProp = style[ prop.name ] = prop;\n\n        styProp.context = cxt;\n      }\n    }\n\n    cxtStyles[cxtKey] = style;\n    return style;\n  };\n\n  $$.styfn.applyContextStyle = function( cxtMeta, cxtStyle, ele ){\n    var self = this;\n    var diffProps = cxtMeta.diffPropNames;\n    var retDiffProps = {};\n\n    for( var i = 0; i < diffProps.length; i++ ){\n      var diffPropName = diffProps[i];\n      var cxtProp = cxtStyle[ diffPropName ];\n      var eleProp = ele._private.style[ diffPropName ];\n\n      // save cycles when the context prop doesn't need to be applied\n      if( !cxtProp || eleProp === cxtProp ){ continue; }\n\n      var retDiffProp = retDiffProps[ diffPropName ] = {\n        prev: eleProp\n      };\n\n      self.applyParsedProperty( ele, cxtProp );\n\n      retDiffProp.next = ele._private.style[ diffPropName ];\n\n      if( retDiffProp.next && retDiffProp.next.bypass ){\n        retDiffProp.next = retDiffProp.next.bypassed;\n      }\n    }\n\n    return {\n      diffProps: retDiffProps\n    };\n  };\n\n  $$.styfn.updateStyleHints = function(ele){\n    var _p = ele._private;\n    var self = this;\n    var style = _p.style;\n\n    // set whether has pie or not; for greater efficiency\n    var hasPie = false;\n    if( _p.group === 'nodes' && self._private.hasPie ){\n      for( var i = 1; i <= $$.style.pieBackgroundN; i++ ){ // 1..N\n        var size = _p.style['pie-' + i + '-background-size'].value;\n\n        if( size > 0 ){\n          hasPie = true;\n          break;\n        }\n      }\n    }\n\n    _p.hasPie = hasPie;\n\n    var transform = style['text-transform'].strValue;\n    var content = style['content'].strValue;\n    var fStyle = style['font-style'].strValue;\n    var size = style['font-size'].pxValue + 'px';\n    var family = style['font-family'].strValue;\n    // var variant = style['font-variant'].strValue;\n    var weight = style['font-weight'].strValue;\n    var valign = style['text-valign'].strValue;\n    var halign = style['text-valign'].strValue;\n    var oWidth = style['text-outline-width'].pxValue;\n    var wrap = style['text-wrap'].strValue;\n    var wrapW = style['text-max-width'].pxValue;\n    _p.labelKey = fStyle +'$'+ size +'$'+ family +'$'+ weight +'$'+ content +'$'+ transform +'$'+ valign +'$'+ halign +'$'+ oWidth + '$' + wrap + '$' + wrapW;\n    _p.fontKey = fStyle +'$'+ weight +'$'+ size +'$'+ family;\n\n    var width = style['width'].pxValue;\n    var height = style['height'].pxValue;\n    var borderW = style['border-width'].pxValue;\n    _p.boundingBoxKey = width +'$'+ height +'$'+ borderW;\n\n    if( ele._private.group === 'edges' ){\n      var cpss = style['control-point-step-size'].pxValue;\n      var cpd = style['control-point-distance'] ? style['control-point-distance'].pxValue : undefined;\n      var cpw = style['control-point-weight'].value;\n      var curve = style['curve-style'].strValue;\n\n      _p.boundingBoxKey += '$'+ cpss +'$'+ cpd +'$'+ cpw +'$'+ curve;\n    }\n\n    _p.styleKey = Date.now(); // probably safe to use applied time and much faster\n    // for( var i = 0; i < $$.style.properties.length; i++ ){\n    //   var prop = $$.style.properties[i];\n    //   var eleProp = _p.style[ prop.name ];\n    //   var val = eleProp && eleProp.strValue ? eleProp.strValue : 'undefined';\n\n    //   _p.styleKey += '$' + val;\n    // }\n  };\n\n  // apply a property to the style (for internal use)\n  // returns whether application was successful\n  //\n  // now, this function flattens the property, and here's how:\n  //\n  // for parsedProp:{ bypass: true, deleteBypass: true }\n  // no property is generated, instead the bypass property in the\n  // element's style is replaced by what's pointed to by the `bypassed`\n  // field in the bypass property (i.e. restoring the property the\n  // bypass was overriding)\n  //\n  // for parsedProp:{ mapped: truthy }\n  // the generated flattenedProp:{ mapping: prop }\n  //\n  // for parsedProp:{ bypass: true }\n  // the generated flattenedProp:{ bypassed: parsedProp }\n  $$.styfn.applyParsedProperty = function( ele, parsedProp ){\n    var prop = parsedProp;\n    var style = ele._private.style;\n    var fieldVal, flatProp;\n    var types = $$.style.types;\n    var type = $$.style.properties[ prop.name ].type;\n    var propIsBypass = prop.bypass;\n    var origProp = style[ prop.name ];\n    var origPropIsBypass = origProp && origProp.bypass;\n    var _p = ele._private;\n\n    // can't apply auto to width or height unless it's a parent node\n    if( (parsedProp.name === 'height' || parsedProp.name === 'width') && ele.isNode() ){\n      if( parsedProp.value === 'auto' && !ele.isParent() ){\n        return false;\n      } else if( parsedProp.value !== 'auto' && ele.isParent() ){\n        prop = parsedProp = this.parse( parsedProp.name, 'auto', propIsBypass );\n      }\n    }\n\n    // check if we need to delete the current bypass\n    if( propIsBypass && prop.deleteBypass ){ // then this property is just here to indicate we need to delete\n      var currentProp = style[ prop.name ];\n\n      // can only delete if the current prop is a bypass and it points to the property it was overriding\n      if( !currentProp ){\n        return true; // property is already not defined\n      } else if( currentProp.bypass && currentProp.bypassed ){ // then replace the bypass property with the original\n\n        // because the bypassed property was already applied (and therefore parsed), we can just replace it (no reapplying necessary)\n        style[ prop.name ] = currentProp.bypassed;\n        return true;\n\n      } else {\n        return false; // we're unsuccessful deleting the bypass\n      }\n    }\n\n    var printMappingErr = function(){\n      $$.util.error('Do not assign mappings to elements without corresponding data (e.g. ele `'+ ele.id() +'` for property `'+ prop.name +'` with data field `'+ prop.field +'`); try a `['+ prop.field +']` selector to limit scope to elements with `'+ prop.field +'` defined');\n    };\n\n    // put the property in the style objects\n    switch( prop.mapped ){ // flatten the property if mapped\n    case types.mapData:\n    case types.mapLayoutData:\n    case types.mapScratch:\n\n      var isLayout = prop.mapped === types.mapLayoutData;\n      var isScratch = prop.mapped === types.mapScratch;\n\n      // flatten the field (e.g. data.foo.bar)\n      var fields = prop.field.split(\".\");\n      var fieldVal;\n\n      if( isScratch || isLayout ){\n        fieldVal = _p.scratch;\n      } else {\n        fieldVal = _p.data;\n      }\n\n      for( var i = 0; i < fields.length && fieldVal; i++ ){\n        var field = fields[i];\n        fieldVal = fieldVal[ field ];\n      }\n\n      var percent;\n      if( !$$.is.number(fieldVal) ){ // then keep the mapping but assume 0% for now\n        percent = 0;\n      } else {\n        percent = (fieldVal - prop.fieldMin) / (prop.fieldMax - prop.fieldMin);\n      }\n\n      // make sure to bound percent value\n      if( percent < 0 ){\n        percent = 0;\n      } else if( percent > 1 ){\n        percent = 1;\n      }\n\n      if( type.color ){\n        var r1 = prop.valueMin[0];\n        var r2 = prop.valueMax[0];\n        var g1 = prop.valueMin[1];\n        var g2 = prop.valueMax[1];\n        var b1 = prop.valueMin[2];\n        var b2 = prop.valueMax[2];\n        var a1 = prop.valueMin[3] == null ? 1 : prop.valueMin[3];\n        var a2 = prop.valueMax[3] == null ? 1 : prop.valueMax[3];\n\n        var clr = [\n          Math.round( r1 + (r2 - r1)*percent ),\n          Math.round( g1 + (g2 - g1)*percent ),\n          Math.round( b1 + (b2 - b1)*percent ),\n          Math.round( a1 + (a2 - a1)*percent )\n        ];\n\n        flatProp = { // colours are simple, so just create the flat property instead of expensive string parsing\n          bypass: prop.bypass, // we're a bypass if the mapping property is a bypass\n          name: prop.name,\n          value: clr,\n          strValue: 'rgb(' + clr[0] + ', ' + clr[1] + ', ' + clr[2] + ')'\n        };\n\n      } else if( type.number ){\n        var calcValue = prop.valueMin + (prop.valueMax - prop.valueMin) * percent;\n        flatProp = this.parse( prop.name, calcValue, prop.bypass, true );\n\n      } else {\n        return false; // can only map to colours and numbers\n      }\n\n      if( !flatProp ){ // if we can't flatten the property, then use the origProp so we still keep the mapping itself\n        flatProp = this.parse( prop.name, origProp.strValue, prop.bypass, true );\n      }\n\n      if( !flatProp ){ printMappingErr(); }\n      flatProp.mapping = prop; // keep a reference to the mapping\n      prop = flatProp; // the flattened (mapped) property is the one we want\n\n      break;\n\n    // direct mapping\n    case types.data:\n    case types.layoutData:\n    case types.scratch:\n      var isLayout = prop.mapped === types.layoutData;\n      var isScratch = prop.mapped === types.scratch;\n\n      // flatten the field (e.g. data.foo.bar)\n      var fields = prop.field.split(\".\");\n      var fieldVal;\n\n      if( isScratch || isLayout ){\n        fieldVal = _p.scratch;\n      } else {\n        fieldVal = _p.data;\n      }\n\n      if( fieldVal ){ for( var i = 0; i < fields.length; i++ ){\n        var field = fields[i];\n        fieldVal = fieldVal[ field ];\n      } }\n\n      flatProp = this.parse( prop.name, fieldVal, prop.bypass, true );\n\n      if( !flatProp ){ // if we can't flatten the property, then use the origProp so we still keep the mapping itself\n        var flatPropVal = origProp ? origProp.strValue : '';\n\n        flatProp = this.parse( prop.name, flatPropVal, prop.bypass, true );\n      }\n\n      if( !flatProp ){ printMappingErr(); }\n      flatProp.mapping = prop; // keep a reference to the mapping\n      prop = flatProp; // the flattened (mapped) property is the one we want\n\n      break;\n\n    case types.fn:\n      var fn = prop.value;\n      var fnRetVal = fn( ele );\n\n      flatProp = this.parse( prop.name, fnRetVal, prop.bypass, true );\n      flatProp.mapping = prop; // keep a reference to the mapping\n      prop = flatProp; // the flattened (mapped) property is the one we want\n\n      break;\n\n    case undefined:\n      break; // just set the property\n\n    default:\n      return false; // not a valid mapping\n    }\n\n    // if the property is a bypass property, then link the resultant property to the original one\n    if( propIsBypass ){\n      if( origPropIsBypass ){ // then this bypass overrides the existing one\n        prop.bypassed = origProp.bypassed; // steal bypassed prop from old bypass\n      } else { // then link the orig prop to the new bypass\n        prop.bypassed = origProp;\n      }\n\n      style[ prop.name ] = prop; // and set\n\n    } else { // prop is not bypass\n      if( origPropIsBypass ){ // then keep the orig prop (since it's a bypass) and link to the new prop\n        origProp.bypassed = prop;\n      } else { // then just replace the old prop with the new one\n        style[ prop.name ] = prop;\n      }\n    }\n\n    return true;\n  };\n\n  // updates the visual style for all elements (useful for manual style modification after init)\n  $$.styfn.update = function(){\n    var cy = this._private.cy;\n    var eles = cy.elements();\n\n    eles.updateStyle();\n  };\n\n  // just update the functional properties (i.e. mappings) in the elements'\n  // styles (less expensive than recalculation)\n  $$.styfn.updateMappers = function( eles ){\n    for( var i = 0; i < eles.length; i++ ){ // for each ele\n      var ele = eles[i];\n      var style = ele._private.style;\n\n      for( var j = 0; j < $$.style.properties.length; j++ ){ // for each prop\n        var prop = $$.style.properties[j];\n        var propInStyle = style[ prop.name ];\n\n        if( propInStyle && propInStyle.mapping ){\n          var mapping = propInStyle.mapping;\n          this.applyParsedProperty( ele, mapping ); // reapply the mapping property\n        }\n      }\n\n      this.updateStyleHints( ele );\n    }\n  };\n\n  // diffProps : { name => { prev, next } }\n  $$.styfn.updateTransitions = function( ele, diffProps, isBypass ){\n    var self = this;\n    var style = ele._private.style;\n\n    var props = style['transition-property'].value;\n    var duration = style['transition-duration'].msValue;\n    var delay = style['transition-delay'].msValue;\n    var css = {};\n\n    if( props.length > 0 && duration > 0 ){\n\n      // build up the style to animate towards\n      var anyPrev = false;\n      for( var i = 0; i < props.length; i++ ){\n        var prop = props[i];\n        var styProp = style[ prop ];\n        var diffProp = diffProps[ prop ];\n\n        if( !diffProp ){ continue; }\n\n        var prevProp = diffProp.prev;\n        var fromProp = prevProp;\n        var toProp = diffProp.next != null ? diffProp.next : styProp;\n        var diff = false;\n\n        if( !fromProp ){ continue; }\n\n        // consider px values\n        if( $$.is.number( fromProp.pxValue ) && $$.is.number( toProp.pxValue ) ){\n          diff = fromProp.pxValue !== toProp.pxValue;\n\n        // consider numerical values\n        } else if( $$.is.number( fromProp.value ) && $$.is.number( toProp.value ) ){\n          diff = fromProp.value !== toProp.value;\n\n        // consider colour values\n        } else if( $$.is.array( fromProp.value ) && $$.is.array( toProp.value ) ){\n          diff = fromProp.value[0] !== toProp.value[0]\n            || fromProp.value[1] !== toProp.value[1]\n            || fromProp.value[2] !== toProp.value[2]\n          ;\n        }\n\n        // the previous value is good for an animation only if it's different\n        if( diff ){\n          css[ prop ] = toProp.strValue; // to val\n          this.applyBypass(ele, prop, fromProp.strValue); // from val\n          anyPrev = true;\n        }\n\n      } // end if props allow ani\n\n      // can't transition if there's nothing previous to transition from\n      if( !anyPrev ){ return; }\n\n      ele._private.transitioning = true;\n\n      ele.stop();\n\n      if( delay > 0 ){\n        ele.delay( delay );\n      }\n\n      ele.animate({\n        css: css\n      }, {\n        duration: duration,\n        queue: false,\n        complete: function(){\n          if( !isBypass ){\n            self.removeBypasses( ele, props );\n          }\n\n          ele._private.transitioning = false;\n        }\n      });\n\n    } else if( ele._private.transitioning ){\n      ele.stop();\n\n      this.removeBypasses( ele, props );\n\n      ele._private.transitioning = false;\n    }\n  };\n\n})( cytoscape );\n\n;(function($$){ 'use strict';\n\n  // bypasses are applied to an existing style on an element, and just tacked on temporarily\n  // returns true iff application was successful for at least 1 specified property\n  $$.styfn.applyBypass = function( eles, name, value, updateTransitions ){\n    var props = [];\n    var isBypass = true;\n    \n    // put all the properties (can specify one or many) in an array after parsing them\n    if( name === \"*\" || name === \"**\" ){ // apply to all property names\n\n      if( value !== undefined ){\n        for( var i = 0; i < $$.style.properties.length; i++ ){\n          var prop = $$.style.properties[i];\n          var name = prop.name;\n\n          var parsedProp = this.parse(name, value, true);\n          \n          if( parsedProp ){\n            props.push( parsedProp );\n          }\n        }\n      }\n\n    } else if( $$.is.string(name) ){ // then parse the single property\n      var parsedProp = this.parse(name, value, true);\n\n      if( parsedProp ){\n        props.push( parsedProp );\n      }\n    } else if( $$.is.plainObject(name) ){ // then parse each property\n      var specifiedProps = name;\n      updateTransitions = value;\n\n      for( var i = 0; i < $$.style.properties.length; i++ ){\n        var prop = $$.style.properties[i];\n        var name = prop.name;\n        var value = specifiedProps[ name ];\n\n        if( value === undefined ){ // try camel case name too\n          value = specifiedProps[ $$.util.dash2camel(name) ];\n        }\n\n        if( value !== undefined ){\n          var parsedProp = this.parse(name, value, true);\n          \n          if( parsedProp ){\n            props.push( parsedProp );\n          }\n        }\n      }\n    } else { // can't do anything without well defined properties\n      return false;\n    }\n\n    // we've failed if there are no valid properties\n    if( props.length === 0 ){ return false; }\n\n    // now, apply the bypass properties on the elements\n    var ret = false; // return true if at least one succesful bypass applied\n    for( var i = 0; i < eles.length; i++ ){ // for each ele\n      var ele = eles[i];\n      var style = ele._private.style;\n      var diffProps = {};\n      var diffProp;\n\n      for( var j = 0; j < props.length; j++ ){ // for each prop\n        var prop = props[j];\n\n        if( updateTransitions ){\n          var prevProp = style[ prop.name ];\n          diffProp = diffProps[ prop.name ] = { prev: prevProp };\n        }\n\n        ret = this.applyParsedProperty( ele, prop ) || ret;\n\n        if( updateTransitions ){\n          diffProp.next = style[ prop.name ];\n        }\n\n      } // for props\n\n      if( updateTransitions ){\n        this.updateTransitions( ele, diffProps, isBypass );\n      }\n    } // for eles\n\n    return ret;\n  };\n\n  // only useful in specific cases like animation\n  $$.styfn.overrideBypass = function( eles, name, value ){\n    for( var i = 0; i < eles.length; i++ ){\n      var ele = eles[i];\n      var prop = ele._private.style[ $$.util.camel2dash(name) ];\n\n      if( !prop.bypass ){ // need a bypass if one doesn't exist\n        this.applyBypass( ele, name, value );\n        continue;\n      }\n\n      prop.value = value;\n      prop.pxValue = value;\n    }\n  };\n\n  $$.styfn.removeAllBypasses = function( eles, updateTransitions ){\n    var isBypass = true;\n\n    for( var j = 0; j < eles.length; j++ ){\n      var ele = eles[j];\n      var diffProps = {};\n      var style = ele._private.style;\n\n      for( var i = 0; i < $$.style.properties.length; i++ ){\n        var prop = $$.style.properties[i];\n        var name = prop.name;\n        var value = ''; // empty => remove bypass\n        var parsedProp = this.parse(name, value, true);\n        var prevProp = style[ prop.name ];\n        var diffProp = diffProps[ prop.name ] = { prev: prevProp };\n\n        this.applyParsedProperty(ele, parsedProp);\n\n        diffProp.next = style[ prop.name ];\n      } // for props\n\n      if( updateTransitions ){\n        this.updateTransitions( ele, diffProps, isBypass );\n      }\n    } // for eles\n  };\n\n  $$.styfn.removeBypasses = function( eles, props, updateTransitions ){\n    var isBypass = true;\n\n    for( var j = 0; j < eles.length; j++ ){\n      var ele = eles[j];\n      var diffProps = {};\n      var style = ele._private.style;\n\n      for( var i = 0; i < props.length; i++ ){\n        var name = props[i];\n        var prop = $$.style.properties[ name ];\n        var value = ''; // empty => remove bypass\n        var parsedProp = this.parse(name, value, true);\n        var prevProp = style[ prop.name ];\n        var diffProp = diffProps[ prop.name ] = { prev: prevProp };\n\n        this.applyParsedProperty(ele, parsedProp);\n\n        diffProp.next = style[ prop.name ];\n      } // for props\n\n      if( updateTransitions ){\n        this.updateTransitions( ele, diffProps, isBypass );\n      }\n    } // for eles\n  };\n\n})( cytoscape );\n;(function($$, window){ 'use strict';\n\n  // gets what an em size corresponds to in pixels relative to a dom element\n  $$.styfn.getEmSizeInPixels = function(){\n    var cy = this._private.cy;\n    var domElement = cy.container();\n\n    if( window && domElement && window.getComputedStyle ){\n      var pxAsStr = window.getComputedStyle(domElement).getPropertyValue('font-size');\n      var px = parseFloat( pxAsStr );\n      return px;\n    } else {\n      return 1; // in case we're running outside of the browser\n    }\n  };\n\n  // gets css property from the core container\n  $$.styfn.containerCss = function( propName ){\n    var cy = this._private.cy;\n    var domElement = cy.container();\n\n    if( window && domElement && window.getComputedStyle ){\n      return window.getComputedStyle(domElement).getPropertyValue( propName );\n    }\n  };\n\n  $$.styfn.containerProperty = function( propName ){\n    var propStr = this.containerCss( propName );\n    var prop = this.parse( propName, propStr );\n    return prop;\n  };\n\n  $$.styfn.containerPropertyAsString = function( propName ){\n    var prop = this.containerProperty( propName );\n\n    if( prop ){\n      return prop.strValue;\n    }\n  };\n\n})( cytoscape, typeof window === 'undefined' ? null : window );\n;(function($$){ 'use strict';\n\n  // gets the rendered style for an element\n  $$.styfn.getRenderedStyle = function( ele ){\n    var ele = ele[0]; // insure it's an element\n\n    if( ele ){\n      var rstyle = {};\n      var style = ele._private.style;\n      var cy = this._private.cy;\n      var zoom = cy.zoom();\n\n      for( var i = 0; i < $$.style.properties.length; i++ ){\n        var prop = $$.style.properties[i];\n        var styleProp = style[ prop.name ];\n\n        if( styleProp ){\n          var val = styleProp.unitless ? styleProp.strValue : (styleProp.pxValue * zoom) + 'px';\n          rstyle[ prop.name ] = val;\n          rstyle[ $$.util.dash2camel(prop.name) ] = val;\n        }\n      }\n\n      return rstyle;\n    }\n  };\n\n  // gets the raw style for an element\n  $$.styfn.getRawStyle = function( ele ){\n    var ele = ele[0]; // insure it's an element\n\n    if( ele ){\n      var rstyle = {};\n      var style = ele._private.style;\n\n      for( var i = 0; i < $$.style.properties.length; i++ ){\n        var prop = $$.style.properties[i];\n        var styleProp = style[ prop.name ];\n\n        if( styleProp ){\n          rstyle[ prop.name ] = styleProp.strValue;\n          rstyle[ $$.util.dash2camel(prop.name) ] = styleProp.strValue;\n        }\n      }\n\n      return rstyle;\n    }\n  };\n\n  // gets the value style for an element (useful for things like animations)\n  $$.styfn.getValueStyle = function( ele, opts ){\n    opts = opts || {};\n\n    var rstyle = opts.array ? [] : {}; \n    var style;\n\n    if( $$.is.element(ele) ){\n      style = ele._private.style;    \n    } else {\n      style = ele; // just passed the style itself\n    }\n\n    if( style ){\n      for( var i = 0; i < $$.style.properties.length; i++ ){\n        var prop = $$.style.properties[i];\n        var styleProp = style[ prop.name ] || style[ $$.util.dash2camel(prop.name) ];\n\n        if( styleProp !== undefined && !$$.is.plainObject( styleProp ) ){ // then make a prop of it\n          styleProp = this.parse(prop.name, styleProp);\n        }\n\n        if( styleProp ){\n          if( opts.array ){\n            rstyle.push( styleProp );\n          } else {\n            rstyle[ prop.name ] = styleProp;\n            rstyle[ $$.util.dash2camel(prop.name) ] = styleProp;\n          }\n        }\n      }\n    }\n\n    return rstyle;\n  };\n\n})( cytoscape );\n;(function($$){ 'use strict';\n\n  $$.style.applyFromJson = function( style, json ){\n    for( var i = 0; i < json.length; i++ ){\n      var context = json[i];\n      var selector = context.selector;\n      var props = context.style || context.css;\n\n      style.selector( selector ); // apply selector\n\n      for( var name in props ){\n        var value = props[name];\n\n        style.css( name, value ); // apply property\n      }\n    }\n\n    return style;\n  };\n\n  // static function\n  $$.style.fromJson = function( cy, json ){\n    var style = new $$.Style(cy);\n\n    $$.style.applyFromJson( style, json );\n\n    return style;\n  };\n\n  // accessible cy.style() function\n  $$.styfn.fromJson = function( json ){\n    var style = this;\n\n    style.resetToDefault();\n\n    $$.style.applyFromJson( style, json );\n\n    return style;\n  };\n\n  // get json from cy.style() api\n  $$.styfn.json = function(){\n    var json = [];\n\n    for( var i = this.defaultLength; i < this.length; i++ ){\n      var cxt = this[i];\n      var selector = cxt.selector;\n      var props = cxt.properties;\n      var css = {};\n\n      for( var j = 0; j < props.length; j++ ){\n        var prop = props[j];\n        css[ prop.name ] = prop.strValue;\n      }\n\n      json.push({\n        selector: !selector ? 'core' : selector.toString(),\n        style: css\n      });\n    }\n\n    return json;\n  };\n\n})( cytoscape );\n;(function($$){ 'use strict';\n\n  $$.style.applyFromString = function( style, string ){\n    var remaining = '' + string;\n    var selAndBlockStr;\n    var blockRem;\n    var propAndValStr;\n\n    // remove comments from the style string\n    remaining = remaining.replace(/[/][*](\\s|.)+?[*][/]/g, '');\n\n    function removeSelAndBlockFromRemaining(){\n      // remove the parsed selector and block from the remaining text to parse\n      if( remaining.length > selAndBlockStr.length ){\n        remaining = remaining.substr( selAndBlockStr.length );\n      } else {\n        remaining = '';\n      }\n    }\n\n    function removePropAndValFromRem(){\n      // remove the parsed property and value from the remaining block text to parse\n      if( blockRem.length > propAndValStr.length ){\n        blockRem = blockRem.substr( propAndValStr.length );\n      } else {\n        blockRem = '';\n      }\n    }\n\n    while(true){\n      var nothingLeftToParse = remaining.match(/^\\s*$/);\n      if( nothingLeftToParse ){ break; }\n\n      var selAndBlock = remaining.match(/^\\s*((?:.|\\s)+?)\\s*\\{((?:.|\\s)+?)\\}/);\n\n      if( !selAndBlock ){\n        $$.util.error('Halting stylesheet parsing: String stylesheet contains more to parse but no selector and block found in: ' + remaining);\n        break;\n      }\n\n      selAndBlockStr = selAndBlock[0];\n\n      // parse the selector\n      var selectorStr = selAndBlock[1];\n      if( selectorStr !== 'core' ){\n        var selector = new $$.Selector( selectorStr );\n        if( selector._private.invalid ){\n          $$.util.error('Skipping parsing of block: Invalid selector found in string stylesheet: ' + selectorStr);\n\n          // skip this selector and block\n          removeSelAndBlockFromRemaining();\n          continue; \n        }\n      }\n\n      // parse the block of properties and values\n      var blockStr = selAndBlock[2];\n      var invalidBlock = false;\n      blockRem = blockStr;\n      var props = [];\n\n      while(true){\n        var nothingLeftToParse = blockRem.match(/^\\s*$/);\n        if( nothingLeftToParse ){ break; }\n\n        var propAndVal = blockRem.match(/^\\s*(.+?)\\s*:\\s*(.+?)\\s*;/);\n\n        if( !propAndVal ){\n          $$.util.error('Skipping parsing of block: Invalid formatting of style property and value definitions found in:' + blockStr);\n          invalidBlock = true;\n          break;\n        }\n\n        propAndValStr = propAndVal[0];\n        var propStr = propAndVal[1];\n        var valStr = propAndVal[2];\n\n        var prop = $$.style.properties[ propStr ];\n        if( !prop ){\n          $$.util.error('Skipping property: Invalid property name in: ' + propAndValStr);\n\n          // skip this property in the block\n          removePropAndValFromRem();\n          continue;\n        }\n\n        var parsedProp = style.parse( propStr, valStr );\n\n        if( !parsedProp ){\n          $$.util.error('Skipping property: Invalid property definition in: ' + propAndValStr);\n\n          // skip this property in the block\n          removePropAndValFromRem();\n          continue;\n        }\n\n        props.push({\n          name: propStr,\n          val: valStr\n        });\n        removePropAndValFromRem();\n      }\n\n      if( invalidBlock ){\n        removeSelAndBlockFromRemaining();\n        break;\n      }\n\n      // put the parsed block in the style\n      style.selector( selectorStr );\n      for( var i = 0; i < props.length; i++ ){\n        var prop = props[i];\n        style.css( prop.name, prop.val );\n      }\n\n      removeSelAndBlockFromRemaining();\n    }\n\n    return style;\n  };\n\n  $$.style.fromString = function( cy, string ){\n    var style = new $$.Style(cy);\n    \n    $$.style.applyFromString( style, string );\n\n    return style;\n  };\n\n  $$.styfn.fromString = function( string ){\n    var style = this;\n\n    style.resetToDefault();\n\n    $$.style.applyFromString( style, string );\n\n    return style;\n  };\n\n})( cytoscape );\n\n;(function($$){ 'use strict';\n\n  // a dummy stylesheet object that doesn't need a reference to the core\n  // (useful for init)\n  $$.stylesheet = $$.Stylesheet = function(){\n    if( !(this instanceof $$.Stylesheet) ){\n      return new $$.Stylesheet();\n    }\n\n    this.length = 0;\n  };\n\n  $$.sheetfn = $$.Stylesheet.prototype;\n\n  // just store the selector to be parsed later\n  $$.sheetfn.selector = function( selector ){\n    var i = this.length++;\n\n    this[i] = {\n      selector: selector,\n      properties: []\n    };\n\n    return this; // chaining\n  };\n\n  // just store the property to be parsed later\n  $$.sheetfn.css = function( name, value ){\n    var i = this.length - 1;\n\n    if( $$.is.string(name) ){\n      this[i].properties.push({\n        name: name,\n        value: value\n      });\n    } else if( $$.is.plainObject(name) ){\n      var map = name;\n\n      for( var j = 0; j < $$.style.properties.length; j++ ){\n        var prop = $$.style.properties[j];\n        var mapVal = map[ prop.name ];\n\n        if( mapVal === undefined ){ // also try camel case name\n          mapVal = map[ $$.util.dash2camel(prop.name) ];\n        }\n\n        if( mapVal !== undefined ){\n          var name = prop.name;\n          var value = mapVal;\n\n          this[i].properties.push({\n            name: name,\n            value: value\n          });\n        }\n      }\n    }\n\n    return this; // chaining\n  };\n\n  $$.sheetfn.style = $$.sheetfn.css;\n\n  // generate a real style object from the dummy stylesheet\n  $$.sheetfn.generateStyle = function( cy ){\n    var style = new $$.Style(cy);\n\n    for( var i = 0; i < this.length; i++ ){\n      var context = this[i];\n      var selector = context.selector;\n      var props = context.properties;\n\n      style.selector(selector); // apply selector\n\n      for( var j = 0; j < props.length; j++ ){\n        var prop = props[j];\n\n        style.css( prop.name, prop.value ); // apply property\n      }\n    }\n\n    return style;\n  };\n\n})( cytoscape );\n// cross-env thread/worker\n// NB : uses (heavyweight) processes on nodejs so best not to create too many threads\n\n;(function($$, window){ 'use strict';\n\n  $$.Thread = function( fn ){\n    if( !(this instanceof $$.Thread) ){\n      return new $$.Thread( fn );\n    }\n\n    this._private = {\n      requires: [],\n      files: [],\n      queue: null,\n      pass: []\n    };\n\n    if( fn ){\n      this.run( fn );\n    }\n\n  };\n\n  $$.thread = $$.Thread;\n  $$.thdfn = $$.Thread.prototype; // short alias\n\n  $$.fn.thread = function( fnMap, options ){\n    for( var name in fnMap ){\n      var fn = fnMap[name];\n      $$.Thread.prototype[ name ] = fn;\n    }\n  };\n\n  var stringifyFieldVal = function( val ){\n    var valStr = $$.is.fn( val ) ? val.toString() : 'JSON.parse(\"' + JSON.stringify(val) + '\")';\n\n    return valStr;\n  };\n\n  // allows for requires with prototypes and subobjs etc\n  var fnAsRequire = function( fn ){\n    var req;\n    var fnName;\n\n    if( $$.is.object(fn) && fn.fn ){ // manual fn\n      req = fnAs( fn.fn, fn.name );\n      fnName = fn.name;\n      fn = fn.fn;\n    } else if( $$.is.fn(fn) ){ // auto fn\n      req = fn.toString();\n      fnName = fn.name;\n    } else if( $$.is.string(fn) ){ // stringified fn\n      req = fn;\n    } else if( $$.is.object(fn) ){ // plain object\n      if( fn.proto ){\n        req = '';\n      } else {\n        req = fn.name + ' = {};';\n      }\n\n      fnName = fn.name;\n      fn = fn.obj;\n    }\n\n    req += '\\n';\n\n    var protoreq = function( val, subname ){\n      if( val.prototype ){\n        var protoNonempty = false;\n        for( var prop in val.prototype ){ protoNonempty = true; break; }\n\n        if( protoNonempty ){\n          req += fnAsRequire( {\n            name: subname,\n            obj: val,\n            proto: true\n          }, val );\n        }\n      }\n    };\n\n    // pull in prototype\n    if( fn.prototype && fnName != null ){\n\n      for( var name in fn.prototype ){\n        var protoStr = '';\n\n        var val = fn.prototype[ name ];\n        var valStr = stringifyFieldVal( val );\n        var subname = fnName + '.prototype.' + name;\n\n        protoStr += subname + ' = ' + valStr + ';\\n';\n\n        if( protoStr ){\n          req += protoStr;\n        }\n\n        protoreq( val, subname ); // subobject with prototype\n      }\n  \n    }\n\n    // pull in properties for obj/fns\n    if( !$$.is.string(fn) ){ for( var name in fn ){\n      var propsStr = '';\n\n      if( fn.hasOwnProperty(name) ){\n        var val = fn[ name ];\n        var valStr = stringifyFieldVal( val );\n        var subname = fnName + '[\"' + name + '\"]';\n\n        propsStr += subname + ' = ' + valStr + ';\\n';\n      }\n\n      if( propsStr ){\n        req += propsStr;\n      }\n\n      protoreq( val, subname ); // subobject with prototype\n    } }\n\n    return req;\n  };\n  \n  var isPathStr = function( str ){\n    return $$.is.string(str) && str.match(/\\.js$/);\n  };\n\n  $$.fn.thread({\n\n    require: function( fn, as ){\n      if( isPathStr(fn) ){\n        this._private.files.push( fn );\n        \n        return this;\n      }\n        \n      if( as ){\n        if( $$.is.fn(fn) ){\n          // disabled b/c doesn't work with forced names on functions w/ prototypes\n          //fn = fnAs( fn, as );\n\n          as = as || fn.name;\n\n          fn = { name: as, fn: fn };\n        } else {\n          fn = { name: as, obj: fn };\n        }\n      }\n\n      this._private.requires.push( fn );\n\n      return this; // chaining\n    },\n\n    pass: function( data ){\n      this._private.pass.push( data );\n\n      return this; // chaining\n    },\n\n    run: function( fn, pass ){ // fn used like main()\n      var self = this;\n      var _p = this._private;\n      pass = pass || _p.pass.shift();\n\n      if( _p.stopped ){\n        $$.util.error('Attempted to run a stopped thread!  Start a new thread or do not stop the existing thread and reuse it.');\n        return;\n      }\n\n      if( _p.running ){\n        return _p.queue = _p.queue.then(function(){ // inductive step\n          return self.run( fn, pass );\n        });\n      }\n      \n      var useWW = window != null;\n      var useNode = typeof module !== 'undefined';\n\n      self.trigger('run');\n\n      var runP = new $$.Promise(function( resolve, reject ){\n\n        _p.running = true;\n\n        var threadTechAlreadyExists = _p.ran;\n\n        var fnImplStr = $$.is.string( fn ) ? fn : fn.toString();\n\n        // worker code to exec\n        var fnStr = '\\n' + ( _p.requires.map(function( r ){\n          return fnAsRequire( r );\n        }) ).concat( _p.files.map(function( f ){\n          if( useWW ){\n            var wwifyFile = function( file ){\n              if( file.match(/^\\.\\//) || file.match(/^\\.\\./) ){\n                return window.location.origin + window.location.pathname + file;\n              } else if( file.match(/^\\//) ){\n                return window.location.origin + '/' + file;\n              }\n              return file;\n            };\n            \n            return 'importScripts(\"' + wwifyFile(f) + '\");';\n          } else if( useNode ) {\n            return 'eval( require(\"fs\").readFileSync(\"' + f + '\", { encoding: \"utf8\" }) );';\n          }\n        }) ).concat([\n          '( function(){',\n            'var ret = (' + fnImplStr + ')(' + JSON.stringify(pass) + ');',\n            'if( ret !== undefined ){ resolve(ret); }', // assume if ran fn returns defined value (incl. null), that we want to resolve to it\n          '} )()\\n'\n        ]).join('\\n');\n\n        // because we've now consumed the requires, empty the list so we don't dupe on next run()\n        _p.requires = [];\n        _p.files = [];\n\n        if( useWW ){\n          var fnBlob, fnUrl;\n\n          // add normalised thread api functions\n          if( !threadTechAlreadyExists ){\n            var fnPre = fnStr + '';\n\n            fnStr = [\n              'function broadcast(m){ return message(m); };', // alias\n              'function message(m){ postMessage(m); };',\n              'function listen(fn){',\n              '  self.addEventListener(\"message\", function(m){ ',\n              '    if( typeof m === \"object\" && (m.data.$$eval || m.data === \"$$start\") ){',\n              '    } else { ',\n              '      fn( m.data );',\n              '    }',\n              '  });',\n              '};', \n              'self.addEventListener(\"message\", function(m){  if( m.data.$$eval ){ eval( m.data.$$eval ); }  });',\n              'function resolve(v){ postMessage({ $$resolve: v }); };', \n              'function reject(v){ postMessage({ $$reject: v }); };'\n            ].join('\\n');\n          \n            fnStr += fnPre;\n\n            fnBlob = new Blob([ fnStr ], {\n              type: 'application/javascript'\n            });\n            fnUrl = window.URL.createObjectURL( fnBlob );\n          }\n          // create webworker and let it exec the serialised code\n          var ww = _p.webworker = _p.webworker || new Worker( fnUrl );\n\n          if( threadTechAlreadyExists ){ // then just exec new run() code\n            ww.postMessage({\n              $$eval: fnStr\n            });\n          }\n\n          // worker messages => events\n          var cb;\n          ww.addEventListener('message', cb = function( m ){\n            var isObject = $$.is.object(m) && $$.is.object( m.data );\n            \n            if( isObject && ('$$resolve' in m.data) ){\n              ww.removeEventListener('message', cb); // done listening b/c resolve()\n\n              resolve( m.data.$$resolve );\n            } else if( isObject && ('$$reject' in m.data) ){\n              ww.removeEventListener('message', cb); // done listening b/c reject()\n\n              reject( m.data.$$reject );\n            } else {\n              self.trigger( new $$.Event(m, { type: 'message', message: m.data }) );\n            }\n          }, false);\n\n          if( !threadTechAlreadyExists ){\n            ww.postMessage('$$start'); // start up the worker\n          }\n\n        } else if( useNode ){\n          // create a new process\n          var path = require('path');\n          var child_process = require('child_process');\n          var child = _p.child = _p.child || child_process.fork( path.join(__dirname, 'thread-node-fork') );\n\n          // child process messages => events\n          var cb;\n          child.on('message', cb = function( m ){\n            if( $$.is.object(m) && ('$$resolve' in m) ){\n              child.removeListener('message', cb); // done listening b/c resolve()\n\n              resolve( m.$$resolve );\n            } else if( $$.is.object(m) && ('$$reject' in m) ){\n              child.removeListener('message', cb); // done listening b/c reject()\n\n              reject( m.$$reject );\n            } else {\n              self.trigger( new $$.Event({}, { type: 'message', message: m }) );\n            }\n          });\n\n          // ask the child process to eval the worker code\n          child.send({\n            $$eval: fnStr\n          });\n        } else {\n          $$.error('Tried to create thread but no underlying tech found!');\n          // TODO fallback on main JS thread?\n        }\n\n      }).then(function( v ){\n        _p.running = false;\n        _p.ran = true;\n\n        self.trigger('ran');\n\n        return v;\n      });\n\n      if( _p.queue == null ){\n        _p.queue = runP; // i.e. first step of inductive promise chain (for queue)\n      }\n\n      return runP;\n    },\n\n    // send the thread a message\n    message: function( m ){\n      var _p = this._private;\n\n      if( _p.webworker ){\n        _p.webworker.postMessage( m );\n      }\n\n      if( _p.child ){\n        _p.child.send( m );\n      } \n\n      return this; // chaining\n    },\n\n    stop: function(){\n      var _p = this._private;\n\n      if( _p.webworker ){\n        _p.webworker.terminate();\n      }\n\n      if( _p.child ){\n        _p.child.kill();\n      } \n\n      _p.stopped = true;\n\n      return this.trigger('stop'); // chaining\n    },\n\n    stopped: function(){\n      return this._private.stopped;\n    }\n\n  });\n\n  var fnAs = function( fn, name ){\n    var fnStr = fn.toString();\n    fnStr = fnStr.replace(/function.*\\(/, 'function ' + name + '(');\n\n    return fnStr;\n  };\n\n  var defineFnal = function( opts ){\n    opts = opts || {};\n\n    return function fnalImpl( fn, arg1 ){\n      var fnStr = fnAs( fn, '_$_$_' + opts.name );\n\n      this.require( fnStr );\n\n      return this.run( [ \n        'function( data ){',\n        '  var origResolve = resolve;',\n        '  var res = [];',\n        '  ',\n        '  resolve = function( val ){',\n        '    res.push( val );',\n        '  };',\n        '  ',\n        '  var ret = data.' + opts.name + '( _$_$_' + opts.name + ( arguments.length > 1 ? ', ' + JSON.stringify(arg1) : '' ) + ' );',\n        '  ',\n        '  resolve = origResolve;',\n        '  resolve( res.length > 0 ? res : ret );',\n        '}'\n      ].join('\\n') );\n    };\n  };\n\n  $$.fn.thread({\n    reduce: defineFnal({ name: 'reduce' }),\n\n    reduceRight: defineFnal({ name: 'reduceRight' }),\n\n    map: defineFnal({ name: 'map' })\n  });\n\n  // aliases\n  var fn = $$.thdfn;\n  fn.promise = fn.run;\n  fn.terminate = fn.halt = fn.stop;\n  fn.include = fn.require;\n\n  // higher level alias (in case you like the worker metaphor)\n  $$.worker = $$.Worker = $$.Thread;\n\n  // pull in event apis\n  $$.fn.thread({\n    on: $$.define.on(),\n    one: $$.define.on({ unbindSelfOnTrigger: true }),\n    off: $$.define.off(), \n    trigger: $$.define.trigger()\n  });\n\n  $$.define.eventAliasesOn( $$.thdfn );\n  \n})( cytoscape, typeof window === 'undefined' ? null : window );\n\n;(function($$, window){ 'use strict';\n\n  $$.Fabric = function( N ){\n    if( !(this instanceof $$.Fabric) ){\n      return new $$.Fabric( N );\n    }\n\n    this._private = {\n      pass: []\n    };\n\n    var defN = 4;\n\n    if( $$.is.number(N) ){\n      // then use the specified number of threads\n    } if( typeof navigator !== 'undefined' && navigator.hardwareConcurrency != null ){\n      N = navigator.hardwareConcurrency;\n    } else if( typeof module !== 'undefined' ){\n      N = require('os').cpus().length;\n    } else { // TODO could use an estimation here but would the additional expense be worth it?\n      N = defN;\n    }\n\n    for( var i = 0; i < N; i++ ){\n      this[i] = $$.Thread();\n    }\n\n    this.length = N;\n  };\n\n  $$.fabric = $$.Fabric;\n  $$.fabfn = $$.Fabric.prototype; // short alias\n\n  $$.fn.fabric = function( fnMap, options ){\n    for( var name in fnMap ){\n      var fn = fnMap[name];\n      $$.Fabric.prototype[ name ] = fn;\n    }\n  };\n\n  $$.fn.fabric({\n\n    // require fn in all threads\n    require: function( fn, as ){\n      for( var i = 0; i < this.length; i++ ){\n        var thread = this[i];\n\n        thread.require( fn, as );\n      }\n\n      return this;\n    },\n\n    // get a random thread\n    random: function(){\n      var i = Math.round( (this.length - 1) * Math.random() );\n      var thread = this[i];\n\n      return thread;\n    },\n\n    // run on random thread\n    run: function( fn ){\n      var pass = this._private.pass.shift();\n\n      return this.random().pass( pass ).run( fn );\n    },\n\n    // sends a random thread a message\n    message: function( m ){\n      return this.random().message( m );\n    },\n\n    // send all threads a message\n    broadcast: function( m ){\n      for( var i = 0; i < this.length; i++ ){\n        var thread = this[i];\n\n        thread.message( m );\n      }\n\n      return this; // chaining\n    },\n\n    // stop all threads\n    stop: function(){\n      for( var i = 0; i < this.length; i++ ){\n        var thread = this[i];\n\n        thread.stop();\n      }\n\n      return this; // chaining\n    },\n\n    // pass data to be used with .spread() etc.\n    pass: function( data ){\n      var pass = this._private.pass;\n\n      if( $$.is.array(data) ){\n        pass.push( data );\n      } else {\n        $$.util.error('Only arrays or collections may be used with fabric.pass()');\n      }\n\n      return this; // chaining\n    },\n\n    spreadSize: function(){\n      var subsize =  Math.ceil( this._private.pass[0].length / this.length );\n\n      subsize = Math.max( 1, subsize ); // don't pass less than one ele to each thread\n\n      return subsize;\n    },\n\n    // split the data into slices to spread the data equally among threads\n    spread: function( fn ){\n      var self = this;\n      var _p = self._private;\n      var subsize = self.spreadSize(); // number of pass eles to handle in each thread\n      var pass = _p.pass.shift().concat([]); // keep a copy\n      var runPs = [];\n\n      for( var i = 0; i < this.length; i++ ){\n        var thread = this[i];\n        var slice = pass.splice( 0, subsize );\n\n        var runP = thread.pass( slice ).run( fn );\n\n        runPs.push( runP );\n\n        var doneEarly = pass.length === 0;\n        if( doneEarly ){ break; }\n      }\n\n      return $$.Promise.all( runPs ).then(function( thens ){\n        var postpass = [];\n        var p = 0;\n\n        // fill postpass with the total result joined from all threads\n        for( var i = 0; i < thens.length; i++ ){\n          var then = thens[i]; // array result from thread i\n\n          for( var j = 0; j < then.length; j++ ){\n            var t = then[j]; // array element\n\n            postpass[ p++ ] = t;\n          }\n        }\n\n        return postpass;\n      });\n    },\n\n    // parallel version of array.map()\n    map: function( fn ){\n      var self = this;\n\n      self.require( fn, '_$_$_fabmap' );\n\n      return self.spread(function( split ){\n        var mapped = [];\n        var origResolve = resolve;\n\n        resolve = function( val ){\n          mapped.push( val );\n        };\n\n        for( var i = 0; i < split.length; i++ ){\n          var oldLen = mapped.length;\n          var ret = _$_$_fabmap( split[i] );\n          var nothingInsdByResolve = oldLen === mapped.length;\n\n          if( nothingInsdByResolve ){\n            mapped.push( ret );\n          }\n        }\n\n        resolve = origResolve;\n\n        return mapped;\n      });\n\n    },\n\n    // parallel version of array.filter()\n    filter: function( fn ){\n      var _p = this._private;\n      var pass = _p.pass[0];\n\n      return this.map( fn ).then(function( include ){\n        var ret = [];\n\n        for( var i = 0; i < pass.length; i++ ){\n          var datum = pass[i];\n          var incDatum = include[i];\n\n          if( incDatum ){\n            ret.push( datum );\n          }\n        }\n\n        return ret;\n      });\n    },\n\n    // sorts the passed array using a divide and conquer strategy\n    sort: function( cmp ){\n      var self = this;\n      var P = this._private.pass[0].length;\n      var subsize = this.spreadSize();\n\n      cmp = cmp || function( a, b ){ // default comparison function\n        if( a < b ){\n          return -1;\n        } else if( a > b ){\n          return 1;\n        }\n\n        return 0;\n      };\n\n      self.require( cmp, '_$_$_cmp' );\n\n      return self.spread(function( split ){ // sort each split normally\n        var sortedSplit = split.sort( _$_$_cmp );\n        resolve( sortedSplit );\n\n      }).then(function( joined ){\n        // do all the merging in the main thread to minimise data transfer\n\n        // TODO could do merging in separate threads but would incur add'l cost of data transfer\n        // for each level of the merge\n\n        var merge = function( i, j, max ){\n          // don't overflow array\n          j = Math.min( j, P );\n          max = Math.min( max, P );\n\n          // left and right sides of merge\n          var l = i;\n          var r = j;\n\n          var sorted = [];\n\n          for( var k = l; k < max; k++ ){\n\n            var eleI = joined[i];\n            var eleJ = joined[j];\n\n            if( i < r && ( j >= max || cmp(eleI, eleJ) <= 0 ) ){\n              sorted.push( eleI );\n              i++;\n            } else {\n              sorted.push( eleJ );\n              j++;\n            }\n\n          }\n\n          // in the array proper, put the sorted values\n          for( var k = 0; k < sorted.length; k++ ){ // kth sorted item\n            var index = l + k;\n\n            joined[ index ] = sorted[k];\n          }\n        };\n\n        for( var splitL = subsize; splitL < P; splitL *= 2 ){ // merge until array is \"split\" as 1\n\n          for( var i = 0; i < P; i += 2*splitL ){\n            merge( i, i + splitL, i + 2*splitL );\n          }\n\n        }\n\n        return joined;\n      });\n    }\n\n\n  });\n\n  var defineRandomPasser = function( opts ){\n    opts = opts || {};\n\n    return function( fn, arg1 ){\n      var pass = this._private.pass.shift();\n\n      return this.random().pass( pass )[ opts.threadFn ]( fn, arg1 );\n    };\n  };\n\n  $$.fn.fabric({\n    randomMap: defineRandomPasser({ threadFn: 'map' }),\n\n    reduce: defineRandomPasser({ threadFn: 'reduce' }),\n\n    reduceRight: defineRandomPasser({ threadFn: 'reduceRight' })\n  });\n\n  // aliases\n  var fn = $$.fabfn;\n  fn.promise = fn.run;\n  fn.terminate = fn.halt = fn.stop;\n  fn.include = fn.require;\n\n  // pull in event apis\n  $$.fn.fabric({\n    on: $$.define.on(),\n    one: $$.define.on({ unbindSelfOnTrigger: true }),\n    off: $$.define.off(),\n    trigger: $$.define.trigger()\n  });\n\n  $$.define.eventAliasesOn( $$.fabfn );\n\n})( cytoscape, typeof window === 'undefined' ? null : window );\n\n;(function($$, window){ 'use strict';\n\n  var defaults = {\n  };\n  \n  var origDefaults = $$.util.copy( defaults );\n\n  $$.defaults = function( opts ){\n    defaults = $$.util.extend({}, origDefaults, opts);\n  };\n\n  $$.fn.core = function( fnMap, options ){\n    for( var name in fnMap ){\n      var fn = fnMap[name];\n      $$.Core.prototype[ name ] = fn;\n    }\n  };\n  \n  $$.Core = function( opts ){\n    if( !(this instanceof $$.Core) ){\n      return new $$.Core(opts);\n    }\n    var cy = this;\n\n    opts = $$.util.extend({}, defaults, opts);\n\n    var container = opts.container;\n    var reg = container ? container._cyreg : null; // e.g. already registered some info (e.g. readies) via jquery\n    reg = reg || {};\n\n    if( reg && reg.cy ){ \n      if( container ){\n        while( container.firstChild ){ // clean the container\n          container.removeChild( container.firstChild );\n        }\n      }\n      \n      reg.cy.notify({ type: 'destroy' }); // destroy the renderer\n\n      reg = {}; // old instance => replace reg completely\n    }\n\n    var readies = reg.readies = reg.readies || [];\n    \n    if( container ){ container._cyreg = reg; } // make sure container assoc'd reg points to this cy\n    reg.cy = cy;\n\n    var head = window !== undefined && container !== undefined && !opts.headless;\n    var options = opts;\n    options.layout = $$.util.extend( { name: head ? 'grid' : 'null' }, options.layout );\n    options.renderer = $$.util.extend( { name: head ? 'canvas' : 'null' }, options.renderer );\n    \n    var defVal = function( def, val, altVal ){\n      if( val !== undefined ){\n        return val;\n      } else if( altVal !== undefined ){\n        return altVal;\n      } else {\n        return def;\n      }\n    };\n\n    var _p = this._private = {\n      container: options.container, // html dom ele container\n      ready: false, // whether ready has been triggered\n      initrender: false, // has initrender has been triggered\n      options: options, // cached options\n      elements: [], // array of elements\n      id2index: {}, // element id => index in elements array\n      listeners: [], // list of listeners\n      onRenders: [], // rendering listeners\n      aniEles: $$.Collection(this), // elements being animated\n      scratch: {}, // scratch object for core\n      layout: null,\n      renderer: null,\n      notificationsEnabled: true, // whether notifications are sent to the renderer\n      minZoom: 1e-50,\n      maxZoom: 1e50,\n      zoomingEnabled: defVal(true, options.zoomingEnabled),\n      userZoomingEnabled: defVal(true, options.userZoomingEnabled),\n      panningEnabled: defVal(true, options.panningEnabled),\n      userPanningEnabled: defVal(true, options.userPanningEnabled),\n      boxSelectionEnabled: defVal(false, options.boxSelectionEnabled),\n      autolock: defVal(false, options.autolock, options.autolockNodes),\n      autoungrabify: defVal(false, options.autoungrabify, options.autoungrabifyNodes),\n      autounselectify: defVal(false, options.autounselectify),\n      styleEnabled: options.styleEnabled === undefined ? head : options.styleEnabled,\n      zoom: $$.is.number(options.zoom) ? options.zoom : 1,\n      pan: {\n        x: $$.is.plainObject(options.pan) && $$.is.number(options.pan.x) ? options.pan.x : 0,\n        y: $$.is.plainObject(options.pan) && $$.is.number(options.pan.y) ? options.pan.y : 0\n      },\n      animation: { // object for currently-running animations\n        current: [],\n        queue: []\n      },\n      hasCompoundNodes: false,\n      deferredExecQueue: []\n    };\n\n    // set selection type\n    var selType = options.selectionType;\n    if( selType === undefined || (selType !== 'additive' && selType !== 'single') ){\n      // then set default\n\n      _p.selectionType = 'single';\n    } else {\n      _p.selectionType = selType;\n    }\n\n    // init zoom bounds\n    if( $$.is.number(options.minZoom) && $$.is.number(options.maxZoom) && options.minZoom < options.maxZoom ){\n      _p.minZoom = options.minZoom;\n      _p.maxZoom = options.maxZoom;\n    } else if( $$.is.number(options.minZoom) && options.maxZoom === undefined ){\n      _p.minZoom = options.minZoom;\n    } else if( $$.is.number(options.maxZoom) && options.minZoom === undefined ){\n      _p.maxZoom = options.maxZoom;\n    }\n\n    var loadExtData = function( next ){\n      var anyIsPromise = false;\n\n      for( var i = 0; i < extData.length; i++ ){\n        var datum = extData[i];\n\n        if( $$.is.promise(datum) ){\n          anyIsPromise = true;\n          break;\n        }\n      }\n\n      if( anyIsPromise ){\n        return $$.Promise.all( extData ).then( next ); // load all data asynchronously, then exec rest of init\n      } else {\n        next( extData ); // exec synchronously for convenience\n      }\n    };\n\n    var extData = [ options.style, options.elements ];\n    loadExtData(function( thens ){\n      var initStyle = thens[0];\n      var initEles = thens[1];\n   \n      // init style\n      if( _p.styleEnabled ){\n        cy.setStyle( initStyle );\n      }\n\n      // create the renderer\n      cy.initRenderer( $$.util.extend({\n        hideEdgesOnViewport: options.hideEdgesOnViewport,\n        hideLabelsOnViewport: options.hideLabelsOnViewport,\n        textureOnViewport: options.textureOnViewport,\n        wheelSensitivity: $$.is.number(options.wheelSensitivity) && options.wheelSensitivity > 0 ? options.wheelSensitivity : 1,\n        motionBlur: options.motionBlur === undefined ? true : options.motionBlur, // on by default\n        motionBlurOpacity: options.motionBlurOpacity === undefined ? 0.05 : options.motionBlurOpacity,\n        pixelRatio: $$.is.number(options.pixelRatio) && options.pixelRatio > 0 ? options.pixelRatio : (options.pixelRatio === 'auto' ? undefined : 1),\n        desktopTapThreshold: options.desktopTapThreshold === undefined ? 4 : options.desktopTapThreshold,\n        touchTapThreshold: options.touchTapThreshold === undefined ? 8 : options.touchTapThreshold\n      }, options.renderer) );\n\n      // trigger the passed function for the `initrender` event\n      if( options.initrender ){\n        cy.on('initrender', options.initrender);\n        cy.on('initrender', function(){\n          cy._private.initrender = true;\n        });\n      }\n\n      // initial load\n      cy.load(initEles, function(){ // onready\n        cy.startAnimationLoop();\n        cy._private.ready = true;\n\n        // if a ready callback is specified as an option, the bind it\n        if( $$.is.fn( options.ready ) ){\n          cy.on('ready', options.ready);\n        }\n\n        // bind all the ready handlers registered before creating this instance\n        for( var i = 0; i < readies.length; i++ ){\n          var fn = readies[i];\n          cy.on('ready', fn);\n        }\n        if( reg ){ reg.readies = []; } // clear b/c we've bound them all and don't want to keep it around in case a new core uses the same div etc\n        \n        cy.trigger('ready');\n      }, options.done);\n\n    });\n  };\n\n  $$.corefn = $$.Core.prototype; // short alias\n  \n\n  $$.fn.core({\n    isReady: function(){\n      return this._private.ready;\n    },\n\n    ready: function( fn ){\n      if( this.isReady() ){\n        this.trigger('ready', [], fn); // just calls fn as though triggered via ready event\n      } else {\n        this.on('ready', fn);\n      }\n    },\n\n    initrender: function(){\n      return this._private.initrender;\n    },\n\n    destroy: function(){\n      this.notify({ type: 'destroy' }); // destroy the renderer\n\n      var domEle = this.container();\n      var parEle = domEle.parentNode;\n      if( parEle ){\n        try{\n          parEle.removeChild( domEle );\n        } catch(e){\n          // ie10 issue #1014\n        }\n      }\n\n      return this;\n    },\n\n    getElementById: function( id ){\n      var index = this._private.id2index[ id ];\n      if( index !== undefined ){\n        return this._private.elements[ index ];\n      }\n\n      // worst case, return an empty collection\n      return new $$.Collection( this );\n    },\n\n    selectionType: function(){\n      return this._private.selectionType;\n    },\n\n    hasCompoundNodes: function(){\n      return this._private.hasCompoundNodes;\n    },\n\n    styleEnabled: function(){\n      return this._private.styleEnabled;\n    },\n\n    addToPool: function( eles ){\n      var elements = this._private.elements;\n      var id2index = this._private.id2index;\n\n      for( var i = 0; i < eles.length; i++ ){\n        var ele = eles[i];\n\n        var id = ele._private.data.id;\n        var index = id2index[ id ];\n        var alreadyInPool = index !== undefined;\n\n        if( !alreadyInPool ){\n          index = elements.length;\n          elements.push( ele );\n          id2index[ id ] = index;\n          ele._private.index = index;\n        }\n      }\n\n      return this; // chaining\n    },\n\n    removeFromPool: function( eles ){\n      var elements = this._private.elements;\n      var id2index = this._private.id2index;\n\n      for( var i = 0; i < eles.length; i++ ){\n        var ele = eles[i];\n\n        var id = ele._private.data.id;\n        var index = id2index[ id ];\n        var inPool = index !== undefined;\n\n        if( inPool ){\n          this._private.id2index[ id ] = undefined;\n          elements.splice(index, 1);\n\n          // adjust the index of all elements past this index\n          for( var j = index; j < elements.length; j++ ){\n            var jid = elements[j]._private.data.id;\n            id2index[ jid ]--;\n            elements[j]._private.index--;\n          }\n        }\n      }\n    },\n\n    container: function(){\n      return this._private.container;\n    },\n\n    options: function(){\n      return $$.util.copy( this._private.options );\n    },\n    \n    json: function(params){\n      var json = {};\n      var cy = this;\n      \n      json.elements = {};\n      cy.elements().each(function(i, ele){\n        var group = ele.group();\n        \n        if( !json.elements[group] ){\n          json.elements[group] = [];\n        }\n        \n        json.elements[group].push( ele.json() );\n      });\n\n      if( this._private.styleEnabled ){\n        json.style = cy.style().json();\n      }\n\n      json.zoomingEnabled = cy._private.zoomingEnabled;\n      json.userZoomingEnabled = cy._private.userZoomingEnabled;\n      json.zoom = cy._private.zoom;\n      json.minZoom = cy._private.minZoom;\n      json.maxZoom = cy._private.maxZoom;\n      json.panningEnabled = cy._private.panningEnabled;\n      json.userPanningEnabled = cy._private.userPanningEnabled;\n      json.pan = cy._private.pan;\n      json.boxSelectionEnabled = cy._private.boxSelectionEnabled;\n      json.layout = cy._private.options.layout;\n      json.renderer = cy._private.options.renderer;\n      json.hideEdgesOnViewport = cy._private.options.hideEdgesOnViewport;\n      json.hideLabelsOnViewport = cy._private.options.hideLabelsOnViewport;\n      json.textureOnViewport = cy._private.options.textureOnViewport;\n      json.wheelSensitivity = cy._private.options.wheelSensitivity;\n      json.motionBlur = cy._private.options.motionBlur;\n      \n      return json;\n    },\n\n    // defer execution until not busy and guarantee relative execution order of deferred functions\n    defer: function( fn ){\n      var cy = this;\n      var _p = cy._private;\n      var q = _p.deferredExecQueue;\n\n      q.push( fn );\n\n      if( !_p.deferredTimeout ){\n        _p.deferredTimeout = setTimeout(function(){\n          while( q.length > 0 ){\n            ( q.shift() )();\n          }\n\n          _p.deferredTimeout = null;\n        }, 0);\n      }\n    }\n    \n  });  \n  \n})( cytoscape, typeof window === 'undefined' ? null : window );\n\n(function($$, window){ 'use strict';\n\n  function ready(f) {\n    var fn = ( document && (document.readyState === 'interactive' || document.readyState === 'complete') )  ? f : ready;\n\n    setTimeout(fn, 9, f);\n  }\n\n  $$.fn.core({\n    add: function(opts){\n      \n      var elements;\n      var cy = this;\n      \n      // add the elements\n      if( $$.is.elementOrCollection(opts) ){\n        var eles = opts;\n\n        if( eles._private.cy === cy ){ // same instance => just restore\n          elements = eles.restore();\n\n        } else { // otherwise, copy from json\n          var jsons = [];\n\n          for( var i = 0; i < eles.length; i++ ){\n            var ele = eles[i];\n            jsons.push( ele.json() );\n          }\n\n          elements = new $$.Collection( cy, jsons );\n        }\n      }\n      \n      // specify an array of options\n      else if( $$.is.array(opts) ){\n        var jsons = opts;\n\n        elements = new $$.Collection(cy, jsons);\n      }\n      \n      // specify via opts.nodes and opts.edges\n      else if( $$.is.plainObject(opts) && ($$.is.array(opts.nodes) || $$.is.array(opts.edges)) ){\n        var elesByGroup = opts;\n        var jsons = [];\n\n        var grs = ['nodes', 'edges'];\n        for( var i = 0, il = grs.length; i < il; i++ ){\n          var group = grs[i];\n          var elesArray = elesByGroup[group];\n\n          if( $$.is.array(elesArray) ){\n\n            for( var j = 0, jl = elesArray.length; j < jl; j++ ){\n              var json = elesArray[j];\n              json.group = group;\n\n              jsons.push( json );\n            }\n          } \n        }\n\n        elements = new $$.Collection(cy, jsons);\n      }\n      \n      // specify options for one element\n      else {\n        var json = opts;\n        elements = (new $$.Element( cy, json )).collection();\n      }\n      \n      return elements;\n    },\n    \n    remove: function(collection){\n      if( $$.is.elementOrCollection(collection) ){\n        collection = collection;\n      } else if( $$.is.string(collection) ){\n        var selector = collection;\n        collection = this.$( selector );\n      }\n      \n      return collection.remove();\n    },\n    \n    load: function(elements, onload, ondone){\n      var cy = this;\n      \n      cy.notifications(false);\n\n      // remove old elements\n      var oldEles = cy.elements();\n      if( oldEles.length > 0 ){\n        oldEles.remove();\n      }\n      \n      if( elements != null ){\n        if( $$.is.plainObject(elements) || $$.is.array(elements) ){\n          cy.add( elements );\n        } \n      }\n      \n      function callback(){        \n        cy.one('layoutready', function(e){\n          cy.notifications(true);\n          cy.trigger(e); // we missed this event by turning notifications off, so pass it on\n\n          cy.notify({\n            type: 'load',\n            collection: cy.elements()\n          });\n\n          cy.one('load', onload);\n          cy.trigger('load');\n        }).one('layoutstop', function(){\n          cy.one('done', ondone);\n          cy.trigger('done');\n        });\n        \n        var layoutOpts = $$.util.extend({}, cy._private.options.layout);\n        layoutOpts.eles = cy.$();\n\n        cy.layout( layoutOpts );\n\n      }\n\n      if( window ){\n        ready( callback );\n      } else {\n        callback();\n      }\n\n      return this;\n    }\n  });\n  \n})( cytoscape, typeof window === 'undefined' ? null : window );\n\n;(function($$, window){ 'use strict';\n  \n  $$.fn.core({\n    \n    // pull in animation functions\n    animated: $$.define.animated(),\n    clearQueue: $$.define.clearQueue(),\n    delay: $$.define.delay(),\n    animate: $$.define.animate(),\n    stop: $$.define.stop(),\n\n    addToAnimationPool: function( eles ){\n      var cy = this;\n\n      if( !cy.styleEnabled() ){ return; } // save cycles when no style used\n      \n      cy._private.aniEles.merge( eles );\n    },\n\n    startAnimationLoop: function(){\n      var cy = this;\n\n      if( !cy.styleEnabled() ){ return; } // save cycles when no style used\n\n      // don't execute the animation loop in headless environments\n      if( !window ){\n        return;\n      }\n      \n      function globalAnimationStep(){\n        $$.util.requestAnimationFrame(function(now){\n          handleElements(now);\n          globalAnimationStep();\n        });\n      }\n      \n      globalAnimationStep(); // first call\n      \n      function handleElements(now){\n        now = +new Date();\n\n        var eles = cy._private.aniEles;\n        var doneEles = [];\n\n        function handleElement( ele, isCore ){\n          var current = ele._private.animation.current;\n          var queue = ele._private.animation.queue;\n          var ranAnis = false;\n          \n          // if nothing currently animating, get something from the queue\n          if( current.length === 0 ){\n            var next = queue.length > 0 ? queue.shift() : null;\n            \n            if( next ){\n              next.callTime = now; // was queued, so update call time\n              current.push( next );\n            }\n          }\n          \n          // step and remove if done\n          var completes = [];\n          for(var i = current.length - 1; i >= 0; i--){\n            var ani = current[i];\n\n            // start if need be\n            if( !ani.started ){ startAnimation( ele, ani ); }\n            \n            step( ele, ani, now, isCore );\n\n            if( ani.done ){\n              completes.push( ani );\n              \n              // remove current[i]\n              current.splice(i, 1);\n            }\n\n            ranAnis = true;\n          }\n          \n          // call complete callbacks\n          for( var i = 0; i < completes.length; i++ ){\n            var ani = completes[i];\n            var complete = ani.params.complete;\n\n            if( $$.is.fn(complete) ){\n              complete.apply( ele, [ now ] );\n            }\n          }\n\n          if( !isCore && current.length === 0 && queue.length === 0 ){\n            doneEles.push( ele );\n          }\n\n          return ranAnis;\n        } // handleElements\n\n        // handle all eles\n        for( var e = 0; e < eles.length; e++ ){\n          var ele = eles[e];\n          \n          handleElement( ele );\n        } // each element\n\n        var ranCoreAni = handleElement( cy, true );\n        \n        // notify renderer\n        if( eles.length > 0 || ranCoreAni ){\n          var toNotify;\n\n          if( eles.length > 0 ){\n            var updatedEles = eles.updateCompoundBounds();\n            toNotify = updatedEles.length > 0 ? eles.add( updatedEles ) : eles;\n          }\n\n          cy.notify({\n            type: 'draw',\n            collection: toNotify\n          });\n        }\n\n        // remove elements from list of currently animating if its queues are empty\n        eles.unmerge( doneEles );\n\n      } // handleElements\n      \n      function startAnimation( self, ani ){\n        var isCore = $$.is.core( self );\n        var isEles = !isCore;\n        var ele = self;\n        var style = cy._private.style;\n\n        if( isEles ){\n          var pos = ele._private.position;\n          var startPosition = {\n            x: pos.x,\n            y: pos.y\n          };\n          var startStyle = style.getValueStyle( ele );\n        }\n\n        if( isCore ){\n          var pan = cy._private.pan;\n          var startPan = {\n            x: pan.x,\n            y: pan.y\n          };\n\n          var startZoom = cy._private.zoom;\n        }\n\n        ani.started = true;\n        ani.startTime = Date.now();\n        ani.startPosition = startPosition;\n        ani.startStyle = startStyle;\n        ani.startPan = startPan;\n        ani.startZoom = startZoom;\n      }\n\n      function step( self, animation, now, isCore ){\n        var style = cy._private.style;\n        var properties = animation.properties;\n        var params = animation.params;\n        var startTime = animation.startTime;\n        var percent;\n        var isEles = !isCore;\n        \n        if( animation.duration === 0 ){\n          percent = 1;\n        } else {\n          percent = Math.min(1, (now - startTime)/animation.duration);\n        }\n\n        if( percent < 0 ){\n          percent = 0;\n        } else if( percent > 1 ){\n          percent = 1;\n        }\n        \n        if( properties.delay == null ){ // then update\n\n          var startPos = animation.startPosition;\n          var endPos = properties.position;\n          var pos = self._private.position;\n          if( endPos && isEles ){\n            if( valid( startPos.x, endPos.x ) ){\n              pos.x = ease( startPos.x, endPos.x, percent );\n            }\n\n            if( valid( startPos.y, endPos.y ) ){\n              pos.y = ease( startPos.y, endPos.y, percent );\n            }\n          }\n\n          var startPan = animation.startPan;\n          var endPan = properties.pan;\n          var pan = self._private.pan;\n          var animatingPan = endPan != null && isCore;\n          if( animatingPan ){\n            if( valid( startPan.x, endPan.x ) ){\n              pan.x = ease( startPan.x, endPan.x, percent );\n            }\n\n            if( valid( startPan.y, endPan.y ) ){\n              pan.y = ease( startPan.y, endPan.y, percent );\n            }\n\n            self.trigger('pan');\n          }\n\n          var startZoom = animation.startZoom;\n          var endZoom = properties.zoom;\n          var animatingZoom = endZoom != null && isCore;\n          if( animatingZoom ){\n            if( valid( startZoom, endZoom ) ){\n              self._private.zoom = ease( startZoom, endZoom, percent );\n            }\n\n            self.trigger('zoom');\n          }\n\n          if( animatingPan || animatingZoom ){\n            self.trigger('viewport');\n          }\n\n          var props = properties.style || properties.css;\n          if( props && isEles ){\n\n            for( var i = 0; i < props.length; i++ ){\n              var name = props[i].name;\n              var prop = props[i];\n              var end = prop;\n\n              var start = animation.startStyle[ name ];\n              var easedVal = ease( start, end, percent );\n              \n              style.overrideBypass( self, name, easedVal );\n            } // for props\n            \n          } // if \n\n        }\n        \n        if( $$.is.fn(params.step) ){\n          params.step.apply( self, [ now ] );\n        }\n        \n        if( percent >= 1 ){\n          animation.done = true;\n        }\n        \n        return percent;\n      }\n      \n      function valid(start, end){\n        if( start == null || end == null ){\n          return false;\n        }\n        \n        if( $$.is.number(start) && $$.is.number(end) ){\n          return true;\n        } else if( (start) && (end) ){\n          return true;\n        }\n        \n        return false;\n      }\n      \n      function ease(startProp, endProp, percent){\n        if( percent < 0 ){\n          percent = 0;\n        } else if( percent > 1 ){\n          percent = 1;\n        }\n\n        var start, end;\n\n        if( startProp.pxValue != null || startProp.value != null ){\n          start = startProp.pxValue != null ? startProp.pxValue : startProp.value;\n        } else {\n          start = startProp;\n        }\n\n        if( endProp.pxValue != null || endProp.value != null ){\n          end = endProp.pxValue != null ? endProp.pxValue : endProp.value;\n        } else {\n          end = endProp;\n        }\n\n        if( $$.is.number(start) && $$.is.number(end) ){\n          return start + (end - start) * percent;\n\n        } else if( $$.is.number(start[0]) && $$.is.number(end[0]) ){ // then assume a colour\n          var c1 = start;\n          var c2 = end;\n\n          var ch = function(ch1, ch2){\n            var diff = ch2 - ch1;\n            var min = ch1;\n            return Math.round( percent * diff + min );\n          };\n          \n          var r = ch( c1[0], c2[0] );\n          var g = ch( c1[1], c2[1] );\n          var b = ch( c1[2], c2[2] );\n          \n          return [r, g, b];\n        }\n        \n        return undefined;\n      }\n      \n    }\n    \n  });\n  \n})( cytoscape, typeof window === 'undefined' ? null : window );\n\n\n  \n    \n;(function($$){ 'use strict';\n  \n  $$.fn.core({\n    data: $$.define.data({\n      field: 'data',\n      bindingEvent: 'data',\n      allowBinding: true,\n      allowSetting: true,\n      settingEvent: 'data',\n      settingTriggersEvent: true,\n      triggerFnName: 'trigger',\n      allowGetting: true\n    }),\n\n    removeData: $$.define.removeData({\n      field: 'data',\n      event: 'data',\n      triggerFnName: 'trigger',\n      triggerEvent: true\n    }),\n\n    scratch: $$.define.data({\n      field: 'scratch',\n      allowBinding: false,\n      allowSetting: true,\n      settingTriggersEvent: false,\n      allowGetting: true\n    }),\n\n    removeScratch: $$.define.removeData({\n      field: 'scratch',\n      triggerEvent: false\n    })\n  });\n  \n})( cytoscape );\n\n;(function($$){ 'use strict';\n\n  $$.fn.core({\n    on: $$.define.on(), // .on( events [, selector] [, data], handler)\n    one: $$.define.on({ unbindSelfOnTrigger: true }),\n    once: $$.define.on({ unbindAllBindersOnTrigger: true }),\n    off: $$.define.off(), // .off( events [, selector] [, handler] )\n    trigger: $$.define.trigger() // .trigger( events [, extraParams] )\n  });\n\n  $$.define.eventAliasesOn( $$.corefn );\n\n})( cytoscape );\n\n;(function($$){ 'use strict';\n  \n  $$.fn.core({\n    \n    png: function( options ){\n      var renderer = this._private.renderer;\n      options = options || {};\n\n      return renderer.png( options );      \n    },\n    \n    jpg: function( options ){\n      var renderer = this._private.renderer;\n      options = options || {};\n      \n      options.bg = options.bg || '#fff';\n\n      return renderer.jpg( options );      \n    }\n    \n  });\n  \n  $$.corefn.jpeg = $$.corefn.jpg;\n  \n})( cytoscape );\n\n;(function($$){ 'use strict';\n  \n  $$.fn.core({\n    \n    layout: function( params ){\n      var layout;\n\n      // always use a new layout w/ init opts; slightly different backwards compatibility\n      // but fixes layout reuse issues like dagre #819 \n      if( params == null ){ \n        params = $$.util.extend({}, this._private.options.layout);\n        params.eles = this.$();\n      }\n\n      layout = this.initLayout( params );\n      layout.run();\n\n      return this; // chaining\n    },\n\n    makeLayout: function( params ){\n      return this.initLayout( params );\n    },\n    \n    initLayout: function( options ){\n      if( options == null ){\n        $$.util.error('Layout options must be specified to make a layout');\n        return;\n      }\n      \n      if( options.name == null ){\n        $$.util.error('A `name` must be specified to make a layout');\n        return;\n      }\n      \n      var name = options.name;\n      var LayoutProto = $$.extension('layout', name);\n      \n      if( LayoutProto == null ){\n        $$.util.error('Can not apply layout: No such layout `' + name + '` found; did you include its JS file?');\n        return;\n      }\n\n      options.eles = options.eles != null ? options.eles : this.$();\n\n      if( $$.is.string( options.eles ) ){\n        options.eles = this.$( options.eles );\n      }\n      \n      var layout = new LayoutProto( $$.util.extend({}, options, {\n        cy: this\n      }) );\n\n      // make sure layout has _private for use w/ std apis like .on()\n      if( !$$.is.plainObject(layout._private) ){\n        layout._private = {};\n      }\n\n      layout._private.cy = this;\n      layout._private.listeners = [];\n      \n      return layout;\n    }\n    \n  });\n\n  $$.corefn.createLayout = $$.corefn.makeLayout;\n  \n})( cytoscape );\n(function($$){ 'use strict';\n  \n  $$.fn.core({\n    notify: function( params ){\n      if( this._private.batchingNotify ){\n        var bEles = this._private.batchNotifyEles;\n        var bTypes = this._private.batchNotifyTypes;\n\n        if( params.collection ){ for( var i = 0; i < params.collection.length; i++ ){\n          var ele = params.collection[i];\n\n          if( !bEles.ids[ ele._private.id ] ){\n            bEles.push( ele );\n          }\n        } }\n\n        if( !bTypes.ids[ params.type ] ){\n          bTypes.push( params.type );\n        }\n\n        return; // notifications are disabled during batching\n      }\n\n      if( !this._private.notificationsEnabled ){ return; } // exit on disabled\n\n      var renderer = this.renderer();\n      \n      renderer.notify(params);\n    },\n    \n    notifications: function( bool ){\n      var p = this._private;\n      \n      if( bool === undefined ){\n        return p.notificationsEnabled;\n      } else {\n        p.notificationsEnabled = bool ? true : false;\n      }\n    },\n    \n    noNotifications: function( callback ){\n      this.notifications(false);\n      callback();\n      this.notifications(true);\n    },\n\n    startBatch: function(){\n      var _p = this._private;\n\n      _p.batchingStyle = _p.batchingNotify = true;\n      _p.batchStyleEles = [];\n      _p.batchNotifyEles = [];\n      _p.batchNotifyTypes = [];\n\n      _p.batchStyleEles.ids = {};\n      _p.batchNotifyEles.ids = {};\n      _p.batchNotifyTypes.ids = {};\n\n      return this;\n    },\n\n    endBatch: function(){\n      var _p = this._private;\n\n      // update style for dirty eles\n      _p.batchingStyle = false;\n      new $$.Collection(this, _p.batchStyleEles).updateStyle();\n\n      // notify the renderer of queued eles and event types\n      _p.batchingNotify = false;\n      this.notify({\n        type: _p.batchNotifyTypes,\n        collection: _p.batchNotifyEles\n      });\n\n      return this;\n    },\n\n    batch: function( callback ){\n      this.startBatch();\n      callback();\n      this.endBatch();\n\n      return this;\n    },\n\n    // for backwards compatibility\n    batchData: function( map ){\n      var cy = this;\n\n      return this.batch(function(){\n        for( var id in map ){\n          var data = map[id];\n          var ele = cy.getElementById( id );\n          \n          ele.data( data );\n        }\n      });\n    }\n  });\n  \n})( cytoscape );\n\n;(function($$){ 'use strict';\n  \n  $$.fn.core({\n    \n    renderTo: function( context, zoom, pan, pxRatio ){\n      var r = this._private.renderer;\n\n      r.renderTo( context, zoom, pan, pxRatio );\n      return this;\n    },\n\n    renderer: function(){\n      return this._private.renderer;\n    },\n\n    forceRender: function(){\n      this.notify({\n        type: 'draw'\n      });\n\n      return this;\n    },\n\n    resize: function(){\n      this.notify({\n        type: 'resize'\n      });\n\n      this.trigger('resize');\n\n      return this;\n    },\n    \n    initRenderer: function( options ){\n      var cy = this;\n\n      var RendererProto = $$.extension('renderer', options.name);\n      if( RendererProto == null ){\n        $$.util.error('Can not initialise: No such renderer `%s` found; did you include its JS file?', options.name);\n        return;\n      }\n      \n      this._private.renderer = new RendererProto(\n        $$.util.extend({}, options, {\n          cy: cy,\n          style: cy._private.style\n        })\n      );\n       \n    },\n\n    triggerOnRender: function(){\n      var cbs = this._private.onRenders;\n\n      for( var i = 0; i < cbs.length; i++ ){\n        var cb = cbs[i];\n\n        cb();\n      }\n\n      return this;\n    },\n\n    onRender: function( cb ){\n      this._private.onRenders.push( cb );\n\n      return this;\n    },\n\n    offRender: function( fn ){\n      var cbs = this._private.onRenders;\n\n      if( fn == null ){ // unbind all\n        this._private.onRenders = [];\n        return this;\n      }\n\n      for( var i = 0; i < cbs.length; i++ ){ // unbind specified\n        var cb = cbs[i];\n\n        if( fn === cb ){\n          cbs.splice( i, 1 );\n          break;\n        }\n      }\n\n      return this;\n    }\n    \n  });  \n  \n})( cytoscape );\n;(function($$){ 'use strict';\n  \n  $$.fn.core({\n\n    // get a collection\n    // - empty collection on no args\n    // - collection of elements in the graph on selector arg\n    // - guarantee a returned collection when elements or collection specified\n    collection: function( eles ){\n\n      if( $$.is.string( eles ) ){\n        return this.$( eles );\n\n      } else if( $$.is.elementOrCollection( eles ) ){\n        return eles.collection();\n\n      } else if( $$.is.array( eles ) ){\n        return new $$.Collection( this, eles );\n      }\n\n      return new $$.Collection( this );\n    },\n    \n    nodes: function( selector ){\n      var nodes = this.$(function(){\n        return this.isNode();\n      });\n\n      if( selector ){\n        return nodes.filter( selector );\n      } \n\n      return nodes;\n    },\n    \n    edges: function( selector ){\n      var edges = this.$(function(){\n        return this.isEdge();\n      });\n\n      if( selector ){\n        return edges.filter( selector );\n      }\n\n      return edges;\n    },\n      \n    // search the graph like jQuery\n    $: function( selector ){\n      var eles = new $$.Collection( this, this._private.elements );\n\n      if( selector ){\n        return eles.filter( selector );\n      }\n\n      return eles;\n    }\n    \n  });  \n\n  // aliases\n  $$.corefn.elements = $$.corefn.filter = $$.corefn.$;  \n  \n})( cytoscape );\n\n;(function($$){ 'use strict';\n  \n  $$.fn.core({\n    \n    style: function( newStyle ){\n      if( newStyle ){\n        var s = this.setStyle( newStyle );\n\n        s.update();\n      }\n\n      return this._private.style;\n    },\n\n    setStyle: function( style ){\n      var _p = this._private;\n\n      if( $$.is.stylesheet(style) ){\n        _p.style = style.generateStyle(this);\n      \n      } else if( $$.is.array(style) ) {\n        _p.style = $$.style.fromJson(this, style);\n      \n      } else if( $$.is.string(style) ){\n        _p.style = $$.style.fromString(this, style);\n      \n      } else {\n        _p.style = new $$.Style( this );\n      }\n\n      return _p.style;\n    }\n  });\n  \n})( cytoscape );\n\n\n;(function($$){ 'use strict';\n  \n  $$.fn.core({\n\n    autolock: function(bool){\n      if( bool !== undefined ){\n        this._private.autolock = bool ? true : false;\n      } else {\n        return this._private.autolock;\n      }\n      \n      return this; // chaining\n    },\n\n    autoungrabify: function(bool){\n      if( bool !== undefined ){\n        this._private.autoungrabify = bool ? true : false;\n      } else {\n        return this._private.autoungrabify;\n      }\n      \n      return this; // chaining\n    },\n\n    autounselectify: function(bool){\n      if( bool !== undefined ){\n        this._private.autounselectify = bool ? true : false;\n      } else {\n        return this._private.autounselectify;\n      }\n      \n      return this; // chaining\n    },\n\n    panningEnabled: function( bool ){\n      if( bool !== undefined ){\n        this._private.panningEnabled = bool ? true : false;\n      } else {\n        return this._private.panningEnabled;\n      }\n      \n      return this; // chaining\n    },\n\n    userPanningEnabled: function( bool ){\n      if( bool !== undefined ){\n        this._private.userPanningEnabled = bool ? true : false;\n      } else {\n        return this._private.userPanningEnabled;\n      }\n      \n      return this; // chaining\n    },\n    \n    zoomingEnabled: function( bool ){\n      if( bool !== undefined ){\n        this._private.zoomingEnabled = bool ? true : false;\n      } else {\n        return this._private.zoomingEnabled;\n      }\n      \n      return this; // chaining\n    },\n\n    userZoomingEnabled: function( bool ){\n      if( bool !== undefined ){\n        this._private.userZoomingEnabled = bool ? true : false;\n      } else {\n        return this._private.userZoomingEnabled;\n      }\n      \n      return this; // chaining\n    },\n\n    boxSelectionEnabled: function( bool ){\n      if( bool !== undefined ){\n        this._private.boxSelectionEnabled = bool ? true : false;\n      } else {\n        return this._private.boxSelectionEnabled;\n      }\n      \n      return this; // chaining\n    },\n    \n    pan: function(){\n      var args = arguments;\n      var pan = this._private.pan;\n      var dim, val, dims, x, y;\n\n      switch( args.length ){\n      case 0: // .pan()\n        return pan;\n\n      case 1: \n\n        if( $$.is.string( args[0] ) ){ // .pan('x')\n          dim = args[0];\n          return pan[ dim ];\n\n        } else if( $$.is.plainObject( args[0] ) ) { // .pan({ x: 0, y: 100 })\n          if( !this._private.panningEnabled ){\n            return this;\n          }\n\n          dims = args[0];\n          x = dims.x;\n          y = dims.y;\n\n          if( $$.is.number(x) ){\n            pan.x = x;\n          }\n\n          if( $$.is.number(y) ){\n            pan.y = y;\n          }\n\n          this.trigger('pan viewport');\n        }\n        break;\n\n      case 2: // .pan('x', 100)\n        if( !this._private.panningEnabled ){\n          return this;\n        }\n\n        dim = args[0];\n        val = args[1];\n\n        if( (dim === 'x' || dim === 'y') && $$.is.number(val) ){\n          pan[dim] = val;\n        }\n\n        this.trigger('pan viewport');\n        break;\n\n      default:\n        break; // invalid\n      }\n\n      this.notify({ // notify the renderer that the viewport changed\n        type: 'viewport'\n      });\n\n      return this; // chaining\n    },\n    \n    panBy: function(params){\n      var args = arguments;\n      var pan = this._private.pan;\n      var dim, val, dims, x, y;\n\n      if( !this._private.panningEnabled ){\n        return this;\n      }\n\n      switch( args.length ){\n      case 1: \n\n        if( $$.is.plainObject( args[0] ) ) { // .panBy({ x: 0, y: 100 })\n          dims = args[0];\n          x = dims.x;\n          y = dims.y;\n\n          if( $$.is.number(x) ){\n            pan.x += x;\n          }\n\n          if( $$.is.number(y) ){\n            pan.y += y;\n          }\n\n          this.trigger('pan viewport');\n        }\n        break;\n\n      case 2: // .panBy('x', 100)\n        dim = args[0];\n        val = args[1];\n\n        if( (dim === 'x' || dim === 'y') && $$.is.number(val) ){\n          pan[dim] += val;\n        }\n\n        this.trigger('pan viewport');\n        break;\n\n      default:\n        break; // invalid\n      }\n\n      this.notify({ // notify the renderer that the viewport changed\n        type: 'viewport'\n      });\n\n      return this; // chaining\n    },\n    \n    fit: function( elements, padding ){\n      var viewportState = this.getFitViewport( elements, padding );\n\n      if( viewportState ){\n        var _p = this._private;\n        _p.zoom = viewportState.zoom;\n        _p.pan = viewportState.pan;\n\n        this.trigger('pan zoom viewport');\n\n        this.notify({ // notify the renderer that the viewport changed\n          type: 'viewport'\n        });\n      }\n\n      return this; // chaining\n    },\n\n    getFitViewport: function( elements, padding ){\n      if( $$.is.number(elements) && padding === undefined ){ // elements is optional\n        padding = elements;\n        elements = undefined;\n      }\n\n      if( !this._private.panningEnabled || !this._private.zoomingEnabled ){\n        return;\n      }\n\n      var bb;\n\n      if( $$.is.string(elements) ){\n        var sel = elements;\n        elements = this.$( sel );\n\n      } else if( $$.is.boundingBox(elements) ){ // assume bb\n        var bbe = elements;\n        bb = {\n          x1: bbe.x1,\n          y1: bbe.y1,\n          x2: bbe.x2,\n          y2: bbe.y2\n        };\n\n        bb.w = bb.x2 - bb.x1;\n        bb.h = bb.y2 - bb.y1;\n\n      } else if( !$$.is.elementOrCollection(elements) ){\n        elements = this.elements();\n      }\n\n      bb = bb || elements.boundingBox();\n\n      var w = this.width();\n      var h = this.height();\n      var zoom;\n      padding = $$.is.number(padding) ? padding : 0;\n\n      if( !isNaN(w) && !isNaN(h) && w > 0 && h > 0 && !isNaN(bb.w) && !isNaN(bb.h) &&  bb.w > 0 && bb.h > 0 ){\n        zoom = Math.min( (w - 2*padding)/bb.w, (h - 2*padding)/bb.h );\n\n        // crop zoom\n        zoom = zoom > this._private.maxZoom ? this._private.maxZoom : zoom;\n        zoom = zoom < this._private.minZoom ? this._private.minZoom : zoom;\n\n        var pan = { // now pan to middle\n          x: (w - zoom*( bb.x1 + bb.x2 ))/2,\n          y: (h - zoom*( bb.y1 + bb.y2 ))/2\n        };\n\n        return {\n          zoom: zoom, \n          pan: pan\n        };\n      }\n\n      return;\n    },\n    \n    minZoom: function( zoom ){\n      if( zoom === undefined ){\n        return this._private.minZoom;\n      } else if( $$.is.number(zoom) ){\n        this._private.minZoom = zoom;\n      }\n\n      return this;\n    },\n\n    maxZoom: function( zoom ){\n      if( zoom === undefined ){\n        return this._private.maxZoom;\n      } else if( $$.is.number(zoom) ){\n        this._private.maxZoom = zoom;\n      }\n\n      return this;\n    },\n\n    zoom: function( params ){\n      var pos; // in rendered px\n      var zoom;\n\n      if( params === undefined ){ // then get the zoom\n        return this._private.zoom;\n\n      } else if( $$.is.number(params) ){ // then set the zoom\n        zoom = params;\n\n      } else if( $$.is.plainObject(params) ){ // then zoom about a point\n        zoom = params.level;\n\n        if( params.position ){\n          var p = params.position;\n          var pan = this._private.pan;\n          var z = this._private.zoom;\n\n          pos = { // convert to rendered px\n            x: p.x * z + pan.x,\n            y: p.y * z + pan.y\n          };\n        } else if( params.renderedPosition ){\n          pos = params.renderedPosition;\n        }\n\n        if( pos && !this._private.panningEnabled ){\n          return this; // panning disabled\n        }\n      }\n\n      if( !this._private.zoomingEnabled ){\n        return this; // zooming disabled\n      }\n\n      if( !$$.is.number(zoom) || ( pos && (!$$.is.number(pos.x) || !$$.is.number(pos.y)) ) ){\n        return this; // can't zoom with invalid params\n      }\n\n      // crop zoom\n      zoom = zoom > this._private.maxZoom ? this._private.maxZoom : zoom;\n      zoom = zoom < this._private.minZoom ? this._private.minZoom : zoom;\n\n      if( pos ){ // set zoom about position\n        var pan1 = this._private.pan;\n        var zoom1 = this._private.zoom;\n        var zoom2 = zoom;\n        \n        var pan2 = {\n          x: -zoom2/zoom1 * (pos.x - pan1.x) + pos.x,\n          y: -zoom2/zoom1 * (pos.y - pan1.y) + pos.y\n        };\n\n        this._private.zoom = zoom;\n        this._private.pan = pan2;\n\n        var posChanged = pan1.x !== pan2.x || pan1.y !== pan2.y;\n        this.trigger(' zoom ' + (posChanged ? ' pan ' : '') + ' viewport ' );\n      \n      } else { // just set the zoom\n        this._private.zoom = zoom;\n        this.trigger('zoom viewport');\n      }\n\n      this.notify({ // notify the renderer that the viewport changed\n        type: 'viewport'\n      });\n\n      return this; // chaining\n    },\n\n    viewport: function( opts ){ \n      var _p = this._private;\n      var zoomDefd = true;\n      var panDefd = true;\n      var events = []; // to trigger\n      var zoomFailed = false;\n      var panFailed = false;\n\n      if( !opts ){ return this; }\n      if( !$$.is.number(opts.zoom) ){ zoomDefd = false; }\n      if( !$$.is.plainObject(opts.pan) ){ panDefd = false; }\n      if( !zoomDefd && !panDefd ){ return this; }\n\n      if( zoomDefd ){\n        var z = opts.zoom;\n\n        if( z < _p.minZoom || z > _p.maxZoom || !_p.zoomingEnabled ){\n          zoomFailed = true;\n\n        } else {\n          _p.zoom = z;\n\n          events.push('zoom');\n        }\n      }\n\n      if( panDefd && (!zoomFailed || !opts.cancelOnFailedZoom) && _p.panningEnabled ){\n        var p = opts.pan;\n\n        if( $$.is.number(p.x) ){\n          _p.pan.x = p.x;\n          panFailed = false;\n        }\n\n        if( $$.is.number(p.y) ){\n          _p.pan.y = p.y;\n          panFailed = false;\n        }\n\n        if( !panFailed ){\n          events.push('pan');\n        }\n      }\n\n      if( events.length > 0 ){\n        events.push('viewport');\n        this.trigger( events.join(' ') );\n\n        this.notify({\n          type: 'viewport'\n        });\n      }\n\n      return this; // chaining\n    },\n    \n    center: function( elements ){\n      var pan = this.getCenterPan( elements );\n\n      if( pan ){\n        this._private.pan = pan;\n\n        this.trigger('pan viewport');\n\n        this.notify({ // notify the renderer that the viewport changed\n          type: 'viewport'\n        });\n      }\n\n      return this; // chaining\n    },\n\n    getCenterPan: function( elements, zoom ){\n      if( !this._private.panningEnabled ){\n        return;\n      }\n\n      if( $$.is.string(elements) ){\n        var selector = elements;\n        elements = this.elements( selector );\n      } else if( !$$.is.elementOrCollection(elements) ){\n        elements = this.elements();\n      }\n\n      var bb = elements.boundingBox();\n      var w = this.width();\n      var h = this.height();\n      zoom = zoom === undefined ? this._private.zoom : zoom;\n\n      var pan = { // middle\n        x: (w - zoom*( bb.x1 + bb.x2 ))/2,\n        y: (h - zoom*( bb.y1 + bb.y2 ))/2\n      };\n      \n      return pan;\n    },\n    \n    reset: function(){\n      if( !this._private.panningEnabled || !this._private.zoomingEnabled ){\n        return this;\n      }\n\n      this.viewport({\n        pan: { x: 0, y: 0 },\n        zoom: 1\n      });\n      \n      return this; // chaining\n    },\n\n    width: function(){\n      var container = this._private.container;\n\n      if( container ){\n        return container.clientWidth;\n      }\n\n      return 1; // fallback if no container (not 0 b/c can be used for dividing etc)\n    },\n\n    height: function(){\n      var container = this._private.container;\n\n      if( container ){\n        return container.clientHeight;\n      }\n\n      return 1; // fallback if no container (not 0 b/c can be used for dividing etc)\n    },\n\n    extent: function(){\n      var pan = this._private.pan;\n      var zoom = this._private.zoom;\n      var rb = this.renderedExtent();\n\n      var b = {\n        x1: ( rb.x1 - pan.x )/zoom,\n        x2: ( rb.x2 - pan.x )/zoom,\n        y1: ( rb.y1 - pan.y )/zoom,\n        y2: ( rb.y2 - pan.y )/zoom,\n      };\n\n      b.w = b.x2 - b.x1;\n      b.h = b.y2 - b.y1;\n\n      return b;\n    },\n\n    renderedExtent: function(){\n      var width = this.width();\n      var height = this.height();\n\n      return {\n        x1: 0,\n        y1: 0,\n        x2: width,\n        y2: height,\n        w: width,\n        h: height\n      };\n    }\n  });\n\n  // aliases\n  $$.corefn.centre = $$.corefn.center;\n\n  // backwards compatibility\n  $$.corefn.autolockNodes = $$.corefn.autolock;\n  $$.corefn.autoungrabifyNodes = $$.corefn.autoungrabify;\n\n})( cytoscape );\n\n;(function($$){ 'use strict';\n  \n  // Use this interface to define functions for collections/elements.\n  // This interface is good, because it forces you to think in terms\n  // of the collections case (more than 1 element), so we don't need\n  // notification blocking nonsense everywhere.\n  //\n  // Other collection-*.js files depend on this being defined first.\n  // It's a trade off: It simplifies the code for Collection and \n  // Element integration so much that it's worth it to create the\n  // JS dependency.\n  //\n  // Having this integration guarantees that we can call any\n  // collection function on an element and vice versa.\n\n  // e.g. $$.fn.collection({ someFunc: function(){ /* ... */ } })\n  $$.fn.collection = $$.fn.eles = function( fnMap, options ){\n    for( var name in fnMap ){\n      var fn = fnMap[name];\n\n      $$.Collection.prototype[ name ] = fn;\n    }\n  };\n  \n  // factory for generating edge ids when no id is specified for a new element\n  var idFactory = {\n    prefix: {\n      nodes: 'n',\n      edges: 'e'\n    },\n    id: {\n      nodes: 0,\n      edges: 0\n    },\n    generate: function(cy, element, tryThisId){\n      var json = $$.is.element( element ) ? element._private : element;\n      var group = json.group;\n      var id = tryThisId != null ? tryThisId : this.prefix[group] + this.id[group];\n      \n      if( cy.getElementById(id).empty() ){\n        this.id[group]++; // we've used the current id, so move it up\n      } else { // otherwise keep trying successive unused ids\n        while( !cy.getElementById(id).empty() ){\n          id = this.prefix[group] + ( ++this.id[group] );\n        }\n      }\n      \n      return id;\n    }\n  };\n  \n  // Element\n  ////////////////////////////////////////////////////////////////////////////////////////////////////\n  \n  // represents a node or an edge\n  $$.Element = function(cy, params, restore){\n    if( !(this instanceof $$.Element) ){\n      return new $$.Element(cy, params, restore);\n    }\n\n    var self = this;\n    restore = (restore === undefined || restore ? true : false);\n    \n    if( cy === undefined || params === undefined || !$$.is.core(cy) ){\n      $$.util.error('An element must have a core reference and parameters set');\n      return;\n    }\n    \n    // validate group\n    if( params.group !== 'nodes' && params.group !== 'edges' ){\n      $$.util.error('An element must be of type `nodes` or `edges`; you specified `' + params.group + '`');\n      return;\n    }\n    \n    // make the element array-like, just like a collection\n    this.length = 1;\n    this[0] = this;\n    \n    // NOTE: when something is added here, add also to ele.json()\n    this._private = {\n      cy: cy,\n      single: true, // indicates this is an element\n      data: params.data || {}, // data object\n      position: params.position || {}, // (x, y) position pair\n      autoWidth: undefined, // width and height of nodes calculated by the renderer when set to special 'auto' value\n      autoHeight: undefined, \n      listeners: [], // array of bound listeners\n      group: params.group, // string; 'nodes' or 'edges'\n      style: {}, // properties as set by the style\n      rstyle: {}, // properties for style sent from the renderer to the core\n      styleCxts: [], // applied style contexts from the styler\n      removed: true, // whether it's inside the vis; true if removed (set true here since we call restore)\n      selected: params.selected ? true : false, // whether it's selected\n      selectable: params.selectable === undefined ? true : ( params.selectable ? true : false ), // whether it's selectable\n      locked: params.locked ? true : false, // whether the element is locked (cannot be moved)\n      grabbed: false, // whether the element is grabbed by the mouse; renderer sets this privately\n      grabbable: params.grabbable === undefined ? true : ( params.grabbable ? true : false ), // whether the element can be grabbed\n      active: false, // whether the element is active from user interaction\n      classes: {}, // map ( className => true )\n      animation: { // object for currently-running animations\n        current: [],\n        queue: []\n      },\n      rscratch: {}, // object in which the renderer can store information\n      scratch: params.scratch || {}, // scratch objects\n      edges: [], // array of connected edges\n      children: [] // array of children\n    };\n    \n    // renderedPosition overrides if specified\n    if( params.renderedPosition ){\n      var rpos = params.renderedPosition;\n      var pan = cy.pan();\n      var zoom = cy.zoom();\n\n      this._private.position = {\n        x: (rpos.x - pan.x)/zoom,\n        y: (rpos.y - pan.y)/zoom\n      };\n    }\n    \n    if( $$.is.string(params.classes) ){\n      var classes = params.classes.split(/\\s+/);\n      for( var i = 0, l = classes.length; i < l; i++ ){\n        var cls = classes[i];\n        if( !cls || cls === '' ){ continue; }\n\n        self._private.classes[cls] = true;\n      }\n    }\n\n    if( params.css ){\n      cy.style().applyBypass( this, params.css );\n    }\n    \n    if( restore === undefined || restore ){\n      this.restore();\n    }\n    \n  };\n\n  \n  // Collection\n  ////////////////////////////////////////////////////////////////////////////////////////////////////\n  \n  // represents a set of nodes, edges, or both together\n  $$.Collection = function(cy, elements, options){\n    if( !(this instanceof $$.Collection) ){\n      return new $$.Collection(cy, elements);\n    }\n\n    if( cy === undefined || !$$.is.core(cy) ){\n      $$.util.error('A collection must have a reference to the core');\n      return;\n    }\n    \n    var ids = {};\n    var indexes = {};\n    var createdElements = false;\n    \n    if( !elements ){\n      elements = [];\n    } else if( elements.length > 0 && $$.is.plainObject( elements[0] ) && !$$.is.element( elements[0] ) ){\n      createdElements = true;\n\n      // make elements from json and restore all at once later\n      var eles = [];\n      var elesIds = {};\n\n      for( var i = 0, l = elements.length; i < l; i++ ){\n        var json = elements[i];\n\n        if( json.data == null ){\n          json.data = {};\n        }\n        \n        var data = json.data;\n\n        // make sure newly created elements have valid ids\n        if( data.id == null ){\n          data.id = idFactory.generate( cy, json );\n        } else if( cy.getElementById( data.id ).length !== 0 || elesIds[ data.id ] ){\n          continue; // can't create element if prior id already exists\n        }\n\n        var ele = new $$.Element( cy, json, false );\n        eles.push( ele );\n        elesIds[ data.id ] = true;\n      }\n\n      elements = eles;\n    }\n    \n    this.length = 0;\n\n    for( var i = 0, l = elements.length; i < l; i++ ){\n      var element = elements[i];\n      if( !element ){  continue; }\n      \n      var id = element._private.data.id;\n      \n      if( !options || (options.unique && !ids[ id ] ) ){\n        ids[ id ] = element;\n        indexes[ id ] = this.length;\n\n        this[ this.length ] = element;\n        this.length++;\n      }\n    }\n    \n    this._private = {\n      cy: cy,\n      ids: ids,\n      indexes: indexes\n    };\n\n    // restore the elements if we created them from json\n    if( createdElements ){\n      this.restore();\n    }\n  };\n  \n  \n  // Functions\n  ////////////////////////////////////////////////////////////////////////////////////////////////////\n  \n  // keep the prototypes in sync (an element has the same functions as a collection)\n  // and use $$.elefn and $$.elesfn as shorthands to the prototypes\n  $$.elefn = $$.elesfn = $$.Element.prototype = $$.Collection.prototype;\n\n  $$.elesfn.cy = function(){\n    return this._private.cy;\n  };\n  \n  $$.elesfn.element = function(){\n    return this[0];\n  };\n  \n  $$.elesfn.collection = function(){\n    if( $$.is.collection(this) ){\n      return this;\n    } else { // an element\n      return new $$.Collection( this._private.cy, [this] );\n    }\n  };\n\n  $$.elesfn.unique = function(){\n    return new $$.Collection( this._private.cy, this, { unique: true } );\n  };\n\n  $$.elesfn.getElementById = function( id ){\n    var cy = this._private.cy;\n    var ele = this._private.ids[ id ];\n\n    return ele ? ele : $$.Collection(cy); // get ele or empty collection\n  };\n\n  $$.elesfn.json = function(){\n    var ele = this.element();\n    if( ele == null ){ return undefined; }\n\n    var p = ele._private;\n    \n    var json = $$.util.copy({\n      data: p.data,\n      position: p.position,\n      group: p.group,\n      bypass: p.bypass,\n      removed: p.removed,\n      selected: p.selected,\n      selectable: p.selectable,\n      locked: p.locked,\n      grabbed: p.grabbed,\n      grabbable: p.grabbable,\n      classes: ''\n    });\n    \n    var classes = [];\n    for( var cls in p.classes ){\n      if( p.classes[cls] ){\n        classes.push(cls);\n      }\n    }\n    \n    for( var i = 0; i < classes.length; i++ ){\n      var cls = classes[i];\n      json.classes += cls + ( i < classes.length - 1 ? ' ' : '' );\n    }\n    \n    return json;\n  };\n\n  $$.elesfn.jsons = function(){\n    var jsons = [];\n\n    for( var i = 0; i < this.length; i++ ){\n      var ele = this[i];\n      var json = ele.json();\n\n      jsons.push( json );\n    }\n\n    return jsons;\n  };\n\n  $$.elesfn.clone = function(){\n    var cy = this.cy();\n    var elesArr = [];\n\n    for( var i = 0; i < this.length; i++ ){\n      var ele = this[i];\n      var json = ele.json();\n      var clone = new $$.Element(cy, json, false); // NB no restore\n\n      elesArr.push( clone );\n    }\n\n    return new $$.Collection( cy, elesArr );\n  };\n  $$.elesfn.copy = $$.elesfn.clone;\n\n  $$.elesfn.restore = function( notifyRenderer ){\n    var self = this;\n    var restored = [];\n    var cy = self.cy();\n    \n    if( notifyRenderer === undefined ){\n      notifyRenderer = true;\n    }\n\n    // create arrays of nodes and edges, since we need to\n    // restore the nodes first\n    var elements = [];\n    var nodes = [], edges = [];\n    var numNodes = 0;\n    var numEdges = 0;\n    for( var i = 0, l = self.length; i < l; i++ ){\n      var ele = self[i];\n      \n      // keep nodes first in the array and edges after\n      if( ele.isNode() ){ // put to front of array if node\n        nodes.push( ele );\n        numNodes++;\n      } else { // put to end of array if edge\n        edges.push( ele );\n        numEdges++;\n      }\n    }\n\n    elements = nodes.concat( edges );\n\n    // now, restore each element\n    for( var i = 0, l = elements.length; i < l; i++ ){\n      var ele = elements[i];\n\n      if( !ele.removed() ){\n        // don't need to do anything\n        continue;\n      }\n      \n      var _private = ele._private;\n      var data = _private.data;\n      \n      // set id and validate\n      if( data.id === undefined ){\n        data.id = idFactory.generate( cy, ele );\n      } else if( $$.is.emptyString(data.id) || !$$.is.string(data.id) ){\n        $$.util.error('Can not create element with invalid string ID `' + data.id + '`');\n        \n        // can't create element if it has empty string as id or non-string id\n        continue;\n      } else if( cy.getElementById( data.id ).length !== 0 ){\n        $$.util.error('Can not create second element with ID `' + data.id + '`');\n        \n        // can't create element if one already has that id\n        continue;\n      }\n\n      var id = data.id; // id is finalised, now let's keep a ref\n      \n      if( ele.isEdge() ){ // extra checks for edges\n        \n        var edge = ele;\n        var fields = ['source', 'target'];\n        var fieldsLength = fields.length;\n        var badSourceOrTarget = false;\n        for(var j = 0; j < fieldsLength; j++){\n          \n          var field = fields[j];\n          var val = data[field];\n          \n          if( val == null || val === '' ){\n            // can't create if source or target is not defined properly\n            $$.util.error('Can not create edge `' + id + '` with unspecified ' + field);\n            badSourceOrTarget = true;\n          } else if( cy.getElementById(val).empty() ){ \n            // can't create edge if one of its nodes doesn't exist\n            $$.util.error('Can not create edge `' + id + '` with nonexistant ' + field + ' `' + val + '`');\n            badSourceOrTarget = true;\n          }\n        }\n\n        if( badSourceOrTarget ){ continue; } // can't create this\n        \n        var src = cy.getElementById( data.source );\n        var tgt = cy.getElementById( data.target );\n\n        src._private.edges.push( edge );\n        tgt._private.edges.push( edge );\n\n        edge._private.source = src;\n        edge._private.target = tgt;\n\n      } // if is edge\n       \n      // create mock ids map for element so it can be used like collections\n      _private.ids = {};\n      _private.ids[ id ] = ele;\n\n      _private.removed = false;\n      cy.addToPool( ele );\n      \n      restored.push( ele );\n    } // for each element\n\n    // do compound node sanity checks\n    for( var i = 0; i < numNodes; i++ ){ // each node \n      var node = elements[i];\n      var data = node._private.data;\n\n      var parentId = node._private.data.parent;\n      var specifiedParent = parentId != null;\n\n      if( specifiedParent ){\n        var parent = cy.getElementById( parentId );\n\n        if( parent.empty() ){\n          // non-existant parent; just remove it\n          data.parent = undefined;\n        } else {\n          var selfAsParent = false;\n          var ancestor = parent;\n          while( !ancestor.empty() ){\n            if( node.same(ancestor) ){\n              // mark self as parent and remove from data\n              selfAsParent = true;\n              data.parent = undefined; // remove parent reference\n\n              // exit or we loop forever\n              break;\n            }\n\n            ancestor = ancestor.parent();\n          }\n\n          if( !selfAsParent ){\n            // connect with children\n            parent[0]._private.children.push( node );\n            node._private.parent = parent[0];\n\n            // let the core know we have a compound graph\n            cy._private.hasCompoundNodes = true;\n          }\n        } // else\n      } // if specified parent\n    } // for each node\n    \n    restored = new $$.Collection( cy, restored );\n    if( restored.length > 0 ){\n\n      var toUpdateStyle = restored.add( restored.connectedNodes() ).add( restored.parent() );\n      toUpdateStyle.updateStyle( notifyRenderer );\n\n      if( notifyRenderer ){\n        restored.rtrigger('add');\n      } else {\n        restored.trigger('add');\n      }\n    }\n    \n    return self; // chainability\n  };\n  \n  $$.elesfn.removed = function(){\n    var ele = this[0];\n    return ele && ele._private.removed;\n  };\n\n  $$.elesfn.inside = function(){\n    var ele = this[0];\n    return ele && !ele._private.removed;\n  };\n\n  $$.elesfn.remove = function( notifyRenderer ){\n    var self = this;\n    var removed = [];\n    var elesToRemove = [];\n    var elesToRemoveIds = {};\n    var cy = self._private.cy;\n    \n    if( notifyRenderer === undefined ){\n      notifyRenderer = true;\n    }\n    \n    // add connected edges\n    function addConnectedEdges(node){\n      var edges = node._private.edges; \n      for( var i = 0; i < edges.length; i++ ){\n        add( edges[i] );\n      }\n    }\n    \n\n    // add descendant nodes\n    function addChildren(node){\n      var children = node._private.children;\n      \n      for( var i = 0; i < children.length; i++ ){\n        add( children[i] );\n      }\n    }\n\n    function add( ele ){\n      var alreadyAdded =  elesToRemoveIds[ ele.id() ];\n      if( alreadyAdded ){\n        return;\n      } else {\n        elesToRemoveIds[ ele.id() ] = true;\n      }\n\n      if( ele.isNode() ){\n        elesToRemove.push( ele ); // nodes are removed last\n\n        addConnectedEdges( ele );\n        addChildren( ele );\n      } else {\n        elesToRemove.unshift( ele ); // edges are removed first\n      }\n    }\n\n    // make the list of elements to remove\n    // (may be removing more than specified due to connected edges etc)\n\n    for( var i = 0, l = self.length; i < l; i++ ){\n      var ele = self[i];\n\n      add( ele );\n    }\n    \n    function removeEdgeRef(node, edge){\n      var connectedEdges = node._private.edges;\n      for( var j = 0; j < connectedEdges.length; j++ ){\n        var connectedEdge = connectedEdges[j];\n        \n        if( edge === connectedEdge ){\n          connectedEdges.splice( j, 1 );\n          break;\n        }\n      }\n    }\n\n    function removeChildRef(parent, ele){\n      ele = ele[0];\n      parent = parent[0];\n      var children = parent._private.children;\n\n      for( var j = 0; j < children.length; j++ ){\n        if( children[j][0] === ele[0] ){\n          children.splice(j, 1);\n          break;\n        }\n      }\n    }\n\n    for( var i = 0; i < elesToRemove.length; i++ ){\n      var ele = elesToRemove[i];\n\n      // mark as removed\n      ele._private.removed = true;\n\n      // remove from core pool\n      cy.removeFromPool( ele );\n\n      // add to list of removed elements\n      removed.push( ele );\n\n      if( ele.isEdge() ){ // remove references to this edge in its connected nodes\n        var src = ele.source()[0];\n        var tgt = ele.target()[0];\n\n        removeEdgeRef( src, ele );\n        removeEdgeRef( tgt, ele );\n\n      } else { // remove reference to parent \n        var parent = ele.parent();\n\n        if( parent.length !== 0 ){\n          removeChildRef(parent, ele);\n        }\n      }\n    }\n\n    // check to see if we have a compound graph or not\n    var elesStillInside = cy._private.elements;\n    cy._private.hasCompoundNodes = false;\n    for( var i = 0; i < elesStillInside.length; i++ ){\n      var ele = elesStillInside[i];\n\n      if( ele.isParent() ){\n        cy._private.hasCompoundNodes = true;\n        break;\n      }\n    }\n\n    var removedElements = new $$.Collection( this.cy(), removed );\n    if( removedElements.size() > 0 ){\n      // must manually notify since trigger won't do this automatically once removed\n      \n      if( notifyRenderer ){\n        this.cy().notify({\n          type: 'remove',\n          collection: removedElements\n        });\n      }\n      \n      removedElements.trigger('remove');\n    }\n\n    // check for empty remaining parent nodes\n    var checkedParentId = {};\n    for( var i = 0; i < elesToRemove.length; i++ ){\n      var ele = elesToRemove[i];\n      var isNode = ele._private.group === 'nodes';\n      var parentId = ele._private.data.parent;\n\n      if( isNode && parentId !== undefined && !checkedParentId[ parentId ] ){\n        checkedParentId[ parentId ] = true;\n        var parent = cy.getElementById( parentId );\n\n        if( parent && parent.length !== 0 && !parent._private.removed && parent.children().length === 0 ){\n          parent.updateStyle();\n        }\n      }\n    }\n\n    return this;\n  };\n\n  $$.elesfn.move = function( struct ){\n    var cy = this._private.cy;\n\n    if( struct.source !== undefined || struct.target !== undefined ){\n      var srcId = struct.source;\n      var tgtId = struct.target;\n      var srcExists = cy.getElementById( srcId ).length > 0;\n      var tgtExists = cy.getElementById( tgtId ).length > 0;\n\n      if( srcExists || tgtExists ){\n        var jsons = this.jsons();\n\n        this.remove();\n\n        for( var i = 0; i < jsons.length; i++ ){\n          var json = jsons[i];\n\n          if( json.group === 'edges' ){\n            if( srcExists ){ json.data.source = srcId; }\n            if( tgtExists ){ json.data.target = tgtId; }\n          }\n        }\n\n        return cy.add( jsons );\n      }\n \n    } else if( struct.parent !== undefined ){ // move node to new parent\n      var parentId = struct.parent;\n      var parentExists = parentId === null || cy.getElementById( parentId ).length > 0;\n    \n      if( parentExists ){\n        var jsons = this.jsons();\n        var descs = this.descendants();\n        var descsEtc = descs.merge( descs.add(this).connectedEdges() );\n\n        this.remove(); // NB: also removes descendants and their connected edges\n\n        for( var i = 0; i < this.length; i++ ){\n          var json = jsons[i];\n\n          if( json.group === 'nodes' ){\n            json.data.parent = parentId === null ? undefined : parentId;\n          }\n        }\n      }\n\n      return cy.add( jsons ).merge( descsEtc.restore() );\n    }\n\n    return this; // if nothing done\n  };\n  \n})( cytoscape );\n\n\n;(function($$){ 'use strict';\n\n  // search, spanning trees, etc\n  $$.fn.eles({\n\n    // std functional ele first callback style\n    stdBreadthFirstSearch: function( options ){\n      options = $$.util.extend( {}, options, {\n        std: true\n      } );\n\n      return this.breadthFirstSearch( options );\n    },\n\n    // do a breadth first search from the nodes in the collection\n    // from pseudocode on wikipedia\n    breadthFirstSearch: function( roots, fn, directed ){\n      var options;\n      var std;\n      var thisArg;\n      if( $$.is.plainObject(roots) && !$$.is.elementOrCollection(roots) ){\n        options = roots;\n        roots = options.roots;\n        fn = options.visit;\n        directed = options.directed;\n        std = options.std;\n        thisArg = options.thisArg;\n      }\n\n      directed = arguments.length === 2 && !$$.is.fn(fn) ? fn : directed;\n      fn = $$.is.fn(fn) ? fn : function(){};\n      \n      var cy = this._private.cy;\n      var v = $$.is.string(roots) ? this.filter(roots) : roots;\n      var Q = [];\n      var connectedNodes = [];\n      var connectedBy = {};\n      var id2depth = {};\n      var V = {};\n      var j = 0;\n      var found;\n      var nodes = this.nodes();\n      var edges = this.edges();\n\n      // enqueue v\n      for( var i = 0; i < v.length; i++ ){\n        if( v[i].isNode() ){\n          Q.unshift( v[i] );\n          V[ v[i].id() ] = true; \n\n          connectedNodes.push( v[i] );\n          id2depth[ v[i].id() ] = 0;\n        }\n      }\n\n      while( Q.length !== 0 ){\n        var v = Q.shift();\n        var depth = id2depth[ v.id() ];\n        var prevEdge = connectedBy[ v.id() ];\n        var prevNode = prevEdge == null ? undefined : prevEdge.connectedNodes().not( v )[0];\n        var ret;\n\n        if( std ){\n          ret = fn.call(thisArg, v, prevEdge, prevNode, j++, depth);\n        } else {\n          ret = fn.call(v, j++, depth, v, prevEdge, prevNode);\n        }\n\n        if( ret === true ){\n          found = v;\n          break;\n        }\n\n        if( ret === false ){\n          break;\n        }\n\n        var vwEdges = v.connectedEdges(directed ? function(){ return this.data('source') === v.id(); } : undefined).intersect( edges );\n        for( var i = 0; i < vwEdges.length; i++ ){\n          var e = vwEdges[i];\n          var w = e.connectedNodes(function(){ return this.id() !== v.id(); }).intersect( nodes );\n\n          if( w.length !== 0 && !V[ w.id() ] ){\n            w = w[0];\n\n            Q.push( w );\n            V[ w.id() ] = true;\n\n            id2depth[ w.id() ] = id2depth[ v.id() ] + 1;\n\n            connectedNodes.push( w );\n            connectedBy[ w.id() ] = e;\n          }\n        }\n        \n      }\n\n      var connectedEles = [];\n\n      for( var i = 0; i < connectedNodes.length; i++ ){\n        var node = connectedNodes[i];\n        var edge = connectedBy[ node.id() ];\n\n        if( edge ){\n          connectedEles.push( edge );\n        }\n\n        connectedEles.push( node );\n      }\n\n      return {\n        path: new $$.Collection( cy, connectedEles, { unique: true } ),\n        found: new $$.Collection( cy, found, { unique: true } )\n      };\n    },\n\n    // std functional ele first callback style\n    stdDepthFirstSearch: function( options ){\n      options = $$.util.extend( {}, options, {\n        std: true\n      } );\n\n      return this.depthFirstSearch( options );\n    },\n\n    // do a depth first search on the nodes in the collection\n    // from pseudocode on wikipedia (iterative impl)\n    depthFirstSearch: function( roots, fn, directed ){\n      var options;\n      var std;\n      var thisArg;\n      if( $$.is.plainObject(roots) && !$$.is.elementOrCollection(roots) ){\n        options = roots;\n        roots = options.roots;\n        fn = options.visit;\n        directed = options.directed;\n        std = options.std;\n        thisArg = options.thisArg;\n      }\n      \n      directed = arguments.length === 2 && !$$.is.fn(fn) ? fn : directed;\n      fn = $$.is.fn(fn) ? fn : function(){};\n      var cy = this._private.cy;\n      var v = $$.is.string(roots) ? this.filter(roots) : roots;\n      var S = [];\n      var connectedNodes = [];\n      var connectedBy = {};\n      var id2depth = {};\n      var discovered = {};\n      var j = 0;\n      var found;\n      var edges = this.edges();\n      var nodes = this.nodes();\n\n      // push v\n      for( var i = 0; i < v.length; i++ ){\n        if( v[i].isNode() ){\n          S.push( v[i] );\n\n          connectedNodes.push( v[i] );\n          id2depth[ v[i].id() ] = 0;\n        }\n      }\n\n      while( S.length !== 0 ){\n        var v = S.pop();\n\n        if( !discovered[ v.id() ] ){\n          discovered[ v.id() ] = true;\n\n          var depth = id2depth[ v.id() ];\n          var prevEdge = connectedBy[ v.id() ];\n          var prevNode = prevEdge == null ? undefined : prevEdge.connectedNodes().not( v )[0];\n          var ret;\n\n          if( std ){\n            ret = fn.call(thisArg, v, prevEdge, prevNode, j++, depth);\n          } else {\n            ret = fn.call(v, j++, depth, v, prevEdge, prevNode);\n          }\n\n          if( ret === true ){\n            found = v;\n            break;\n          }\n\n          if( ret === false ){\n            break;\n          }\n\n          var vwEdges = v.connectedEdges(directed ? function(){ return this.data('source') === v.id(); } : undefined).intersect( edges );\n          \n          for( var i = 0; i < vwEdges.length; i++ ){\n            var e = vwEdges[i];\n            var w = e.connectedNodes(function(){ return this.id() !== v.id(); }).intersect( nodes );\n\n            if( w.length !== 0 && !discovered[ w.id() ] ){\n              w = w[0];\n\n              S.push( w );\n\n              id2depth[ w.id() ] = id2depth[ v.id() ] + 1;\n\n              connectedNodes.push( w );\n              connectedBy[ w.id() ] = e;\n            }\n          }\n        }\n      }\n\n      var connectedEles = [];\n\n      for( var i = 0; i < connectedNodes.length; i++ ){\n        var node = connectedNodes[i];\n        var edge = connectedBy[ node.id() ];\n\n        if( edge ){\n          connectedEles.push( edge );\n        }\n\n        connectedEles.push( node );\n      }\n\n      return {\n        path: new $$.Collection( cy, connectedEles, { unique: true } ),\n        found: new $$.Collection( cy, found, { unique: true } )\n      };\n    },\n\n    // kruskal's algorithm (finds min spanning tree, assuming undirected graph)\n    // implemented from pseudocode from wikipedia\n    kruskal: function( weightFn ){\n      weightFn = $$.is.fn(weightFn) ? weightFn : function(){ return 1; }; // if not specified, assume each edge has equal weight (1)\n\n      function findSet(ele){\n        for( var i = 0; i < forest.length; i++ ){\n          var eles = forest[i];\n\n          if( eles.anySame(ele) ){\n            return {\n              eles: eles,\n              index: i\n            };\n          }\n        }\n      }\n\n      var A = new $$.Collection(this._private.cy, []);\n      var forest = [];\n      var nodes = this.nodes();\n\n      for( var i = 0; i < nodes.length; i++ ){\n        forest.push( nodes[i].collection() );\n      }\n\n      var edges = this.edges();\n      var S = edges.toArray().sort(function(a, b){\n        var weightA = weightFn.call(a, a);\n        var weightB = weightFn.call(b, b);\n\n        return weightA - weightB;\n      });\n\n      for(var i = 0; i < S.length; i++){\n        var edge = S[i];\n        var u = edge.source()[0];\n        var v = edge.target()[0];\n        var setU = findSet(u);\n        var setV = findSet(v);\n\n        if( setU.index !== setV.index ){\n          A = A.add( edge );\n\n          // combine forests for u and v\n          forest[ setU.index ] = setU.eles.add( setV.eles );\n          forest.splice( setV.index, 1 );\n        }\n      }\n\n      return nodes.add( A );\n\n    },\n\n    dijkstra: function( root, weightFn, directed ){\n      var options;\n      if( $$.is.plainObject(root) && !$$.is.elementOrCollection(root) ){\n        options = root;\n        root = options.root;\n        weightFn = options.weight;\n        directed = options.directed;\n      }\n\n      var cy = this._private.cy;\n      weightFn = $$.is.fn(weightFn) ? weightFn : function(){ return 1; }; // if not specified, assume each edge has equal weight (1)\n\n      var source = $$.is.string(root) ? this.filter(root)[0] : root[0];\n      var dist = {};\n      var prev = {};\n      var knownDist = {};\n\n      var edges = this.edges().filter(function(){ return !this.isLoop(); });\n      var nodes = this.nodes();\n      var Q = [];\n\n      for( var i = 0; i < nodes.length; i++ ){\n        dist[ nodes[i].id() ] = nodes[i].same( source ) ? 0 : Infinity;\n        Q.push( nodes[i] );\n      }\n\n      var valueFn = function(node) {\n        return dist[ node.id() ];\n      };\n      \n      Q = new $$.Collection(cy, Q);\n    \n      var heap = $$.Minheap(cy, Q, valueFn);\n    \n      var distBetween = function(u, v){\n        var uvs = ( directed ? u.edgesTo(v) : u.edgesWith(v) ).intersect(edges);\n        var smallestDistance = Infinity;\n        var smallestEdge;\n\n        for( var i = 0; i < uvs.length; i++ ){\n          var edge = uvs[i];\n          var weight = weightFn.apply( edge, [edge] );\n\n          if( weight < smallestDistance || !smallestEdge ){\n            smallestDistance = weight;\n            smallestEdge = edge;\n          }\n        }\n\n        return {\n          edge: smallestEdge,\n          dist: smallestDistance\n        };\n      };\n\n      while(heap.size() > 0){\n        var smallestEl = heap.pop(),\n        smalletsDist = smallestEl.value,\n        uid = smallestEl.id,\n        u = cy.getElementById(uid);\n    \n        knownDist[uid] = smalletsDist;\n      \n        if( smalletsDist === Math.Infinite ){\n          break;\n        }\n\n        var neighbors = u.neighborhood().intersect(nodes);\n        for( var i = 0; i < neighbors.length; i++ ){\n          var v = neighbors[i];\n          var vid = v.id();\n          var vDist = distBetween(u, v);\n\n          var alt = smalletsDist + vDist.dist;\n\n          if( alt < heap.getValueById(vid) ){\n            heap.edit(vid, alt);\n            prev[ vid ] = {\n              node: u,\n              edge: vDist.edge\n            };\n          }\n        } // for \n      } // while\n\n      return {\n        distanceTo: function(node){\n          var target = $$.is.string(node) ? nodes.filter(node)[0] : node[0];\n\n          return knownDist[ target.id() ];\n        },\n\n        pathTo: function(node){\n          var target = $$.is.string(node) ? nodes.filter(node)[0] : node[0];\n          var S = [];\n          var u = target;\n\n          if( target.length > 0 ){\n            S.unshift( target );\n\n            while( prev[ u.id() ] ){\n              var p = prev[ u.id() ];\n\n              S.unshift( p.edge );\n              S.unshift( p.node );\n\n              u = p.node;\n            }\n          }\n\n          return new $$.Collection( cy, S );\n        }\n      };\n    }  \n  });\n\n  // nice, short mathemathical alias\n  $$.elesfn.bfs = $$.elesfn.breadthFirstSearch;\n  $$.elesfn.dfs = $$.elesfn.depthFirstSearch;\n  $$.elesfn.stdBfs = $$.elesfn.stdBreadthFirstSearch;\n  $$.elesfn.stdDfs = $$.elesfn.stdDepthFirstSearch;\n  \n})( cytoscape );\n\n;(function($$) { \n  'use strict';\n\n  // Additional graph analysis algorithms\n  $$.fn.eles({\n\n    // Implemented from pseudocode from wikipedia\n\n    // options => options object\n    //   root // starting node (either element or selector string)\n    //   weight: function( edge ){} // specifies weight to use for `edge`/`this`. If not present, it will be asumed a weight of 1 for all edges\n    //   heuristic: function( node ){} // specifies heuristic value for `node`/`this`\n    //   directed // default false\n    //   goal // target node (either element or selector string). Mandatory.\n\n    // retObj => returned object by function\n    //   found : true/false // whether a path from root to goal has been found\n    //   distance // Distance for the shortest path from root to goal\n    //   path // Array of ids of nodes in shortest path\n    aStar: function(options) {\n      options = options || {};\n\n      // var logDebug = function() {\n      //   if (debug) {\n      //     console.log.apply(console, arguments);\n      //   }\n      // };\n\n      // Reconstructs the path from Start to End, acumulating the result in pathAcum\n      var reconstructPath = function(start, end, cameFromMap, pathAcum) {\n        // Base case\n        if (start == end) {\n          pathAcum.push( cy.getElementById(end) );\n          return pathAcum;\n        }\n        \n        if (end in cameFromMap) {\n          // We know which node is before the last one\n          var previous = cameFromMap[end];\n          var previousEdge = cameFromEdge[end];\n\n          pathAcum.push( cy.getElementById(end) );\n          pathAcum.push( cy.getElementById(previousEdge) );\n\n\n          return reconstructPath(start, \n                       previous, \n                       cameFromMap, \n                       pathAcum);\n        }\n\n        // We should not reach here!\n        return undefined;       \n      };\n\n      // Returns the index of the element in openSet which has minimum fScore\n      var findMin = function(openSet, fScore) {\n        if (openSet.length === 0) {\n          // Should never be the case\n          return undefined;\n        }\n        var minPos = 0;\n        var tempScore = fScore[openSet[0]];\n        for (var i = 1; i < openSet.length; i++) {\n          var s = fScore[openSet[i]];\n          if (s < tempScore) {\n            tempScore = s;\n            minPos = i;\n          }\n        }\n        return minPos;\n      };\n\n      // Parse options\n      // debug - optional\n      // if (options.debug != null) {\n      //   var debug = options.debug;\n      // } else {\n      //   var debug = false;\n      // }\n\n      // logDebug(\"Starting aStar...\"); \n      var cy = this._private.cy;\n\n      // root - mandatory!\n      if (options != null && options.root != null) {        \n        var source = $$.is.string(options.root) ? \n          // use it as a selector, e.g. \"#rootID\n          this.filter(options.root)[0] : \n          options.root[0];\n        // logDebug(\"Source node: %s\", source.id()); \n      } else {\n        return undefined;\n      }\n      \n      // goal - mandatory!\n      if (options.goal != null) {       \n        var target = $$.is.string(options.goal) ? \n          // use it as a selector, e.g. \"#goalID\n          this.filter(options.goal)[0] : \n          options.goal[0];\n        // logDebug(\"Target node: %s\", target.id()); \n      } else {\n        return undefined;\n      }\n\n      // Heuristic function - optional\n      if (options.heuristic != null && $$.is.fn(options.heuristic)) {       \n        var heuristic = options.heuristic;\n      } else {\n        var heuristic = function(){ return 0; }; // use constant if unspecified\n        // $$.util.error(\"Missing required parameter (heuristic)! Aborting.\");\n        // return;\n      }\n\n      // Weight function - optional\n      if (options.weight != null && $$.is.fn(options.weight)) {       \n        var weightFn = options.weight;\n      } else {\n        // If not specified, assume each edge has equal weight (1)\n        var weightFn = function(e) {return 1;};\n      }\n\n      // directed - optional\n      if (options.directed != null) {       \n        var directed = options.directed;\n      } else {\n        var directed = false;\n      }\n\n      var closedSet = [];\n      var openSet = [source.id()];\n      var cameFrom = {};\n      var cameFromEdge = {};\n      var gScore = {};\n      var fScore = {};\n\n      gScore[source.id()] = 0;\n      fScore[source.id()] = heuristic(source);\n      \n      var edges = this.edges().stdFilter(function(e){ return !e.isLoop(); });\n      var nodes = this.nodes();\n\n      // Counter\n      var steps = 0;\n\n      // Main loop \n      while (openSet.length > 0) {\n        var minPos = findMin(openSet, fScore);\n        var cMin = cy.getElementById( openSet[minPos] );\n        steps++;\n\n        // logDebug(\"\\nStep: %s\", steps);\n        // logDebug(\"Processing node: %s, fScore = %s\", cMin.id(), fScore[cMin.id()]);\n        \n        // If we've found our goal, then we are done\n        if (cMin.id() == target.id()) {\n          // logDebug(\"Found goal node!\");\n          var rPath = reconstructPath(source.id(), target.id(), cameFrom, []);\n          rPath.reverse();\n          // logDebug(\"Path: %s\", rPath);\n          return {\n            found : true,\n            distance : gScore[cMin.id()],\n            path : new $$.Collection(cy, rPath),\n            steps : steps\n          };          \n        }\n        \n        // Add cMin to processed nodes\n        closedSet.push(cMin.id());\n        // Remove cMin from boundary nodes\n        openSet.splice(minPos, 1);\n        // logDebug(\"Added node to closedSet, removed from openSet.\");\n        // logDebug(\"Processing neighbors...\");\n\n        // Update scores for neighbors of cMin\n        // Take into account if graph is directed or not\n        var vwEdges = cMin.connectedEdges();\n        if( directed ){ vwEdges = vwEdges.stdFilter(function(ele){ return ele.data('source') === cMin.id(); }); }\n        vwEdges = vwEdges.intersect(edges);  \n        \n        for (var i = 0; i < vwEdges.length; i++) {\n          var e = vwEdges[i];\n          var w = e.connectedNodes().stdFilter(function(n){ return n.id() !== cMin.id(); }).intersect(nodes);\n\n          // logDebug(\"   processing neighbor: %s\", w.id());\n          // if node is in closedSet, ignore it\n          if (closedSet.indexOf(w.id()) != -1) {\n            // logDebug(\"   already in closedSet, ignoring it.\");\n            continue;\n          }\n          \n          // New tentative score for node w\n          var tempScore = gScore[cMin.id()] + weightFn.apply(e, [e]);\n          // logDebug(\"   tentative gScore: %d\", tempScore);\n\n          // Update gScore for node w if:\n          //   w not present in openSet\n          // OR\n          //   tentative gScore is less than previous value\n\n          // w not in openSet\n          if (openSet.indexOf(w.id()) == -1) {\n            gScore[w.id()] = tempScore;\n            fScore[w.id()] = tempScore + heuristic(w);\n            openSet.push(w.id()); // Add node to openSet\n            cameFrom[w.id()] = cMin.id();\n            cameFromEdge[w.id()] = e.id();\n            // logDebug(\"   not in openSet, adding it. \");\n            // logDebug(\"   fScore(%s) = %s\", w.id(), tempScore);\n            continue;\n          }\n          // w already in openSet, but with greater gScore\n          if (tempScore < gScore[w.id()]) {\n            gScore[w.id()] = tempScore;\n            fScore[w.id()] = tempScore + heuristic(w);\n            cameFrom[w.id()] = cMin.id();\n            // logDebug(\"   better score, replacing gScore. \");\n            // logDebug(\"   fScore(%s) = %s\", w.id(), tempScore);\n          }\n\n        } // End of neighbors update\n\n      } // End of main loop\n\n      // If we've reached here, then we've not reached our goal\n      // logDebug(\"Reached end of computation without finding our goal\");\n      return {\n        found : false,\n        distance : undefined,\n        path : undefined,\n        steps : steps\n      };\n    }, // aStar()\n\n\n    // Implemented from pseudocode from wikipedia\n    // options => options object\n    //   weight: function( edge ){} // specifies weight to use for `edge`/`this`. If not present, it will be asumed a weight of 1 for all edges\n    //   directed // default false\n    // retObj => returned object by function\n    //   pathTo : function(fromId, toId) // Returns the shortest path from node with ID \"fromID\" to node with ID \"toId\", as an array of node IDs\n    //   distanceTo: function(fromId, toId) // Returns the distance of the shortest path from node with ID \"fromID\" to node with ID \"toId\"\n    floydWarshall: function(options) {\n      options = options || {};\n\n      // var logDebug = function() {\n      //   if (debug) {\n      //     console.log.apply(console, arguments);\n      //   }\n      // };\n\n      // Parse options\n      // debug - optional\n      // if (options.debug != null) {\n      //   var debug = options.debug;\n      // } else {\n      //   var debug = false;\n      // }\n      // logDebug(\"Starting floydWarshall...\"); \n\n      var cy = this._private.cy;\n\n      // Weight function - optional\n      if (options.weight != null && $$.is.fn(options.weight)) {       \n        var weightFn = options.weight;\n      } else {\n        // If not specified, assume each edge has equal weight (1)\n        var weightFn = function(e) {return 1;};\n      }\n\n      // directed - optional\n      if (options.directed != null) {       \n        var directed = options.directed;\n      } else {\n        var directed = false;\n      }\n\n      var edges = this.edges().stdFilter(function(e){ return !e.isLoop(); });\n      var nodes = this.nodes();\n      var numNodes = nodes.length;\n\n      // mapping: node id -> position in nodes array\n      var id2position = {};\n      for (var i = 0; i < numNodes; i++) {\n        id2position[nodes[i].id()] = i;\n      }     \n\n      // Initialize distance matrix\n      var dist = [];\n      for (var i = 0; i < numNodes; i++) {\n        var newRow = new Array(numNodes);\n        for (var j = 0; j < numNodes; j++) {\n          if (i == j) {\n            newRow[j] = 0;\n          } else {\n            newRow[j] = Infinity;\n          }\n        }\n        dist.push(newRow);\n      }           \n\n      // Initialize matrix used for path reconstruction\n      // Initialize distance matrix\n      var next = [];\n      var edgeNext = [];\n\n      var initMatrix = function(next){\n        for (var i = 0; i < numNodes; i++) {\n          var newRow = new Array(numNodes);\n          for (var j = 0; j < numNodes; j++) {\n            newRow[j] = undefined;\n          }\n          next.push(newRow);\n        }\n      };\n\n      initMatrix(next);\n      initMatrix(edgeNext);\n      \n      // Process edges\n      for (var i = 0; i < edges.length ; i++) {     \n        var sourceIndex = id2position[edges[i].source().id()];\n        var targetIndex = id2position[edges[i].target().id()];    \n        var weight = weightFn.apply(edges[i], [edges[i]]);\n        \n        // Check if already process another edge between same 2 nodes\n        if (dist[sourceIndex][targetIndex] > weight) {\n          dist[sourceIndex][targetIndex] = weight;\n          next[sourceIndex][targetIndex] = targetIndex;\n          edgeNext[sourceIndex][targetIndex] = edges[i];\n        }\n      }\n\n      // If undirected graph, process 'reversed' edges\n      if (!directed) {\n        for (var i = 0; i < edges.length ; i++) {     \n          var sourceIndex = id2position[edges[i].target().id()];    \n          var targetIndex = id2position[edges[i].source().id()];\n          var weight = weightFn.apply(edges[i], [edges[i]]);\n          \n          // Check if already process another edge between same 2 nodes\n          if (dist[sourceIndex][targetIndex] > weight) {\n            dist[sourceIndex][targetIndex] = weight;\n            next[sourceIndex][targetIndex] = targetIndex;\n            edgeNext[sourceIndex][targetIndex] = edges[i];\n          }\n        }\n      }\n\n      // Main loop\n      for (var k = 0; k < numNodes; k++) {\n        for (var i = 0; i < numNodes; i++) {\n          for (var j = 0; j < numNodes; j++) {            \n            if (dist[i][k] + dist[k][j] < dist[i][j]) {\n              dist[i][j] = dist[i][k] + dist[k][j];\n              next[i][j] = next[i][k];\n            }\n          }\n        }\n      }\n\n      // Build result object       \n      var position2id = [];\n      for (var i = 0; i < numNodes; i++) {\n        position2id.push(nodes[i].id());\n      }\n\n      var res = {\n        distance: function(from, to) {\n          if ($$.is.string(from)) {\n            // from is a selector string\n            var fromId = (cy.filter(from)[0]).id();\n          } else {\n            // from is a node\n            var fromId = from.id();\n          }\n\n          if ($$.is.string(to)) {\n            // to is a selector string\n            var toId = (cy.filter(to)[0]).id();\n          } else {\n            // to is a node\n            var toId = to.id();\n          }\n\n          return dist[id2position[fromId]][id2position[toId]];\n        },\n\n        path: function(from, to) {\n          var reconstructPathAux = function(from, to, next, position2id, edgeNext) {\n            if (from === to) {\n              return cy.getElementById( position2id[from] );\n            }\n            if (next[from][to] === undefined) {\n              return undefined;\n            }\n\n            var path = [ cy.getElementById(position2id[from]) ];\n            var prev = from;\n            while (from !== to) {\n              prev = from;\n              from = next[from][to];\n\n              var edge = edgeNext[prev][from];\n              path.push( edge );\n\n              path.push( cy.getElementById(position2id[from]) );\n            }\n            return path;\n          };\n\n          if ($$.is.string(from)) {\n            // from is a selector string\n            var fromId = (cy.filter(from)[0]).id();\n          } else {\n            // from is a node\n            var fromId = from.id();\n          }\n\n          if ($$.is.string(to)) {\n            // to is a selector string\n            var toId = (cy.filter(to)[0]).id();\n          } else {\n            // to is a node\n            var toId = to.id();\n          }\n          \n          var pathArr = reconstructPathAux(id2position[fromId], \n                        id2position[toId], \n                        next,\n                        position2id,\n                        edgeNext);\n\n          return new $$.Collection( cy, pathArr );\n        },\n      };\n\n      return res;\n\n    }, // floydWarshall\n\n\n    // Implemented from pseudocode from wikipedia\n    // options => options object\n    //   root: starting node (either element or selector string)\n    //   weight: function( edge ){} // specifies weight to use for `edge`/`this`. If not present, it will be asumed a weight of 1 for all edges\n    //   directed // default false\n    // retObj => returned object by function\n    //   pathTo : function(toId) // Returns the shortest path from root node to node with ID \"toId\", as an array of node IDs\n    //   distanceTo: function(toId) // Returns the distance of the shortest path from root node to node with ID \"toId\"\n    //   hasNegativeWeightCycle: true/false (if true, pathTo and distanceTo will be undefined)\n    bellmanFord: function(options) {\n      options = options || {};\n\n      // var logDebug = function() {\n      //   if (debug) {\n      //     console.log.apply(console, arguments);\n      //   }\n      // };\n\n      // Parse options\n      // debug - optional\n      // if (options.debug != null) {\n      //   var debug = options.debug;\n      // } else {\n      //   var debug = false;\n      // }\n      // logDebug(\"Starting bellmanFord...\"); \n\n      // Weight function - optional\n      if (options.weight != null && $$.is.fn(options.weight)) {       \n        var weightFn = options.weight;\n      } else {\n        // If not specified, assume each edge has equal weight (1)\n        var weightFn = function(e) {return 1;};\n      }\n\n      // directed - optional\n      if (options.directed != null) {       \n        var directed = options.directed;\n      } else {\n        var directed = false;\n      }\n\n      // root - mandatory!\n      if (options.root != null) {       \n        if ($$.is.string(options.root)) {\n          // use it as a selector, e.g. \"#rootID\n          var source = this.filter(options.root)[0];\n        } else {\n          var source = options.root[0];\n        }\n        // logDebug(\"Source node: %s\", source.id()); \n      } else {\n        $$.util.error(\"options.root required\");\n        return undefined;\n      }\n\n      var cy = this._private.cy;\n      var edges = this.edges().stdFilter(function(e){ return !e.isLoop(); });\n      var nodes = this.nodes();\n      var numNodes = nodes.length;\n\n      // mapping: node id -> position in nodes array\n      var id2position = {};\n      for (var i = 0; i < numNodes; i++) {\n        id2position[nodes[i].id()] = i;\n      }     \n\n      // Initializations\n      var cost = [];\n      var predecessor = [];\n      var predEdge = [];\n      \n      for (var i = 0; i < numNodes; i++) {\n        if (nodes[i].id() === source.id()) {\n          cost[i] = 0;\n        } else {\n          cost[i] = Infinity;\n        } \n        predecessor[i] = undefined;\n      }\n      \n      // Edges relaxation      \n      var flag = false;\n      for (var i = 1; i < numNodes; i++) {\n        flag = false;\n        for (var e = 0; e < edges.length; e++) {\n          var sourceIndex = id2position[edges[e].source().id()];\n          var targetIndex = id2position[edges[e].target().id()];    \n          var weight = weightFn.apply(edges[e], [edges[e]]);\n          \n          var temp = cost[sourceIndex] + weight;\n          if (temp < cost[targetIndex]) {\n            cost[targetIndex] = temp;\n            predecessor[targetIndex] = sourceIndex;\n            predEdge[targetIndex] = edges[e];\n            flag = true;\n          }\n\n          // If undirected graph, we need to take into account the 'reverse' edge\n          if (!directed) {\n            var temp = cost[targetIndex] + weight;\n            if (temp < cost[sourceIndex]) {\n              cost[sourceIndex] = temp;\n              predecessor[sourceIndex] = targetIndex;\n              predEdge[sourceIndex] = edges[e];\n              flag = true;\n            }\n          }\n        }\n\n        if (!flag) {\n          break;\n        }\n      }      \n            \n      if (flag) {\n        // Check for negative weight cycles\n        for (var e = 0; e < edges.length; e++) {\n          var sourceIndex = id2position[edges[e].source().id()];\n          var targetIndex = id2position[edges[e].target().id()];    \n          var weight = weightFn.apply(edges[e], [edges[e]]);\n          \n          if (cost[sourceIndex] + weight < cost[targetIndex]) {\n            $$.util.error(\"Error: graph contains a negative weigth cycle!\"); \n            return { pathTo: undefined,\n                 distanceTo: undefined,\n                 hasNegativeWeightCycle: true};\n          }\n        }     \n      }\n\n      // Build result object       \n      var position2id = [];\n      for (var i = 0; i < numNodes; i++) {\n        position2id.push(nodes[i].id());\n      }\n      \n      \n      var res = {       \n        distanceTo : function(to) {\n          if ($$.is.string(to)) {\n            // to is a selector string\n            var toId = (cy.filter(to)[0]).id();\n          } else {\n            // to is a node\n            var toId = to.id();\n          }\n\n          return cost[id2position[toId]];\n        }, \n\n        pathTo : function(to) {\n\n          var reconstructPathAux = function(predecessor, fromPos, toPos, position2id, acumPath, predEdge) {\n            for(;;){\n              // Add toId to path\n              acumPath.push( cy.getElementById(position2id[toPos]) );\n              acumPath.push( predEdge[toPos] );\n\n              if (fromPos === toPos) {\n                // reached starting node\n                return acumPath;\n              }\n\n              // If no path exists, discart acumulated path and return undefined\n              var predPos = predecessor[toPos];\n              if (typeof predPos === \"undefined\") {\n                return undefined;\n              }\n\n              toPos = predPos;\n            }\n\n          };\n\n          if ($$.is.string(to)) {\n            // to is a selector string\n            var toId = (cy.filter(to)[0]).id();\n          } else {\n            // to is a node\n            var toId = to.id();\n          }\n          var path = [];\n\n          // This returns a reversed path \n          var res =  reconstructPathAux(predecessor, \n                        id2position[source.id()],\n                        id2position[toId], \n                        position2id, \n                        path,\n                        predEdge);\n\n          // Get it in the correct order and return it\n          if (res != null) {\n            res.reverse();\n          }\n\n          return new $$.Collection(cy, res);                       \n        }, \n\n        hasNegativeWeightCycle: false\n      };\n\n      return res;\n\n    }, // bellmanFord\n\n\n    // Computes the minimum cut of an undirected graph\n    // Returns the correct answer with high probability\n    // options => options object\n    // \n    // retObj => returned object by function\n    //   cut : list of IDs of edges in the cut,\n    //   partition1: list of IDs of nodes in one partition\n    //   partition2: list of IDs of nodes in the other partition\n    kargerStein: function(options) {\n      options = options || {};\n      \n      // var logDebug = function() {\n      //   if (debug) {\n      //     console.log.apply(console, arguments);\n      //   }\n      // };\n\n      // Function which colapses 2 (meta) nodes into one\n      // Updates the remaining edge lists\n      // Receives as a paramater the edge which causes the collapse\n      var colapse = function(edgeIndex, nodeMap, remainingEdges) {\n        var edgeInfo = remainingEdges[edgeIndex];\n        var sourceIn = edgeInfo[1];\n        var targetIn = edgeInfo[2];\n        var partition1 = nodeMap[sourceIn];\n        var partition2 = nodeMap[targetIn];\n\n        // Delete all edges between partition1 and partition2\n        var newEdges = remainingEdges.filter(function(edge) {\n          if (nodeMap[edge[1]] === partition1 && nodeMap[edge[2]] === partition2) {\n            return false;\n          }\n          if (nodeMap[edge[1]] === partition2 && nodeMap[edge[2]] === partition1) {\n            return false;\n          }\n          return true;\n        });\n        \n        // All edges pointing to partition2 should now point to partition1\n        for (var i = 0; i < newEdges.length; i++) {\n          var edge = newEdges[i];\n          if (edge[1] === partition2) { // Check source\n            newEdges[i] = edge.slice(0);\n            newEdges[i][1] = partition1;\n          } else if (edge[2] === partition2) { // Check target\n            newEdges[i] = edge.slice(0);\n            newEdges[i][2] = partition1;\n          }\n        } \n        \n        // Move all nodes from partition2 to partition1\n        for (var i = 0; i < nodeMap.length; i++) {\n          if (nodeMap[i] === partition2) {\n            nodeMap[i] = partition1;\n          }\n        }\n        \n        return newEdges;\n      };\n\n\n      // Contracts a graph until we reach a certain number of meta nodes\n      var contractUntil = function(metaNodeMap, \n                     remainingEdges,\n                     size, \n                     sizeLimit) {\n        // Stop condition\n        if (size <= sizeLimit) {\n          return remainingEdges;\n        }\n        \n        // Choose an edge randomly\n        var edgeIndex = Math.floor((Math.random() * remainingEdges.length));\n\n        // Colapse graph based on edge\n        var newEdges = colapse(edgeIndex, metaNodeMap, remainingEdges);\n        \n        return contractUntil(metaNodeMap, \n                   newEdges, \n                   size - 1, \n                   sizeLimit);        \n      };\n\n\n      // Parse options\n      // debug - optional\n      // if (options != null && options.debug != null) {\n      //   var debug = options.debug;\n      // } else {\n      //   var debug = false;\n      // }\n      // logDebug(\"Starting kargerStein...\"); \n\n      var cy = this._private.cy;\n      var edges = this.edges().stdFilter(function(e){ return !e.isLoop(); });\n      var nodes = this.nodes();\n      var numNodes = nodes.length;\n      var numEdges = edges.length;\n      var numIter = Math.ceil(Math.pow(Math.log(numNodes) / Math.LN2, 2));\n      var stopSize = Math.floor(numNodes / Math.sqrt(2));\n\n      if (numNodes < 2) {\n        $$.util.error(\"At least 2 nodes are required for KargerSteing algorithm!\"); \n        return undefined;\n      }\n\n      // Create numerical identifiers for each node\n      // mapping: node id -> position in nodes array\n      // for reverse mapping, simply use nodes array\n      var id2position = {};\n      for (var i = 0; i < numNodes; i++) {\n        id2position[nodes[i].id()] = i;\n      }\n\n      // Now store edge destination as indexes\n      // Format for each edge (edge index, source node index, target node index)\n      var edgeIndexes = [];\n      for (var i = 0; i < numEdges; i++) {\n        var e = edges[i];\n        edgeIndexes.push([i, id2position[e.source().id()], id2position[e.target().id()]]);\n      }\n\n      // We will store the best cut found here\n      var minCutSize = Infinity;\n      var minCut;     \n\n      // Initial meta node partition\n      var originalMetaNode = [];\n      for (var i = 0; i < numNodes; i++) {\n        originalMetaNode.push(i);\n      }\n\n      // Main loop\n      for (var iter = 0; iter <= numIter; iter++) {\n        // Create new meta node partition\n        var metaNodeMap = originalMetaNode.slice(0);\n\n        // Contract until stop point (stopSize nodes)\n        var edgesState = contractUntil(metaNodeMap, edgeIndexes, numNodes, stopSize);\n        \n        // Create a copy of the colapsed nodes state\n        var metaNodeMap2 = metaNodeMap.slice(0);\n\n        // Run 2 iterations starting in the stop state\n        var res1 = contractUntil(metaNodeMap, edgesState, stopSize, 2);\n        var res2 = contractUntil(metaNodeMap2, edgesState, stopSize, 2);\n\n        // Is any of the 2 results the best cut so far?\n        if (res1.length <= res2.length && res1.length < minCutSize) {\n          minCutSize = res1.length;\n          minCut = [res1, metaNodeMap];\n        } else if (res2.length <= res1.length && res2.length < minCutSize) {\n          minCutSize = res2.length;\n          minCut = [res2, metaNodeMap2];\n        }\n      } // end of main loop\n\n      \n      // Construct result\n      var resEdges = (minCut[0]).map(function(e){ return edges[e[0]]; });\n      var partition1 = [];\n      var partition2 = [];\n\n      // traverse metaNodeMap for best cut\n      var witnessNodePartition = minCut[1][0];\n      for (var i = 0; i < minCut[1].length; i++) { \n        var partitionId = minCut[1][i]; \n        if (partitionId === witnessNodePartition) {\n          partition1.push(nodes[i]);\n        } else {\n          partition2.push(nodes[i]);\n        }       \n      }\n      \n      var ret = {\n        cut: new $$.Collection(cy, resEdges),\n        partition1: new $$.Collection(cy, partition1),\n        partition2: new $$.Collection(cy, partition2)\n      };\n      \n      return ret;\n    },\n\n\n    // \n    // options => options object\n    //   dampingFactor: optional\n    //   precision: optional\n    //   iterations : optional\n    // retObj => returned object by function\n    //  rank : function that returns the pageRank of a given node (object or selector string)\n    pageRank: function(options) {\n      options = options || {};\n      \n      var normalizeVector = function(vector) {\n        var length = vector.length;\n\n        // First, get sum of all elements\n        var total = 0; \n        for (var i = 0; i < length; i++) {\n          total += vector[i];\n        }\n\n        // Now, divide each by the sum of all elements\n        for (var i = 0; i < length; i++) {\n          vector[i] = vector[i] / total;\n        }\n      };\n      \n      // var logDebug = function() {\n      //   if (debug) {\n      //     console.log.apply(console, arguments);\n      //   }\n      // };\n      \n      // Parse options\n      // debug - optional\n      // if (options != null && \n      //   options.debug != null) {\n      //   var debug = options.debug;\n      // } else {\n      //   var debug = false;\n      // }\n      // logDebug(\"Starting pageRank...\"); \n\n      // dampingFactor - optional\n      if (options != null && \n        options.dampingfactor != null) {\n        var dampingFactor = options.dampingFactor;\n      } else {\n        var dampingFactor = 0.8; // Default damping factor\n      }\n\n      // desired precision - optional\n      if (options != null && \n        options.precision != null) {\n        var epsilon = options.precision;\n      } else {\n        var epsilon = 0.000001; // Default precision\n      }\n\n      // Max number of iterations - optional\n      if (options != null && \n        options.iterations != null) {\n        var numIter = options.iterations;\n      } else {\n        var numIter = 200; // Default number of iterations\n      }\n\n      // Weight function - optional\n      if (options != null && \n        options.weight != null && \n        $$.is.fn(options.weight)) {       \n        var weightFn = options.weight;\n      } else {\n        // If not specified, assume each edge has equal weight (1)\n        var weightFn = function(e) {return 1;}; \n      }\n\n      var cy = this._private.cy;\n      var edges = this.edges().stdFilter(function(e){ return !e.isLoop(); });\n      var nodes = this.nodes();\n      var numNodes = nodes.length;\n      var numEdges = edges.length;\n\n      // Create numerical identifiers for each node\n      // mapping: node id -> position in nodes array\n      // for reverse mapping, simply use nodes array\n      var id2position = {};\n      for (var i = 0; i < numNodes; i++) {\n        id2position[nodes[i].id()] = i;\n      }\n\n      // Construct transposed adjacency matrix\n      // First lets have a zeroed matrix of the right size\n      // We'll also keep track of the sum of each column\n      var matrix = [];\n      var columnSum = [];\n      var additionalProb = (1 - dampingFactor) / numNodes;\n\n      // Create null matric\n      for (var i = 0; i < numNodes; i++) { \n        var newRow = [];\n        for (var j = 0; j < numNodes; j++) {\n          newRow.push(0.0);\n        }\n        matrix.push(newRow);\n        columnSum.push(0.0);\n      }\n\n      // Now, process edges\n      for (var i = 0; i < numEdges; i++) {\n        var edge = edges[i];\n        var s = id2position[edge.source().id()];\n        var t = id2position[edge.target().id()];\n        var w = weightFn.apply(edge, [edge]);\n        \n        // Update matrix\n        matrix[t][s] += w;\n\n        // Update column sum\n        columnSum[s] += w; \n      }\n\n      // Add additional probability based on damping factor\n      // Also, take into account columns that have sum = 0\n      var p = 1.0 / numNodes + additionalProb; // Shorthand\n      // Traverse matrix, column by column\n      for (var j = 0; j < numNodes; j++) { \n        if (columnSum[j] === 0) {\n          // No 'links' out from node jth, assume equal probability for each possible node\n          for (var i = 0; i < numNodes; i++) {\n            matrix[i][j] = p;\n          }\n        } else {\n          // Node jth has outgoing link, compute normalized probabilities\n          for (var i = 0; i < numNodes; i++) {\n            matrix[i][j] = matrix[i][j] / columnSum[j] + additionalProb;\n          }         \n        }\n      }\n\n      // Compute dominant eigenvector using power method\n      var eigenvector = [];\n      var nullVector = [];\n      var previous;\n\n      // Start with a vector of all 1's\n      // Also, initialize a null vector which will be used as shorthand\n      for (var i = 0; i < numNodes; i++) {\n        eigenvector.push(1.0);\n        nullVector.push(0.0);\n      }\n            \n      for (var iter = 0; iter < numIter; iter++) {\n        // New array with all 0's\n        var temp = nullVector.slice(0);\n        \n        // Multiply matrix with previous result\n        for (var i = 0; i < numNodes; i++) {\n          for (var j = 0; j < numNodes; j++) {        \n            temp[i] += matrix[i][j] * eigenvector[j];\n          }\n        }\n\n        normalizeVector(temp);\n        previous = eigenvector;\n        eigenvector = temp;\n\n        var diff = 0;\n        // Compute difference (squared module) of both vectors\n        for (var i = 0; i < numNodes; i++) {\n          diff += Math.pow(previous[i] - eigenvector[i], 2);\n        }\n        \n        // If difference is less than the desired threshold, stop iterating\n        if (diff < epsilon) {\n          // logDebug(\"Stoped at iteration %s\", iter);\n          break;\n        }\n      }\n            \n      // logDebug(\"Result:\\n\" + eigenvector);\n\n      // Construct result\n      var res = {\n        rank : function(node) {\n          if ($$.is.string(node)) {\n            // is a selector string\n            var nodeId = (cy.filter(node)[0]).id();\n          } else {\n            // is a node object\n            var nodeId = node.id();\n          }\n          return eigenvector[id2position[nodeId]];\n        }\n      };\n\n\n      return res;\n    }, // pageRank\n\n\n    // options => options object\n    //   weight: function( edge ){} // specifies weight to use for `edge`/`this`. If not present, it will be asumed a weight of 1 for all edges\n    //   directed // default false\n    // retObj => returned object by function\n    // if directed\n    //   indegree : function(node) // Returns the normalized indegree of the given node\n    //   outdegree: function(node) // Returns the normalized outdegree of the given node\n    // if undirected\n    //   degree : function(node) // Returns the normalized degree of the given node\n    degreeCentralityNormalized: function (options) {\n      options = options || {};\n\n      // var logDebug = function () {\n      //   if (debug) {\n      //     console.log.apply(console, arguments);\n      //   }\n      // };\n\n      // Parse options\n      // debug - optional\n      // if (options.debug != null) {\n      //   var debug = options.debug;\n      // } else {\n      //   var debug = false;\n      // }\n\n      // directed - optional\n      if (options.directed != null) {\n        var directed = options.directed;\n      } else {\n        var directed = false;\n      }\n\n      // logDebug(\"Starting degree centrality...\");\n      var nodes = this.nodes();\n      var numNodes = nodes.length;\n\n      if (!directed) {\n        var degrees = {};\n        var maxDegree = 0;\n\n        for (var i = 0; i < numNodes; i++) {\n          var node = nodes[i];\n          // add current node to the current options object and call degreeCentrality \n          var currDegree = this.degreeCentrality($$.util.extend({}, options, {root: node}));\n          if (maxDegree < currDegree.degree)\n            maxDegree = currDegree.degree;\n\n          degrees[node.id()] = currDegree.degree;\n        }\n\n        return {\n          degree: function (node) {\n            if ($$.is.string(node)) {\n              // from is a selector string\n              var node = (cy.filter(node)[0]).id();\n            } else {\n              // from is a node\n              var node = node.id();\n            }\n\n            return degrees[node] / maxDegree;\n          }\n        };\n      } else {\n        var indegrees = {};\n        var outdegrees = {};\n        var maxIndegree = 0;\n        var maxOutdegree = 0;\n\n        for (var i = 0; i < numNodes; i++) {\n          var node = nodes[i];\n          // add current node to the current options object and call degreeCentrality \n          var currDegree = this.degreeCentrality($$.util.extend({}, options, {root: node}));\n\n          if (maxIndegree < currDegree.indegree)\n            maxIndegree = currDegree.indegree;\n\n          if (maxOutdegree < currDegree.outdegree)\n            maxOutdegree = currDegree.outdegree;\n\n          indegrees[node.id()] = currDegree.indegree;\n          outdegrees[node.id()] = currDegree.outdegree;\n        }\n\n        return {\n          indegree: function (node) {\n            if ($$.is.string(node)) {\n              // from is a selector string\n              var node = (cy.filter(node)[0]).id();\n            } else {\n              // from is a node\n              var node = node.id();\n            }\n\n            return indegrees[node] / maxIndegree;\n          },\n          outdegree: function (node) {\n            if ($$.is.string(node)) {\n              // from is a selector string\n              var node = (cy.filter(node)[0]).id();\n            } else {\n              // from is a node\n              var node = node.id();\n            }\n\n            return outdegrees[node] / maxOutdegree;\n          }\n\n        };\n      }\n\n    }, // degreeCentralityNormalized\n\n    // Implemented from the algorithm in Opsahl's paper \"Node centrality in weighted networks: Generalizing degree and shortest paths\" check the heading 2 \"Degree\"\n    // options => options object\n    //   node : focal node\n    //   weight: function( edge ){} // specifies weight to use for `edge`/`this`. If not present, it will be asumed a weight of 1 for all edges\n    //   alpha : alpha value for the algorithm (Benchmark values of alpha: 0 -> disregards the weights focuses on number of edges\n    //                                                                     1 -> disregards the number of edges focuses on total amount of weight \n    //   directed // default false\n    // retObj => returned object by function\n    // if directed\n    //   indegree : indegree of the given node\n    //   outdegree: outdegree of the given node\n    // if undirected\n    //   degree : degree of the given node\n    degreeCentrality: function (options) {\n      options = options || {};\n\n      var callingEles = this;\n\n      // var logDebug = function () {\n      //   if (debug) {\n      //     console.log.apply(console, arguments);\n      //   }\n      // };\n\n      // Parse options\n      // debug - optional\n      // if (options.debug != null) {\n      //   var debug = options.debug;\n      // } else {\n      //   var debug = false;\n      // }\n\n      // logDebug(\"Starting degree centrality...\");\n\n      // root - mandatory!\n      if (options != null && options.root != null) {\n        var root = $$.is.string(options.root) ? this.filter(options.root)[0] : options.root[0];\n        // logDebug(\"Source node: %s\", root.id());\n      } else {\n        return undefined;\n      }\n\n      // weight - optional\n      if (options.weight != null && $$.is.fn(options.weight)) {\n        var weightFn = options.weight;\n      } else {\n        // If not specified, assume each edge has equal weight (1)\n        var weightFn = function (e) {\n          return 1;\n        };\n      }\n\n      // directed - optional\n      if (options.directed != null) {\n        var directed = options.directed;\n      } else {\n        var directed = false;\n      }\n\n      // alpha - optional\n      if (options.alpha != null && $$.is.number(options.alpha)) {\n        var alpha = options.alpha;\n      } else {\n        alpha = 0;\n      }\n\n\n      if (!directed) {\n        var connEdges = root.connectedEdges().intersection( callingEles );\n        var k = connEdges.length;\n        var s = 0;\n\n        // Now, sum edge weights\n        for (var i = 0; i < connEdges.length; i++) {\n          var edge = connEdges[i];\n          s += weightFn.apply(edge, [edge]);\n        }\n\n        return {\n          degree: Math.pow(k, 1 - alpha) * Math.pow(s, alpha)\n        };\n      } else {\n        var incoming = root.connectedEdges('edge[target = \"' + root.id() + '\"]').intersection( callingEles );\n        var outgoing = root.connectedEdges('edge[source = \"' + root.id() + '\"]').intersection( callingEles );\n        var k_in = incoming.length;\n        var k_out = outgoing.length;\n        var s_in = 0;\n        var s_out = 0;\n\n        // Now, sum incoming edge weights\n        for (var i = 0; i < incoming.length; i++) {\n          var edge = incoming[i];\n          s_in += weightFn.apply(edge, [edge]);\n        }\n\n        // Now, sum outgoing edge weights\n        for (var i = 0; i < outgoing.length; i++) {\n          var edge = outgoing[i];\n          s_out += weightFn.apply(edge, [edge]);\n        }\n\n        return {\n          indegree: Math.pow(k_in, 1 - alpha) * Math.pow(s_in, alpha),\n          outdegree: Math.pow(k_out, 1 - alpha) * Math.pow(s_out, alpha)\n        };\n      }\n    }, // degreeCentrality\n\n    // options => options object\n    //   weight: function( edge ){} // specifies weight to use for `edge`/`this`. If not present, it will be asumed a weight of 1 for all edges\n    //   directed // default false\n    //   harmonic // use harmonic mean instead of arithmetic mean\n    // retObj => returned object by function\n    //   closeness : function(node) // Returns the normalized closeness of the given node\n    closenessCentralityNormalized: function (options) {\n      options = options || {};\n\n      // var logDebug = function () {\n      //   if (debug) {\n      //     console.log.apply(console, arguments);\n      //   }\n      // };\n\n      // Parse options\n      // debug - optional\n      // if (options.debug != null) {\n      //   var debug = options.debug;\n      // } else {\n      //   var debug = false;\n      // }\n\n      // logDebug(\"Starting closeness centrality...\");\n\n      var harmonic = options.harmonic;\n      if( harmonic === undefined ){\n        harmonic = true;\n      }\n \n      var closenesses = {};\n      var maxCloseness = 0;\n      var nodes = this.nodes();\n      var fw = this.floydWarshall({ weight: options.weight, directed: options.directed });\n\n      // Compute closeness for every node and find the maximum closeness\n      for(var i = 0; i < nodes.length; i++){\n        var currCloseness = 0;\n        for (var j = 0; j < nodes.length; j++) {\n          if (i != j) {\n            var d = fw.distance(nodes[i], nodes[j]);\n            \n            if( harmonic ){\n              currCloseness += 1 / d;\n            } else {\n              currCloseness += d;\n            }\n          }\n        }\n        \n        if( !harmonic ){\n          currCloseness = 1 / currCloseness;\n        }\n\n        if (maxCloseness < currCloseness){\n          maxCloseness = currCloseness;\n        }\n\n        closenesses[nodes[i].id()] = currCloseness;\n      }\n\n      return {\n        closeness: function (node) {\n          if ($$.is.string(node)) {\n            // from is a selector string\n            var node = (cy.filter(node)[0]).id();\n          } else {\n            // from is a node\n            var node = node.id();\n          }\n\n          return closenesses[node] / maxCloseness;\n        }\n      };\n    },\n    // Implemented from pseudocode from wikipedia\n    // options => options object\n    //   root : focal node\n    //   weight: function( edge ){} // specifies weight to use for `edge`/`this`. If not present, it will be asumed a weight of 1 for all edges\n    //   directed // default false\n    // closeness => returned value by the function. Closeness value of the given node.\n    closenessCentrality: function (options) {\n      options = options || {};\n\n      // var logDebug = function () {\n      //   if (debug) {\n      //     console.log.apply(console, arguments);\n      //   }\n      // };\n\n      // Parse options\n      // debug - optional\n      // if (options.debug != null) {\n      //   var debug = options.debug;\n      // } else {\n      //   var debug = false;\n      // }\n\n      // logDebug(\"Starting closeness centrality...\");\n\n      // root - mandatory!\n      if (options.root != null) {\n        if ($$.is.string(options.root)) {\n          // use it as a selector, e.g. \"#rootID\n          var root = this.filter(options.root)[0];\n        } else {\n          var root = options.root[0];\n        }\n        // logDebug(\"Source node: %s\", root.id());\n      } else {\n        $$.util.error(\"options.root required\");\n        return undefined;\n      }\n\n      // weight - optional\n      if (options.weight != null && $$.is.fn(options.weight)) {\n        var weight = options.weight;\n      } else {\n        var weight = function(){return 1;};\n      }\n\n      // directed - optional\n      if (options.directed != null && $$.is.bool(options.directed)) {\n        var directed = options.directed;\n      } else {\n        var directed = false;\n      }\n      \n      var harmonic = options.harmonic;\n      if( harmonic === undefined ){\n        harmonic = true;\n      }\n\n      // we need distance from this node to every other node\n      var dijkstra = this.dijkstra({\n        root: root,\n        weight: weight,\n        directed: directed\n      });\n      var totalDistance = 0;\n\n      var nodes = this.nodes();\n      for (var i = 0; i < nodes.length; i++){\n        if (nodes[i].id() != root.id()){\n          var d = dijkstra.distanceTo(nodes[i]);\n          \n          if( harmonic ){\n            totalDistance += 1 / d; \n          } else {\n            totalDistance += d;\n          }\n        }\n      }\n\n      return harmonic ? totalDistance : 1 / totalDistance;\n    }, // closenessCentrality\n\n    // Implemented from the algorithm in the paper \"On Variants of Shortest-Path Betweenness Centrality and their Generic Computation\" by Ulrik Brandes\n    // options => options object\n    //   weight: function( edge ){} // specifies weight to use for `edge`/`this`. If not present, it will be asumed a weight of 1 for all edges\n    //   directed // default false\n    // retObj => returned object by function\n    //   betweenness : function(node) // Returns the betweenness centrality of the given node\n    //   betweennessNormalized : function(node) // Returns the normalized betweenness centrality of the given node\n    betweennessCentrality: function (options) {\n      options = options || {};\n\n      // var logDebug = function () {\n      //   if (debug) {\n      //     console.log.apply(console, arguments);\n      //   }\n      // };\n\n      // Parse options\n      // debug - optional\n      // if (options.debug != null) {\n      //   var debug = options.debug;\n      // } else {\n      //   var debug = false;\n      // }\n\n      // logDebug(\"Starting betweenness centrality...\");\n\n      // Weight - optional\n      if (options.weight != null && $$.is.fn(options.weight)) {\n        var weightFn = options.weight;\n        var weighted = true;\n      } else {\n        var weighted = false;\n      }\n\n      // Directed - default false\n      if (options.directed != null && $$.is.bool(options.directed)) {\n        var directed = options.directed;\n      } else {\n        var directed = false;\n      }\n\n      var priorityInsert = function (queue, ele) {\n        queue.unshift(ele);\n        for (var i = 0; d[queue[i]] < d[queue[i + 1]] && i < queue.length - 1; i++) {\n          var tmp = queue[i];\n          queue[i] = queue[i + 1];\n          queue[i + 1] = tmp;\n        }\n      };\n\n      var cy = this._private.cy;\n\n      // starting\n      var V = this.nodes();\n      var A = {};\n      var C = {};\n\n      // A contains the neighborhoods of every node\n      for (var i = 0; i < V.length; i++) {\n        if (directed) {\n          A[V[i].id()] = V[i].outgoers(\"node\"); // get outgoers of every node\n        } else {\n          A[V[i].id()] = V[i].openNeighborhood(\"node\"); // get neighbors of every node          \n        }\n      }\n\n      // C contains the betweenness values\n      for (var i = 0; i < V.length; i++) {\n        C[V[i].id()] = 0;\n      }\n\n      for (var s = 0; s < V.length; s++) {\n        var S = []; // stack\n        var P = {};\n        var g = {};\n        var d = {};\n        var Q = []; // queue\n\n        // init dictionaries\n        for (var i = 0; i < V.length; i++) {\n          P[V[i].id()] = [];\n          g[V[i].id()] = 0;\n          d[V[i].id()] = Number.POSITIVE_INFINITY;\n        }\n\n        g[V[s].id()] = 1; // sigma\n        d[V[s].id()] = 0; // distance to s\n\n        Q.unshift(V[s].id());\n\n        while (Q.length > 0) {\n          var v = Q.pop();\n          S.push(v);\n          if (weighted) {\n            A[v].forEach(function (w) {\n              if (cy.$('#' + v).edgesTo(w).length > 0) {\n                var edge = cy.$('#' + v).edgesTo(w)[0];\n              } else {\n                var edge = w.edgesTo('#' + v)[0];\n              }\n              \n              var edgeWeight = weightFn.apply(edge, [edge]);\n\n              if (d[w.id()] > d[v] + edgeWeight) {\n                d[w.id()] = d[v] + edgeWeight;\n                if (Q.indexOf(w.id()) < 0) { //if w is not in Q\n                  priorityInsert(Q, w.id());\n                } else { // update position if w is in Q\n                  Q.splice(Q.indexOf(w.id()), 1);\n                  priorityInsert(Q, w.id());\n                }\n                g[w.id()] = 0;\n                P[w.id()] = [];\n              }\n              if (d[w.id()] == d[v] + edgeWeight) {\n                g[w.id()] = g[w.id()] + g[v];\n                P[w.id()].push(v);\n              }\n            });\n          } else {\n            A[v].forEach(function (w) {\n              if (d[w.id()] == Number.POSITIVE_INFINITY) {\n                Q.unshift(w.id());\n                d[w.id()] = d[v] + 1;\n              }\n              if (d[w.id()] == d[v] + 1) {\n                g[w.id()] = g[w.id()] + g[v];\n                P[w.id()].push(v);\n              }\n            });\n          }\n        }\n\n        var e = {};\n        for (var i = 0; i < V.length; i++) {\n          e[V[i].id()] = 0;\n        }\n\n        while (S.length > 0) {\n          var w = S.pop();\n          P[w].forEach(function (v) {\n            e[v] = e[v] + (g[v] / g[w]) * (1 + e[w]);\n            if (w != V[s].id())\n              C[w] = C[w] + e[w];\n          });\n        }\n      }\n\n      var max = 0;\n      for (var key in C) {\n        if (max < C[key])\n          max = C[key];\n      }\n\n      var ret = {\n        betweenness: function (node) {\n          if ($$.is.string(node)) {\n            var node = (cy.filter(node)[0]).id();\n          } else {\n            var node = node.id();\n          }\n\n          return C[node];\n        },\n\n        betweennessNormalized: function (node) {\n          if ($$.is.string(node)) {\n            var node = (cy.filter(node)[0]).id();\n          } else {\n            var node = node.id();\n          }\n\n          return C[node] / max;\n        }\n      };\n\n      // alias\n      ret.betweennessNormalised = ret.betweennessNormalized;\n\n      return ret;\n    } // betweennessCentrality\n  }); // $$.fn.eles\n\n  // nice, short mathemathical alias\n  $$.elesfn.dc = $$.elesfn.degreeCentrality;\n  $$.elesfn.dcn = $$.elesfn.degreeCentralityNormalised = $$.elesfn.degreeCentralityNormalized;\n  $$.elesfn.cc = $$.elesfn.closenessCentrality;\n  $$.elesfn.ccn = $$.elesfn.closenessCentralityNormalised = $$.elesfn.closenessCentralityNormalized;\n  $$.elesfn.bc = $$.elesfn.betweennessCentrality;\n}) (cytoscape);\n\n;(function( $$ ){ 'use strict';\n\n  $$.fn.eles({\n    animated: $$.define.animated(),\n    clearQueue: $$.define.clearQueue(),\n    delay: $$.define.delay(),\n    animate: $$.define.animate(),\n    stop: $$.define.stop()\n  });\n  \n})( cytoscape );  \n\n;(function( $$ ){ 'use strict';\n  \n  $$.fn.eles({\n    addClass: function(classes){\n      classes = classes.split(/\\s+/);\n      var self = this;\n      var changed = [];\n      \n      for( var i = 0; i < classes.length; i++ ){\n        var cls = classes[i];\n        if( $$.is.emptyString(cls) ){ continue; }\n        \n        for( var j = 0; j < self.length; j++ ){\n          var ele = self[j];\n          var hasClass = ele._private.classes[cls];\n          ele._private.classes[cls] = true;\n\n          if( !hasClass ){ // if didn't already have, add to list of changed\n            changed.push( ele );\n          }\n        }\n      }\n      \n      // trigger update style on those eles that had class changes\n      if( changed.length > 0 ){\n        new $$.Collection(this._private.cy, changed)\n          .updateStyle()\n          .trigger('class')\n        ;\n      }\n\n      return self;\n    },\n\n    hasClass: function(className){\n      var ele = this[0];\n      return ( ele != null && ele._private.classes[className] ) ? true : false;\n    },\n\n    toggleClass: function(classesStr, toggle){\n      var classes = classesStr.split(/\\s+/);\n      var self = this;\n      var changed = []; // eles who had classes changed\n      \n      for( var i = 0, il = self.length; i < il; i++ ){\n        var ele = self[i];\n\n        for( var j = 0; j < classes.length; j++ ){\n          var cls = classes[j];\n\n          if( $$.is.emptyString(cls) ){ continue; }\n          \n          var hasClass = ele._private.classes[cls];\n          var shouldAdd = toggle || (toggle === undefined && !hasClass);\n\n          if( shouldAdd ){\n            ele._private.classes[cls] = true;\n\n            if( !hasClass ){ changed.push(ele); }\n          } else { // then remove\n            ele._private.classes[cls] = false;\n\n            if( hasClass ){ changed.push(ele); }\n          }\n\n        } // for j classes\n      } // for i eles\n      \n      // trigger update style on those eles that had class changes\n      if( changed.length > 0 ){\n        new $$.Collection(this._private.cy, changed)\n          .updateStyle()\n          .trigger('class')\n        ;\n      }\n\n      return self;\n    },\n\n    removeClass: function(classes){\n      classes = classes.split(/\\s+/);\n      var self = this;\n      var changed = [];\n\n      for( var i = 0; i < self.length; i++ ){\n        var ele = self[i];\n\n        for( var j = 0; j < classes.length; j++ ){\n          var cls = classes[j];\n          if( !cls || cls === '' ){ continue; }\n\n          var hasClass = ele._private.classes[cls];\n          ele._private.classes[cls] = undefined;\n\n          if( hasClass ){ // then we changed its set of classes\n            changed.push( ele );\n          }\n        }\n      }\n      \n      // trigger update style on those eles that had class changes\n      if( changed.length > 0 ){\n        new $$.Collection(self._private.cy, changed).updateStyle();\n      }\n\n      self.trigger('class');\n      return self;\n    },\n\n    flashClass: function(classes, duration){\n      var self = this;\n\n      if( duration == null ){\n        duration = 250;\n      } else if( duration === 0 ){\n        return self; // nothing to do really\n      }\n\n      self.addClass( classes );\n      setTimeout(function(){\n        self.removeClass( classes );\n      }, duration);\n\n      return self;\n    }\n  });\n  \n})( cytoscape );\n\n;(function($$){ 'use strict';\n\n  $$.fn.eles({\n    allAre: function( selector ){\n      return this.filter(selector).length === this.length;\n    },\n\n    is: function( selector ){\n      return this.filter(selector).length > 0;\n    },\n\n    some: function( fn, thisArg ){\n      for( var i = 0; i < this.length; i++ ){\n        var ret = !thisArg ? fn( this[i], i, this ) : fn.apply( thisArg, [ this[i], i, this ] );\n\n        if( ret ){\n          return true;\n        }\n      }\n\n      return false;\n    },\n\n    every: function( fn, thisArg ){\n      for( var i = 0; i < this.length; i++ ){\n        var ret = !thisArg ? fn( this[i], i, this ) : fn.apply( thisArg, [ this[i], i, this ] );\n\n        if( !ret ){\n          return false;\n        }\n      }\n\n      return true;\n    },\n\n    same: function( collection ){\n      collection = this.cy().collection( collection );\n\n      // cheap extra check\n      if( this.length !== collection.length ){\n        return false;\n      }\n\n      return this.intersect( collection ).length === this.length;\n    },\n\n    anySame: function( collection ){\n      collection = this.cy().collection( collection );\n\n      return this.intersect( collection ).length > 0;\n    },\n\n    allAreNeighbors: function( collection ){\n      collection = this.cy().collection( collection );\n\n      return this.neighborhood().intersect( collection ).length === collection.length;\n    }\n  });\n\n  $$.elesfn.allAreNeighbours = $$.elesfn.allAreNeighbors;\n  \n})( cytoscape );\n\n;(function($$){ 'use strict';\n\n  // Compound functions\n  /////////////////////\n\n  $$.fn.eles({\n    parent: function( selector ){\n      var parents = [];\n      var cy = this._private.cy;\n\n      for( var i = 0; i < this.length; i++ ){\n        var ele = this[i];\n        var parent = cy.getElementById( ele._private.data.parent );\n\n        if( parent.size() > 0 ){\n          parents.push( parent );\n        }\n      }\n      \n      return new $$.Collection( cy, parents, { unique: true } ).filter( selector );\n    },\n\n    parents: function( selector ){\n      var parents = [];\n\n      var eles = this.parent();\n      while( eles.nonempty() ){\n        for( var i = 0; i < eles.length; i++ ){\n          var ele = eles[i];\n          parents.push( ele );\n        }\n\n        eles = eles.parent();\n      }\n\n      return new $$.Collection( this.cy(), parents, { unique: true } ).filter( selector );\n    },\n\n    commonAncestors: function( selector ){\n      var ancestors;\n\n      for( var i = 0; i < this.length; i++ ){\n        var ele = this[i];\n        var parents = ele.parents();\n        \n        ancestors = ancestors || parents;\n\n        ancestors = ancestors.intersect( parents ); // current list must be common with current ele parents set\n      }\n\n      return ancestors.filter( selector );\n    },\n\n    orphans: function( selector ){\n      return this.stdFilter(function( ele ){\n        return ele.isNode() && ele.parent().empty();\n      }).filter( selector );\n    },\n\n    nonorphans: function( selector ){\n      return this.stdFilter(function( ele ){\n        return ele.isNode() && ele.parent().nonempty();\n      }).filter( selector );\n    },\n\n    children: function( selector ){\n      var children = [];\n\n      for( var i = 0; i < this.length; i++ ){\n        var ele = this[i];\n        children = children.concat( ele._private.children );\n      }\n\n      return new $$.Collection( this.cy(), children, { unique: true } ).filter( selector );\n    },\n\n    siblings: function( selector ){\n      return this.parent().children().not( this ).filter( selector );\n    },\n\n    isParent: function(){\n      var ele = this[0];\n\n      if( ele ){\n        return ele._private.children.length !== 0;\n      }\n    },\n\n    isChild: function(){\n      var ele = this[0];\n\n      if( ele ){\n        return ele._private.data.parent !== undefined && ele.parent().length !== 0;\n      }\n    },\n\n    descendants: function( selector ){\n      var elements = [];\n\n      function add( eles ){\n        for( var i = 0; i < eles.length; i++ ){\n          var ele = eles[i];\n\n          elements.push( ele );\n\n          if( ele.children().nonempty() ){\n            add( ele.children() );\n          }\n        }\n      }\n\n      add( this.children() );\n\n      return new $$.Collection( this.cy(), elements, { unique: true } ).filter( selector );\n    }\n  });\n\n  // aliases\n  $$.elesfn.ancestors = $$.elesfn.parents;\n  \n})( cytoscape );\n;(function($$){ 'use strict';\n\n  var borderWidthMultiplier = 2 * 0.5;\n  var borderWidthAdjustment = 0;\n\n  $$.fn.eles({\n\n    data: $$.define.data({\n      field: 'data',\n      bindingEvent: 'data',\n      allowBinding: true,\n      allowSetting: true,\n      settingEvent: 'data',\n      settingTriggersEvent: true,\n      triggerFnName: 'trigger',\n      allowGetting: true,\n      immutableKeys: {\n        'id': true,\n        'source': true,\n        'target': true,\n        'parent': true\n      },\n      updateStyle: true\n    }),\n\n    removeData: $$.define.removeData({\n      field: 'data',\n      event: 'data',\n      triggerFnName: 'trigger',\n      triggerEvent: true,\n      immutableKeys: {\n        'id': true,\n        'source': true,\n        'target': true,\n        'parent': true\n      },\n      updateStyle: true\n    }),\n\n    scratch: $$.define.data({\n      field: 'scratch',\n      bindingEvent: 'scratch',\n      allowBinding: true,\n      allowSetting: true,\n      settingEvent: 'scratch',\n      settingTriggersEvent: true,\n      triggerFnName: 'trigger',\n      allowGetting: true,\n      updateStyle: true\n    }),\n\n    removeScratch: $$.define.removeData({\n      field: 'scratch',\n      event: 'scratch',\n      triggerFnName: 'trigger',\n      triggerEvent: true,\n      updateStyle: true\n    }),\n\n    rscratch: $$.define.data({\n      field: 'rscratch',\n      allowBinding: false,\n      allowSetting: true,\n      settingTriggersEvent: false,\n      allowGetting: true\n    }),\n\n    removeRscratch: $$.define.removeData({\n      field: 'rscratch',\n      triggerEvent: false\n    }),\n\n    id: function(){\n      var ele = this[0];\n\n      if( ele ){\n        return ele._private.data.id;\n      }\n    },\n\n    position: $$.define.data({\n      field: 'position',\n      bindingEvent: 'position',\n      allowBinding: true,\n      allowSetting: true,\n      settingEvent: 'position',\n      settingTriggersEvent: true,\n      triggerFnName: 'rtrigger',\n      allowGetting: true,\n      validKeys: ['x', 'y'],\n      onSet: function( eles ){\n        var updatedEles = eles.updateCompoundBounds();\n        updatedEles.rtrigger('position');\n      },\n      canSet: function( ele ){\n        return !ele.locked();\n      }\n    }),\n\n    // position but no notification to renderer\n    silentPosition: $$.define.data({\n      field: 'position',\n      bindingEvent: 'position',\n      allowBinding: false,\n      allowSetting: true,\n      settingEvent: 'position',\n      settingTriggersEvent: false,\n      triggerFnName: 'trigger',\n      allowGetting: true,\n      validKeys: ['x', 'y'],\n      onSet: function( eles ){\n        eles.updateCompoundBounds();\n      },\n      canSet: function( ele ){\n        return !ele.locked();\n      }\n    }),\n\n    positions: function( pos, silent ){\n      if( $$.is.plainObject(pos) ){\n        this.position(pos);\n\n      } else if( $$.is.fn(pos) ){\n        var fn = pos;\n\n        for( var i = 0; i < this.length; i++ ){\n          var ele = this[i];\n\n          var pos = fn.apply(ele, [i, ele]);\n\n          if( pos && !ele.locked() ){\n            var elePos = ele._private.position;\n            elePos.x = pos.x;\n            elePos.y = pos.y;\n          }\n        }\n\n        var updatedEles = this.updateCompoundBounds();\n        var toTrigger = updatedEles.length > 0 ? this.add( updatedEles ) : this;\n\n        if( silent ){\n          toTrigger.trigger('position');\n        } else {\n          toTrigger.rtrigger('position');\n        }\n      }\n\n      return this; // chaining\n    },\n\n    silentPositions: function( pos ){\n      return this.positions( pos, true );\n    },\n\n    updateCompoundBounds: function(){\n      var cy = this.cy();\n\n      if( !cy.styleEnabled() || !cy.hasCompoundNodes() ){ return cy.collection(); } // save cycles for non compound graphs or when style disabled\n\n      var updated = [];\n\n      function update( parent ){\n        var children = parent.children();\n        var style = parent._private.style;\n        var includeLabels = style['compound-sizing-wrt-labels'].value === 'include';\n        var bb = children.boundingBox({ includeLabels: includeLabels, includeEdges: true });\n        var padding = {\n          top: style['padding-top'].pxValue,\n          bottom: style['padding-bottom'].pxValue,\n          left: style['padding-left'].pxValue,\n          right: style['padding-right'].pxValue\n        };\n        var pos = parent._private.position;\n        var didUpdate = false;\n\n        if( style['width'].value === 'auto' ){\n          parent._private.autoWidth = bb.w + padding.left + padding.right;\n          pos.x = (bb.x1 + bb.x2 - padding.left + padding.right)/2;\n          didUpdate = true;\n        }\n\n        if( style['height'].value === 'auto' ){\n          parent._private.autoHeight = bb.h + padding.top + padding.bottom;\n          pos.y = (bb.y1 + bb.y2 - padding.top + padding.bottom)/2;\n          didUpdate = true;\n        }\n\n        if( didUpdate ){\n          updated.push( parent );\n        }\n      }\n\n      // go up, level by level\n      var eles = this.parent();\n      while( eles.nonempty() ){\n\n        // update each parent node in this level\n        for( var i = 0; i < eles.length; i++ ){\n          var ele = eles[i];\n\n          update( ele );\n        }\n\n        // next level\n        eles = eles.parent();\n      }\n\n      // return changed\n      return new $$.Collection( cy, updated );\n    },\n\n    // get/set the rendered (i.e. on screen) positon of the element\n    renderedPosition: function( dim, val ){\n      var ele = this[0];\n      var cy = this.cy();\n      var zoom = cy.zoom();\n      var pan = cy.pan();\n      var rpos = $$.is.plainObject( dim ) ? dim : undefined;\n      var setting = rpos !== undefined || ( val !== undefined && $$.is.string(dim) );\n\n      if( ele && ele.isNode() ){ // must have an element and must be a node to return position\n        if( setting ){\n          for( var i = 0; i < this.length; i++ ){\n            var ele = this[i];\n\n            if( val !== undefined ){ // set one dimension\n              ele._private.position[dim] = ( val - pan[dim] )/zoom;\n            } else if( rpos !== undefined ){ // set whole position\n              ele._private.position = {\n                x: ( rpos.x - pan.x ) /zoom,\n                y: ( rpos.y - pan.y ) /zoom\n              };\n            }\n          }\n\n          this.rtrigger('position');\n        } else { // getting\n          var pos = ele._private.position;\n          rpos = {\n            x: pos.x * zoom + pan.x,\n            y: pos.y * zoom + pan.y\n          };\n\n          if( dim === undefined ){ // then return the whole rendered position\n            return rpos;\n          } else { // then return the specified dimension\n            return rpos[ dim ];\n          }\n        }\n      } else if( !setting ){\n        return undefined; // for empty collection case\n      }\n\n      return this; // chaining\n    },\n\n    // get/set the position relative to the parent\n    relativePosition: function( dim, val ){\n      var ele = this[0];\n      var cy = this.cy();\n      var ppos = $$.is.plainObject( dim ) ? dim : undefined;\n      var setting = ppos !== undefined || ( val !== undefined && $$.is.string(dim) );\n      var hasCompoundNodes = cy.hasCompoundNodes();\n\n      if( ele && ele.isNode() ){ // must have an element and must be a node to return position\n        if( setting ){\n          for( var i = 0; i < this.length; i++ ){\n            var ele = this[i];\n            var parent = hasCompoundNodes ? ele.parent() : null;\n            var hasParent = parent && parent.length > 0;\n            var relativeToParent = hasParent;\n\n            if( hasParent ){\n              parent = parent[0];\n            }\n\n            var origin = relativeToParent ? parent._private.position : { x: 0, y: 0 };\n\n            if( val !== undefined ){ // set one dimension\n              ele._private.position[dim] = val + origin[dim];\n            } else if( ppos !== undefined ){ // set whole position\n              ele._private.position = {\n                x: ppos.x + origin.x,\n                y: ppos.y + origin.y,\n              };\n            }\n          }\n\n          this.rtrigger('position');\n\n        } else { // getting\n          var pos = ele._private.position;\n          var parent = hasCompoundNodes ? ele.parent() : null;\n          var hasParent = parent && parent.length > 0;\n          var relativeToParent = hasParent;\n\n          if( hasParent ){\n            parent = parent[0];\n          }\n\n          var origin = relativeToParent ? parent._private.position : { x: 0, y: 0 };\n\n          ppos = {\n            x: pos.x - origin.x,\n            y: pos.y - origin.y\n          };\n\n          if( dim === undefined ){ // then return the whole rendered position\n            return ppos;\n          } else { // then return the specified dimension\n            return ppos[ dim ];\n          }\n        }\n      } else if( !setting ){\n        return undefined; // for empty collection case\n      }\n\n      return this; // chaining\n    },\n\n    // convenience function to get a numerical value for the width of the node/edge\n    width: function(){\n      var ele = this[0];\n      var cy = ele._private.cy;\n      var styleEnabled = cy._private.styleEnabled;\n\n      if( ele ){\n        if( styleEnabled ){\n          var w = ele._private.style.width;\n          return w.strValue === 'auto' ? ele._private.autoWidth : w.pxValue;\n        } else {\n          return 1;\n        }\n      }\n    },\n\n    outerWidth: function(){\n      var ele = this[0];\n      var cy = ele._private.cy;\n      var styleEnabled = cy._private.styleEnabled;\n\n      if( ele ){\n        if( styleEnabled ){\n          var style = ele._private.style;\n          var width = style.width.strValue === 'auto' ? ele._private.autoWidth : style.width.pxValue;\n          var border = style['border-width'] ? style['border-width'].pxValue * borderWidthMultiplier + borderWidthAdjustment : 0;\n\n          return width + border;\n        } else {\n          return 1;\n        }\n      }\n    },\n\n    renderedWidth: function(){\n      var ele = this[0];\n\n      if( ele ){\n        var width = ele.width();\n        return width * this.cy().zoom();\n      }\n    },\n\n    renderedOuterWidth: function(){\n      var ele = this[0];\n\n      if( ele ){\n        var owidth = ele.outerWidth();\n        return owidth * this.cy().zoom();\n      }\n    },\n\n    // convenience function to get a numerical value for the height of the node\n    height: function(){\n      var ele = this[0];\n      var cy = ele._private.cy;\n      var styleEnabled = cy._private.styleEnabled;\n\n      if( ele && ele._private.group === 'nodes' ){\n        if( styleEnabled ){\n          var h = ele._private.style.height;\n          return h.strValue === 'auto' ? ele._private.autoHeight : h.pxValue;\n        } else {\n          return 1;\n        }\n      }\n    },\n\n    outerHeight: function(){\n      var ele = this[0];\n      var cy = ele._private.cy;\n      var styleEnabled = cy._private.styleEnabled;\n\n      if( ele && ele._private.group === 'nodes' ){\n        if( styleEnabled ){\n          var style = ele._private.style;\n          var height = style.height.strValue === 'auto' ? ele._private.autoHeight : style.height.pxValue;\n          var border = style['border-width'] ? style['border-width'].pxValue * borderWidthMultiplier + borderWidthAdjustment : 0;\n        } else {\n          return 1;\n        }\n\n        return height + border;\n      }\n    },\n\n    renderedHeight: function(){\n      var ele = this[0];\n\n      if( ele && ele._private.group === 'nodes' ){\n        var height = ele.height();\n        return height * this.cy().zoom();\n      }\n    },\n\n    renderedOuterHeight: function(){\n      var ele = this[0];\n\n      if( ele && ele._private.group === 'nodes' ){\n        var oheight = ele.outerHeight();\n        return oheight * this.cy().zoom();\n      }\n    },\n\n    renderedBoundingBox: function( options ){\n      var bb = this.boundingBox( options );\n      var cy = this.cy();\n      var zoom = cy.zoom();\n      var pan = cy.pan();\n\n      var x1 = bb.x1 * zoom + pan.x;\n      var x2 = bb.x2 * zoom + pan.x;\n      var y1 = bb.y1 * zoom + pan.y;\n      var y2 = bb.y2 * zoom + pan.y;\n\n      return {\n        x1: x1,\n        x2: x2,\n        y1: y1,\n        y2: y2,\n        w: x2 - x1,\n        h: y2 - y1\n      };\n    },\n\n    // get the bounding box of the elements (in raw model position)\n    boundingBox: function( options ){\n      var eles = this;\n      var cy = eles._private.cy;\n      var cy_p = cy._private;\n      var styleEnabled = cy_p.styleEnabled;\n\n      options = options || {};\n\n      var includeNodes = options.includeNodes === undefined ? true : options.includeNodes;\n      var includeEdges = options.includeEdges === undefined ? true : options.includeEdges;\n      var includeLabels = options.includeLabels === undefined ? true : options.includeLabels;\n\n      // recalculate projections etc\n      if( styleEnabled ){\n        cy_p.renderer.recalculateRenderedStyle( this );\n      }\n\n      var x1 = Infinity;\n      var x2 = -Infinity;\n      var y1 = Infinity;\n      var y2 = -Infinity;\n\n      // find bounds of elements\n      for( var i = 0; i < eles.length; i++ ){\n        var ele = eles[i];\n        var _p = ele._private;\n        var style = _p.style;\n        var display = styleEnabled ? _p.style['display'].value : 'element';\n        var isNode = _p.group === 'nodes';\n        var ex1, ex2, ey1, ey2, x, y;\n        var includedEle = false;\n\n        if( display === 'none' ){ continue; } // then ele doesn't take up space\n\n        if( isNode && includeNodes ){\n          includedEle = true;\n\n          var pos = _p.position;\n          x = pos.x;\n          y = pos.y;\n          var w = ele.outerWidth();\n          var halfW = w/2;\n          var h = ele.outerHeight();\n          var halfH = h/2;\n\n          // handle node dimensions\n          /////////////////////////\n\n          ex1 = x - halfW;\n          ex2 = x + halfW;\n          ey1 = y - halfH;\n          ey2 = y + halfH;\n\n          x1 = ex1 < x1 ? ex1 : x1;\n          x2 = ex2 > x2 ? ex2 : x2;\n          y1 = ey1 < y1 ? ey1 : y1;\n          y2 = ey2 > y2 ? ey2 : y2;\n\n        } else if( ele.isEdge() && includeEdges ){\n          includedEle = true;\n\n          var n1 = _p.source;\n          var n1_p = n1._private;\n          var n1pos = n1_p.position;\n          \n          var n2 = _p.target;\n          var n2_p = n2._private;\n          var n2pos = n2_p.position;\n          \n\n          // handle edge dimensions (rough box estimate)\n          //////////////////////////////////////////////\n\n          var rstyle = _p.rstyle || {};\n\n          ex1 = n1pos.x;\n          ex2 = n2pos.x;\n          ey1 = n1pos.y;\n          ey2 = n2pos.y;\n          \n          if( ex1 > ex2 ){\n            var temp = ex1;\n            ex1 = ex2;\n            ex2 = temp;\n          }\n\n          if( ey1 > ey2 ){\n            var temp = ey1;\n            ey1 = ey2;\n            ey2 = temp;\n          }\n\n          x1 = ex1 < x1 ? ex1 : x1;\n          x2 = ex2 > x2 ? ex2 : x2;\n          y1 = ey1 < y1 ? ey1 : y1;\n          y2 = ey2 > y2 ? ey2 : y2;\n\n          // handle points along edge (sanity check)\n          //////////////////////////////////////////\n\n          if( styleEnabled ){\n            var bpts = rstyle.bezierPts || [];\n\n            var w = style['width'].pxValue;\n            var wHalf = w/2;\n\n            for( var j = 0; j < bpts.length; j++ ){\n              var bpt = bpts[j];\n\n              ex1 = bpt.x - wHalf;\n              ex2 = bpt.x + wHalf;\n              ey1 = bpt.y - wHalf;\n              ey2 = bpt.y + wHalf;\n\n              x1 = ex1 < x1 ? ex1 : x1;\n              x2 = ex2 > x2 ? ex2 : x2;\n              y1 = ey1 < y1 ? ey1 : y1;\n              y2 = ey2 > y2 ? ey2 : y2;\n            }\n          }\n          \n          // precise haystacks (sanity check)\n          ///////////////////////////////////\n          \n          if( styleEnabled && style['curve-style'].strValue === 'haystack' ){\n            var hpts = _p.rscratch.haystackPts;\n            \n            ex1 = hpts[0];\n            ey1 = hpts[1];\n            ex2 = hpts[2];\n            ey2 = hpts[3];\n\n            if( ex1 > ex2 ){\n              var temp = ex1;\n              ex1 = ex2;\n              ex2 = temp;\n            }\n\n            if( ey1 > ey2 ){\n              var temp = ey1;\n              ey1 = ey2;\n              ey2 = temp;\n            }\n\n            x1 = ex1 < x1 ? ex1 : x1;\n            x2 = ex2 > x2 ? ex2 : x2;\n            y1 = ey1 < y1 ? ey1 : y1;\n            y2 = ey2 > y2 ? ey2 : y2;  \n          }\n\n        } // edges\n            \n\n        // handle label dimensions\n        //////////////////////////\n\n        if( styleEnabled ){\n\n          var style = ele._private.style;\n          var rstyle = ele._private.rstyle;\n          var label = style['content'].strValue;\n          var fontSize = style['font-size'];\n          var halign = style['text-halign'];\n          var valign = style['text-valign'];\n          var labelWidth = rstyle.labelWidth;\n          var labelHeight = rstyle.labelHeight;\n          var labelX = rstyle.labelX;\n          var labelY = rstyle.labelY;\n\n          if( includedEle && includeLabels && label && fontSize && labelHeight != null && labelWidth != null && labelX != null && labelY != null && halign && valign ){\n            var lh = labelHeight;\n            var lw = labelWidth;\n            var lx1, lx2, ly1, ly2;\n\n            if( ele.isEdge() ){\n              lx1 = labelX - lw/2;\n              lx2 = labelX + lw/2;\n              ly1 = labelY - lh/2;\n              ly2 = labelY + lh/2;\n            } else {\n              switch( halign.value ){\n                case 'left':\n                  lx1 = labelX - lw;\n                  lx2 = labelX;\n                  break;\n\n                case 'center':\n                  lx1 = labelX - lw/2;\n                  lx2 = labelX + lw/2;\n                  break;\n\n                case 'right':\n                  lx1 = labelX;\n                  lx2 = labelX + lw;\n                  break;\n              }\n\n              switch( valign.value ){\n                case 'top':\n                  ly1 = labelY - lh;\n                  ly2 = labelY;\n                  break;\n\n                case 'center':\n                  ly1 = labelY - lh/2;\n                  ly2 = labelY + lh/2;\n                  break;\n\n                case 'bottom':\n                  ly1 = labelY;\n                  ly2 = labelY + lh;\n                  break;\n              }\n            }\n\n            x1 = lx1 < x1 ? lx1 : x1;\n            x2 = lx2 > x2 ? lx2 : x2;\n            y1 = ly1 < y1 ? ly1 : y1;\n            y2 = ly2 > y2 ? ly2 : y2;\n          }\n        } // style enabled\n      } // for\n\n      var noninf = function(x){\n        if( x === Infinity || x === -Infinity ){\n          return 0;\n        }\n        \n        return x;\n      };\n\n      x1 = noninf(x1);\n      x2 = noninf(x2);\n      y1 = noninf(y1);\n      y2 = noninf(y2);\n\n      return {\n        x1: x1,\n        x2: x2,\n        y1: y1,\n        y2: y2,\n        w: x2 - x1,\n        h: y2 - y1\n      };\n    }\n  });\n\n  // aliases\n  var fn = $$.elesfn;\n  fn.attr = fn.data;\n  fn.removeAttr = fn.removeData;\n  fn.modelPosition = fn.point = fn.position;\n  fn.modelPositions = fn.points = fn.positions;\n  fn.renderedPoint = fn.renderedPosition;\n  fn.relativePoint = fn.relativePosition;\n  fn.boundingbox = fn.boundingBox;\n  fn.renderedBoundingbox = fn.renderedBoundingBox;\n\n})( cytoscape );\n\n;(function( $$ ){ 'use strict';\n  \n  // Regular degree functions (works on single element)\n  ////////////////////////////////////////////////////////////////////////////////////////////////////\n  \n  function defineDegreeFunction(callback){\n    return function( includeLoops ){\n      var self = this;\n\n      if( includeLoops === undefined ){\n        includeLoops = true;\n      }\n      \n      if( self.length === 0 ){ return; }\n\n      if( self.isNode() && !self.removed() ){\n        var degree = 0;\n        var node = self[0];\n        var connectedEdges = node._private.edges;\n\n        for( var i = 0; i < connectedEdges.length; i++ ){\n          var edge = connectedEdges[i];\n\n          if( !includeLoops && edge.isLoop() ){\n            continue;\n          }\n\n          degree += callback( node, edge );\n        }\n        \n        return degree;\n      } else {\n        return;\n      }\n    };\n  }\n  \n  $$.fn.eles({\n    degree: defineDegreeFunction(function(node, edge){\n      if( edge.source().same( edge.target() ) ){\n        return 2;\n      } else {\n        return 1;\n      }\n    }),\n\n    indegree: defineDegreeFunction(function(node, edge){\n      if( edge.target().same(node) ){\n        return 1;\n      } else {\n        return 0;\n      }\n    }),\n\n    outdegree: defineDegreeFunction(function(node, edge){\n      if( edge.source().same(node) ){\n        return 1;\n      } else {\n        return 0;\n      }\n    })\n  });\n  \n  \n  // Collection degree stats\n  ////////////////////////////////////////////////////////////////////////////////////////////////////\n  \n  function defineDegreeBoundsFunction(degreeFn, callback){\n    return function( includeLoops ){\n      var ret;\n      var nodes = this.nodes();\n\n      for( var i = 0; i < nodes.length; i++ ){\n        var ele = nodes[i];\n        var degree = ele[degreeFn]( includeLoops );\n        if( degree !== undefined && (ret === undefined || callback(degree, ret)) ){\n          ret = degree;\n        }\n      }\n      \n      return ret;\n    };\n  }\n  \n  $$.fn.eles({\n    minDegree: defineDegreeBoundsFunction('degree', function(degree, min){\n      return degree < min;\n    }),\n\n    maxDegree: defineDegreeBoundsFunction('degree', function(degree, max){\n      return degree > max;\n    }),\n\n    minIndegree: defineDegreeBoundsFunction('indegree', function(degree, min){\n      return degree < min;\n    }),\n\n    maxIndegree: defineDegreeBoundsFunction('indegree', function(degree, max){\n      return degree > max;\n    }),\n\n    minOutdegree: defineDegreeBoundsFunction('outdegree', function(degree, min){\n      return degree < min;\n    }),\n\n    maxOutdegree: defineDegreeBoundsFunction('outdegree', function(degree, max){\n      return degree > max;\n    })\n  });\n  \n  $$.fn.eles({\n    totalDegree: function( includeLoops ){\n      var total = 0;\n      var nodes = this.nodes();\n\n      for( var i = 0; i < nodes.length; i++ ){\n        total += nodes[i].degree( includeLoops );\n      }\n\n      return total;\n    }\n  });\n  \n})( cytoscape );\n\n  \n;(function($$){ 'use strict';\n  \n  // Functions for binding & triggering events\n  ////////////////////////////////////////////////////////////////////////////////////////////////////\n  \n  $$.fn.eles({\n    on: $$.define.on(), // .on( events [, selector] [, data], handler)\n    one: $$.define.on({ unbindSelfOnTrigger: true }),\n    once: $$.define.on({ unbindAllBindersOnTrigger: true }),\n    off: $$.define.off(), // .off( events [, selector] [, handler] )\n    trigger: $$.define.trigger(), // .trigger( events [, extraParams] )\n\n    rtrigger: function(event, extraParams){ // for internal use only\n      if( this.length === 0 ){ return; } // empty collections don't need to notify anything\n\n      // notify renderer\n      this.cy().notify({\n        type: event,\n        collection: this\n      });\n      \n      this.trigger(event, extraParams);\n      return this;\n    }\n  });\n\n  // aliases:\n  $$.define.eventAliasesOn( $$.elesfn );\n  \n})( cytoscape );\n\n;(function($$){ 'use strict';\n\n  $$.fn.eles({\n    nodes: function( selector ){\n      return this.filter(function(i, element){\n        return element.isNode();\n      }).filter(selector);\n    },\n\n    edges: function( selector ){\n      return this.filter(function(i, element){\n        return element.isEdge();\n      }).filter(selector);\n    },\n\n    filter: function( filter ){\n      var cy = this._private.cy;\n      \n      if( $$.is.fn(filter) ){\n        var elements = [];\n\n        for( var i = 0; i < this.length; i++ ){\n          var ele = this[i];\n\n          if( filter.apply(ele, [i, ele]) ){\n            elements.push(ele);\n          }\n        }\n        \n        return new $$.Collection(cy, elements);\n      \n      } else if( $$.is.string(filter) || $$.is.elementOrCollection(filter) ){\n        return new $$.Selector(filter).filter(this);\n      \n      } else if( filter === undefined ){\n        return this;\n      }\n\n      return new $$.Collection( cy ); // if not handled by above, give 'em an empty collection\n    },\n\n    not: function( toRemove ){\n      var cy = this._private.cy;\n\n      if( !toRemove ){\n        return this;\n      } else {\n      \n        if( $$.is.string( toRemove ) ){\n          toRemove = this.filter( toRemove );\n        }\n        \n        var elements = [];\n        \n        for( var i = 0; i < this.length; i++ ){\n          var element = this[i];\n\n          var remove = toRemove._private.ids[ element.id() ];\n          if( !remove ){\n            elements.push( element );\n          }\n        }\n        \n        return new $$.Collection( cy, elements );\n      }\n      \n    },\n\n    absoluteComplement: function(){\n      var cy = this._private.cy;\n\n      return cy.elements().not( this );\n    },\n\n    intersect: function( other ){\n      var cy = this._private.cy;\n      \n      // if a selector is specified, then filter by it instead\n      if( $$.is.string(other) ){\n        var selector = other;\n        return this.filter( selector );\n      }\n      \n      var elements = [];\n      var col1 = this;\n      var col2 = other;\n      var col1Smaller = this.length < other.length;\n      // var ids1 = col1Smaller ? col1._private.ids : col2._private.ids;\n      var ids2 = col1Smaller ? col2._private.ids : col1._private.ids;\n      var col = col1Smaller ? col1 : col2;\n      \n      for( var i = 0; i < col.length; i++ ){\n        var id = col[i]._private.data.id;\n        var ele = ids2[ id ];\n\n        if( ele ){\n          elements.push( ele );\n        }\n      }\n      \n      return new $$.Collection( cy, elements );\n    },\n\n    xor: function( other ){\n      var cy = this._private.cy;\n\n      if( $$.is.string(other) ){\n        other = cy.$( other );\n      }\n\n      var elements = [];\n      var col1 = this;\n      var col2 = other;\n      \n      var add = function( col, other ){\n\n        for( var i = 0; i < col.length; i++ ){\n          var ele = col[i];\n          var id = ele._private.data.id;\n          var inOther = other._private.ids[ id ];\n          \n          if( !inOther ){\n            elements.push( ele );\n          }\n        }\n\n      };\n\n      add( col1, col2 );\n      add( col2, col1 );\n\n      return new $$.Collection( cy, elements );\n    },  \n\n    diff: function( other ){\n      var cy = this._private.cy;\n\n      if( $$.is.string(other) ){\n        other = cy.$( other );\n      }\n\n      var left = [];\n      var right = [];\n      var both = [];\n      var col1 = this;\n      var col2 = other;\n\n      var add = function( col, other, retEles ){\n\n        for( var i = 0; i < col.length; i++ ){\n          var ele = col[i];\n          var id = ele._private.data.id;\n          var inOther = other._private.ids[ id ];\n          \n          if( inOther ){\n            both.push( ele );\n          } else {\n            retEles.push( ele );\n          }\n        }\n\n      };\n\n      add( col1, col2, left );\n      add( col2, col1, right );\n\n      return {\n        left: new $$.Collection( cy, left, { unique: true } ),\n        right: new $$.Collection( cy, right, { unique: true } ),\n        both: new $$.Collection( cy, both, { unique: true } )\n      };\n    },\n\n    add: function( toAdd ){\n      var cy = this._private.cy;    \n      \n      if( !toAdd ){\n        return this;\n      }\n      \n      if( $$.is.string(toAdd) ){\n        var selector = toAdd;\n        toAdd = cy.elements(selector);\n      }\n      \n      var elements = [];\n\n      for( var i = 0; i < this.length; i++ ){\n        elements.push( this[i] );\n      }\n\n      for( var i = 0; i < toAdd.length; i++ ){\n\n        var add = !this._private.ids[ toAdd[i].id() ];\n        if( add ){\n          elements.push( toAdd[i] );\n        }\n      }\n      \n      return new $$.Collection(cy, elements);\n    },\n\n    // in place merge on calling collection\n    merge: function( toAdd ){\n      var _p = this._private;\n      var cy = _p.cy;    \n      \n      if( !toAdd ){\n        return this;\n      }\n      \n      if( $$.is.string(toAdd) ){\n        var selector = toAdd;\n        toAdd = cy.elements(selector);\n      }\n\n      for( var i = 0; i < toAdd.length; i++ ){\n        var toAddEle = toAdd[i];\n        var id = toAddEle.id();\n        var add = !_p.ids[ id ];\n\n        if( add ){\n          var index = this.length++;\n\n          this[ index ] = toAddEle;\n          _p.ids[ id ] = toAddEle;\n          _p.indexes[ id ] = index;\n        }\n      }\n      \n      return this; // chaining\n    },\n\n    // remove single ele in place in calling collection\n    unmergeOne: function( ele ){\n      ele = ele[0];\n\n      var _p = this._private;\n      var id = ele.id();\n      var i = _p.indexes[ id ];\n\n      if( i == null ){\n        return this; // no need to remove\n      }\n\n      // remove ele\n      this[i] = undefined;\n      _p.ids[ id ] = undefined;\n      _p.indexes[ id ] = undefined;\n\n      var unmergedLastEle = i === this.length - 1;\n\n      // replace empty spot with last ele in collection\n      if( this.length > 1 && !unmergedLastEle ){\n        var lastEleI = this.length - 1;\n        var lastEle = this[ lastEleI ];\n\n        this[ lastEleI ] = undefined;\n        this[i] = lastEle;\n        _p.indexes[ lastEle.id() ] = i;\n      }\n\n      // the collection is now 1 ele smaller\n      this.length--;\n\n      return this;\n    },\n\n    // remove eles in place on calling collection\n    unmerge: function( toRemove ){\n      var cy = this._private.cy;    \n      \n      if( !toRemove ){\n        return this;\n      }\n\n      if( $$.is.string(toRemove) ){\n        var selector = toRemove;\n        toRemove = cy.elements(selector);\n      }\n\n      for( var i = 0; i < toRemove.length; i++ ){\n        this.unmergeOne( toRemove[i] );\n      }\n      \n      return this; // chaining\n    },\n\n    map: function( mapFn, thisArg ){\n      var arr = [];\n      var eles = this;\n\n      for( var i = 0; i < eles.length; i++ ){\n        var ele = eles[i];\n        var ret = thisArg ? mapFn.apply( thisArg, [ele, i, eles] ) : mapFn( ele, i, eles );\n\n        arr.push( ret );\n      }\n\n      return arr;\n    },\n\n    stdFilter: function( fn, thisArg ){\n      var filterEles = [];\n      var eles = this;\n      var cy = this._private.cy;\n\n      for( var i = 0; i < eles.length; i++ ){\n        var ele = eles[i];\n        var include = thisArg ? fn.apply( thisArg, [ele, i, eles] ) : fn( ele, i, eles );\n\n        if( include ){\n          filterEles.push( ele );\n        }\n      }\n\n      return new $$.Collection( cy, filterEles );\n    },\n\n    max: function( valFn, thisArg ){\n      var max = -Infinity;\n      var maxEle;\n      var eles = this;\n\n      for( var i = 0; i < eles.length; i++ ){\n        var ele = eles[i];\n        var val = thisArg ? valFn.apply( thisArg, [ ele, i, eles ] ) : valFn( ele, i, eles );\n\n        if( val > max ){\n          max = val;\n          maxEle = ele;\n        }\n      }\n\n      return {\n        value: max,\n        ele: maxEle\n      };\n    },\n\n    min: function( valFn, thisArg ){\n      var min = Infinity;\n      var minEle;\n      var eles = this;\n\n      for( var i = 0; i < eles.length; i++ ){\n        var ele = eles[i];\n        var val = thisArg ? valFn.apply( thisArg, [ ele, i, eles ] ) : valFn( ele, i, eles );\n\n        if( val < min ){\n          min = val;\n          minEle = ele;\n        }\n      }\n\n      return {\n        value: min,\n        ele: minEle\n      };\n    }\n  });\n\n  // aliases\n  var fn = $$.elesfn;\n  fn['u'] = fn['|'] = fn['+'] = fn.union = fn.or = fn.add;\n  fn['\\\\'] = fn['!'] = fn['-'] = fn.difference = fn.relativeComplement = fn.not;\n  fn['n'] = fn['&'] = fn['.'] = fn.and = fn.intersection = fn.intersect;\n  fn['^'] = fn['(+)'] = fn['(-)'] = fn.symmetricDifference = fn.symdiff = fn.xor;\n  fn.fnFilter = fn.filterFn = fn.stdFilter;\n  fn.complement = fn.abscomp = fn.absoluteComplement;\n  \n})( cytoscape );\n;(function($$){ 'use strict';\n\n  $$.fn.eles({\n    isNode: function(){\n      return this.group() === 'nodes';\n    },\n\n    isEdge: function(){\n      return this.group() === 'edges';\n    },\n\n    isLoop: function(){\n      return this.isEdge() && this.source().id() === this.target().id();\n    },\n\n    isSimple: function(){\n      return this.isEdge() && this.source().id() !== this.target().id();\n    },\n\n    group: function(){\n      var ele = this[0];\n\n      if( ele ){\n        return ele._private.group;\n      }\n    }\n  });\n\n  \n})( cytoscape );\n\n;(function($$){ 'use strict';\n  \n  // Functions for iterating over collections\n  ////////////////////////////////////////////////////////////////////////////////////////////////////\n  \n  $$.fn.eles({\n    each: function(fn){\n      if( $$.is.fn(fn) ){\n        for(var i = 0; i < this.length; i++){\n          var ele = this[i];\n          var ret = fn.apply( ele, [ i, ele ] );\n\n          if( ret === false ){ break; } // exit each early on return false\n        }\n      }\n      return this;\n    },\n\n    forEach: function(fn, thisArg){\n      if( $$.is.fn(fn) ){\n\n        for(var i = 0; i < this.length; i++){\n          var ele = this[i];\n          var ret = thisArg ? fn.apply( thisArg, [ ele, i, this ] ) : fn( ele, i, this );\n\n          if( ret === false ){ break; } // exit each early on return false\n        }\n      }\n\n      return this;\n    },\n\n    toArray: function(){\n      var array = [];\n      \n      for(var i = 0; i < this.length; i++){\n        array.push( this[i] );\n      }\n      \n      return array;\n    },\n\n    slice: function(start, end){\n      var array = [];\n      var thisSize = this.length;\n      \n      if( end == null ){\n        end = thisSize;\n      }\n\n      if( start == null ){\n        start = 0;\n      }\n      \n      if( start < 0 ){\n        start = thisSize + start;\n      }\n\n      if( end < 0 ){\n        end = thisSize + end;\n      }\n      \n      for(var i = start; i >= 0 && i < end && i < thisSize; i++){\n        array.push( this[i] );\n      }\n      \n      return new $$.Collection(this.cy(), array);\n    },\n\n    size: function(){\n      return this.length;\n    },\n\n    eq: function(i){\n      return this[i] || new $$.Collection( this.cy() );\n    },\n\n    first: function(){\n      return this[0] || new $$.Collection( this.cy() );\n    },\n\n    last: function(){\n      return this[ this.length - 1 ] || new $$.Collection( this.cy() );\n    },\n\n    empty: function(){\n      return this.length === 0;\n    },\n\n    nonempty: function(){\n      return !this.empty();\n    },\n\n    sort: function( sortFn ){\n      if( !$$.is.fn( sortFn ) ){\n        return this;\n      }\n\n      var cy = this.cy();      \n      var sorted = this.toArray().sort( sortFn );\n\n      return new $$.Collection(cy, sorted);\n    },\n\n    sortByZIndex: function(){\n      return this.sort( $$.Collection.zIndexSort );\n    },\n\n    zDepth: function(){\n      var ele = this[0];\n      if( !ele ){ return undefined; }\n\n      // var cy = ele.cy();\n      var _p = ele._private;\n      var group = _p.group;\n\n      if( group === 'nodes' ){\n        var depth = _p.data.parent ? ele.parents().size() : 0;\n        \n        if( !ele.isParent() ){\n          return Number.MAX_VALUE; // childless nodes always on top\n        }\n        \n        return depth;\n      } else {\n        var src = _p.source;\n        var tgt = _p.target;\n        var srcDepth = src.zDepth();\n        var tgtDepth = tgt.zDepth();\n\n        return Math.max( srcDepth, tgtDepth, 0 ); // depth of deepest parent\n      }\n    }\n  });\n\n  $$.Collection.zIndexSort = function(a, b){\n    var cy = a.cy();\n    var a_p = a._private;\n    var b_p = b._private;\n    var zDiff = a_p.style['z-index'].value - b_p.style['z-index'].value;\n    var depthA = 0;\n    var depthB = 0;\n    var hasCompoundNodes = cy.hasCompoundNodes();\n    var aIsNode = a_p.group === 'nodes';\n    var aIsEdge = a_p.group === 'edges';\n    var bIsNode = b_p.group === 'nodes';\n    var bIsEdge = b_p.group === 'edges';\n\n    // no need to calculate element depth if there is no compound node\n    if( hasCompoundNodes ){\n      depthA = a.zDepth();\n      depthB = b.zDepth();\n    }\n\n    var depthDiff = depthA - depthB;\n    var sameDepth = depthDiff === 0;\n\n    if( sameDepth ){\n      \n      if( aIsNode && bIsEdge ){      \n        return 1; // 'a' is a node, it should be drawn later       \n      \n      } else if( aIsEdge && bIsNode ){\n        return -1; // 'a' is an edge, it should be drawn first\n\n      } else { // both nodes or both edges        \n        if( zDiff === 0 ){ // same z-index => compare indices in the core (order added to graph w/ last on top)\n          return a_p.index - b_p.index;\n        } else {\n          return zDiff;\n        }\n      }\n    \n    // elements on different level\n    } else {      \n      return depthDiff; // deeper element should be drawn later\n    }\n\n  };\n  \n})( cytoscape );\n\n;(function($$){ 'use strict';\n  \n  // Functions for layouts on nodes\n  ////////////////////////////////////////////////////////////////////////////////////////////////////\n  \n  $$.fn.eles({\n\n    // using standard layout options, apply position function (w/ or w/o animation)\n    layoutPositions: function( layout, options, fn ){\n      var nodes = this.nodes();\n      var cy = this.cy();\n\n      layout.trigger({ type: 'layoutstart', layout: layout });\n\n      if( options.animate ){\n        for( var i = 0; i < nodes.length; i++ ){\n          var node = nodes[i];\n          var lastNode = i === nodes.length - 1;\n\n          var newPos = fn.call( node, i, node );\n          var pos = node.position();\n\n          if( !$$.is.number(pos.x) || !$$.is.number(pos.y) ){\n            node.silentPosition({ x: 0, y: 0 });\n          }\n\n          node.animate({\n            position: newPos\n          }, {\n            duration: options.animationDuration,\n            step: !lastNode ? undefined : function(){\n              if( options.fit ){\n                cy.fit( options.eles, options.padding );\n              } \n            },\n            complete: !lastNode ? undefined : function(){\n              if( options.zoom != null ){\n                cy.zoom( options.zoom );\n              }\n\n              if( options.pan ){\n                cy.pan( options.pan );\n              } \n\n              if( options.fit ){\n                cy.fit( options.eles, options.padding );\n              } \n              \n              layout.one('layoutstop', options.stop);\n              layout.trigger({ type: 'layoutstop', layout: layout });\n            }\n          });\n        }\n\n        layout.one('layoutready', options.ready);\n        layout.trigger({ type: 'layoutready', layout: layout });\n      } else {\n        nodes.positions( fn );\n\n        if( options.fit ){\n          cy.fit( options.eles, options.padding );\n        }\n\n        if( options.zoom != null ){\n          cy.zoom( options.zoom );\n        }\n\n        if( options.pan ){\n          cy.pan( options.pan );\n        } \n\n        layout.one('layoutready', options.ready);\n        layout.trigger({ type: 'layoutready', layout: layout });\n        \n        layout.one('layoutstop', options.stop);\n        layout.trigger({ type: 'layoutstop', layout: layout });\n      }\n\n      return this; // chaining\n    },\n\n    layout: function( options ){\n      var cy = this.cy();\n\n      cy.layout( $$.util.extend({}, options, {\n        eles: this\n      }) );\n\n      return this;\n    },\n\n    makeLayout: function( options ){\n      var cy = this.cy();\n\n      return cy.makeLayout( $$.util.extend({}, options, {\n        eles: this\n      }) );\n    }\n\n  });\n\n  // aliases:\n  $$.elesfn.createLayout = $$.elesfn.makeLayout;\n  \n})( cytoscape );\n\n;(function($$){ 'use strict';\n\n  $$.fn.eles({\n\n    // fully updates (recalculates) the style for the elements\n    updateStyle: function( notifyRenderer ){\n      var cy = this._private.cy;\n\n      if( !cy.styleEnabled() ){ return this; }\n\n      if( cy._private.batchingStyle ){\n        var bEles = cy._private.batchStyleEles;\n\n        for( var i = 0; i < this.length; i++ ){\n          var ele = this[i];\n\n          if( !bEles.ids[ ele._private.id ] ){\n            bEles.push( ele );\n          }\n        }\n\n        return this; // chaining and exit early when batching\n      }\n\n      var style = cy.style();\n      notifyRenderer = notifyRenderer || notifyRenderer === undefined ? true : false;\n\n      style.apply( this );\n\n      var updatedCompounds = this.updateCompoundBounds();\n      var toNotify = updatedCompounds.length > 0 ? this.add( updatedCompounds ) : this;\n\n      if( notifyRenderer ){\n        toNotify.rtrigger('style'); // let renderer know we changed style\n      } else {\n        toNotify.trigger('style'); // just fire the event\n      }\n      return this; // chaining\n    },\n\n    // just update the mappers in the elements' styles; cheaper than eles.updateStyle()\n    updateMappers: function( notifyRenderer ){\n      var cy = this._private.cy;\n      var style = cy.style();\n      notifyRenderer = notifyRenderer || notifyRenderer === undefined ? true : false;\n\n      if( !cy.styleEnabled() ){ return this; }\n\n      style.updateMappers( this );\n\n      var updatedCompounds = this.updateCompoundBounds();\n      var toNotify = updatedCompounds.length > 0 ? this.add( updatedCompounds ) : this;\n\n      if( notifyRenderer ){\n        toNotify.rtrigger('style'); // let renderer know we changed style\n      } else {\n        toNotify.trigger('style'); // just fire the event\n      }\n      return this; // chaining\n    },\n\n    // get the specified css property as a rendered value (i.e. on-screen value)\n    // or get the whole rendered style if no property specified (NB doesn't allow setting)\n    renderedCss: function( property ){\n      var cy = this.cy();\n      if( !cy.styleEnabled() ){ return this; }\n\n      var ele = this[0];\n\n      if( ele ){\n        var renstyle = ele.cy().style().getRenderedStyle( ele );\n\n        if( property === undefined ){\n          return renstyle;\n        } else {\n          return renstyle[ property ];\n        }\n      }\n    },\n\n    // read the calculated css style of the element or override the style (via a bypass)\n    css: function( name, value ){\n      var cy = this.cy();\n      \n      if( !cy.styleEnabled() ){ return this; }\n\n      var updateTransitions = false;\n      var style = cy.style();\n\n      if( $$.is.plainObject(name) ){ // then extend the bypass\n        var props = name;\n        style.applyBypass( this, props, updateTransitions );\n\n        var updatedCompounds = this.updateCompoundBounds();\n        var toNotify = updatedCompounds.length > 0 ? this.add( updatedCompounds ) : this;\n        toNotify.rtrigger('style'); // let the renderer know we've updated style\n\n      } else if( $$.is.string(name) ){\n  \n        if( value === undefined ){ // then get the property from the style\n          var ele = this[0];\n\n          if( ele ){\n            return ele._private.style[ name ].strValue;\n          } else { // empty collection => can't get any value\n            return;\n          }\n\n        } else { // then set the bypass with the property value\n          style.applyBypass( this, name, value, updateTransitions );\n\n          var updatedCompounds = this.updateCompoundBounds();\n          var toNotify = updatedCompounds.length > 0 ? this.add( updatedCompounds ) : this;\n          toNotify.rtrigger('style'); // let the renderer know we've updated style\n        }\n\n      } else if( name === undefined ){\n        var ele = this[0];\n\n        if( ele ){\n          return style.getRawStyle( ele );\n        } else { // empty collection => can't get any value\n          return;\n        }\n      }\n\n      return this; // chaining\n    },\n\n    removeCss: function( names ){\n      var cy = this.cy();\n      \n      if( !cy.styleEnabled() ){ return this; }\n\n      var updateTransitions = false;\n      var style = cy.style();\n      var eles = this;\n\n      if( names === undefined ){\n        for( var i = 0; i < eles.length; i++ ){\n          var ele = eles[i];\n\n          style.removeAllBypasses( ele, updateTransitions );\n        }\n      } else {\n        names = names.split(/\\s+/);\n\n        for( var i = 0; i < eles.length; i++ ){\n          var ele = eles[i];\n\n          style.removeBypasses( ele, names, updateTransitions );\n        }\n      }\n\n      var updatedCompounds = this.updateCompoundBounds();\n      var toNotify = updatedCompounds.length > 0 ? this.add( updatedCompounds ) : this;\n      toNotify.rtrigger('style'); // let the renderer know we've updated style\n\n      return this; // chaining\n    },\n\n    show: function(){\n      this.css('display', 'element');\n      return this; // chaining\n    },\n\n    hide: function(){\n      this.css('display', 'none');\n      return this; // chaining\n    },\n\n    visible: function(){\n      var cy = this.cy();\n      if( !cy.styleEnabled() ){ return true; }\n\n      var ele = this[0];\n      var hasCompoundNodes = cy.hasCompoundNodes();\n\n      if( ele ){\n        var style = ele._private.style;\n\n        if(\n          style['visibility'].value !== 'visible'\n          || style['display'].value !== 'element'\n        ){\n          return false;\n        }\n        \n        if( ele._private.group === 'nodes' ){\n          if( !hasCompoundNodes ){ return true; }\n\n          var parents = ele._private.data.parent ? ele.parents() : null;\n\n          if( parents ){\n            for( var i = 0; i < parents.length; i++ ){\n              var parent = parents[i];\n              var pStyle = parent._private.style;\n              var pVis = pStyle['visibility'].value;\n              var pDis = pStyle['display'].value;\n\n              if( pVis !== 'visible' || pDis !== 'element' ){\n                return false;\n              }\n            }\n          }\n\n          return true;\n        } else {\n          var src = ele._private.source;\n          var tgt = ele._private.target;\n\n          return src.visible() && tgt.visible();\n        }\n\n      }\n    },\n\n    hidden: function(){\n      var ele = this[0];\n\n      if( ele ){\n        return !ele.visible();\n      }\n    },\n\n    effectiveOpacity: function(){\n      var cy = this.cy();\n      if( !cy.styleEnabled() ){ return 1; }\n\n      var hasCompoundNodes = cy.hasCompoundNodes();\n      var ele = this[0];\n\n      if( ele ){\n        var _p = ele._private;\n        var parentOpacity = _p.style.opacity.value;\n\n        if( !hasCompoundNodes ){ return parentOpacity; }\n\n        var parents = !_p.data.parent ? null : ele.parents();\n        \n        if( parents ){\n          for( var i = 0; i < parents.length; i++ ){\n            var parent = parents[i];\n            var opacity = parent._private.style.opacity.value;\n\n            parentOpacity = opacity * parentOpacity;\n          }\n        }\n\n        return parentOpacity;\n      }\n    },\n\n    transparent: function(){\n      var cy = this.cy();\n      if( !cy.styleEnabled() ){ return false; }\n\n      var ele = this[0];\n      var hasCompoundNodes = ele.cy().hasCompoundNodes();\n\n      if( ele ){\n        if( !hasCompoundNodes ){\n          return ele._private.style.opacity.value === 0;\n        } else {\n          return ele.effectiveOpacity() === 0;\n        }\n      }\n    },\n\n    isFullAutoParent: function(){\n      var cy = this.cy();\n      if( !cy.styleEnabled() ){ return false; }\n\n      var ele = this[0];\n\n      if( ele ){\n        var autoW = ele._private.style['width'].value === 'auto';\n        var autoH = ele._private.style['height'].value === 'auto';\n\n        return ele.isParent() && autoW && autoH;\n      }\n    },\n\n    backgrounding: function(){\n      var cy = this.cy();\n      if( !cy.styleEnabled() ){ return false; }\n\n      var ele = this[0];\n\n      return ele._private.backgrounding ? true : false;\n    }\n\n  });\n\n\n  $$.elesfn.bypass = $$.elesfn.style = $$.elesfn.css;\n  $$.elesfn.renderedStyle = $$.elesfn.renderedCss;\n  $$.elesfn.removeBypass = $$.elesfn.removeStyle = $$.elesfn.removeCss;\n  \n})( cytoscape );\n;(function($$){ 'use strict';\n  \n  // Collection functions that toggle a boolean value\n  ////////////////////////////////////////////////////////////////////////////////////////////////////\n  \n  \n  function defineSwitchFunction(params){\n    return function(){\n      var args = arguments;\n      var changedEles = [];\n      \n      // e.g. cy.nodes().select( data, handler )\n      if( args.length === 2 ){\n        var data = args[0];\n        var handler = args[1];\n        this.bind( params.event, data, handler );\n      } \n      \n      // e.g. cy.nodes().select( handler )\n      else if( args.length === 1 ){\n        var handler = args[0];\n        this.bind( params.event, handler );\n      }\n      \n      // e.g. cy.nodes().select()\n      else if( args.length === 0 ){\n        for( var i = 0; i < this.length; i++ ){\n          var ele = this[i];\n          var able = !params.ableField || ele._private[params.ableField];\n          var changed = ele._private[params.field] != params.value;\n\n          if( params.overrideAble ){\n            var overrideAble = params.overrideAble(ele);\n\n            if( overrideAble !== undefined ){\n              able = overrideAble;\n\n              if( !overrideAble ){ return this; } // to save cycles assume not able for all on override\n            }\n          }\n\n          if( able ){\n            ele._private[params.field] = params.value;\n\n            if( changed ){\n              changedEles.push( ele );\n            }\n          }\n        }\n\n        var changedColl = $$.Collection( this.cy(), changedEles );\n        changedColl.updateStyle(); // change of state => possible change of style\n        changedColl.trigger( params.event );\n      }\n\n      return this;\n    };\n  }\n  \n  function defineSwitchSet( params ){\n    $$.elesfn[ params.field ] = function(){\n      var ele = this[0];\n\n      if( ele ){\n        if( params.overrideField ){\n          var val = params.overrideField(ele);\n\n          if( val !== undefined ){\n            return val;\n          }\n        }\n\n        return ele._private[ params.field ];\n      }\n    };\n    \n    $$.elesfn[ params.on ] = defineSwitchFunction({\n      event: params.on,\n      field: params.field,\n      ableField: params.ableField,\n      overrideAble: params.overrideAble,\n      value: true\n    });\n\n    $$.elesfn[ params.off ] = defineSwitchFunction({\n      event: params.off,\n      field: params.field,\n      ableField: params.ableField,\n      overrideAble: params.overrideAble,\n      value: false\n    });\n  }\n  \n  defineSwitchSet({\n    field: 'locked',\n    overrideField: function(ele){\n      return ele.cy().autolock() ? true : undefined;\n    },\n    on: 'lock',\n    off: 'unlock'\n  });\n  \n  defineSwitchSet({\n    field: 'grabbable',\n    overrideField: function(ele){\n      return ele.cy().autoungrabify() ? false : undefined;\n    },\n    on: 'grabify',\n    off: 'ungrabify'\n  });\n  \n  defineSwitchSet({\n    field: 'selected',\n    ableField: 'selectable',\n    overrideAble: function(ele){\n      return ele.cy().autounselectify() ? false : undefined;\n    },\n    on: 'select',\n    off: 'unselect'\n  });\n  \n  defineSwitchSet({\n    field: 'selectable',\n    overrideField: function(ele){\n      return ele.cy().autounselectify() ? false : undefined;\n    },\n    on: 'selectify',\n    off: 'unselectify'\n  });\n\n  $$.elesfn.deselect = $$.elesfn.unselect;\n  \n  $$.elesfn.grabbed = function(){\n    var ele = this[0];\n    if( ele ){\n      return ele._private.grabbed;\n    }\n  };\n\n  defineSwitchSet({\n    field: 'active',\n    on: 'activate',\n    off: 'unactivate'\n  });\n\n  $$.elesfn.inactive = function(){\n    var ele = this[0];\n    if( ele ){\n      return !ele._private.active;\n    }\n  };\n  \n})( cytoscape );\n\n;(function($$){ 'use strict';\n\n  // DAG functions\n  //////////////////////////\n\n  $$.fn.eles({\n    // get the root nodes in the DAG\n    roots: function( selector ){\n      var eles = this;\n      var roots = [];\n\n      for( var i = 0; i < eles.length; i++ ){\n        var ele = eles[i];\n        if( !ele.isNode() ){\n          continue;\n        }\n\n        var hasEdgesPointingIn = ele.connectedEdges(function(){\n          return this.data('target') === ele.id() && this.data('source') !== ele.id();\n        }).length > 0;\n\n        if( !hasEdgesPointingIn ){\n          roots.push( ele );\n        }\n      }\n\n      return new $$.Collection( this._private.cy, roots, { unique: true } ).filter( selector );\n    },\n\n    // get the leaf nodes in the DAG\n    leaves: function( selector ){\n      var eles = this;\n      var leaves = [];\n\n      for( var i = 0; i < eles.length; i++ ){\n        var ele = eles[i];\n        if( !ele.isNode() ){\n          continue;\n        }\n\n        var hasEdgesPointingOut = ele.connectedEdges(function(){\n          return this.data('source') === ele.id() && this.data('target') !== ele.id();\n        }).length > 0;\n\n        if( !hasEdgesPointingOut ){\n          leaves.push( ele );\n        }\n      }\n\n      return new $$.Collection( this._private.cy, leaves, { unique: true } ).filter( selector );\n    },\n\n    // normally called children in graph theory\n    // these nodes =edges=> outgoing nodes\n    outgoers: function( selector ){\n      var eles = this;\n      var oEles = [];\n\n      for( var i = 0; i < eles.length; i++ ){\n        var ele = eles[i];\n        var eleId = ele.id();\n\n        if( !ele.isNode() ){ continue; }\n\n        var edges = ele._private.edges;\n        for( var j = 0; j < edges.length; j++ ){\n          var edge = edges[j];\n          var srcId = edge._private.data.source;\n          var tgtId = edge._private.data.target;\n\n          if( srcId === eleId && tgtId !== eleId ){\n            oEles.push( edge );\n            oEles.push( edge.target()[0] );\n          }\n        }\n      }\n\n      return new $$.Collection( this._private.cy, oEles, { unique: true } ).filter( selector );\n    },\n\n    // aka DAG descendants\n    successors: function( selector ){\n      var eles = this;\n      var sEles = [];\n      var sElesIds = {};\n\n      for(;;){\n        var outgoers = eles.outgoers();\n\n        if( outgoers.length === 0 ){ break; } // done if no outgoers left\n\n        var newOutgoers = false;\n        for( var i = 0; i < outgoers.length; i++ ){\n          var outgoer = outgoers[i];\n          var outgoerId = outgoer.id();\n\n          if( !sElesIds[ outgoerId ] ){\n            sElesIds[ outgoerId ] = true;\n            sEles.push( outgoer );\n            newOutgoers = true;\n          }\n        }\n\n        if( !newOutgoers ){ break; } // done if touched all outgoers already\n\n        eles = outgoers;\n      }\n\n      return new $$.Collection( this._private.cy, sEles, { unique: true } ).filter( selector );\n    },\n\n    // normally called parents in graph theory\n    // these nodes <=edges= incoming nodes\n    incomers: function( selector ){\n      var eles = this;\n      var oEles = [];\n\n      for( var i = 0; i < eles.length; i++ ){\n        var ele = eles[i];\n        var eleId = ele.id();\n\n        if( !ele.isNode() ){ continue; }\n\n        var edges = ele._private.edges;\n        for( var j = 0; j < edges.length; j++ ){\n          var edge = edges[j];\n          var srcId = edge._private.data.source;\n          var tgtId = edge._private.data.target;\n\n          if( tgtId === eleId && srcId !== eleId ){\n            oEles.push( edge );\n            oEles.push( edge.source()[0] );\n          }\n        }\n      }\n\n      return new $$.Collection( this._private.cy, oEles, { unique: true } ).filter( selector );\n    },\n\n    // aka DAG ancestors\n    predecessors: function( selector ){\n      var eles = this;\n      var pEles = [];\n      var pElesIds = {};\n\n      for(;;){\n        var incomers = eles.incomers();\n\n        if( incomers.length === 0 ){ break; } // done if no incomers left\n\n        var newIncomers = false;\n        for( var i = 0; i < incomers.length; i++ ){\n          var incomer = incomers[i];\n          var incomerId = incomer.id();\n\n          if( !pElesIds[ incomerId ] ){\n            pElesIds[ incomerId ] = true;\n            pEles.push( incomer );\n            newIncomers = true;\n          }\n        }\n\n        if( !newIncomers ){ break; } // done if touched all incomers already\n\n        eles = incomers;\n      }\n\n      return new $$.Collection( this._private.cy, pEles, { unique: true } ).filter( selector );\n    }\n  });\n\n\n  // Neighbourhood functions\n  //////////////////////////\n\n  $$.fn.eles({\n    neighborhood: function(selector){\n      var elements = [];\n      var cy = this._private.cy;\n      var nodes = this.nodes();\n\n      for( var i = 0; i < nodes.length; i++ ){ // for all nodes\n        var node = nodes[i];\n        var connectedEdges = node.connectedEdges();\n\n        // for each connected edge, add the edge and the other node\n        for( var j = 0; j < connectedEdges.length; j++ ){\n          var edge = connectedEdges[j];\n          var otherNode = edge.connectedNodes().not(node);\n\n          // need check in case of loop\n          if( otherNode.length > 0 ){\n            elements.push( otherNode[0] ); // add node 1 hop away\n          }\n          \n          // add connected edge\n          elements.push( edge[0] );\n        }\n\n      }\n      \n      return ( new $$.Collection( cy, elements, { unique: true } ) ).filter( selector );\n    },\n\n    closedNeighborhood: function(selector){\n      return this.neighborhood().add( this ).filter( selector );\n    },\n\n    openNeighborhood: function(selector){\n      return this.neighborhood( selector );\n    }\n  });  \n\n  // aliases\n  $$.elesfn.neighbourhood = $$.elesfn.neighborhood;\n  $$.elesfn.closedNeighbourhood = $$.elesfn.closedNeighborhood;\n  $$.elesfn.openNeighbourhood = $$.elesfn.openNeighborhood;\n\n\n  // Edge functions\n  /////////////////\n\n  $$.fn.eles({\n    source: function( selector ){\n      var ele = this[0];\n      var src;\n\n      if( ele ){\n        src = ele._private.source;\n      }\n\n      return src && selector ? src.filter( selector ) : src;\n    },\n\n    target: function( selector ){\n      var ele = this[0];\n      var tgt;\n\n      if( ele ){\n        tgt = ele._private.target;\n      }\n\n      return tgt && selector ? tgt.filter( selector ) : tgt;\n    },\n\n    sources: defineSourceFunction({\n      attr: 'source'\n    }),\n\n    targets: defineSourceFunction({\n      attr: 'target'\n    })\n  });\n  \n  function defineSourceFunction( params ){\n    return function( selector ){\n      var sources = [];\n      var cy = this._private.cy;\n\n      for( var i = 0; i < this.length; i++ ){\n        var ele = this[i];\n        var src = ele._private[ params.attr ];\n\n        if( src ){\n          sources.push( src );\n        }\n      }\n      \n      return new $$.Collection( cy, sources, { unique: true } ).filter( selector );\n    };\n  }\n\n  $$.fn.eles({\n    edgesWith: defineEdgesWithFunction(),\n\n    edgesTo: defineEdgesWithFunction({\n      thisIs: 'source'\n    })\n  });\n  \n  function defineEdgesWithFunction( params ){\n    \n    return function(otherNodes){\n      var elements = [];\n      var cy = this._private.cy;\n      var p = params || {};\n\n      // get elements if a selector is specified\n      if( $$.is.string(otherNodes) ){\n        otherNodes = cy.$( otherNodes );\n      }\n      \n      var thisIds = this._private.ids;\n      var otherIds = otherNodes._private.ids;\n      \n      for( var h = 0; h < otherNodes.length; h++ ){\n        var edges = otherNodes[h]._private.edges;\n        \n        for( var i = 0; i < edges.length; i++ ){\n          var edge = edges[i];\n          var foundId;\n          var edgeData = edge._private.data;\n          var thisToOther = thisIds[ edgeData.source ] && otherIds[ edgeData.target ];\n          var otherToThis = otherIds[ edgeData.source ] && thisIds[ edgeData.target ];\n          var edgeConnectsThisAndOther = thisToOther || otherToThis;\n\n          if( !edgeConnectsThisAndOther ){ continue; }\n\n          if( p.thisIs ){\n            if( p.thisIs === 'source' && !thisToOther ){ continue; }\n            \n            if( p.thisIs === 'target' && !otherToThis ){ continue; }\n          }\n          \n          elements.push( edge );\n        }\n      }\n      \n      return new $$.Collection( cy, elements, { unique: true } );\n    };\n  }\n  \n  $$.fn.eles({\n    connectedEdges: function( selector ){\n      var retEles = [];\n      var cy = this._private.cy;\n      \n      var eles = this;\n      for( var i = 0; i < eles.length; i++ ){\n        var node = eles[i];\n        if( !node.isNode() ){ continue; }\n\n        var edges = node._private.edges;\n\n        for( var j = 0; j < edges.length; j++ ){\n          var edge = edges[j];          \n          retEles.push( edge );\n        }\n      }\n      \n      return new $$.Collection( cy, retEles, { unique: true } ).filter( selector );\n    },\n\n    connectedNodes: function( selector ){\n      var retEles = [];\n      var cy = this._private.cy;\n\n      var eles = this;\n      for( var i = 0; i < eles.length; i++ ){\n        var edge = eles[i];\n        if( !edge.isEdge() ){ continue; }\n\n        retEles.push( edge.source()[0] );\n        retEles.push( edge.target()[0] );\n      }\n\n      return new $$.Collection( cy, retEles, { unique: true } ).filter( selector );\n    },\n\n    parallelEdges: defineParallelEdgesFunction(),\n\n    codirectedEdges: defineParallelEdgesFunction({\n      codirected: true\n    })\n  });\n  \n  function defineParallelEdgesFunction(params){\n    var defaults = {\n      codirected: false\n    };\n    params = $$.util.extend({}, defaults, params);\n    \n    return function( selector ){\n      var cy = this._private.cy;\n      var elements = [];\n      var edges = this.edges();\n      var p = params;\n\n      // look at all the edges in the collection\n      for( var i = 0; i < edges.length; i++ ){\n        var edge1 = edges[i];\n        var src1 = edge1.source()[0];\n        var srcid1 = src1.id();\n        var tgt1 = edge1.target()[0];\n        var tgtid1 = tgt1.id();\n        var srcEdges1 = src1._private.edges;\n\n        // look at edges connected to the src node of this edge\n        for( var j = 0; j < srcEdges1.length; j++ ){\n          var edge2 = srcEdges1[j];\n          var edge2data = edge2._private.data;\n          var tgtid2 = edge2data.target;\n          var srcid2 = edge2data.source;\n\n          var codirected = tgtid2 === tgtid1 && srcid2 === srcid1;\n          var oppdirected = srcid1 === tgtid2 && tgtid1 === srcid2;\n          \n          if( (p.codirected && codirected) || (!p.codirected && (codirected || oppdirected)) ){\n            elements.push( edge2 );\n          }\n        }\n      }\n      \n      return new $$.Collection( cy, elements, { unique: true } ).filter( selector );\n    };\n  \n  }\n\n  \n})( cytoscape );\n\n;(function($$){ 'use strict';\n\n  $$.fn.eles({\n\n    fit: function(){},\n    center: function(){}\n\n  });\n  \n})( cytoscape );\n;(function ($$) {\n  \"use strict\";\n\n  /*  Min and Max heap predefaults */\n  \n  $$.Minheap = function (cy, eles, valueFn) {\n    return new $$.Heap(cy, eles, $$.Heap.minHeapComparator, valueFn);\n  };\n\n  $$.Maxheap = function (cy, eles, valueFn) {\n    return new $$.Heap(cy, eles, $$.Heap.maxHeapComparator, valueFn);\n  };\n  \n  $$.Heap = function (cy, eles, comparator, valueFn) {\n    if (typeof comparator === \"undefined\" || typeof eles === \"undefined\") {\n      return;\n    }\n    \n    if (typeof valueFn === \"undefined\") {\n      valueFn = $$.Heap.idFn;\n    }\n\n    var sourceHeap = [],\n      pointers = {},\n      elements = [],\n      i = 0,\n      id,\n      heap,\n      elesLen;\n\n    eles = this.getArgumentAsCollection(eles, cy);\n    elesLen = eles.length;\n\n    for (i = 0; i < elesLen; i += 1) {\n      sourceHeap.push(valueFn.call(cy, eles[i], i, eles));\n\n      id = eles[i].id();\n      \n      if (pointers.hasOwnProperty(id)) {\n        throw \"ERROR: Multiple items with the same id found: \" + id;\n      }\n      \n      pointers[id] = i;\n      elements.push(id);\n    }\n\n    this._private = {\n      cy: cy,\n      heap: sourceHeap,\n      pointers: pointers,\n      elements: elements,\n      comparator: comparator,\n      extractor: valueFn,\n      length: elesLen\n    };\n\n    for (i = Math.floor(elesLen / 2); i >= 0; i -= 1) {\n      heap = this.heapify(i);\n    }\n\n    return heap;\n  };\n\n  /* static methods */\n  $$.Heap.idFn = function (node) {\n    return node.id();\n  };\n\n  $$.Heap.minHeapComparator = function (a, b) {\n    return a >= b;\n  };\n\n  $$.Heap.maxHeapComparator = function (a, b) {\n    return a <= b;\n  };\n\n  $$.fn.heap = function( fnMap, options ){\n    for( var name in fnMap ){\n      var fn = fnMap[name];\n      $$.Heap.prototype[ name ] = fn;\n    }\n  };\n\n  $$.heapfn = $$.Heap.prototype; // short alias\n\n  /* object methods */\n  $$.heapfn.size = function () {\n    return this._private.length;\n  };\n\n  $$.heapfn.getArgumentAsCollection = function (eles, cy) {\n    var result;\n    if(typeof cy === \"undefined\") {\n      cy = this._private.cy;\n    }\n\n    if ($$.is.elementOrCollection(eles)) {\n      result = eles;\n\n    } else {\n      var resultArray = [],\n        sourceEles = [].concat.apply([], [eles]);\n\n      for (var i = 0; i < sourceEles.length; i++) {\n        var id = sourceEles[i],\n          ele = cy.getElementById(id);\n\n        if(ele.length > 0) {\n          resultArray.push(ele);\n        }\n      }\n\n      result = new $$.Collection(cy, resultArray);\n    }\n\n    return result;\n  };\n\n  $$.heapfn.isHeap = function () {\n    var array = this._private.heap,\n      arrlen = array.length,\n      i,\n      left,\n      right,\n      lCheck,\n      rCheck,\n      comparator = this._private.comparator;\n\n    for (i = 0; i < arrlen; i += 1) {\n      left = 2 * i + 1;\n      right = left + 1;\n      lCheck = left < arrlen ? comparator(array[left], array[i]) : true;\n      rCheck = right < arrlen ? comparator(array[right], array[i]) : true;\n\n      if (!lCheck || !rCheck) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n\n  $$.heapfn.heapSwap = function (i, j) {\n    var heap = this._private.heap,\n      pointers = this._private.pointers,\n      elements = this._private.elements,\n      swapValue = heap[i],\n      swapElems = elements[i],\n      idI = elements[i],\n      idJ = elements[j];\n\n    heap[i] = heap[j];\n    elements[i] = elements[j];\n\n    pointers[idI] = j;\n    pointers[idJ] = i;\n\n    heap[j] = swapValue;\n    elements[j] = swapElems;\n  };\n\n  $$.heapfn.heapify = function (i, rootToLeaf) {\n    var treeLen = 0,\n      condHeap = false,\n      array,\n      current,\n      left,\n      right,\n      best,\n      comparator,\n      parent;\n    \n    if (typeof rootToLeaf === \"undefined\") {\n      rootToLeaf = true;\n    }\n\n    array = this._private.heap;\n    treeLen = array.length;\n    comparator = this._private.comparator;\n    current = i;\n\n    while (!condHeap) {\n\n      if (rootToLeaf) {\n        left = 2 * current + 1;\n        right = left + 1;\n        best = current;\n        \n        if (left < treeLen && !comparator(array[left], array[best])) {\n          best = left;\n        }\n        \n        if (right < treeLen && !comparator(array[right], array[best])) {\n          best = right;\n        }\n        \n        condHeap = best === current;\n        \n        if (!condHeap) {\n          this.heapSwap(best, current);\n          current = best;\n        }\n\n      } else {\n        parent = Math.floor((current - 1) / 2);\n        best = current;\n        condHeap = parent < 0 || comparator(array[best], array[parent]);\n\n        if (!condHeap) {\n          this.heapSwap(best, parent);\n          current = parent;\n        }\n      }\n\n    } // while\n  };\n\n  /* collectionOrElement */\n  $$.heapfn.insert = function (eles) {\n    var elements = this.getArgumentAsCollection(eles),\n      elsize = elements.length,\n      element,\n      elindex,\n      elvalue,\n      elid,\n      i;\n\n    for (i = 0; i < elsize; i += 1) {\n      element = elements[i];\n      elindex = this._private.heap.length;\n      elvalue = this._private.extractor(element);\n      elid = element.id();\n\n      if (this._private.pointers.hasOwnProperty(elid)) {\n        throw \"ERROR: Multiple items with the same id found: \" + elid;\n      }\n\n      this._private.heap.push(elvalue);\n      this._private.elements.push(elid);\n      this._private.pointers[elid] = elindex;\n      this.heapify(elindex, false);\n    }\n\n    this._private.length = this._private.heap.length;\n  };\n\n  $$.heapfn.getValueById = function (elementId) {\n    if (this._private.pointers.hasOwnProperty(elementId)) {\n      var elementIndex = this._private.pointers[elementId];\n\n      return this._private.heap[elementIndex];\n    }\n  };\n  \n  $$.heapfn.contains = function (eles) {\n    var elements = this.getArgumentAsCollection(eles);\n\n    for (var i = 0; i < elements.length; i += 1) {\n      var elementId = elements[i].id();\n\n      if(!this._private.pointers.hasOwnProperty(elementId)) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n  \n  $$.heapfn.top = function () {\n    if (this._private.length > 0) {\n\n      return {\n        value: this._private.heap[0],\n        id: this._private.elements[0]\n      };\n\n    }\n  };\n\n  $$.heapfn.pop = function () {\n    if (this._private.length > 0) {\n      var top = this.top(),\n        lastIndex = this._private.length - 1,\n        removeCandidate,\n        removeValue,\n        remId;\n\n      this.heapSwap(0, lastIndex);\n\n      removeCandidate = this._private.elements[lastIndex];\n      removeValue = this._private.heap[lastIndex];\n      remId = removeCandidate;\n\n      this._private.heap.pop();\n      this._private.elements.pop();\n      this._private.length = this._private.heap.length;\n      this._private.pointers[remId] = undefined;\n\n      this.heapify(0);\n      return top;\n    }\n  };\n\n  $$.heapfn.findDirectionHeapify = function (index) {\n    var parent = Math.floor((index - 1) / 2),\n      array = this._private.heap,\n      condHeap = parent < 0 || this._private.comparator(array[index], array[parent]);\n\n    this.heapify(index, condHeap);\n  };\n\n  /* edit is a new value or function */\n  // only values in heap are updated. elements themselves are not!\n  $$.heapfn.edit = function (eles, edit) {\n    var elements = this.getArgumentAsCollection(eles);\n    \n    for (var i = 0; i < elements.length; i += 1) {\n      var elementId = elements[i].id(),\n        elementIndex = this._private.pointers[elementId],\n        elementValue = this._private.heap[elementIndex];\n      \n      if ($$.is.number(edit)) {\n        this._private.heap[elementIndex] = edit;\n        \n      } else if ($$.is.fn(edit)) {\n        this._private.heap[elementIndex] = edit.call(this._private.cy, elementValue, elementIndex);\n      }\n\n      this.findDirectionHeapify(elementIndex);\n    }\n  };\n\n  $$.heapfn.remove = function (eles) {\n    var elements = this.getArgumentAsCollection(eles);\n    \n    for (var i = 0; i < elements.length; i += 1) {\n      var elementId = elements[i].id(),\n        elementIndex = this._private.pointers[elementId],\n        lastIndex = this._private.length - 1,\n        removeCandidate,\n        removeValue,\n        remId;\n\n      if (elementIndex !== lastIndex) {\n        this.heapSwap(elementIndex, lastIndex);\n      }\n\n      removeCandidate = this._private.elements[lastIndex];\n      removeValue = this._private.heap[lastIndex];\n      remId = removeCandidate;\n\n      this._private.heap.pop();\n      this._private.elements.pop();\n      this._private.length = this._private.heap.length;\n      this._private.pointers[remId] = undefined;\n\n      this.findDirectionHeapify(elementIndex);\n    }\n\n    return removeValue;\n  };\n\n})(cytoscape);\n/*\n  The canvas renderer was written by Yue Dong.\n\n  Modifications tracked on Github.\n*/\n\n(function($$) { 'use strict';\n\n  CanvasRenderer.CANVAS_LAYERS = 3;\n  //\n  CanvasRenderer.SELECT_BOX = 0;\n  CanvasRenderer.DRAG = 1;\n  CanvasRenderer.NODE = 2;\n\n  CanvasRenderer.BUFFER_COUNT = 3;\n  //\n  CanvasRenderer.TEXTURE_BUFFER = 0;\n  CanvasRenderer.MOTIONBLUR_BUFFER_NODE = 1;\n  CanvasRenderer.MOTIONBLUR_BUFFER_DRAG = 2;\n\n  function CanvasRenderer(options) {  \n\n    this.options = options;\n\n    this.data = {\n        \n      select: [undefined, undefined, undefined, undefined, 0], // Coordinates for selection box, plus enabled flag \n      renderer: this, cy: options.cy, container: options.cy.container(),\n      \n      canvases: new Array(CanvasRenderer.CANVAS_LAYERS),\n      contexts: new Array(CanvasRenderer.CANVAS_LAYERS),\n      canvasNeedsRedraw: new Array(CanvasRenderer.CANVAS_LAYERS),\n      \n      bufferCanvases: new Array(CanvasRenderer.BUFFER_COUNT),\n      bufferContexts: new Array(CanvasRenderer.CANVAS_LAYERS)\n\n    };\n    \n    //--Pointer-related data\n    this.hoverData = {down: null, last: null, \n        downTime: null, triggerMode: null, \n        dragging: false, \n        initialPan: [null, null], capture: false};\n    \n    this.timeoutData = {panTimeout: null};\n    \n    this.dragData = {possibleDragElements: []};\n    \n    this.touchData = {start: null, capture: false,\n        // These 3 fields related to tap, taphold events\n        startPosition: [null, null, null, null, null, null],\n        singleTouchStartTime: null,\n        singleTouchMoved: true,\n        \n        \n        now: [null, null, null, null, null, null], \n        earlier: [null, null, null, null, null, null] };\n    //--\n    \n    //--Wheel-related data \n    this.zoomData = {freeToZoom: false, lastPointerX: null};\n    //--\n    \n    this.redraws = 0;\n    this.showFps = options.showFps;\n\n    this.bindings = [];\n    \n    this.data.canvasContainer = document.createElement('div');\n    var containerStyle = this.data.canvasContainer.style;\n    containerStyle.position = 'absolute';\n    containerStyle.zIndex = '0';\n    containerStyle.overflow = 'hidden';\n\n    this.data.container.appendChild( this.data.canvasContainer );\n\n    for (var i = 0; i < CanvasRenderer.CANVAS_LAYERS; i++) {\n      this.data.canvases[i] = document.createElement('canvas');\n      this.data.contexts[i] = this.data.canvases[i].getContext('2d');\n      this.data.canvases[i].style.position = 'absolute';\n      this.data.canvases[i].setAttribute('data-id', 'layer' + i);\n      this.data.canvases[i].style.zIndex = String(CanvasRenderer.CANVAS_LAYERS - i);\n      this.data.canvasContainer.appendChild(this.data.canvases[i]);\n      \n      this.data.canvasNeedsRedraw[i] = false;\n    }\n    this.data.topCanvas = this.data.canvases[0];\n\n    this.data.canvases[CanvasRenderer.NODE].setAttribute('data-id', 'layer' + CanvasRenderer.NODE + '-node');\n    this.data.canvases[CanvasRenderer.SELECT_BOX].setAttribute('data-id', 'layer' + CanvasRenderer.SELECT_BOX + '-selectbox');\n    this.data.canvases[CanvasRenderer.DRAG].setAttribute('data-id', 'layer' + CanvasRenderer.DRAG + '-drag');\n    \n    for (var i = 0; i < CanvasRenderer.BUFFER_COUNT; i++) {\n      this.data.bufferCanvases[i] = document.createElement('canvas');\n      this.data.bufferContexts[i] = this.data.bufferCanvases[i].getContext('2d');\n      this.data.bufferCanvases[i].style.position = 'absolute';\n      this.data.bufferCanvases[i].setAttribute('data-id', 'buffer' + i);\n      this.data.bufferCanvases[i].style.zIndex = String(-i - 1);\n      this.data.bufferCanvases[i].style.visibility = 'hidden';\n      //this.data.canvasContainer.appendChild(this.data.bufferCanvases[i]);\n    }\n\n    this.hideEdgesOnViewport = options.hideEdgesOnViewport;\n    this.hideLabelsOnViewport = options.hideLabelsOnViewport;\n    this.textureOnViewport = options.textureOnViewport;\n    this.wheelSensitivity = options.wheelSensitivity;\n    this.motionBlurEnabled = options.motionBlur; // on by default\n    this.forcedPixelRatio = options.pixelRatio;\n    this.motionBlur = true; // for initial kick off\n    this.motionBlurOpacity = options.motionBlurOpacity;\n    this.motionBlurTransparency = 1 - this.motionBlurOpacity;\n    this.motionBlurPxRatio = 1;\n    this.mbPxRBlurry = 1; //0.8;\n    this.minMbLowQualFrames = 4;\n    this.fullQualityMb = false;\n    this.clearedForMotionBlur = [];\n    this.desktopTapThreshold = options.desktopTapThreshold;\n    this.desktopTapThreshold2 = options.desktopTapThreshold * options.desktopTapThreshold;\n    this.touchTapThreshold = options.touchTapThreshold;\n    this.touchTapThreshold2 = options.touchTapThreshold * options.touchTapThreshold;\n    this.tapholdDuration = 500;\n\n    this.load();\n  }\n\n  CanvasRenderer.panOrBoxSelectDelay = 400;\n\n  // whether to use Path2D caching for drawing\n  var pathsImpld = typeof Path2D !== 'undefined';\n  CanvasRenderer.usePaths = function(){\n    return pathsImpld;\n  };\n\n  CanvasRenderer.prototype.notify = function(params) {\n    var types;\n\n    if( $$.is.array( params.type ) ){\n      types = params.type;\n\n    } else {\n      types = [ params.type ];\n    }\n\n    for( var i = 0; i < types.length; i++ ){\n      var type = types[i];\n\n      switch( type ){\n        case 'destroy':\n          this.destroy();\n          return;\n\n        case 'add':\n        case 'remove':\n        case 'load':\n          this.updateNodesCache();\n          this.updateEdgesCache();\n          break;\n\n        case 'viewport':\n          this.data.canvasNeedsRedraw[CanvasRenderer.SELECT_BOX] = true;\n          break;\n\n        case 'style':\n          this.updateCachedZSortedEles();\n          break;\n      }\n\n      if( type === 'load' || type === 'resize' ){\n        this.invalidateContainerClientCoordsCache();\n        this.matchCanvasSize(this.data.container);\n      }\n    } // for\n    \n    this.data.canvasNeedsRedraw[CanvasRenderer.NODE] = true;\n    this.data.canvasNeedsRedraw[CanvasRenderer.DRAG] = true;\n\n    this.redraw();\n  };\n\n  CanvasRenderer.prototype.destroy = function(){\n    this.destroyed = true;\n\n    for( var i = 0; i < this.bindings.length; i++ ){\n      var binding = this.bindings[i];\n      var b = binding;\n\n      b.target.removeEventListener(b.event, b.handler, b.useCapture);\n    }\n\n    if( this.removeObserver ){\n      this.removeObserver.disconnect();\n    }\n\n    if( this.labelCalcDiv ){\n      try{\n        document.body.removeChild(this.labelCalcDiv);\n      } catch(e){\n        // ie10 issue #1014\n      }\n    }\n  };\n\n  \n\n  // copy the math functions into the renderer prototype\n  // unfortunately these functions are used interspersed t/o the code\n  // and this makes sure things work just in case a ref was missed in refactoring\n  // TODO remove this eventually\n  for( var fnName in $$.math ){\n    CanvasRenderer.prototype[ fnName ] = $$.math[ fnName ];\n  }\n  \n  \n  $$('renderer', 'canvas', CanvasRenderer);\n  \n})( cytoscape );\n\n;(function($$){ 'use strict';\n\n  var CanvasRenderer = $$('renderer', 'canvas');\n  var rendFunc = CanvasRenderer.prototype;\n  var arrowShapes = CanvasRenderer.arrowShapes = {};\n\n  CanvasRenderer.arrowShapeHeight = 0.3;\n\n  // Contract for arrow shapes:\n  // 0, 0 is arrow tip\n  // (0, 1) is direction towards node\n  // (1, 0) is right\n  //\n  // functional api:\n  // collide: check x, y in shape\n  // roughCollide: called before collide, no false negatives\n  // draw: draw\n  // spacing: dist(arrowTip, nodeBoundary)\n  // gap: dist(edgeTip, nodeBoundary), edgeTip may != arrowTip\n\n  var bbCollide = function(x, y, centerX, centerY, width, height, direction, padding){\n    var x1 = centerX - width/2;\n    var x2 = centerX + width/2;\n    var y1 = centerY - height/2;\n    var y2 = centerY + height/2;\n\n    return (x1 <= x && x <= x2) && (y1 <= y && y <= y2);\n  };\n\n  var transform = function(x, y, size, angle, translation){\n    angle = -angle; // b/c of notation used in arrow draw fn\n\n    var xRotated = x * Math.cos(angle) - y * Math.sin(angle);\n    var yRotated = x * Math.sin(angle) + y * Math.cos(angle);\n    \n    var xScaled = xRotated * size;\n    var yScaled = yRotated * size;\n\n    var xTranslated = xScaled + translation.x;\n    var yTranslated = yScaled + translation.y;\n    \n    return {\n      x: xTranslated,\n      y: yTranslated\n    };\n  };\n\n  arrowShapes['arrow'] = {\n    _points: [\n      -0.15, -0.3,\n      0, 0,\n      0.15, -0.3\n    ],\n    \n    collide: function(x, y, centerX, centerY, width, height, direction, padding) {\n      var points = arrowShapes['arrow']._points;\n      \n//      console.log(\"collide(): \" + direction);\n      \n      return $$.math.pointInsidePolygon(\n        x, y, points, centerX, centerY, width, height, direction, padding);\n    },\n    \n    roughCollide: bbCollide,\n    \n    draw: function(context, size, angle, translation) {\n      var points = arrowShapes['arrow']._points;\n    \n      for (var i = 0; i < points.length / 2; i++) {\n        var pt = transform( points[i * 2], points[i * 2 + 1], size, angle, translation );\n\n        context.lineTo(pt.x, pt.y);\n      }\n\n    },\n    \n    spacing: function(edge) {\n      return 0;\n    },\n    \n    gap: function(edge) {\n      return edge._private.style['width'].pxValue * 2;\n    }\n  };\n\n  arrowShapes['triangle'] = arrowShapes['arrow'];\n  \n  arrowShapes['triangle-backcurve'] = {\n    _ctrlPt: [ 0, -0.15 ],\n\n    collide: function(x, y, centerX, centerY, width, height, direction, padding) {\n      var points = arrowShapes['triangle']._points;\n      \n//      console.log(\"collide(): \" + direction);\n      \n      return $$.math.pointInsidePolygon(\n        x, y, points, centerX, centerY, width, height, direction, padding);\n    },\n    \n    roughCollide: bbCollide,\n    \n    draw: function(context, size, angle, translation) {\n      var points = arrowShapes['triangle']._points;\n      var firstPt;\n    \n      for (var i = 0; i < points.length / 2; i++) {\n        var pt = transform( points[i * 2], points[i * 2 + 1], size, angle, translation );\n\n        if( i === 0 ){\n          firstPt = pt;\n        }\n\n        context.lineTo(pt.x, pt.y);\n      }\n\n      var ctrlPt = this._ctrlPt;\n      var ctrlPtTrans = transform( ctrlPt[0], ctrlPt[1], size, angle, translation );\n\n      context.quadraticCurveTo( ctrlPtTrans.x, ctrlPtTrans.y, firstPt.x, firstPt.y );\n    },\n    \n    spacing: function(edge) {\n      return 0;\n    },\n    \n    gap: function(edge) {\n      return edge._private.style['width'].pxValue * 2;\n    }\n  };\n  \n\n  arrowShapes['triangle-tee'] = {\n    _points: [\n      -0.15, -0.3,\n      0, 0,\n      0.15, -0.3,\n      -0.15, -0.3\n    ],\n\n    _pointsTee: [\n      -0.15, -0.4,\n      -0.15, -0.5,\n      0.15, -0.5,\n      0.15, -0.4\n    ],\n    \n    collide: function(x, y, centerX, centerY, width, height, direction, padding) {\n      var triPts = arrowShapes['triangle-tee']._points;\n      var teePts = arrowShapes['triangle-tee']._pointsTee;\n      \n      var inside = $$.math.pointInsidePolygon(x, y, teePts, centerX, centerY, width, height, direction, padding) \n        || $$.math.pointInsidePolygon(x, y, triPts, centerX, centerY, width, height, direction, padding);\n\n      return inside;\n    },\n    \n    roughCollide: bbCollide,\n    \n    draw: function(context, size, angle, translation) {\n      var triPts = arrowShapes['triangle-tee']._points;\n      for (var i = 0; i < triPts.length / 2; i++){\n        var pt = transform( triPts[ i * 2 ],  triPts[ i * 2 + 1 ], size, angle, translation );\n        \n        context.lineTo( pt.x, pt.y );\n      }\n\n      var teePts = arrowShapes['triangle-tee']._pointsTee;\n      var firstTeePt = transform( teePts[0], teePts[1], size, angle, translation );\n      context.moveTo( firstTeePt.x, firstTeePt.y );\n\n      for (var i = 0; i < teePts.length / 2; i++){\n        var pt = transform( teePts[ i * 2 ],  teePts[ i * 2 + 1 ], size, angle, translation );\n        \n        context.lineTo( pt.x, pt.y );\n      }\n    },\n    \n    spacing: function(edge) {\n      return 0;\n    },\n    \n    gap: function(edge) {\n      return edge._private.style['width'].pxValue * 2;\n    }\n  };\n\n  arrowShapes['half-triangle-overshot'] = {\n    _points: [\n      0, -0.25,\n      -0.5, -0.25,\n      0.5, 0.25\n    ],\n    \n    leavePathOpen: true,\n    matchEdgeWidth: true,\n\n    collide: function(x, y, centerX, centerY, width, height, direction, padding) {\n      var points = this._points;\n      \n//      console.log(\"collide(): \" + direction);\n      \n      return $$.math.pointInsidePolygon(\n        x, y, points, centerX, centerY, width, height, direction, padding);\n    },\n    \n    roughCollide: bbCollide,\n    \n    draw: function(context, size, angle, translation) {\n      var points = this._points;\n    \n      for (var i = 0; i < points.length / 2; i++) {\n        var pt = transform( points[i * 2], points[i * 2 + 1], size, angle, translation );\n\n        context.lineTo(pt.x, pt.y);\n      }\n    },\n    \n    spacing: function(edge) {\n      return 0;\n    },\n    \n    gap: function(edge) {\n      return edge._private.style['width'].pxValue * 2;\n    }\n  };\n\n  arrowShapes['none'] = {\n    collide: function(x, y, centerX, centerY, width, height, direction, padding) {\n      return false;\n    },\n    \n    roughCollide: function(x, y, centerX, centerY, width, height, direction, padding) {\n      return false;\n    },\n    \n    draw: function(context) {\n    },\n    \n    spacing: function(edge) {\n      return 0;\n    },\n    \n    gap: function(edge) {\n      return 0;\n    }\n  };\n  \n  arrowShapes['circle'] = {\n    _baseRadius: 0.15,\n    \n    collide: function(x, y, centerX, centerY, width, height, direction, padding) {\n      // Transform x, y to get non-rotated ellipse\n      \n      if (width != height) {                  \n        var aspectRatio = (height + padding) / (width + padding);\n        y /= aspectRatio;\n        centerY /= aspectRatio;\n        \n        return (Math.pow(centerX - x, 2) \n          + Math.pow(centerY - y, 2) <= Math.pow((width + padding)\n            * arrowShapes['circle']._baseRadius, 2));\n      } else {\n        return (Math.pow(centerX - x, 2) \n          + Math.pow(centerY - y, 2) <= Math.pow((width + padding)\n            * arrowShapes['circle']._baseRadius, 2));\n      }\n    },\n    \n    roughCollide: bbCollide,\n    \n    draw: function(context, size, angle, translation) {\n      context.arc(translation.x, translation.y, arrowShapes['circle']._baseRadius * size, 0, Math.PI * 2, false);\n    },\n    \n    spacing: function(edge) {\n      return rendFunc.getArrowWidth(edge._private.style['width'].pxValue)\n        * arrowShapes['circle']._baseRadius;\n    },\n    \n    gap: function(edge) {\n      return edge._private.style['width'].pxValue * 2;\n    }\n  };\n  \n  arrowShapes['inhibitor'] = {\n    _points: [\n      -0.25, 0,\n      -0.25, -0.1,\n      0.25, -0.1,\n      0.25, 0\n    ],\n    \n    collide: function(x, y, centerX, centerY, width, height, direction, padding) {\n      var points = arrowShapes['inhibitor']._points;\n      \n      return $$.math.pointInsidePolygon(\n        x, y, points, centerX, centerY, width, height, direction, padding);\n    },\n    \n    roughCollide: bbCollide,\n    \n    draw: function(context, size, angle, translation) {\n      var points = arrowShapes['inhibitor']._points;\n      \n      for (var i = 0; i < points.length / 2; i++) {\n        var pt = transform( points[i * 2], points[i * 2 + 1], size, angle, translation );\n\n        context.lineTo(pt.x, pt.y);\n      }\n    },\n    \n    spacing: function(edge) {\n      return 1;\n    },\n    \n    gap: function(edge) {\n      return 1;\n    }\n  };\n\n  arrowShapes['tee'] = arrowShapes['inhibitor'];\n\n  arrowShapes['square'] = {\n    _points: [\n      -0.15, 0.00,\n      0.15, 0.00,\n      0.15, -0.3,\n      -0.15, -0.3\n    ],\n    \n    collide: function(x, y, centerX, centerY, width, height, direction, padding) {\n      var points = arrowShapes['square']._points;\n      \n      return $$.math.pointInsidePolygon(\n        x, y, points, centerX, centerY, width, height, direction, padding);\n    },\n    \n    roughCollide: bbCollide,\n    \n    draw: function(context, size, angle, translation) {\n      var points = arrowShapes['square']._points;\n    \n      for (var i = 0; i < points.length / 2; i++) {\n        var pt = transform( points[i * 2], points[i * 2 + 1], size, angle, translation );\n\n        context.lineTo(pt.x, pt.y);\n      }\n    },\n    \n    spacing: function(edge) {\n      return 0;\n    },\n\n    gap: function(edge) {\n      return edge._private.style['width'].pxValue * 2;\n    }\n  };\n\n  arrowShapes['diamond'] = {\n    _points: [\n      -0.15, -0.15,\n      0, -0.3,\n      0.15, -0.15,\n      0, 0\n    ],\n\n    collide: function(x, y, centerX, centerY, width, height, direction, padding) {\n      var points = arrowShapes['diamond']._points;\n          \n      return $$.math.pointInsidePolygon(\n        x, y, points, centerX, centerY, width, height, direction, padding);\n    },\n\n    roughCollide: bbCollide,\n\n    draw: function(context, size, angle, translation) {\n      var points = arrowShapes['diamond']._points;\n    \n      for (var i = 0; i < points.length / 2; i++) {\n        var pt = transform( points[i * 2], points[i * 2 + 1], size, angle, translation );\n\n        context.lineTo(pt.x, pt.y);\n      }\n    },\n    \n    spacing: function(edge) {\n      return 0;\n    },\n    \n    gap: function(edge) {\n      return edge._private.style['width'].pxValue;\n    }\n  };\n\n})( cytoscape );\n;(function($$){ 'use strict';\n\n  var CanvasRenderer = $$('renderer', 'canvas');\n  var CRp = CanvasRenderer.prototype;\n\n  CRp.getCachedNodes = function() {\n    var data = this.data; var cy = this.data.cy;\n    \n    if (data.cache == null) {\n      data.cache = {};\n    }\n    \n    if (data.cache.cachedNodes == null) {\n      data.cache.cachedNodes = cy.nodes();\n    }\n    \n    return data.cache.cachedNodes;\n  };\n  \n  CRp.updateNodesCache = function() {\n    var data = this.data; var cy = this.data.cy;\n    \n    if (data.cache == null) {\n      data.cache = {};\n    }\n    \n    data.cache.cachedNodes = cy.nodes();\n  };\n  \n  CRp.getCachedEdges = function() {\n    var data = this.data; var cy = this.data.cy;\n    \n    if (data.cache == null) {\n      data.cache = {};\n    }\n    \n    if (data.cache.cachedEdges == null) {\n      data.cache.cachedEdges = cy.edges();\n    }\n    \n    return data.cache.cachedEdges;\n  };\n  \n  CRp.updateEdgesCache = function() {\n    var data = this.data; var cy = this.data.cy;\n    \n    if (data.cache == null) {\n      data.cache = {};\n    }\n    \n    data.cache.cachedEdges = cy.edges();\n  };\n\n})( cytoscape );\n\n;(function($$){ 'use strict';\n\n  var CanvasRenderer = $$('renderer', 'canvas');\n  var CRp = CanvasRenderer.prototype;\n\n  // Project mouse\n  CRp.projectIntoViewport = function(clientX, clientY) {\n    var offsets = this.findContainerClientCoords();\n    var offsetLeft = offsets[0];\n    var offsetTop = offsets[1];\n    \n    var x = clientX - offsetLeft; \n    var y = clientY - offsetTop;\n    \n    x -= this.data.cy.pan().x; y -= this.data.cy.pan().y; x /= this.data.cy.zoom(); y /= this.data.cy.zoom();\n    return [x, y];\n  };\n\n  CRp.findContainerClientCoords = function() {\n    var container = this.data.container;\n\n    var bb = this.containerBB = this.containerBB || container.getBoundingClientRect();\n\n    return [bb.left, bb.top, bb.right - bb.left, bb.bottom - bb.top];\n  };\n\n  CRp.invalidateContainerClientCoordsCache = function(){\n    this.containerBB = null;\n  };\n\n  // Find nearest element\n  CRp.findNearestElement = function(x, y, visibleElementsOnly, isTouch){\n    var self = this;\n    var eles = this.getCachedZSortedEles();\n    var near = [];\n    var zoom = this.data.cy.zoom();\n    var hasCompounds = this.data.cy.hasCompoundNodes();\n    var edgeThreshold = (isTouch ? 24 : 8) / zoom;\n    var nodeThreshold = (isTouch ? 8 : 2) / zoom;\n\n    function checkNode(node){\n      var width = node.outerWidth() + 2*nodeThreshold;\n      var height = node.outerHeight() + 2*nodeThreshold;\n      var hw = width/2;\n      var hh = height/2;\n      var pos = node._private.position;\n\n      if(\n        pos.x - hw <= x && x <= pos.x + hw // bb check x\n          &&\n        pos.y - hh <= y && y <= pos.y + hh // bb check y\n      ){\n        var visible = !visibleElementsOnly || ( node.visible() && !node.transparent() );\n\n        // exit early if invisible edge and must be visible\n        if( visibleElementsOnly && !visible ){\n          return;\n        }\n\n        var shape = CanvasRenderer.nodeShapes[ self.getNodeShape(node) ];\n        var borderWO = node._private.style['border-width'].pxValue / 2;\n\n        if(\n          shape.checkPoint(x, y, 0, width, height, pos.x, pos.y)\n        ){\n          near.push( node );\n        }\n\n      }\n    }\n\n    function checkEdge(edge){\n      var rs = edge._private.rscratch;\n      var style = edge._private.style;\n      var width = style['width'].pxValue/2 + edgeThreshold; // more like a distance radius from centre\n      var widthSq = width * width;\n      var width2 = width * 2;\n      var src = edge._private.source;\n      var tgt = edge._private.target;\n      var inEdgeBB = false;\n      var sqDist;\n\n      // exit early if invisible edge and must be visible\n      var passedVisibilityCheck;\n      var passesVisibilityCheck = function(){\n        if( passedVisibilityCheck !== undefined ){\n          return passedVisibilityCheck;\n        }\n\n        if( !visibleElementsOnly ){\n          passedVisibilityCheck = true;\n          return true;\n        }\n\n        var visible = edge.visible() && !edge.transparent();\n        if( visible ){\n          passedVisibilityCheck = true;\n          return true;\n        }\n\n        passedVisibilityCheck = false;\n        return false;\n      };\n\n      if (rs.edgeType === 'self' || rs.edgeType === 'compound') {\n        if(\n            (\n              (inEdgeBB = $$.math.inBezierVicinity(x, y, rs.startX, rs.startY, rs.cp2ax, rs.cp2ay, rs.selfEdgeMidX, rs.selfEdgeMidY, widthSq))\n                && passesVisibilityCheck() &&\n              ( widthSq > (sqDist = $$.math.sqDistanceToQuadraticBezier(x, y, rs.startX, rs.startY, rs.cp2ax, rs.cp2ay, rs.selfEdgeMidX, rs.selfEdgeMidY)) )\n            )\n              ||\n            (\n              (inEdgeBB = $$.math.inBezierVicinity(x, y, rs.selfEdgeMidX, rs.selfEdgeMidY, rs.cp2cx, rs.cp2cy, rs.endX, rs.endY, widthSq))\n                && passesVisibilityCheck() &&\n              ( widthSq > (sqDist = $$.math.sqDistanceToQuadraticBezier(x, y, rs.selfEdgeMidX, rs.selfEdgeMidY, rs.cp2cx, rs.cp2cy, rs.endX, rs.endY)) )\n            )\n        ){\n          near.push( edge );\n        }\n      \n      } else if (rs.edgeType === 'haystack') {\n        var radius = style['haystack-radius'].value;\n        var halfRadius = radius/2; // b/c have to half width/height\n\n        var tgtPos = tgt._private.position;\n        var tgtW = tgt.width();\n        var tgtH = tgt.height();\n        var srcPos = src._private.position;\n        var srcW = src.width();\n        var srcH = src.height();\n\n        var startX = srcPos.x + rs.source.x * srcW * halfRadius;\n        var startY = srcPos.y + rs.source.y * srcH * halfRadius;\n        var endX = tgtPos.x + rs.target.x * tgtW * halfRadius;\n        var endY = tgtPos.y + rs.target.y * tgtH * halfRadius;\n\n        if( \n          (inEdgeBB = $$.math.inLineVicinity(x, y, startX, startY, endX, endY, width2))\n            && passesVisibilityCheck() &&\n          widthSq > ( sqDist = $$.math.sqDistanceToFiniteLine( x, y, startX, startY, endX, endY ) )\n        ){\n          near.push( edge );\n        }\n      \n      } else if (rs.edgeType === 'straight') {\n        if(\n          (inEdgeBB = $$.math.inLineVicinity(x, y, rs.startX, rs.startY, rs.endX, rs.endY, width2))\n            && passesVisibilityCheck() &&\n          widthSq > ( sqDist = $$.math.sqDistanceToFiniteLine(x, y, rs.startX, rs.startY, rs.endX, rs.endY) )\n        ){\n          near.push( edge );\n        }\n      \n      } else if (rs.edgeType === 'bezier') {\n        if(\n          (inEdgeBB = $$.math.inBezierVicinity(x, y, rs.startX, rs.startY, rs.cp2x, rs.cp2y, rs.endX, rs.endY, widthSq))\n            && passesVisibilityCheck() &&\n          (widthSq > (sqDist = $$.math.sqDistanceToQuadraticBezier(x, y, rs.startX, rs.startY, rs.cp2x, rs.cp2y, rs.endX, rs.endY)) )\n        ){\n          near.push( edge );\n        }\n      }\n      \n      // if we're close to the edge but didn't hit it, maybe we hit its arrows\n      if( inEdgeBB && passesVisibilityCheck() && near.length === 0 || near[near.length - 1] !== edge ){\n        var srcShape = CanvasRenderer.arrowShapes[ style['source-arrow-shape'].value ];\n        var tgtShape = CanvasRenderer.arrowShapes[ style['target-arrow-shape'].value ];\n\n        var src = src || edge._private.source;\n        var tgt = tgt || edge._private.target;\n\n        var tgtPos = tgt._private.position;\n        var srcPos = src._private.position;\n\n        var srcArW = self.getArrowWidth( style['width'].pxValue );\n        var srcArH = self.getArrowHeight( style['width'].pxValue );\n\n        var tgtArW = srcArW;\n        var tgtArH = srcArH;\n\n        if(\n          (\n            srcShape.roughCollide(x, y, rs.arrowStartX, rs.arrowStartY, srcArW, srcArH, [rs.arrowStartX - srcPos.x, rs.arrowStartY - srcPos.y], edgeThreshold)\n              && \n            srcShape.collide(x, y, rs.arrowStartX, rs.arrowStartY, srcArW, srcArH, [rs.arrowStartX - srcPos.x, rs.arrowStartY - srcPos.y], edgeThreshold)\n          )\n            ||\n          (\n            tgtShape.roughCollide(x, y, rs.arrowEndX, rs.arrowEndY, tgtArW, tgtArH, [rs.arrowEndX - tgtPos.x, rs.arrowEndY - tgtPos.y], edgeThreshold)\n              &&\n            tgtShape.collide(x, y, rs.arrowEndX, rs.arrowEndY, tgtArW, tgtArH, [rs.arrowEndX - tgtPos.x, rs.arrowEndY - tgtPos.y], edgeThreshold)\n          )\n        ){\n          near.push( edge );\n        }\n      }\n\n      // for compound graphs, hitting edge may actually want a connected node instead (b/c edge may have greater z-index precedence)\n      if( hasCompounds &&  near.length > 0 && near[ near.length - 1 ] === edge ){\n        checkNode( src );\n        checkNode( tgt );\n      }\n    }\n\n    for( var i = eles.length - 1; i >= 0; i-- ){ // reverse order for precedence\n      var ele = eles[i];\n\n      if( near.length > 0 ){ break; } // since we check in z-order, first found is top and best result => exit early\n\n      if( ele._private.group === 'nodes' ){ \n        checkNode( eles[i] );\n\n      } else  { // then edge\n        checkEdge( eles[i] );\n      }\n\n    }\n  \n    \n    if( near.length > 0 ){\n      return near[ near.length - 1 ];\n    } else {\n      return null;\n    }\n  }; \n\n  // 'Give me everything from this box'\n  CRp.getAllInBox = function(x1, y1, x2, y2) {\n    var nodes = this.getCachedNodes();\n    var edges = this.getCachedEdges();\n    var box = [];\n    \n    var x1c = Math.min(x1, x2);\n    var x2c = Math.max(x1, x2);\n    var y1c = Math.min(y1, y2);\n    var y2c = Math.max(y1, y2); \n\n    x1 = x1c; \n    x2 = x2c; \n    y1 = y1c; \n    y2 = y2c; \n\n    var heur;\n    \n    for ( var i = 0; i < nodes.length; i++ ){\n      var pos = nodes[i]._private.position;\n      var nShape = this.getNodeShape(nodes[i]);\n      var w = this.getNodeWidth(nodes[i]);\n      var h = this.getNodeHeight(nodes[i]);\n      var border = nodes[i]._private.style['border-width'].pxValue / 2;\n      var shapeObj = CanvasRenderer.nodeShapes[ nShape ];\n\n      if ( shapeObj.intersectBox(x1, y1, x2, y2, w, h, pos.x, pos.y, border) ){\n        box.push(nodes[i]);\n      }\n    }\n    \n    for ( var i = 0; i < edges.length; i++ ){\n      var rs = edges[i]._private.rscratch;\n\n      if (edges[i]._private.rscratch.edgeType == 'self') {\n        if ((heur = $$.math.boxInBezierVicinity(x1, y1, x2, y2,\n            rs.startX, rs.startY,\n            rs.cp2ax, rs.cp2ay,\n            rs.endX, rs.endY, edges[i]._private.style['width'].pxValue))\n              &&\n            (heur == 2 || (heur == 1 && $$.math.checkBezierInBox(x1, y1, x2, y2,\n              rs.startX, rs.startY,\n              rs.cp2ax, rs.cp2ay,\n              rs.endX, rs.endY, edges[i]._private.style['width'].pxValue)))\n                ||\n          (heur = $$.math.boxInBezierVicinity(x1, y1, x2, y2,\n            rs.startX, rs.startY,\n            rs.cp2cx, rs.cp2cy,\n            rs.endX, rs.endY, edges[i]._private.style['width'].pxValue))\n              &&\n            (heur == 2 || (heur == 1 && $$.math.checkBezierInBox(x1, y1, x2, y2,\n              rs.startX, rs.startY,\n              rs.cp2cx, rs.cp2cy,\n              rs.endX, rs.endY, edges[i]._private.style['width'].pxValue)))\n          )\n        { box.push(edges[i]); }\n      }\n      \n      if (rs.edgeType == 'bezier' &&\n        (heur = $$.math.boxInBezierVicinity(x1, y1, x2, y2,\n            rs.startX, rs.startY,\n            rs.cp2x, rs.cp2y,\n            rs.endX, rs.endY, edges[i]._private.style['width'].pxValue))\n              &&\n            (heur == 2 || (heur == 1 && $$.math.checkBezierInBox(x1, y1, x2, y2,\n              rs.startX, rs.startY,\n              rs.cp2x, rs.cp2y,\n              rs.endX, rs.endY, edges[i]._private.style['width'].pxValue))))\n        { box.push(edges[i]); }\n    \n      if (rs.edgeType == 'straight' &&\n        (heur = $$.math.boxInBezierVicinity(x1, y1, x2, y2,\n            rs.startX, rs.startY,\n            rs.startX * 0.5 + rs.endX * 0.5, \n            rs.startY * 0.5 + rs.endY * 0.5, \n            rs.endX, rs.endY, edges[i]._private.style['width'].pxValue))\n              && /* console.log('test', heur) == undefined && */\n            (heur == 2 || (heur == 1 && $$.math.checkStraightEdgeInBox(x1, y1, x2, y2,\n              rs.startX, rs.startY,\n              rs.endX, rs.endY, edges[i]._private.style['width'].pxValue))))\n        { box.push(edges[i]); }\n\n\n      if (rs.edgeType == 'haystack'){\n        var tgt = edges[i].target()[0];\n        var tgtPos = tgt.position();\n        var src = edges[i].source()[0];\n        var srcPos = src.position();\n\n        var startX = srcPos.x + rs.source.x;\n        var startY = srcPos.y + rs.source.y;\n        var endX = tgtPos.x + rs.target.x;\n        var endY = tgtPos.y + rs.target.y;\n\n        var startInBox = (x1 <= startX && startX <= x2) && (y1 <= startY && startY <= y2);\n        var endInBox = (x1 <= endX && endX <= x2) && (y1 <= endY && endY <= y2);\n\n        if( startInBox && endInBox ){\n          box.push( edges[i] );\n        }\n      }\n      \n    }\n    \n    return box;\n  };\n\n\n  /**\n   * Returns the width of the given node. If the width is set to auto,\n   * returns the value of the autoWidth field.\n   *\n   * @param node          a node\n   * @return {number}     width of the node\n   */\n  CRp.getNodeWidth = function(node)\n  {\n    return node.width();\n  };\n\n  /**\n   * Returns the height of the given node. If the height is set to auto,\n   * returns the value of the autoHeight field.\n   *\n   * @param node          a node\n   * @return {number}     width of the node\n   */\n  CRp.getNodeHeight = function(node)\n  {\n    return node.height();\n  };\n\n  /**\n   * Returns the shape of the given node. If the height or width of the given node\n   * is set to auto, the node is considered to be a compound.\n   *\n   * @param node          a node\n   * @return {String}     shape of the node\n   */\n  CRp.getNodeShape = function(node)\n  {\n    // TODO only allow rectangle for a compound node?\n//    if (node._private.style['width'].value == 'auto' ||\n//        node._private.style['height'].value == 'auto')\n//    {\n//      return 'rectangle';\n//    }\n\n    var shape = node._private.style['shape'].value;\n\n    if( node.isParent() ){\n      if( shape === 'rectangle' || shape === 'roundrectangle' ){\n        return shape;\n      } else {\n        return 'rectangle';\n      }\n    }\n\n    return shape;\n  };\n\n\n  CRp.getNodePadding = function(node)\n  {\n    var left = node._private.style['padding-left'].pxValue;\n    var right = node._private.style['padding-right'].pxValue;\n    var top = node._private.style['padding-top'].pxValue;\n    var bottom = node._private.style['padding-bottom'].pxValue;\n\n    if (isNaN(left))\n    {\n      left = 0;\n    }\n\n    if (isNaN(right))\n    {\n      right = 0;\n    }\n\n    if (isNaN(top))\n    {\n      top = 0;\n    }\n\n    if (isNaN(bottom))\n    {\n      bottom = 0;\n    }\n\n    return {left : left,\n      right : right,\n      top : top,\n      bottom : bottom};\n  };\n\n  CRp.zOrderSort = $$.Collection.zIndexSort;\n\n  CRp.updateCachedZSortedEles = function(){\n    this.getCachedZSortedEles( true );\n  };\n\n  CRp.getCachedZSortedEles = function( forceRecalc ){\n    var lastNodes = this.lastZOrderCachedNodes;\n    var lastEdges = this.lastZOrderCachedEdges;\n    var nodes = this.getCachedNodes();\n    var edges = this.getCachedEdges();\n    var eles = [];\n\n    if( forceRecalc || !lastNodes || !lastEdges || lastNodes !== nodes || lastEdges !== edges ){ \n      //console.time('cachezorder')\n      \n      for( var i = 0; i < nodes.length; i++ ){\n        if( nodes[i].visible() && !nodes[i].transparent() ){\n          eles.push( nodes[i] );\n        }\n      }\n\n      for( var i = 0; i < edges.length; i++ ){\n        if( edges[i].visible() && !edges[i].transparent() ){\n          eles.push( edges[i] );\n        }\n      }\n\n      eles.sort( this.zOrderSort );\n      this.cachedZSortedEles = eles;\n      //console.log('make cache')\n\n      //console.timeEnd('cachezorder')\n    } else {\n      eles = this.cachedZSortedEles;\n      //console.log('read cache')\n    }\n\n    this.lastZOrderCachedNodes = nodes;\n    this.lastZOrderCachedEdges = edges;\n\n    return eles;\n  };\n\n  CRp.projectBezier = function(edge){\n    var qbezierAt = $$.math.qbezierAt;\n    var rs = edge._private.rscratch;\n    var bpts = edge._private.rstyle.bezierPts = [];\n\n    function pushBezierPts(pts){\n      bpts.push({\n        x: qbezierAt( pts[0], pts[2], pts[4], 0.05 ),\n        y: qbezierAt( pts[1], pts[3], pts[5], 0.05 )\n      });\n\n      bpts.push({\n        x: qbezierAt( pts[0], pts[2], pts[4], 0.25 ),\n        y: qbezierAt( pts[1], pts[3], pts[5], 0.25 )\n      });\n\n      bpts.push({\n        x: qbezierAt( pts[0], pts[2], pts[4], 0.4 ),\n        y: qbezierAt( pts[1], pts[3], pts[5], 0.4 )\n      });\n\n      var mid = {\n        x: qbezierAt( pts[0], pts[2], pts[4], 0.5 ),\n        y: qbezierAt( pts[1], pts[3], pts[5], 0.5 )\n      };\n\n      bpts.push( mid );\n\n      if( rs.edgeType === 'self' || rs.edgeType === 'compound' ){\n        rs.midX = rs.selfEdgeMidX;\n        rs.midY = rs.selfEdgeMidY;\n      } else {\n        rs.midX = mid.x;\n        rs.midY = mid.y;\n      }\n\n      bpts.push({\n        x: qbezierAt( pts[0], pts[2], pts[4], 0.6 ),\n        y: qbezierAt( pts[1], pts[3], pts[5], 0.6 )\n      });\n\n      bpts.push({\n        x: qbezierAt( pts[0], pts[2], pts[4], 0.75 ),\n        y: qbezierAt( pts[1], pts[3], pts[5], 0.75 )\n      });\n\n      bpts.push({\n        x: qbezierAt( pts[0], pts[2], pts[4], 0.95 ),\n        y: qbezierAt( pts[1], pts[3], pts[5], 0.95 )\n      });\n    }\n\n    if( rs.edgeType === 'self' ){\n      pushBezierPts( [rs.startX, rs.startY, rs.cp2ax, rs.cp2ay, rs.selfEdgeMidX, rs.selfEdgeMidY] );\n      pushBezierPts( [rs.selfEdgeMidX, rs.selfEdgeMidY, rs.cp2cx, rs.cp2cy, rs.endX, rs.endY] );\n    } else if( rs.edgeType === 'bezier' ){\n      pushBezierPts( [rs.startX, rs.startY, rs.cp2x, rs.cp2y, rs.endX, rs.endY] );\n    }\n  };\n\n  CRp.recalculateNodeLabelProjection = function( node ){ \n    var content = node._private.style['content'].strValue;\n    if( !content || content.match(/^\\s+$/) ){ return; }\n\n    var textX, textY;\n    var nodeWidth = node.outerWidth();\n    var nodeHeight = node.outerHeight();\n    var nodePos = node._private.position;\n    var textHalign = node._private.style['text-halign'].strValue;\n    var textValign = node._private.style['text-valign'].strValue;\n    var rs = node._private.rscratch;\n    var rstyle = node._private.rstyle;\n\n    switch( textHalign ){\n      case 'left':\n        textX = nodePos.x - nodeWidth / 2;\n        break;\n\n      case 'right':\n        textX = nodePos.x + nodeWidth / 2;\n        break;\n\n      default: // e.g. center\n        textX = nodePos.x;\n    }\n\n    switch( textValign ){\n      case 'top':\n        textY = nodePos.y - nodeHeight / 2;\n        break;\n\n      case 'bottom':\n        textY = nodePos.y + nodeHeight / 2;\n        break;\n\n      default: // e.g. middle\n        textY = nodePos.y;\n    }\n  \n    rs.labelX = textX;\n    rs.labelY = textY;\n    rstyle.labelX = textX;\n    rstyle.labelY = textY;\n\n    this.applyLabelDimensions( node );\n  };\n\n  CRp.recalculateEdgeLabelProjection = function( edge ){\n    var content = edge._private.style['content'].strValue;\n    if( !content || content.match(/^\\s+$/) ){ return; }\n\n    var textX, textY;  \n    var edgeCenterX, edgeCenterY;\n    var _p = edge._private;\n    var rs = _p.rscratch;\n    //var style = _p.style;\n    var rstyle = _p.rstyle;\n    \n    if (rs.edgeType == 'self') {\n      edgeCenterX = rs.selfEdgeMidX;\n      edgeCenterY = rs.selfEdgeMidY;\n    } else if (rs.edgeType == 'straight') {\n      edgeCenterX = (rs.startX + rs.endX) / 2;\n      edgeCenterY = (rs.startY + rs.endY) / 2;\n    } else if (rs.edgeType == 'bezier') {\n      edgeCenterX = $$.math.qbezierAt( rs.startX, rs.cp2x, rs.endX, 0.5 );\n      edgeCenterY = $$.math.qbezierAt( rs.startY, rs.cp2y, rs.endY, 0.5 );\n    } else if (rs.edgeType == 'haystack') {\n      // var src = _p.source;\n      // var tgt = _p.target;\n      // var srcPos = src._private.position;\n      // var tgtPos = tgt._private.position;\n      var pts = rs.haystackPts;\n\n      edgeCenterX = ( pts[0] + pts[2] )/2;\n      edgeCenterY = ( pts[1] + pts[3] )/2;\n    }\n    \n    textX = edgeCenterX;\n    textY = edgeCenterY;\n\n    // add center point to style so bounding box calculations can use it\n    rs.labelX = textX;\n    rs.labelY = textY;\n    rstyle.labelX = textX;\n    rstyle.labelY = textY;\n\n    this.applyLabelDimensions( edge );\n  };\n\n  CRp.applyLabelDimensions = function( ele ){\n    var rs = ele._private.rscratch;\n    var rstyle = ele._private.rstyle;\n\n    var text = this.getLabelText( ele );\n    var labelDims = this.calculateLabelDimensions( ele, text );\n \n    rstyle.labelWidth = labelDims.width;\n    rs.labelWidth = labelDims.width;\n \n    rstyle.labelHeight = labelDims.height;\n    rs.labelHeight = labelDims.height;\n  };\n\n  CRp.getLabelText = function( ele ){ \n    var style = ele._private.style;\n    var text = ele._private.style['content'].strValue;\n    var textTransform = style['text-transform'].value;\n    var rscratch = ele._private.rscratch;\n    \n    if (textTransform == 'none') {\n    } else if (textTransform == 'uppercase') {\n      text = text.toUpperCase();\n    } else if (textTransform == 'lowercase') {\n      text = text.toLowerCase();\n    }\n\n    if( style['text-wrap'].value === 'wrap' ){\n      //console.log('wrap'); \n      \n      // save recalc if the label is the same as before\n      if( rscratch.labelWrapKey === rscratch.labelKey ){ \n        // console.log('wrap cache hit');\n        return rscratch.labelWrapCachedText;\n      }\n      // console.log('wrap cache miss');\n\n      var lines = text.split('\\n');\n      var maxW = style['text-max-width'].pxValue;\n      var wrappedLines = [];\n\n      for( var l = 0; l < lines.length; l++ ){\n        var line = lines[l];\n        var lineDims = this.calculateLabelDimensions( ele, line, 'line=' + line );\n        var lineW = lineDims.width;\n\n        if( lineW > maxW ){ // line is too long\n          var words = line.split(/\\s+/); // NB: assume collapsed whitespace into single space\n          var subline = '';\n\n          for( var w = 0; w < words.length; w++ ){\n            var word = words[w];\n            var testLine = subline.length === 0 ? word : subline + ' ' + word;\n            var testDims = this.calculateLabelDimensions( ele, testLine, 'testLine=' + testLine );\n            var testW = testDims.width;\n\n            if( testW <= maxW ){ // word fits on current line\n              subline += word + ' ';\n            } else { // word starts new line\n              wrappedLines.push( subline );\n              subline = word + ' ';\n            }\n          }\n\n          // if there's remaining text, put it in a wrapped line\n          if( !subline.match(/^\\s+$/) ){\n            wrappedLines.push( subline );\n          }\n        } else { // line is already short enough\n          wrappedLines.push( line );\n        }\n      } // for\n\n      rscratch.labelWrapCachedLines = wrappedLines;\n      rscratch.labelWrapCachedText = text = wrappedLines.join('\\n');\n      rscratch.labelWrapKey = rscratch.labelKey;\n\n      // console.log(text)\n    } // if wrap\n\n    return text;\n  };\n\n  CRp.calculateLabelDimensions = function( ele, text, extraKey ){\n    var r = this;\n    var style = ele._private.style;\n    var fStyle = style['font-style'].strValue;\n    var size = style['font-size'].pxValue + 'px';\n    var family = style['font-family'].strValue;\n    // var variant = style['font-variant'].strValue;\n    var weight = style['font-weight'].strValue;\n\n    var cacheKey = ele._private.labelKey;\n\n    if( extraKey ){\n      cacheKey += '$@$' + extraKey;\n    }\n\n    var cache = r.labelDimCache || (r.labelDimCache = {});\n\n    if( cache[cacheKey] ){\n      return cache[cacheKey];\n    }\n\n    var div = this.labelCalcDiv;\n\n    if( !div ){\n      div = this.labelCalcDiv = document.createElement('div');\n      document.body.appendChild( div );\n    }\n\n    var ds = div.style;\n\n    // from ele style\n    ds.fontFamily = family;\n    ds.fontStyle = fStyle;\n    ds.fontSize = size;\n    // ds.fontVariant = variant;\n    ds.fontWeight = weight;\n\n    // forced style\n    ds.position = 'absolute';\n    ds.left = '-9999px';\n    ds.top = '-9999px';\n    ds.zIndex = '-1';\n    ds.visibility = 'hidden';\n    ds.pointerEvents = 'none';\n    ds.padding = '0';\n    ds.lineHeight = '1';\n\n    if( style['text-wrap'].value === 'wrap' ){\n      ds.whiteSpace = 'pre'; // so newlines are taken into account\n    } else {\n      ds.whiteSpace = 'normal';\n    }\n\n    // put label content in div\n    div.textContent = text;\n\n    cache[cacheKey] = {\n      width: div.clientWidth,\n      height: div.clientHeight\n    };\n\n    return cache[cacheKey];\n  };  \n\n  CRp.recalculateRenderedStyle = function( eles ){\n    var edges = [];\n    var nodes = [];\n    var handledEdge = {};\n\n    for( var i = 0; i < eles.length; i++ ){\n      var ele = eles[i];\n      var _p = ele._private;\n      var style = _p.style;\n      var rs = _p.rscratch;\n      var rstyle = _p.rstyle;\n      var id = _p.data.id;\n      var bbStyleSame = rs.boundingBoxKey != null && _p.boundingBoxKey === rs.boundingBoxKey;\n      var labelStyleSame = rs.labelKey != null && _p.labelKey === rs.labelKey;\n      var styleSame = bbStyleSame && labelStyleSame;\n\n      if( ele._private.group === 'nodes' ){\n        var pos = _p.position;\n        var posSame = rstyle.nodeX != null && rstyle.nodeY != null && pos.x === rstyle.nodeX && pos.y === rstyle.nodeY;\n        var wSame = rstyle.nodeW != null && rstyle.nodeW === style['width'].pxValue;\n        var hSame = rstyle.nodeH != null && rstyle.nodeH === style['height'].pxValue;\n\n        if( !posSame || !styleSame || !wSame || !hSame ){\n          nodes.push( ele );\n        }\n\n        rstyle.nodeX = pos.x;\n        rstyle.nodeY = pos.y;\n        rstyle.nodeW = style['width'].pxValue;\n        rstyle.nodeH = style['height'].pxValue;\n      } else { // edges\n\n        var srcPos = ele._private.source._private.position;\n        var tgtPos = ele._private.target._private.position;\n        var srcSame = rstyle.srcX != null && rstyle.srcY != null && srcPos.x === rstyle.srcX && srcPos.y === rstyle.srcY;\n        var tgtSame = rstyle.tgtX != null && rstyle.tgtY != null && tgtPos.x === rstyle.tgtX && tgtPos.y === rstyle.tgtY;\n        var positionsSame = srcSame && tgtSame;\n\n        if( !positionsSame || !styleSame ){\n          var curveType = _p.style['curve-style'].value;\n\n          if( curveType === 'bezier' ){\n            if( !handledEdge[ id ] ){\n              edges.push( ele );\n              handledEdge[ id ] = true;\n\n              var parallelEdges = ele.parallelEdges();\n              for( var i = 0; i < parallelEdges.length; i++ ){\n                var pEdge = parallelEdges[i];\n                var pId = pEdge._private.data.id;\n\n                if( !handledEdge[ pId ] ){\n                  edges.push( pEdge );\n                  handledEdge[ pId ] = true;\n                }\n                \n              }\n            }\n          } else {\n            edges.push( ele );\n          }\n        } // if positions diff\n\n        // update rstyle positions\n        rstyle.srcX = srcPos.x;\n        rstyle.srcY = srcPos.y;\n        rstyle.tgtX = tgtPos.x;\n        rstyle.tgtY = tgtPos.y;\n\n      } // if edges\n\n      rs.boundingBoxKey = _p.boundingBoxKey;\n      rs.labelKey = _p.labelKey;\n    }\n\n    this.recalculateEdgeProjections( edges );\n    this.recalculateLabelProjections( nodes, edges );\n  };\n\n  CRp.recalculateLabelProjections = function( nodes, edges ){\n    for( var i = 0; i < nodes.length; i++ ){\n      this.recalculateNodeLabelProjection( nodes[i] );\n    }\n\n    for( var i = 0; i < edges.length; i++ ){\n      this.recalculateEdgeLabelProjection( edges[i] );\n    }\n  };\n\n  CRp.recalculateEdgeProjections = function( edges ){\n    this.findEdgeControlPoints( edges );\n  };\n\n\n  // Find edge control points\n  CRp.findEdgeControlPoints = function(edges) {\n    if( !edges || edges.length === 0 ){ return; }\n\n    var cy = this.data.cy;\n    var hasCompounds = cy.hasCompoundNodes();\n    var hashTable = {};\n    var pairIds = [];\n    var haystackEdges = [];\n\n    // create a table of edge (src, tgt) => list of edges between them\n    var pairId;\n    for (var i = 0; i < edges.length; i++){\n      var edge = edges[i];\n      var style = edge._private.style;\n      var edgeIsUnbundled = style['curve-style'].value === 'unbundled-bezier';\n\n      // ignore edges who are not to be displayed\n      // they shouldn't take up space\n      if( style.display.value === 'none' ){\n        continue;\n      }\n\n      if( style['curve-style'].value === 'haystack' ){\n        haystackEdges.push( edge );\n        continue;\n      }\n\n      var srcId = edge._private.data.source;\n      var tgtId = edge._private.data.target;\n\n      pairId = srcId > tgtId ?\n        tgtId + '-' + srcId :\n        srcId + '-' + tgtId ;\n\n      if( edgeIsUnbundled ){\n        pairId = 'unbundled' + edge._private.data.id;\n      }\n\n      if (hashTable[pairId] == null) {\n        hashTable[pairId] = [];\n        pairIds.push( pairId );\n      }\n      \n      hashTable[pairId].push( edge );\n\n      if( edgeIsUnbundled ){\n        hashTable[pairId].hasUnbundled = true;\n      }\n    }\n\n    var src, tgt, srcPos, tgtPos, srcW, srcH, tgtW, tgtH, srcShape, tgtShape, srcBorder, tgtBorder;\n    var vectorNormInverse;\n    var badBezier;\n    \n    // for each pair (src, tgt), create the ctrl pts\n    // Nested for loop is OK; total number of iterations for both loops = edgeCount  \n    for (var p = 0; p < pairIds.length; p++) {\n      pairId = pairIds[p];\n      var pairEdges = hashTable[pairId];\n    \n      // for each pair id, the edges should be sorted by index\n      pairEdges.sort(function(edge1, edge2){\n        return edge1._private.index - edge2._private.index;\n      });\n\n      src = pairEdges[0]._private.source;\n      tgt = pairEdges[0]._private.target;\n\n      // make sure src/tgt distinction is consistent\n      // (src/tgt in this case are just for ctrlpts and don't actually have to be true src/tgt)\n      if( src._private.data.id > tgt._private.data.id ){\n        var temp = src;\n        src = tgt;\n        tgt = temp;\n      }\n\n      srcPos = src._private.position;\n      tgtPos = tgt._private.position;\n\n      srcW = this.getNodeWidth(src);\n      srcH = this.getNodeHeight(src);\n\n      tgtW = this.getNodeWidth(tgt);\n      tgtH = this.getNodeHeight(tgt);\n\n      srcShape = CanvasRenderer.nodeShapes[ this.getNodeShape(src) ];\n      tgtShape = CanvasRenderer.nodeShapes[ this.getNodeShape(tgt) ];\n\n      srcBorder = src._private.style['border-width'].pxValue;\n      tgtBorder = tgt._private.style['border-width'].pxValue;\n\n      badBezier = false;\n      \n\n      if( (pairEdges.length > 1 && src !== tgt) || pairEdges.hasUnbundled ){\n\n        // pt outside src shape to calc distance/displacement from src to tgt\n        var srcOutside = srcShape.intersectLine(\n          srcPos.x,\n          srcPos.y,\n          srcW,\n          srcH,\n          tgtPos.x,\n          tgtPos.y,\n          srcBorder / 2\n        );\n\n        // pt outside tgt shape to calc distance/displacement from src to tgt\n        var tgtOutside = tgtShape.intersectLine(\n          tgtPos.x,\n          tgtPos.y,\n          tgtW,\n          tgtH,\n          srcPos.x,\n          srcPos.y,\n          tgtBorder / 2\n        );\n\n        var midptSrcPts = {\n          x1: srcOutside[0],\n          x2: tgtOutside[0],\n          y1: srcOutside[1],\n          y2: tgtOutside[1]\n        };\n\n        var dy = ( tgtOutside[1] - srcOutside[1] );\n        var dx = ( tgtOutside[0] - srcOutside[0] );\n        var l = Math.sqrt( dx*dx + dy*dy );\n\n        var vector = {\n          x: dx,\n          y: dy\n        };\n        \n        var vectorNorm = {\n          x: vector.x/l,\n          y: vector.y/l\n        };\n        vectorNormInverse = {\n          x: -vectorNorm.y,\n          y: vectorNorm.x\n        };\n\n        // if src intersection is inside tgt or tgt intersection is inside src, then no ctrl pts to draw\n        if( \n          tgtShape.checkPoint( srcOutside[0], srcOutside[1], tgtBorder/2, tgtW, tgtH, tgtPos.x, tgtPos.y )  ||\n          srcShape.checkPoint( tgtOutside[0], tgtOutside[1], srcBorder/2, srcW, srcH, srcPos.x, srcPos.y ) \n        ){\n          vectorNormInverse = {};\n          badBezier = true;\n        }\n        \n      }\n      \n      var edge;\n      var rs;\n      \n      for (var i = 0; i < pairEdges.length; i++) {\n        edge = pairEdges[i];\n        rs = edge._private.rscratch;\n        \n        var edgeIndex1 = rs.lastEdgeIndex;\n        var edgeIndex2 = i;\n\n        var numEdges1 = rs.lastNumEdges;\n        var numEdges2 = pairEdges.length;\n\n        var eStyle = edge._private.style;\n        var stepSize = eStyle['control-point-step-size'].pxValue;\n        var stepDist = eStyle['control-point-distance'] !== undefined ? eStyle['control-point-distance'].pxValue : undefined;\n        var stepWeight = eStyle['control-point-weight'].value;\n        var edgeIsUnbundled = eStyle['curve-style'].value === 'unbundled-bezier';\n        \n        var swappedDirection = edge._private.source !== src;\n\n        if( swappedDirection && edgeIsUnbundled ){\n          stepDist *= -1;\n        }\n\n        var srcX1 = rs.lastSrcCtlPtX;\n        var srcX2 = srcPos.x;\n        var srcY1 = rs.lastSrcCtlPtY;\n        var srcY2 = srcPos.y;\n        var srcW1 = rs.lastSrcCtlPtW;\n        var srcW2 = src.outerWidth();\n        var srcH1 = rs.lastSrcCtlPtH;\n        var srcH2 = src.outerHeight();\n\n        var tgtX1 = rs.lastTgtCtlPtX;\n        var tgtX2 = tgtPos.x;\n        var tgtY1 = rs.lastTgtCtlPtY;\n        var tgtY2 = tgtPos.y;\n        var tgtW1 = rs.lastTgtCtlPtW;\n        var tgtW2 = tgt.outerWidth();\n        var tgtH1 = rs.lastTgtCtlPtH;\n        var tgtH2 = tgt.outerHeight();\n\n        var width1 = rs.lastW;\n        var width2 = eStyle['control-point-step-size'].pxValue;\n\n        if( badBezier ){\n          rs.badBezier = true;\n        } else {\n          rs.badBezier = false;\n        }\n\n        if( srcX1 === srcX2 && srcY1 === srcY2 && srcW1 === srcW2 && srcH1 === srcH2\n        &&  tgtX1 === tgtX2 && tgtY1 === tgtY2 && tgtW1 === tgtW2 && tgtH1 === tgtH2\n        &&  width1 === width2\n        &&  ((edgeIndex1 === edgeIndex2 && numEdges1 === numEdges2) || edgeIsUnbundled) ){\n          // console.log('edge ctrl pt cache HIT')\n          continue; // then the control points haven't changed and we can skip calculating them\n        } else {\n          rs.lastSrcCtlPtX = srcX2;\n          rs.lastSrcCtlPtY = srcY2;\n          rs.lastSrcCtlPtW = srcW2;\n          rs.lastSrcCtlPtH = srcH2;\n          rs.lastTgtCtlPtX = tgtX2;\n          rs.lastTgtCtlPtY = tgtY2;\n          rs.lastTgtCtlPtW = tgtW2;\n          rs.lastTgtCtlPtH = tgtH2;\n          rs.lastEdgeIndex = edgeIndex2;\n          rs.lastNumEdges = numEdges2;\n          rs.lastWidth = width2;\n          // console.log('edge ctrl pt cache MISS')\n        }\n\n        // Self-edge\n        if ( src === tgt ) {\n            \n          rs.edgeType = 'self';\n          \n          var j = i;\n          var loopDist = stepSize;\n\n          if( edgeIsUnbundled ){\n            j = 0;\n            loopDist = stepDist;\n          }\n\n          // New -- fix for large nodes\n          rs.cp2ax = srcPos.x;\n          rs.cp2ay = srcPos.y - (1 + Math.pow(srcH, 1.12) / 100) * loopDist * (j / 3 + 1);\n          \n          rs.cp2cx = srcPos.x - (1 + Math.pow(srcW, 1.12) / 100) * loopDist * (j / 3 + 1);\n          rs.cp2cy = srcPos.y;\n          \n          rs.selfEdgeMidX = (rs.cp2ax + rs.cp2cx) / 2.0;\n          rs.selfEdgeMidY = (rs.cp2ay + rs.cp2cy) / 2.0;\n        \n        // Compound edge\n        } else if(\n          hasCompounds &&\n          ( src.isParent() || src.isChild() || tgt.isParent() || tgt.isChild() ) &&\n          ( src.parents().anySame(tgt) || tgt.parents().anySame(src) )\n        ){\n\n          rs.edgeType = 'compound';\n\n          // because the line approximation doesn't apply for compound beziers\n          // (loop/self edges are already elided b/c of cheap src==tgt check)\n          rs.badBezier = false;\n\n          var j = i;\n          var loopDist = stepSize;\n\n          if( edgeIsUnbundled ){\n            j = 0;\n            loopDist = stepDist;\n          }\n\n          \n          var loopW = 50;\n\n          var loopaPos = {\n            x: srcPos.x - srcW/2,\n            y: srcPos.y - srcH/2\n          };\n\n          var loopbPos = {\n            x: tgtPos.x - tgtW/2,\n            y: tgtPos.y - tgtH/2\n          };\n\n          var minCompoundStretch = 1;\n\n          rs.cp2ax = loopaPos.x;\n          rs.compoundStretchA = Math.max( minCompoundStretch, Math.log(srcW * 0.01) ); // avoids cases with impossible beziers\n          rs.cp2ay = loopaPos.y - (1 + Math.pow(loopW, 1.12) / 100) * loopDist * (j / 3 + 1) * rs.compoundStretchA;\n          \n          rs.compoundStretchB = Math.max( minCompoundStretch, Math.log(tgtW * 0.01) ); // avoids cases with impossible beziers\n          rs.cp2cx = loopbPos.x - (1 + Math.pow(loopW, 1.12) / 100) * loopDist * (j / 3 + 1) * rs.compoundStretchB;\n          rs.cp2cy = loopbPos.y;\n          \n          rs.selfEdgeMidX = (rs.cp2ax + rs.cp2cx) / 2.0;\n          rs.selfEdgeMidY = (rs.cp2ay + rs.cp2cy) / 2.0;\n\n        // Straight edge\n        } else if (pairEdges.length % 2 === 1\n          && i === Math.floor(pairEdges.length / 2)\n          && !edgeIsUnbundled ) {\n          \n          rs.edgeType = 'straight';\n          \n        // Bezier edge\n        } else {\n          var normStepDist = (0.5 - pairEdges.length / 2 + i) * stepSize;\n          var manStepDist;\n          var sign = $$.math.signum( normStepDist );\n\n          if( edgeIsUnbundled ){\n            manStepDist = stepDist;\n          } else {\n            manStepDist = stepDist !== undefined ? sign * stepDist : undefined; \n          }\n\n          var distanceFromMidpoint = manStepDist !== undefined ? manStepDist : normStepDist;\n          \n          var w1 = (1 - stepWeight);\n          var w2 = stepWeight;\n\n          if( swappedDirection ){\n            w1 = stepWeight;\n            w2 = (1 - stepWeight);\n          }\n\n          var adjustedMidpt = {\n            x: midptSrcPts.x1 * w1 + midptSrcPts.x2 * w2,\n            y: midptSrcPts.y1 * w1 + midptSrcPts.y2 * w2\n          };\n\n          rs.edgeType = 'bezier';\n          \n          rs.cp2x = adjustedMidpt.x + vectorNormInverse.x * distanceFromMidpoint;\n          rs.cp2y = adjustedMidpt.y + vectorNormInverse.y * distanceFromMidpoint;\n          \n          // console.log(edge, midPointX, displacementX, distanceFromMidpoint);\n        }\n\n        // find endpts for edge\n        this.findEndpoints( edge );\n\n        var badStart = !$$.is.number( rs.startX ) || !$$.is.number( rs.startY );\n        var badAStart = !$$.is.number( rs.arrowStartX ) || !$$.is.number( rs.arrowStartY );\n        var badEnd = !$$.is.number( rs.endX ) || !$$.is.number( rs.endY );\n        var badAEnd = !$$.is.number( rs.arrowEndX ) || !$$.is.number( rs.arrowEndY );\n\n        var minCpADistFactor = 3;\n        var arrowW = this.getArrowWidth( edge._private.style['width'].pxValue ) * CanvasRenderer.arrowShapeHeight;\n        var minCpADist = minCpADistFactor * arrowW;\n        var startACpDist = $$.math.distance( { x: rs.cp2x, y: rs.cp2y }, { x: rs.startX, y: rs.startY } );\n        var closeStartACp = startACpDist < minCpADist;\n        var endACpDist = $$.math.distance( { x: rs.cp2x, y: rs.cp2y }, { x: rs.endX, y: rs.endY } );\n        var closeEndACp = endACpDist < minCpADist;\n\n        if( rs.edgeType === 'bezier' ){\n          var overlapping = false;\n\n          if( badStart || badAStart || closeStartACp ){\n            overlapping = true;\n\n            // project control point along line from src centre to outside the src shape\n            // (otherwise intersection will yield nothing)\n            var cpD = { // delta\n              x: rs.cp2x - srcPos.x,\n              y: rs.cp2y - srcPos.y\n            };\n            var cpL = Math.sqrt( cpD.x*cpD.x + cpD.y*cpD.y ); // length of line\n            var cpM = { // normalised delta\n              x: cpD.x / cpL,\n              y: cpD.y / cpL\n            };\n            var radius = Math.max(srcW, srcH);\n            var cpProj = { // *2 radius guarantees outside shape\n              x: rs.cp2x + cpM.x * 2 * radius,\n              y: rs.cp2y + cpM.y * 2 * radius\n            };\n\n            var srcCtrlPtIntn = srcShape.intersectLine(\n              srcPos.x,\n              srcPos.y,\n              srcW,\n              srcH,\n              cpProj.x,\n              cpProj.y,\n              srcBorder / 2\n            );\n\n            if( closeStartACp ){\n              rs.cp2x = rs.cp2x + cpM.x * (minCpADist - startACpDist); \n              rs.cp2y = rs.cp2y + cpM.y * (minCpADist - startACpDist);\n            } else {\n              rs.cp2x = srcCtrlPtIntn[0] + cpM.x * minCpADist; \n              rs.cp2y = srcCtrlPtIntn[1] + cpM.y * minCpADist;\n            }\n          }\n\n          if( badEnd || badAEnd || closeEndACp ){\n            overlapping = true;\n\n            // project control point along line from tgt centre to outside the tgt shape\n            // (otherwise intersection will yield nothing)\n            var cpD = { // delta\n              x: rs.cp2x - tgtPos.x,\n              y: rs.cp2y - tgtPos.y\n            };\n            var cpL = Math.sqrt( cpD.x*cpD.x + cpD.y*cpD.y ); // length of line\n            var cpM = { // normalised delta\n              x: cpD.x / cpL,\n              y: cpD.y / cpL\n            };\n            var radius = Math.max(srcW, srcH);\n            var cpProj = { // *2 radius guarantees outside shape\n              x: rs.cp2x + cpM.x * 2 * radius,\n              y: rs.cp2y + cpM.y * 2 * radius\n            };\n\n            var tgtCtrlPtIntn = tgtShape.intersectLine(\n              tgtPos.x,\n              tgtPos.y,\n              tgtW,\n              tgtH,\n              cpProj.x,\n              cpProj.y,\n              tgtBorder / 2\n            );\n\n            if( closeEndACp ){\n              rs.cp2x = rs.cp2x + cpM.x * (minCpADist - endACpDist); \n              rs.cp2y = rs.cp2y + cpM.y * (minCpADist - endACpDist);\n            } else {\n              rs.cp2x = tgtCtrlPtIntn[0] + cpM.x * minCpADist; \n              rs.cp2y = tgtCtrlPtIntn[1] + cpM.y * minCpADist;\n            }\n            \n          }\n\n          if( overlapping ){\n            // recalc endpts\n            this.findEndpoints( edge );\n          }\n        } else if( rs.edgeType === 'straight' ){\n          rs.midX = ( srcX2 + tgtX2 )/2;\n          rs.midY = ( srcY2 + tgtY2 )/2;\n        }\n\n        // project the edge into rstyle\n        this.projectBezier( edge );\n        this.recalculateEdgeLabelProjection( edge );\n\n      }\n    }\n      \n    for( var i = 0; i < haystackEdges.length; i++ ){\n      var edge = haystackEdges[i];\n      var _p = edge._private;\n      var rscratch = _p.rscratch;\n      var rs = rscratch;\n\n      if( !rscratch.haystack ){\n        var angle = Math.random() * 2 * Math.PI;\n\n        rscratch.source = {\n          x: Math.cos(angle),\n          y: Math.sin(angle)\n        };\n\n        var angle = Math.random() * 2 * Math.PI;\n\n        rscratch.target = {\n          x: Math.cos(angle),\n          y: Math.sin(angle)\n        };\n\n      }\n\n      var src = _p.source;\n      var tgt = _p.target;\n      var srcPos = src._private.position;\n      var tgtPos = tgt._private.position;\n      var srcW = src.width();\n      var tgtW = tgt.width();\n      var srcH = src.height();\n      var tgtH = tgt.height();\n      var radius = style['haystack-radius'].value;\n      var halfRadius = radius/2; // b/c have to half width/height\n\n      rs.haystackPts = [\n        rs.source.x * srcW * halfRadius + srcPos.x,\n        rs.source.y * srcH * halfRadius + srcPos.y,\n        rs.target.x * tgtW * halfRadius + tgtPos.x,\n        rs.target.y * tgtH * halfRadius + tgtPos.y\n      ];\n\n      // always override as haystack in case set to different type previously\n      rscratch.edgeType = 'haystack';\n      rscratch.haystack = true;\n\n      this.recalculateEdgeLabelProjection( edge );\n    }\n\n    return hashTable;\n  };\n\n  CRp.findEndpoints = function(edge) {\n    var intersect;\n\n    var source = edge.source()[0];\n    var target = edge.target()[0];\n    \n    var tgtArShape = edge._private.style['target-arrow-shape'].value;\n    var srcArShape = edge._private.style['source-arrow-shape'].value;\n\n    var tgtBorderW = target._private.style['border-width'].pxValue;\n    var srcBorderW = source._private.style['border-width'].pxValue;\n\n    var rs = edge._private.rscratch;\n    \n    if (rs.edgeType == 'self' || rs.edgeType == 'compound') {\n      \n      var cp = [rs.cp2cx, rs.cp2cy];\n      \n      intersect = CanvasRenderer.nodeShapes[this.getNodeShape(target)].intersectLine(\n        target._private.position.x,\n        target._private.position.y,\n        this.getNodeWidth(target),\n        this.getNodeHeight(target),\n        cp[0],\n        cp[1], \n        tgtBorderW / 2\n      );\n      \n      var arrowEnd = $$.math.shortenIntersection(intersect, cp,\n        CanvasRenderer.arrowShapes[tgtArShape].spacing(edge));\n      var edgeEnd = $$.math.shortenIntersection(intersect, cp,\n        CanvasRenderer.arrowShapes[tgtArShape].gap(edge));\n      \n      rs.endX = edgeEnd[0];\n      rs.endY = edgeEnd[1];\n      \n      rs.arrowEndX = arrowEnd[0];\n      rs.arrowEndY = arrowEnd[1];\n      \n      var cp = [rs.cp2ax, rs.cp2ay];\n\n      intersect = CanvasRenderer.nodeShapes[this.getNodeShape(source)].intersectLine(\n        source._private.position.x,\n        source._private.position.y,\n        this.getNodeWidth(source),\n        this.getNodeHeight(source),\n        cp[0], //halfPointX,\n        cp[1], //halfPointY\n        srcBorderW / 2\n      );\n      \n      var arrowStart = $$.math.shortenIntersection(intersect, cp,\n        CanvasRenderer.arrowShapes[srcArShape].spacing(edge));\n      var edgeStart = $$.math.shortenIntersection(intersect, cp,\n        CanvasRenderer.arrowShapes[srcArShape].gap(edge));\n      \n      rs.startX = edgeStart[0];\n      rs.startY = edgeStart[1];\n\n\n      rs.arrowStartX = arrowStart[0];\n      rs.arrowStartY = arrowStart[1];\n      \n    } else if (rs.edgeType == 'straight') {\n    \n      intersect = CanvasRenderer.nodeShapes[this.getNodeShape(target)].intersectLine(\n        target._private.position.x,\n        target._private.position.y,\n        this.getNodeWidth(target),\n        this.getNodeHeight(target),\n        source.position().x,\n        source.position().y,\n        tgtBorderW / 2);\n        \n      if (intersect.length === 0) {\n        rs.noArrowPlacement = true;\n        // return;\n      } else {\n        rs.noArrowPlacement = false;\n      }\n      \n      var arrowEnd = $$.math.shortenIntersection(intersect,\n        [source.position().x, source.position().y],\n        CanvasRenderer.arrowShapes[tgtArShape].spacing(edge));\n      var edgeEnd = $$.math.shortenIntersection(intersect,\n        [source.position().x, source.position().y],\n        CanvasRenderer.arrowShapes[tgtArShape].gap(edge));\n\n      rs.endX = edgeEnd[0];\n      rs.endY = edgeEnd[1];\n      \n      rs.arrowEndX = arrowEnd[0];\n      rs.arrowEndY = arrowEnd[1];\n    \n      intersect = CanvasRenderer.nodeShapes[this.getNodeShape(source)].intersectLine(\n        source._private.position.x,\n        source._private.position.y,\n        this.getNodeWidth(source),\n        this.getNodeHeight(source),\n        target.position().x,\n        target.position().y,\n        srcBorderW / 2);\n      \n      if (intersect.length === 0) {\n        rs.noArrowPlacement = true;\n       // return;\n      } else {\n        rs.noArrowPlacement = false;\n      }\n      \n      /*\n      console.log(\"1: \"\n        + CanvasRenderer.arrowShapes[srcArShape],\n          srcArShape);\n      */\n      var arrowStart = $$.math.shortenIntersection(intersect,\n        [target.position().x, target.position().y],\n        CanvasRenderer.arrowShapes[srcArShape].spacing(edge));\n      var edgeStart = $$.math.shortenIntersection(intersect,\n        [target.position().x, target.position().y],\n        CanvasRenderer.arrowShapes[srcArShape].gap(edge));\n\n      rs.startX = edgeStart[0];\n      rs.startY = edgeStart[1];\n      \n      rs.arrowStartX = arrowStart[0];\n      rs.arrowStartY = arrowStart[1];\n      \n      if( !$$.is.number(rs.startX) || !$$.is.number(rs.startY) || !$$.is.number(rs.endX) || !$$.is.number(rs.endY) ){\n        rs.badLine = true;\n      } else {\n        rs.badLine = false;\n      }\n            \n    } else if (rs.edgeType == 'bezier') {\n      // if( window.badArrow) debugger;\n      var cp = [rs.cp2x, rs.cp2y];\n      \n      intersect = CanvasRenderer.nodeShapes[\n        this.getNodeShape(target)].intersectLine(\n        target._private.position.x,\n        target._private.position.y,\n        this.getNodeWidth(target),\n        this.getNodeHeight(target),\n        cp[0], //halfPointX,\n        cp[1], //halfPointY\n        tgtBorderW / 2\n      );\n      \n      /*\n      console.log(\"2: \"\n        + CanvasRenderer.arrowShapes[srcArShape],\n          srcArShape);\n      */\n      var arrowEnd = $$.math.shortenIntersection(intersect, cp,\n        CanvasRenderer.arrowShapes[tgtArShape].spacing(edge));\n      var edgeEnd = $$.math.shortenIntersection(intersect, cp,\n        CanvasRenderer.arrowShapes[tgtArShape].gap(edge));\n      \n      rs.endX = edgeEnd[0];\n      rs.endY = edgeEnd[1];\n      \n      rs.arrowEndX = arrowEnd[0];\n      rs.arrowEndY = arrowEnd[1];\n      \n      intersect = CanvasRenderer.nodeShapes[\n        this.getNodeShape(source)].intersectLine(\n        source._private.position.x,\n        source._private.position.y,\n        this.getNodeWidth(source),\n        this.getNodeHeight(source),\n        cp[0], //halfPointX,\n        cp[1], //halfPointY\n        srcBorderW / 2\n      );\n      \n      var arrowStart = $$.math.shortenIntersection(\n        intersect, \n        cp,\n        CanvasRenderer.arrowShapes[srcArShape].spacing(edge)\n      );\n      var edgeStart = $$.math.shortenIntersection(\n        intersect, \n        cp,\n        CanvasRenderer.arrowShapes[srcArShape].gap(edge)\n      );\n    \n      rs.startX = edgeStart[0];\n      rs.startY = edgeStart[1];\n      \n      rs.arrowStartX = arrowStart[0];\n      rs.arrowStartY = arrowStart[1];\n      \n      // if( isNaN(rs.startX) || isNaN(rs.startY) ){\n      //   debugger;\n      // }\n\n    } else if (rs.isArcEdge) {\n      return;\n    }\n  };\n\n  // Find adjacent edges\n  CRp.findEdges = function(nodeSet) {\n    \n    var edges = this.getCachedEdges();\n    \n    var hashTable = {};\n    var adjacentEdges = [];\n    \n    for (var i = 0; i < nodeSet.length; i++) {\n      hashTable[nodeSet[i]._private.data.id] = nodeSet[i];\n    }\n    \n    for (var i = 0; i < edges.length; i++) {\n      if (hashTable[edges[i]._private.data.source]\n        || hashTable[edges[i]._private.data.target]) {\n        \n        adjacentEdges.push(edges[i]);\n      }\n    }\n    \n    return adjacentEdges;\n  };\n\n  CRp.getArrowWidth = CRp.getArrowHeight = function(edgeWidth) {\n    var cache = this.arrowWidthCache = this.arrowWidthCache || {};\n\n    var cachedVal = cache[edgeWidth];\n    if( cachedVal ){\n      return cachedVal;\n    }\n\n    cachedVal =  Math.max(Math.pow(edgeWidth * 13.37, 0.9), 29);\n    cache[edgeWidth] = cachedVal;\n\n    return cachedVal;\n  };\n\n\n})( cytoscape );\n\n;(function($$){ 'use strict';\n\n  var CanvasRenderer = $$('renderer', 'canvas');\n  var CRp = CanvasRenderer.prototype;\n\n// Draw edge\n  CRp.drawEdge = function(context, edge, drawOverlayInstead) {\n    var rs = edge._private.rscratch;\n    var usePaths = CanvasRenderer.usePaths();\n\n    // if bezier ctrl pts can not be calculated, then die\n    if( rs.badBezier || ( (rs.edgeType === 'bezier' || rs.edgeType === 'straight') && isNaN(rs.startX)) ){ // extra isNaN() for safari 7.1 b/c it mangles ctrlpt calcs\n      return;\n    }\n\n    var style = edge._private.style;\n    \n    // Edge line width\n    if (style['width'].pxValue <= 0) {\n      return;\n    }\n\n    var overlayPadding = style['overlay-padding'].pxValue;\n    var overlayOpacity = style['overlay-opacity'].value;\n    var overlayColor = style['overlay-color'].value;\n\n    // Edge color & opacity\n    if( drawOverlayInstead ){\n\n      if( overlayOpacity === 0 ){ // exit early if no overlay\n        return;\n      }\n\n      this.strokeStyle(context, overlayColor[0], overlayColor[1], overlayColor[2], overlayOpacity);\n      context.lineCap = 'round';\n\n      if( edge._private.rscratch.edgeType == 'self' && !usePaths ){\n        context.lineCap = 'butt';\n      }\n\n    } else {\n      var lineColor = style['line-color'].value;\n\n      this.strokeStyle(context, lineColor[0], lineColor[1], lineColor[2], style.opacity.value);\n      \n      context.lineCap = 'butt'; \n    }\n    \n    var startNode, endNode, source, target;\n    source = startNode = edge._private.source;\n    target = endNode = edge._private.target;\n\n    // var targetPos = target._private.position;\n    // var targetW = target.width();\n    // var targetH = target.height();\n    // var sourcePos = source._private.position;\n    // var sourceW = source.width();\n    // var sourceH = source.height();\n\n\n    var edgeWidth = style['width'].pxValue + (drawOverlayInstead ? 2 * overlayPadding : 0);\n    var lineStyle = drawOverlayInstead ? 'solid' : style['line-style'].value;\n    context.lineWidth = edgeWidth;\n    \n    var shadowBlur = style['shadow-blur'].pxValue;\n    var shadowOpacity = style['shadow-opacity'].value;\n    var shadowColor = style['shadow-color'].value;\n    var shadowOffsetX = style['shadow-offset-x'].pxValue;\n    var shadowOffsetY = style['shadow-offset-y'].pxValue;\n\n    this.shadowStyle(context,  shadowColor, drawOverlayInstead ? 0 : shadowOpacity, shadowBlur, shadowOffsetX, shadowOffsetY);\n    \n    // if( rs.edgeType !== 'haystack' ){\n    //   this.findEndpoints(edge);\n    // }\n    \n    if( rs.edgeType === 'haystack' ){\n      // var radius = style['haystack-radius'].value;\n      // var halfRadius = radius/2; // b/c have to half width/height\n\n      this.drawStyledEdge(\n        edge, \n        context, \n        rs.haystackPts,\n        lineStyle,\n        edgeWidth\n      );\n    } else if (rs.edgeType === 'self' || rs.edgeType === 'compound') {\n      \n      var details = edge._private.rscratch;\n      var points = [details.startX, details.startY, details.cp2ax,\n        details.cp2ay, details.selfEdgeMidX, details.selfEdgeMidY,\n        details.selfEdgeMidX, details.selfEdgeMidY,\n        details.cp2cx, details.cp2cy, details.endX, details.endY];\n\n      this.drawStyledEdge(edge, context, points, lineStyle, edgeWidth);\n      \n    } else if (rs.edgeType === 'straight') {\n      \n      var nodeDirectionX = endNode._private.position.x - startNode._private.position.x;\n      var nodeDirectionY = endNode._private.position.y - startNode._private.position.y;\n      \n      var edgeDirectionX = rs.endX - rs.startX;\n      var edgeDirectionY = rs.endY - rs.startY;\n      \n      if (nodeDirectionX * edgeDirectionX\n        + nodeDirectionY * edgeDirectionY < 0) {\n        \n        rs.straightEdgeTooShort = true;  \n      } else {\n        \n        var details = rs;\n        this.drawStyledEdge(edge, context, [details.startX, details.startY,\n                                      details.endX, details.endY],\n                                      lineStyle,\n                                      edgeWidth);\n        \n        rs.straightEdgeTooShort = false;  \n      }  \n    } else {\n      \n      var details = rs;\n      \n      this.drawStyledEdge(edge, context, [details.startX, details.startY,\n        details.cp2x, details.cp2y, details.endX, details.endY],\n        lineStyle,\n        edgeWidth);\n      \n    }\n    \n    if( rs.edgeType === 'haystack' ){\n      this.drawArrowheads(context, edge, drawOverlayInstead);\n    } else if ( rs.noArrowPlacement !== true && rs.startX !== undefined ){\n      this.drawArrowheads(context, edge, drawOverlayInstead);\n    }\n\n    this.shadowStyle(context, 'transparent', 0); // reset for next guy\n\n  };\n  \n  \n  CRp.drawStyledEdge = function(\n      edge, context, pts, type, width) {\n\n    // 3 points given -> assume Bezier\n    // 2 -> assume straight\n    \n    var rs = edge._private.rscratch;\n    var canvasCxt = context;\n    var path;\n    var pathCacheHit = false;\n    var usePaths = CanvasRenderer.usePaths();\n\n\n    if( usePaths ){\n\n      var pathCacheKey = pts;\n      var keyLengthMatches = rs.pathCacheKey && pathCacheKey.length === rs.pathCacheKey.length;\n      var keyMatches = keyLengthMatches;\n\n      for( var i = 0; keyMatches && i < pathCacheKey.length; i++ ){\n        if( rs.pathCacheKey[i] !== pathCacheKey[i] ){\n          keyMatches = false;\n        }\n      }\n\n      if( keyMatches ){\n        path = context = rs.pathCache;\n        pathCacheHit = true;\n      } else {\n        path = context = new Path2D();\n        rs.pathCacheKey = pathCacheKey;\n        rs.pathCache = path;\n      }\n\n    }\n\n    if( canvasCxt.setLineDash ){ // for very outofdate browsers\n      switch( type ){\n        case 'dotted':\n          canvasCxt.setLineDash([ 1, 1 ]);\n          break;\n\n        case 'dashed':\n          canvasCxt.setLineDash([ 6, 3 ]);\n          break;\n\n        case 'solid':\n          canvasCxt.setLineDash([ ]);\n          break;\n      }\n    }\n\n    if( !pathCacheHit ){\n      if( context.beginPath ){ context.beginPath(); }\n      context.moveTo(pts[0], pts[1]);\n      \n      if( pts.length === 6 && !rs.badBezier ){ // bezier\n        context.quadraticCurveTo(pts[2], pts[3], pts[4], pts[5]);\n      } else if( pts.length === 12 && !rs.badBezier ){ // double bezier loop\n        context.quadraticCurveTo(pts[2], pts[3], pts[4], pts[5]);\n        context.quadraticCurveTo(pts[8], pts[9], pts[10], pts[11]);\n      } else if( pts.length === 4 && !rs.badLine ){ // line\n        context.lineTo(pts[2], pts[3]);\n      }\n    }\n\n    context = canvasCxt;\n    if( usePaths ){\n      context.stroke( path );\n    } else {\n      context.stroke();\n    }\n  \n    // reset any line dashes\n    if( context.setLineDash ){ // for very outofdate browsers\n      context.setLineDash([ ]);\n    }\n\n  };\n\n  CRp.drawArrowheads = function(context, edge, drawOverlayInstead) {\n    if( drawOverlayInstead ){ return; } // don't do anything for overlays \n\n    var rs = edge._private.rscratch;\n    var self = this;\n    var isHaystack = rs.edgeType === 'haystack';\n\n    // Displacement gives direction for arrowhead orientation\n    var dispX, dispY;\n    var startX, startY, endX, endY;\n\n    var srcPos = edge.source().position();\n    var tgtPos = edge.target().position();\n\n    if( isHaystack ){\n      startX = rs.haystackPts[0];\n      startY = rs.haystackPts[1];\n      endX = rs.haystackPts[2];\n      endY = rs.haystackPts[3];\n    } else {\n      startX = rs.arrowStartX;\n      startY = rs.arrowStartY;\n      endX = rs.arrowEndX;\n      endY = rs.arrowEndY;\n    }\n\n    var style = edge._private.style;\n    \n    function drawArrowhead( prefix, x, y, dispX, dispY ){\n      var arrowShape = style[prefix + '-arrow-shape'].value;\n\n      if( arrowShape === 'none' ){\n        return;\n      }\n\n      var gco = context.globalCompositeOperation;\n\n      var arrowClearFill = style[prefix + '-arrow-fill'].value === 'hollow' ? 'both' : 'filled';\n      var arrowFill = style[prefix + '-arrow-fill'].value;\n\n      if( arrowShape === 'half-triangle-overshot' ){\n        arrowFill = 'hollow';\n        arrowClearFill = 'hollow';\n      }\n\n      if( style.opacity.value !== 1 || arrowFill === 'hollow' ){ // then extra clear is needed\n        context.globalCompositeOperation = 'destination-out';\n        \n        self.fillStyle(context, 255, 255, 255, 1);\n        self.strokeStyle(context, 255, 255, 255, 1);\n        \n        self.drawArrowShape( edge, prefix, context, \n          arrowClearFill, style['width'].pxValue, style[prefix + '-arrow-shape'].value, \n          x, y, dispX, dispY\n        );\n\n        context.globalCompositeOperation = gco;\n      } // otherwise, the opaque arrow clears it for free :)\n\n      var color = style[prefix + '-arrow-color'].value;\n      self.fillStyle(context, color[0], color[1], color[2], style.opacity.value);\n      self.strokeStyle(context, color[0], color[1], color[2], style.opacity.value);\n\n      self.drawArrowShape( edge, prefix, context, \n        arrowFill, style['width'].pxValue, style[prefix + '-arrow-shape'].value, \n        x, y, dispX, dispY\n      );\n    }\n\n    dispX = startX - srcPos.x;\n    dispY = startY - srcPos.y;\n\n    if( !isHaystack && !isNaN(startX) && !isNaN(startY) && !isNaN(dispX) && !isNaN(dispY) ){\n      drawArrowhead( 'source', startX, startY, dispX, dispY );\n\n    } else {\n      // window.badArrow = true;\n      // debugger;\n    }\n    \n    var midX = rs.midX;\n    var midY = rs.midY;\n\n    if( isHaystack ){\n      midX = ( startX + endX )/2;\n      midY = ( startY + endY )/2;\n    }\n\n    dispX = startX - endX;\n    dispY = startY - endY;\n\n    if( rs.edgeType === 'self' ){\n      dispX = 1;\n      dispY = -1;\n    }\n\n    if( !isNaN(midX) && !isNaN(midY) ){\n      drawArrowhead( 'mid-target', midX, midY, dispX, dispY );\n    }\n\n    dispX *= -1;\n    dispY *= -1;\n\n    if( !isNaN(midX) && !isNaN(midY) ){\n      drawArrowhead( 'mid-source', midX, midY, dispX, dispY );\n    }\n    \n    dispX = endX - tgtPos.x;\n    dispY = endY - tgtPos.y;\n    \n    if( !isHaystack && !isNaN(endX) && !isNaN(endY) && !isNaN(dispX) && !isNaN(dispY) ){\n      drawArrowhead( 'target', endX, endY, dispX, dispY );\n    }\n  };\n  \n  // Draw arrowshape\n  CRp.drawArrowShape = function(edge, arrowType, context, fill, edgeWidth, shape, x, y, dispX, dispY) {\n    var usePaths = CanvasRenderer.usePaths();\n    var rs = edge._private.rscratch;\n    var pathCacheHit = false;\n    var path;\n    var canvasContext = context;\n    var translation = { x: x, y: y };\n\n    // Negative of the angle\n    var angle = Math.asin(dispY / (Math.sqrt(dispX * dispX + dispY * dispY)));\n  \n    if (dispX < 0) {\n      angle = angle + Math.PI / 2;\n    } else {\n      angle = - (Math.PI / 2 + angle);\n    }\n    \n    var size = this.getArrowWidth( edgeWidth );\n    var shapeImpl = CanvasRenderer.arrowShapes[shape];\n\n    // context.translate(x, y);\n\n    if( usePaths ){\n      var pathCacheKey = size + '$' + shape + '$' + angle + '$' + x + '$' + y;\n      rs.arrowPathCacheKey = rs.arrowPathCacheKey || {};\n      rs.arrowPathCache = rs.arrowPathCache || {};\n\n      var alreadyCached = rs.arrowPathCacheKey[arrowType] === pathCacheKey;\n      if( alreadyCached ){\n        path = context = rs.arrowPathCache[arrowType];\n        pathCacheHit = true;\n      } else {\n        path = context = new Path2D();\n        rs.arrowPathCacheKey[arrowType] = pathCacheKey;\n        rs.arrowPathCache[arrowType] = path;\n      }\n    }\n\n    if( context.beginPath ){ context.beginPath(); }\n\n    if( !pathCacheHit ){\n      shapeImpl.draw(context, size, angle, translation);\n    }\n    \n    if( !shapeImpl.leavePathOpen && context.closePath ){\n      context.closePath();\n    }\n\n    context = canvasContext;\n\n    if( fill === 'filled' || fill === 'both' ){\n      if( usePaths ){\n        context.fill( path );\n      } else {\n        context.fill();\n      }\n    }\n\n    if( fill === 'hollow' || fill === 'both' ){\n      context.lineWidth = ( shapeImpl.matchEdgeWidth ? edgeWidth : 1 );\n      context.lineJoin = 'miter';\n\n      if( usePaths ){\n        context.stroke( path );\n      } else {\n        context.stroke();\n      }\n      \n    }\n\n    // context.translate(-x, -y);\n  };\n\n})( cytoscape );\n\n;(function($$){ 'use strict';\n\n  var CanvasRenderer = $$('renderer', 'canvas');\n  var CRp = CanvasRenderer.prototype;\n\n  CRp.getCachedImage = function(url, onLoad) {\n    var r = this;\n    var imageCache = r.imageCache = r.imageCache || {};\n\n    if( imageCache[url] && imageCache[url].image ){\n      return imageCache[url].image;\n    }\n    \n    var cache = imageCache[url] = imageCache[url] || {};\n\n    var image = cache.image = new Image();\n    image.addEventListener('load', onLoad);\n    image.src = url;\n    \n    return image;\n  };\n  \n  CRp.safeDrawImage = function( context, img, ix, iy, iw, ih, x, y, w, h ){\n    var r = this;\n    \n    try {\n      context.drawImage( img, ix, iy, iw, ih, x, y, w, h );\n    } catch(e){\n      r.data.canvasNeedsRedraw[CanvasRenderer.NODE] = true;\n      r.data.canvasNeedsRedraw[CanvasRenderer.DRAG] = true;\n      \n      r.drawingImage = true;\n      \n      r.redraw();\n    }\n  };\n  \n  CRp.drawInscribedImage = function(context, img, node) {\n    var r = this;\n    var nodeX = node._private.position.x;\n    var nodeY = node._private.position.y;\n    var style = node._private.style;\n    var fit = style['background-fit'].value;\n    var xPos = style['background-position-x'];\n    var yPos = style['background-position-y'];\n    var repeat = style['background-repeat'].value;\n    var nodeW = node.width();\n    var nodeH = node.height();\n    var rs = node._private.rscratch;\n    var clip = style['background-clip'].value;\n    var shouldClip = clip === 'node';\n    var imgOpacity = style['background-image-opacity'].value;\n    \n    var w = img.width;\n    var h = img.height;\n    \n    if( w === 0 || h === 0 ){\n      return; // no point in drawing empty image (and chrome is broken in this case)\n    }\n\n    var bgW = style['background-width'];\n    if( bgW.value !== 'auto' ){\n      if( bgW.units === '%' ){\n        w = bgW.value/100 * nodeW;\n      } else {\n        w = bgW.pxValue;\n      }\n    }\n\n    var bgH = style['background-height'];\n    if( bgH.value !== 'auto' ){\n      if( bgH.units === '%' ){\n        h = bgH.value/100 * nodeH;\n      } else {\n        h = bgH.pxValue;\n      }\n    }\n\n    if( w === 0 || h === 0 ){\n      return; // no point in drawing empty image (and chrome is broken in this case)\n    }\n\n    if( fit === 'contain' ){\n      var scale = Math.min( nodeW/w, nodeH/h );\n\n      w *= scale;\n      h *= scale;\n\n    } else if( fit === 'cover' ){\n      var scale = Math.max( nodeW/w, nodeH/h );\n\n      w *= scale;\n      h *= scale;\n    }\n\n    var x = (nodeX - nodeW/2); // left\n    if( xPos.units === '%' ){\n      x += (nodeW - w) * xPos.value/100;\n    } else {\n      x += xPos.pxValue;\n    }\n\n    var y = (nodeY - nodeH/2); // top\n    if( yPos.units === '%' ){\n      y += (nodeH - h) * yPos.value/100;\n    } else {\n      y += yPos.pxValue;\n    }\n\n    if( rs.pathCache ){\n      x -= nodeX;\n      y -= nodeY;\n\n      nodeX = 0;\n      nodeY = 0;\n    }\n\n    var gAlpha = context.globalAlpha;\n\n    context.globalAlpha = imgOpacity;\n\n    if( repeat === 'no-repeat' ){\n\n      if( shouldClip ){\n        context.save();\n\n        if( rs.pathCache ){\n          context.clip( rs.pathCache );\n        } else {\n          CanvasRenderer.nodeShapes[r.getNodeShape(node)].drawPath(\n            context,\n            nodeX, nodeY, \n            nodeW, nodeH);\n\n          context.clip();\n        }\n      }\n\n      // context.drawImage( img, 0, 0, img.width, img.height, x, y, w, h );\n      r.safeDrawImage( context, img, 0, 0, img.width, img.height, x, y, w, h );\n\n      if( shouldClip ){\n        context.restore();\n      }\n    } else {\n      var pattern = context.createPattern( img, repeat );\n      context.fillStyle = pattern;\n\n      CanvasRenderer.nodeShapes[r.getNodeShape(node)].drawPath(\n          context,\n          nodeX, nodeY, \n          nodeW, nodeH);\n\n        context.translate(x, y);\n        context.fill();\n        context.translate(-x, -y);\n    }\n\n    context.globalAlpha = gAlpha;\n    \n  };\n\n  \n})( cytoscape );\n\n;(function($$){ 'use strict';\n\n  var CanvasRenderer = $$('renderer', 'canvas');\n  var CRp = CanvasRenderer.prototype;\n\n  // Draw edge text\n  CRp.drawEdgeText = function(context, edge) {\n    var text = edge._private.style['content'].strValue;\n\n    if( !text || text.match(/^\\s+$/) ){\n      return;\n    }\n\n    if( this.hideEdgesOnViewport && (this.dragData.didDrag || this.pinching || this.hoverData.dragging || this.data.wheel || this.swipePanning) ){ return; } // save cycles on pinching\n\n    var computedSize = edge._private.style['font-size'].pxValue * edge.cy().zoom();\n    var minSize = edge._private.style['min-zoomed-font-size'].pxValue;\n\n    if( computedSize < minSize ){\n      return;\n    }\n\n    // Calculate text draw position\n\n    context.textAlign = 'center';\n    context.textBaseline = 'middle';\n    \n    var rs = edge._private.rscratch;\n    if( !$$.is.number( rs.labelX ) || !$$.is.number( rs.labelY ) ){ return; } // no pos => label can't be rendered\n\n    var style = edge._private.style;\n    var autorotate = style['edge-text-rotation'].strValue === 'autorotate';\n    var theta, dx, dy;\n\n    if( autorotate ){\n      switch( rs.edgeType ){\n        case 'haystack':\n          dx = rs.haystackPts[2] - rs.haystackPts[0];\n          dy = rs.haystackPts[3] - rs.haystackPts[1];\n          break;\n        default:\n          dx = rs.endX - rs.startX;\n          dy = rs.endY - rs.startY;\n      }\n\n      theta = Math.atan( dy / dx );\n\n      context.translate(rs.labelX, rs.labelY);\n      context.rotate(theta);\n\n      this.drawText(context, edge, 0, 0);\n\n      context.rotate(-theta);\n      context.translate(-rs.labelX, -rs.labelY);\n    } else {\n      this.drawText(context, edge, rs.labelX, rs.labelY);\n    }\n\n  };\n\n  // Draw node text\n  CRp.drawNodeText = function(context, node) {\n    var text = node._private.style['content'].strValue;\n\n    if ( !text || text.match(/^\\s+$/) ) {\n      return;\n    }\n\n    var computedSize = node._private.style['font-size'].pxValue * node.cy().zoom();\n    var minSize = node._private.style['min-zoomed-font-size'].pxValue;\n\n    if( computedSize < minSize ){\n      return;\n    }\n\n    // this.recalculateNodeLabelProjection( node );\n\n    var textHalign = node._private.style['text-halign'].strValue;\n    var textValign = node._private.style['text-valign'].strValue;\n    var rs = node._private.rscratch;\n    if( !$$.is.number( rs.labelX ) || !$$.is.number( rs.labelY ) ){ return; } // no pos => label can't be rendered\n\n    switch( textHalign ){\n      case 'left':\n        context.textAlign = 'right';\n        break;\n\n      case 'right':\n        context.textAlign = 'left';\n        break;\n\n      default: // e.g. center\n        context.textAlign = 'center';\n    }\n\n    switch( textValign ){\n      case 'top':\n        context.textBaseline = 'bottom';\n        break;\n\n      case 'bottom':\n        context.textBaseline = 'top';\n        break;\n\n      default: // e.g. center\n        context.textBaseline = 'middle';\n    }\n\n    this.drawText(context, node, rs.labelX, rs.labelY);\n  };\n\n  CRp.getFontCache = function(context){\n    var cache;\n\n    this.fontCaches = this.fontCaches || [];\n\n    for( var i = 0; i < this.fontCaches.length; i++ ){\n      cache = this.fontCaches[i];\n\n      if( cache.context === context ){\n        return cache;\n      }\n    }\n\n    cache = {\n      context: context\n    };\n    this.fontCaches.push(cache);\n\n    return cache;\n  };\n\n  // set up canvas context with font\n  // returns transformed text string\n  CRp.setupTextStyle = function( context, element ){\n    // Font style\n    var parentOpacity = element.effectiveOpacity();\n    var style = element._private.style;\n    var labelStyle = style['font-style'].strValue;\n    var labelSize = style['font-size'].pxValue + 'px';\n    var labelFamily = style['font-family'].strValue;\n    var labelWeight = style['font-weight'].strValue;\n    var opacity = style['text-opacity'].value * style['opacity'].value * parentOpacity;\n    var outlineOpacity = style['text-outline-opacity'].value * opacity;\n    var color = style['color'].value;\n    var outlineColor = style['text-outline-color'].value;\n    var shadowBlur = style['text-shadow-blur'].pxValue;\n    var shadowOpacity = style['text-shadow-opacity'].value;\n    var shadowColor = style['text-shadow-color'].value;\n    var shadowOffsetX = style['text-shadow-offset-x'].pxValue;\n    var shadowOffsetY = style['text-shadow-offset-y'].pxValue;\n\n    var fontCacheKey = element._private.fontKey;\n    var cache = this.getFontCache(context);\n\n    if( cache.key !== fontCacheKey ){\n      context.font = labelStyle + ' ' + labelWeight + ' ' + labelSize + ' ' + labelFamily;\n\n      cache.key = fontCacheKey;\n    }\n\n    var text = this.getLabelText( element );\n\n    // Calculate text draw position based on text alignment\n\n    // so text outlines aren't jagged\n    context.lineJoin = 'round';\n\n    this.fillStyle(context, color[0], color[1], color[2], opacity);\n\n    this.strokeStyle(context, outlineColor[0], outlineColor[1], outlineColor[2], outlineOpacity);\n\n    this.shadowStyle(context, shadowColor, shadowOpacity, shadowBlur, shadowOffsetX, shadowOffsetY);\n\n    return text;\n  };\n\n  function roundRect(ctx, x, y, width, height, radius) {\n    var radius = radius || 5;\n    ctx.beginPath();\n    ctx.moveTo(x + radius, y);\n    ctx.lineTo(x + width - radius, y);\n    ctx.quadraticCurveTo(x + width, y, x + width, y + radius);\n    ctx.lineTo(x + width, y + height - radius);\n    ctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\n    ctx.lineTo(x + radius, y + height);\n    ctx.quadraticCurveTo(x, y + height, x, y + height - radius);\n    ctx.lineTo(x, y + radius);\n    ctx.quadraticCurveTo(x, y, x + radius, y);\n    ctx.closePath();\n    ctx.fill();\n  }\n\n  // Draw text\n  CRp.drawText = function(context, element, textX, textY) {\n    var _p = element._private;\n    var style = _p.style;\n    var rstyle = _p.rstyle;\n    var rscratch = _p.rscratch;\n    var parentOpacity = element.effectiveOpacity();\n    if( parentOpacity === 0 || style['text-opacity'].value === 0){ return; }\n\n    var text = this.setupTextStyle( context, element );\n    var halign = style['text-halign'].value;\n    var valign = style['text-valign'].value;\n\n    if( element.isEdge() ){\n      halign = 'center';\n      valign = 'center';\n    }\n\n    if ( text != null && !isNaN(textX) && !isNaN(textY)) {\n      var backgroundOpacity = style['text-background-opacity'].value;\n      var borderOpacity = style['text-border-opacity'].value;\n      var textBorderWidth = style['text-border-width'].pxValue;\n      \n      if( backgroundOpacity > 0 || (textBorderWidth > 0 && borderOpacity > 0) ){\n        var margin = 4 + textBorderWidth/2;\n\n        if (element.isNode()) {\n          //Move textX, textY to include the background margins\n          if (valign === 'top') {\n            textY -= margin;\n          } else if (valign === 'bottom') {\n            textY += margin;\n          }\n          if (halign === 'left') {\n            textX -= margin;\n          } else if (halign === 'right') {\n            textX += margin;\n          }\n        }\n\n        var bgWidth = rstyle.labelWidth;\n        var bgHeight = rstyle.labelHeight;\n        var bgX = textX;\n\n        if (halign) {\n          if (halign == 'center') {\n            bgX = bgX - bgWidth / 2;\n          } else if (halign == 'left') {\n            bgX = bgX- bgWidth;\n          }\n        }\n\n        var bgY = textY;\n\n        if (element.isNode()) {\n          if (valign == 'top') {\n             bgY = bgY - bgHeight;\n          } else if (valign == 'center') {\n            bgY = bgY- bgHeight / 2;\n          }\n        } else {\n          bgY = bgY - bgHeight / 2;\n        }\n\n        if (style['edge-text-rotation'].strValue === 'autorotate') {\n          textY = 0;\n          bgWidth += 4;\n          bgX = textX - bgWidth / 2;\n          bgY = textY - bgHeight / 2;\n        } else {\n          // Adjust with border width & margin\n          bgX -= margin;\n          bgY -= margin;\n          bgHeight += margin*2;\n          bgWidth += margin*2;\n        }\n\n        if( backgroundOpacity > 0 ){\n          var textFill = context.fillStyle;\n          var textBackgroundColor = style['text-background-color'].value;\n\n          context.fillStyle = 'rgba(' + textBackgroundColor[0] + ',' + textBackgroundColor[1] + ',' + textBackgroundColor[2] + ',' + backgroundOpacity * parentOpacity + ')';\n          var styleShape = style['text-background-shape'].strValue;\n          if (styleShape == 'roundrectangle') {\n            roundRect(context, bgX, bgY, bgWidth, bgHeight, 2);\n          } else {\n            context.fillRect(bgX,bgY,bgWidth,bgHeight);\n          }\n          context.fillStyle = textFill;\n        }\n\n        if( textBorderWidth > 0 && borderOpacity > 0 ){\n          var textStroke = context.strokeStyle;\n          var textLineWidth = context.lineWidth;\n          var textBorderColor = style['text-border-color'].value;\n          var textBorderStyle = style['text-border-style'].value;\n\n          context.strokeStyle = 'rgba(' + textBorderColor[0] + ',' + textBorderColor[1] + ',' + textBorderColor[2] + ',' + borderOpacity * parentOpacity + ')';\n          context.lineWidth = textBorderWidth;\n\n          if( context.setLineDash ){ // for very outofdate browsers\n            switch( textBorderStyle ){\n              case 'dotted':\n                context.setLineDash([ 1, 1 ]);\n                break;\n              case 'dashed':\n                context.setLineDash([ 4, 2 ]);\n                break;\n              case 'double':\n                context.lineWidth = textBorderWidth/4; // 50% reserved for white between the two borders\n                context.setLineDash([ ]);\n                break;\n              case 'solid':\n                context.setLineDash([ ]);\n                break;\n            }\n          }\n\n          context.strokeRect(bgX,bgY,bgWidth,bgHeight);\n\n          if( textBorderStyle === 'double' ){\n            var whiteWidth = textBorderWidth/2;\n\n            context.strokeRect(bgX+whiteWidth,bgY+whiteWidth,bgWidth-whiteWidth*2,bgHeight-whiteWidth*2);\n          }\n\n          if( context.setLineDash ){ // for very outofdate browsers\n            context.setLineDash([ ]);\n          }\n          context.lineWidth = textLineWidth;\n          context.strokeStyle = textStroke;\n        }\n\n      }\n\n      var lineWidth = 2  * style['text-outline-width'].pxValue; // *2 b/c the stroke is drawn centred on the middle\n\n      if( lineWidth > 0 ){\n        context.lineWidth = lineWidth;\n      }\n\n      if( style['text-wrap'].value === 'wrap' ){ //console.log('draw wrap');\n        var lines = rscratch.labelWrapCachedLines;\n        var lineHeight = rstyle.labelHeight / lines.length;\n\n        //console.log('lines', lines);\n\n        switch( valign ){\n          case 'top':\n            textY -= (lines.length - 1) * lineHeight;\n            break;\n\n          case 'bottom':\n            // nothing required\n            break;\n\n          default:\n          case 'center':\n            textY -= (lines.length - 1) * lineHeight / 2;\n        }\n\n        for( var l = 0; l < lines.length; l++ ){\n          if( lineWidth > 0 ){\n            context.strokeText( lines[l], textX, textY );\n          }\n\n          context.fillText( lines[l], textX, textY );\n\n          textY += lineHeight;\n        }\n\n        // var fontSize = style['font-size'].pxValue;\n        // wrapText(context, text, textX, textY, style['text-max-width'].pxValue, fontSize + 1);\n      } else {\n        if( lineWidth > 0 ){\n          context.strokeText( text, textX, textY );\n        }\n\n        context.fillText( text, textX, textY );\n      }\n\n\n      this.shadowStyle(context, 'transparent', 0); // reset for next guy\n    }\n  };\n\n\n})( cytoscape );\n\n;(function($$){ 'use strict';\n\n  var CanvasRenderer = $$('renderer', 'canvas');\n  var CRp = CanvasRenderer.prototype;\n\n  // Draw node\n  CRp.drawNode = function(context, node, drawOverlayInstead) {\n\n    var r = this;\n    var nodeWidth, nodeHeight;\n    var style = node._private.style;\n    var rs = node._private.rscratch;\n    var _p = node._private;\n    \n    var usePaths = CanvasRenderer.usePaths();\n    var canvasContext = context;\n    var path;\n    var pathCacheHit = false;\n\n    var overlayPadding = style['overlay-padding'].pxValue;\n    var overlayOpacity = style['overlay-opacity'].value;\n    var overlayColor = style['overlay-color'].value;\n\n    if( drawOverlayInstead && overlayOpacity === 0 ){ // exit early if drawing overlay but none to draw\n      return;\n    }\n\n    var parentOpacity = node.effectiveOpacity();\n    if( parentOpacity === 0 ){ return; }\n\n    nodeWidth = this.getNodeWidth(node);\n    nodeHeight = this.getNodeHeight(node);\n    \n    context.lineWidth = style['border-width'].pxValue;\n\n    if( drawOverlayInstead === undefined || !drawOverlayInstead ){\n\n      var url = style['background-image'].value[2] ||\n        style['background-image'].value[1];\n      var image;\n\n      if (url !== undefined) {\n        \n        // get image, and if not loaded then ask to redraw when later loaded\n        image = this.getCachedImage(url, function(){\n          r.data.canvasNeedsRedraw[CanvasRenderer.NODE] = true;\n          r.data.canvasNeedsRedraw[CanvasRenderer.DRAG] = true;\n          \n          r.drawingImage = true;\n          \n          r.redraw();\n        });\n        \n        var prevBging = _p.backgrounding;\n        _p.backgrounding = !image.complete;\n\n        if( prevBging !== _p.backgrounding ){ // update style b/c :backgrounding state changed\n          node.updateStyle( false );\n        }\n      } \n\n      // Node color & opacity\n\n      var bgColor = style['background-color'].value;\n      var borderColor = style['border-color'].value;\n      var borderStyle = style['border-style'].value;\n\n      this.fillStyle(context, bgColor[0], bgColor[1], bgColor[2], style['background-opacity'].value * parentOpacity);\n      \n      this.strokeStyle(context, borderColor[0], borderColor[1], borderColor[2], style['border-opacity'].value * parentOpacity);\n      \n      var shadowBlur = style['shadow-blur'].pxValue;\n      var shadowOpacity = style['shadow-opacity'].value;\n      var shadowColor = style['shadow-color'].value;\n      var shadowOffsetX = style['shadow-offset-x'].pxValue;\n      var shadowOffsetY = style['shadow-offset-y'].pxValue;\n\n      this.shadowStyle(context, shadowColor, shadowOpacity, shadowBlur, shadowOffsetX, shadowOffsetY);\n\n      context.lineJoin = 'miter'; // so borders are square with the node shape\n\n      if( context.setLineDash ){ // for very outofdate browsers\n        switch( borderStyle ){\n          case 'dotted':\n            context.setLineDash([ 1, 1 ]);\n            break;\n\n          case 'dashed':\n            context.setLineDash([ 4, 2 ]);\n            break;\n\n          case 'solid':\n          case 'double':\n            context.setLineDash([ ]);\n            break;\n        }\n      }\n\n      \n      var styleShape = style['shape'].strValue;\n\n      var pos = node._private.position;\n\n      if( usePaths ){\n        var pathCacheKey = styleShape + '$' + nodeWidth +'$' + nodeHeight;\n\n        context.translate( pos.x, pos.y );\n\n        if( rs.pathCacheKey === pathCacheKey ){\n          path = context = rs.pathCache;\n          pathCacheHit = true;\n        } else {\n          path = context = new Path2D();\n          rs.pathCacheKey = pathCacheKey;\n          rs.pathCache = path;\n        }\n      }\n\n      if( !pathCacheHit ){\n\n        var npos = pos;\n\n        if( usePaths ){\n          npos = {\n            x: 0,\n            y: 0\n          };\n        }\n\n        CanvasRenderer.nodeShapes[this.getNodeShape(node)].drawPath(\n              context,\n              npos.x,\n              npos.y,\n              nodeWidth,\n              nodeHeight);\n      }\n\n      context = canvasContext;\n\n      if( usePaths ){\n        context.fill( path );\n      } else {\n        context.fill();\n      }\n\n      this.shadowStyle(context, 'transparent', 0); // reset for next guy\n\n      if (url !== undefined) {\n        if( image.complete ){\n          this.drawInscribedImage(context, image, node);\n        }\n      } \n      \n      var darkness = style['background-blacken'].value;\n      var borderWidth = style['border-width'].pxValue;\n\n      if( this.hasPie(node) ){\n        this.drawPie( context, node, parentOpacity );\n\n        // redraw path for blacken and border\n        if( darkness !== 0 || borderWidth !== 0 ){\n\n          if( !usePaths ){\n            CanvasRenderer.nodeShapes[this.getNodeShape(node)].drawPath(\n                context,\n                pos.x,\n                pos.y,\n                nodeWidth,\n                nodeHeight);\n          }\n        }\n      }\n\n      if( darkness > 0 ){\n        this.fillStyle(context, 0, 0, 0, darkness);\n\n        if( usePaths ){\n          context.fill( path );\n        } else {\n          context.fill();\n        }\n        \n      } else if( darkness < 0 ){\n        this.fillStyle(context, 255, 255, 255, -darkness);\n        \n        if( usePaths ){\n          context.fill( path );\n        } else {\n          context.fill();\n        }\n      }\n\n      // Border width, draw border\n      if (borderWidth > 0) {\n\n        if( usePaths ){\n          context.stroke( path );\n        } else {\n          context.stroke();\n        }\n\n        if( borderStyle === 'double' ){\n          context.lineWidth = style['border-width'].pxValue/3;\n\n          var gco = context.globalCompositeOperation;\n          context.globalCompositeOperation = 'destination-out';\n\n          if( usePaths ){\n            context.stroke( path );\n          } else {\n            context.stroke();\n          }\n\n          context.globalCompositeOperation = gco;\n        }\n\n      }\n\n      if( usePaths ){\n        context.translate( -pos.x, -pos.y );\n      }\n\n      // reset in case we changed the border style\n      if( context.setLineDash ){ // for very outofdate browsers\n        context.setLineDash([ ]);\n      }\n\n    // draw the overlay\n    } else {\n\n      if( overlayOpacity > 0 ){\n        this.fillStyle(context, overlayColor[0], overlayColor[1], overlayColor[2], overlayOpacity);\n\n        CanvasRenderer.nodeShapes['roundrectangle'].drawPath(\n          context,\n          node._private.position.x,\n          node._private.position.y,\n          nodeWidth + overlayPadding * 2,\n          nodeHeight + overlayPadding * 2\n        );\n\n        context.fill();\n      }\n    }\n\n  };\n\n  // does the node have at least one pie piece?\n  CRp.hasPie = function(node){\n    node = node[0]; // ensure ele ref\n    \n    return node._private.hasPie;\n  };\n\n  CRp.drawPie = function( context, node, nodeOpacity ){\n    node = node[0]; // ensure ele ref\n\n    var _p = node._private;\n    var style = _p.style;\n    var pieSize = style['pie-size'];\n    var nodeW = this.getNodeWidth( node );\n    var nodeH = this.getNodeHeight( node );\n    var x = _p.position.x;\n    var y = _p.position.y;\n    var radius = Math.min( nodeW, nodeH ) / 2; // must fit in node\n    var lastPercent = 0; // what % to continue drawing pie slices from on [0, 1]\n    var usePaths = CanvasRenderer.usePaths();\n\n    if( usePaths ){\n      x = 0;\n      y = 0;\n    }\n\n    if( pieSize.units === '%' ){\n      radius = radius * pieSize.value / 100;\n    } else if( pieSize.pxValue !== undefined ){\n      radius = pieSize.pxValue / 2;\n    }\n\n    for( var i = 1; i <= $$.style.pieBackgroundN; i++ ){ // 1..N\n      var size = style['pie-' + i + '-background-size'].value;\n      var color = style['pie-' + i + '-background-color'].value;\n      var opacity = style['pie-' + i + '-background-opacity'].value * nodeOpacity;\n      var percent = size / 100; // map integer range [0, 100] to [0, 1]\n      var angleStart = 1.5 * Math.PI + 2 * Math.PI * lastPercent; // start at 12 o'clock and go clockwise\n      var angleDelta = 2 * Math.PI * percent;\n      var angleEnd = angleStart + angleDelta;\n\n      // ignore if\n      // - zero size\n      // - we're already beyond the full circle\n      // - adding the current slice would go beyond the full circle\n      if( size === 0 || lastPercent >= 1 || lastPercent + percent > 1 ){\n        continue;\n      }\n\n      context.beginPath();\n      context.moveTo(x, y);\n      context.arc( x, y, radius, angleStart, angleEnd );\n      context.closePath();\n\n      this.fillStyle(context, color[0], color[1], color[2], opacity);\n\n      context.fill();\n\n      lastPercent += percent;\n    }\n\n  };\n\n  \n})( cytoscape );\n\n;(function($$){ 'use strict';\n\n  var CanvasRenderer = $$('renderer', 'canvas');\n  var CR = CanvasRenderer;\n  var CRp = CanvasRenderer.prototype;\n\n  // var isFirefox = typeof InstallTrigger !== 'undefined';\n\n  CRp.getPixelRatio = function(){ \n    var context = this.data.contexts[0];\n\n    if( this.forcedPixelRatio != null ){\n      return this.forcedPixelRatio;\n    }\n\n    var backingStore = context.backingStorePixelRatio ||\n      context.webkitBackingStorePixelRatio ||\n      context.mozBackingStorePixelRatio ||\n      context.msBackingStorePixelRatio ||\n      context.oBackingStorePixelRatio ||\n      context.backingStorePixelRatio || 1;\n\n    //console.log(window.devicePixelRatio, backingStore);\n\n    // if( isFirefox ){ // because ff can't scale canvas properly\n    //   return 1;\n    // }\n\n    return (window.devicePixelRatio || 1) / backingStore;\n  };\n\n  CRp.paintCache = function(context){\n    var caches = this.paintCaches = this.paintCaches || [];\n    var needToCreateCache = true;\n    var cache;\n\n    for(var i = 0; i < caches.length; i++ ){\n      cache = caches[i];\n\n      if( cache.context === context ){\n        needToCreateCache = false;\n        break;\n      }\n    }\n\n    if( needToCreateCache ){\n      cache = {\n        context: context\n      };\n      caches.push( cache );\n    }\n\n    return cache;\n  };\n\n  CRp.fillStyle = function(context, r, g, b, a){\n    context.fillStyle = 'rgba(' + r + ',' + g + ',' + b + ',' + a + ')';\n    \n    // turn off for now, seems context does its own caching\n\n    // var cache = this.paintCache(context);\n\n    // var fillStyle = 'rgba(' + r + ',' + g + ',' + b + ',' + a + ')';\n\n    // if( cache.fillStyle !== fillStyle ){\n    //   context.fillStyle = cache.fillStyle = fillStyle;\n    // }\n  };\n\n  CRp.strokeStyle = function(context, r, g, b, a){\n    context.strokeStyle = 'rgba(' + r + ',' + g + ',' + b + ',' + a + ')';\n    \n    // turn off for now, seems context does its own caching\n\n    // var cache = this.paintCache(context);\n\n    // var strokeStyle = 'rgba(' + r + ',' + g + ',' + b + ',' + a + ')';\n\n    // if( cache.strokeStyle !== strokeStyle ){\n    //   context.strokeStyle = cache.strokeStyle = strokeStyle;\n    // }\n  };\n  \n  CRp.shadowStyle = function(context, color, opacity, blur, offsetX, offsetY){\n    var zoom = this.data.cy.zoom();\n\n    var cache = this.paintCache(context);\n    \n    // don't make expensive changes to the shadow style if it's not used\n    if( cache.shadowOpacity === 0 && opacity === 0 ){\n      return;\n    }\n\n    cache.shadowOpacity = opacity;\n\n    if (opacity > 0) {\n      context.shadowBlur = blur * zoom;\n      context.shadowColor = \"rgba(\" + color[0] + \",\" + color[1] + \",\" + color[2] + \",\" + opacity + \")\";\n      context.shadowOffsetX = offsetX * zoom;\n      context.shadowOffsetY = offsetY * zoom;\n    } else {\n      context.shadowBlur = 0;\n      context.shadowColor = \"transparent\";\n    }\n  };\n\n  // Resize canvas\n  CRp.matchCanvasSize = function(container) {\n    var data = this.data;\n    var width = container.clientWidth;\n    var height = container.clientHeight;\n    var pixelRatio = this.getPixelRatio();\n    var mbPxRatio = this.motionBlurPxRatio;\n\n    if(\n      container === this.data.bufferCanvases[CR.MOTIONBLUR_BUFFER_NODE] ||\n      container === this.data.bufferCanvases[CR.MOTIONBLUR_BUFFER_DRAG]\n    ){\n      pixelRatio = mbPxRatio;\n    }\n\n    var canvasWidth = width * pixelRatio;\n    var canvasHeight = height * pixelRatio;\n    var canvas;\n\n    if( canvasWidth === this.canvasWidth && canvasHeight === this.canvasHeight ){\n      return; // save cycles if same\n    }\n\n    this.fontCaches = null; // resizing resets the style\n\n    var canvasContainer = data.canvasContainer;\n    canvasContainer.style.width = width + 'px';\n    canvasContainer.style.height = height + 'px';\n\n    for (var i = 0; i < CanvasRenderer.CANVAS_LAYERS; i++) {\n\n      canvas = data.canvases[i];\n      \n      if (canvas.width !== canvasWidth || canvas.height !== canvasHeight) {\n        \n        canvas.width = canvasWidth;\n        canvas.height = canvasHeight;\n\n        canvas.style.width = width + 'px';\n        canvas.style.height = height + 'px';\n      }\n    }\n    \n    for (var i = 0; i < CanvasRenderer.BUFFER_COUNT; i++) {\n      \n      canvas = data.bufferCanvases[i];\n      \n      if (canvas.width !== canvasWidth || canvas.height !== canvasHeight) {\n        \n        canvas.width = canvasWidth;\n        canvas.height = canvasHeight;\n\n        canvas.style.width = width + 'px';\n        canvas.style.height = height + 'px';\n      }\n    }\n\n    this.textureMult = 1;\n    if( pixelRatio <= 1 ){\n      canvas = data.bufferCanvases[ CanvasRenderer.TEXTURE_BUFFER ];\n\n      this.textureMult = 2;\n      canvas.width = canvasWidth * this.textureMult;\n      canvas.height = canvasHeight * this.textureMult;\n    }\n\n    this.canvasWidth = canvasWidth;\n    this.canvasHeight = canvasHeight;\n\n  };\n\n  CRp.renderTo = function( cxt, zoom, pan, pxRatio ){\n    this.redraw({\n      forcedContext: cxt,\n      forcedZoom: zoom,\n      forcedPan: pan,\n      drawAllLayers: true,\n      forcedPxRatio: pxRatio\n    });\n  };\n\n  CRp.timeToRender = function(){\n    return this.redrawTotalTime / this.redrawCount;\n  };\n\n  CanvasRenderer.minRedrawLimit = 1000/60; // people can't see much better than 60fps\n  CanvasRenderer.maxRedrawLimit = 1000;  // don't cap max b/c it's more important to be responsive than smooth\n  CanvasRenderer.motionBlurDelay = 100;\n\n  // Redraw frame\n  CRp.redraw = function( options ) {\n    options = options || {};\n\n    // console.log('redraw()');\n\n    var forcedContext = options.forcedContext;\n    var drawAllLayers = options.drawAllLayers;\n    var drawOnlyNodeLayer = options.drawOnlyNodeLayer;\n    var forcedZoom = options.forcedZoom;\n    var forcedPan = options.forcedPan;\n    var r = this;\n    var pixelRatio = options.forcedPxRatio === undefined ? this.getPixelRatio() : options.forcedPxRatio;\n    var cy = r.data.cy; var data = r.data; \n    var needDraw = data.canvasNeedsRedraw;\n    var textureDraw = r.textureOnViewport && !forcedContext && (r.pinching || r.hoverData.dragging || r.swipePanning || r.data.wheelZooming);\n    var motionBlur = options.motionBlur !== undefined ? options.motionBlur : r.motionBlur;\n    var mbPxRatio = r.motionBlurPxRatio;\n    var hasCompoundNodes = cy.hasCompoundNodes();\n    var inNodeDragGesture = r.hoverData.draggingEles;\n    var inBoxSelection = r.hoverData.selecting || r.touchData.selecting ? true : false;\n    motionBlur = motionBlur && !forcedContext && r.motionBlurEnabled && !inBoxSelection;\n    var motionBlurFadeEffect = motionBlur;\n\n    // console.log('textureDraw?', textureDraw);\n\n\n    if( !forcedContext && r.motionBlurTimeout ){\n      clearTimeout( r.motionBlurTimeout );\n    }\n\n    if( !forcedContext && this.redrawTimeout ){\n      clearTimeout( this.redrawTimeout );\n    }\n    this.redrawTimeout = null;\n\n    if( this.averageRedrawTime === undefined ){ this.averageRedrawTime = 0; }\n\n    var minRedrawLimit = CanvasRenderer.minRedrawLimit; \n    var maxRedrawLimit = CanvasRenderer.maxRedrawLimit;\n\n    var redrawLimit = this.averageRedrawTime; // estimate the ideal redraw limit based on how fast we can draw\n    redrawLimit = minRedrawLimit > redrawLimit ? minRedrawLimit : redrawLimit;\n    redrawLimit = redrawLimit < maxRedrawLimit ? redrawLimit : maxRedrawLimit;\n\n    //console.log('--\\nideal: %i; effective: %i', this.averageRedrawTime, redrawLimit);\n\n    if( this.lastDrawTime === undefined ){ this.lastDrawTime = 0; }\n\n    var nowTime = Date.now();\n    var timeElapsed = nowTime - this.lastDrawTime;\n    var callAfterLimit = timeElapsed >= redrawLimit;\n\n    if( !forcedContext && !r.clearingMotionBlur ){\n      if( !callAfterLimit || this.currentlyDrawing ){\n        // console.log('-- skip', redrawLimit);\n\n        // we have new things to draw but we're busy, so try again when possibly free\n        this.redrawTimeout = setTimeout(function(){\n          r.redraw();\n        }, redrawLimit);\n        return;\n      }\n\n      this.lastDrawTime = nowTime;\n      this.currentlyDrawing = true;\n    }\n\n    if( motionBlur ){\n      if( r.mbFrames == null ){\n        r.mbFrames = 0;\n      }\n\n      if( !r.drawingImage ){ // image loading frames don't count towards motion blur blurry frames\n        r.mbFrames++;\n      }\n      \n      if( r.mbFrames < 3 ){ // need several frames before even high quality motionblur\n        motionBlurFadeEffect = false;\n      }\n\n      // go to lower quality blurry frames when several m/b frames have been rendered (avoids flashing)\n      if( r.mbFrames > r.minMbLowQualFrames ){\n        //r.fullQualityMb = false;\n        r.motionBlurPxRatio = r.mbPxRBlurry;\n      }\n    } \n\n    // console.log('mb: %s, N: %s, q: %s', motionBlur, r.mbFrames, r.motionBlurPxRatio);\n\n    if( r.clearingMotionBlur ){\n      //r.fullQualityMb = true; // TODO enable when doesn't cause scaled flashing issue\n\n      r.motionBlurPxRatio = 1;\n    }\n\n\n    var startTime = Date.now();\n\n    // console.log('-- redraw --')\n    \n    function drawToContext(){ \n      // startTime = Date.now();\n      // console.profile('draw' + startTime)\n      \n      // b/c drawToContext() may be async w.r.t. redraw(), keep track of last texture frame\n      // because a rogue async texture frame would clear needDraw\n      if( r.textureDrawLastFrame && !textureDraw ){\n        needDraw[CR.NODE] = true;\n        needDraw[CR.SELECT_BOX] = true;\n      }\n      \n      // console.log('drawToContext()');\n      // console.log( 'needDraw', needDraw[CR.NODE], needDraw[CR.DRAG], needDraw[CR.SELECT_BOX] );\n\n      var edges = r.getCachedEdges();\n      var coreStyle = cy.style()._private.coreStyle;\n      \n      var zoom = cy.zoom();\n      var effectiveZoom = forcedZoom !== undefined ? forcedZoom : zoom;\n      var pan = cy.pan();\n      var effectivePan = {\n        x: pan.x,\n        y: pan.y\n      };\n\n      var vp = {\n        zoom: zoom,\n        pan: {\n          x: pan.x,\n          y: pan.y\n        }\n      };\n      var prevVp = r.prevViewport;\n      var viewportIsDiff = prevVp === undefined || vp.zoom !== prevVp.zoom || vp.pan.x !== prevVp.pan.x || vp.pan.y !== prevVp.pan.y;\n\n      // we want the low quality motionblur only when the viewport is being manipulated etc (where it's not noticed)\n      if( !viewportIsDiff && !(inNodeDragGesture && !hasCompoundNodes) ){\n        r.motionBlurPxRatio = 1;\n      }\n\n      if( forcedPan ){\n        effectivePan = forcedPan;\n      }\n\n      // apply pixel ratio\n\n      effectiveZoom *= pixelRatio;\n      effectivePan.x *= pixelRatio;\n      effectivePan.y *= pixelRatio;\n      \n      var eles = {\n        drag: {\n          nodes: [],\n          edges: [],\n          eles: []\n        },\n        nondrag: {\n          nodes: [],\n          edges: [],\n          eles: []\n        }\n      };\n\n      function mbclear( context, x, y, w, h ){\n        var gco = context.globalCompositeOperation;\n\n        context.globalCompositeOperation = 'destination-out';\n        r.fillStyle( context, 255, 255, 255, r.motionBlurTransparency );\n        context.fillRect(x, y, w, h);\n\n        context.globalCompositeOperation = gco;\n      }\n\n      function setContextTransform(context, clear){\n        var ePan, eZoom, w, h;\n\n        if( /*!r.fullQualityMb &&*/ !r.clearingMotionBlur && (context === data.bufferContexts[CR.MOTIONBLUR_BUFFER_NODE] || context === data.bufferContexts[CR.MOTIONBLUR_BUFFER_DRAG]) ){\n          ePan = {\n            x: pan.x * mbPxRatio,\n            y: pan.y * mbPxRatio\n          };\n\n          eZoom = zoom * mbPxRatio;\n\n          w = r.canvasWidth * mbPxRatio;\n          h = r.canvasHeight * mbPxRatio;\n        } else {\n          ePan = effectivePan;\n          eZoom = effectiveZoom;\n\n          w = r.canvasWidth;\n          h = r.canvasHeight;\n        }\n\n        context.setTransform(1, 0, 0, 1, 0, 0);\n\n        if( clear === 'motionBlur' ){ \n          mbclear(context, 0, 0, w, h);\n        } else if( !forcedContext && (clear === undefined || clear) ){\n          context.clearRect(0, 0, w, h);\n        }\n        \n        if( !drawAllLayers ){\n          context.translate( ePan.x, ePan.y );\n          context.scale( eZoom, eZoom );\n        }\n        if( forcedPan ){\n          context.translate( forcedPan.x, forcedPan.y );\n        } \n        if( forcedZoom ){\n          context.scale( forcedZoom, forcedZoom );\n        }\n      }\n\n      if( !textureDraw ){\n        r.textureDrawLastFrame = false;\n      }\n\n      if( textureDraw ){\n        // console.log('textureDraw')\n        \n        r.textureDrawLastFrame = true;\n\n        var bb;\n\n        if( !r.textureCache ){\n          r.textureCache = {};\n\n          bb = r.textureCache.bb = cy.elements().boundingBox();\n\n          r.textureCache.texture = r.data.bufferCanvases[ CanvasRenderer.TEXTURE_BUFFER ];\n\n          var cxt = r.data.bufferContexts[ CanvasRenderer.TEXTURE_BUFFER ];\n\n          cxt.setTransform(1, 0, 0, 1, 0, 0);\n          cxt.clearRect(0, 0, r.canvasWidth * r.textureMult, r.canvasHeight * r.textureMult);\n          \n          r.redraw({\n            forcedContext: cxt,\n            drawOnlyNodeLayer: true,\n            forcedPxRatio: pixelRatio * r.textureMult\n          });\n\n          var vp = r.textureCache.viewport = {\n            zoom: cy.zoom(),\n            pan: cy.pan(),\n            width: r.canvasWidth,\n            height: r.canvasHeight\n          };\n\n          vp.mpan = {\n            x: (0 - vp.pan.x)/vp.zoom,\n            y: (0 - vp.pan.y)/vp.zoom\n          };\n        }\n\n        needDraw[CR.DRAG] = false;\n        needDraw[CR.NODE] = false;\n\n        var context = data.contexts[CR.NODE];\n\n        var texture = r.textureCache.texture;\n        var vp = r.textureCache.viewport;\n        bb = r.textureCache.bb;\n\n        context.setTransform(1, 0, 0, 1, 0, 0);\n\n        if( motionBlur ){\n          mbclear(context, 0, 0, vp.width, vp.height);\n        } else {\n          context.clearRect(0, 0, vp.width, vp.height);\n        }\n\n        var outsideBgColor = coreStyle['outside-texture-bg-color'].value;\n        var outsideBgOpacity = coreStyle['outside-texture-bg-opacity'].value;\n        r.fillStyle( context, outsideBgColor[0], outsideBgColor[1], outsideBgColor[2], outsideBgOpacity );\n        context.fillRect( 0, 0, vp.width, vp.height );\n\n        var zoom = cy.zoom();\n        \n        setContextTransform( context, false );\n\n        context.clearRect( vp.mpan.x, vp.mpan.y, vp.width/vp.zoom/pixelRatio, vp.height/vp.zoom/pixelRatio );\n        context.drawImage( texture, vp.mpan.x, vp.mpan.y, vp.width/vp.zoom/pixelRatio, vp.height/vp.zoom/pixelRatio );\n\n      } else if( r.textureOnViewport && !forcedContext ){ // clear the cache since we don't need it\n        r.textureCache = null;\n      }\n\n      var vpManip = (r.pinching || r.hoverData.dragging || r.swipePanning || r.data.wheelZooming || r.hoverData.draggingEles);\n      var hideEdges = r.hideEdgesOnViewport && vpManip;\n      var hideLabels = r.hideLabelsOnViewport && vpManip;\n\n      if (needDraw[CR.DRAG] || needDraw[CR.NODE] || drawAllLayers || drawOnlyNodeLayer) {\n        //NB : VERY EXPENSIVE\n\n        if( hideEdges ){ \n        } else {\n          r.findEdgeControlPoints(edges);\n        }\n\n        var zEles = r.getCachedZSortedEles();\n        var extent = cy.extent();\n\n        for (var i = 0; i < zEles.length; i++) {\n          var ele = zEles[i];\n          var list;\n          var bb = forcedContext ? null : ele.boundingBox();\n          var insideExtent = forcedContext ? true : $$.math.boundingBoxesIntersect( extent, bb );\n\n          if( !insideExtent ){ continue; } // no need to render\n\n          if ( ele._private.rscratch.inDragLayer ) {\n            list = eles.drag;\n          } else {\n            list = eles.nondrag;\n          }\n\n          list.eles.push( ele );\n        }\n\n      }\n      \n      \n      function drawElements( list, context ){\n        var eles = list.eles;\n\n        for( var i = 0; i < eles.length; i++ ){\n          var ele = eles[i];\n\n          if( ele.isNode() ){\n            r.drawNode(context, ele);\n\n            if( !hideLabels ){\n              r.drawNodeText(context, ele);\n            }\n\n            r.drawNode(context, ele, true);\n          } else if( !hideEdges ) {\n            r.drawEdge(context, ele);\n\n            if( !hideLabels ){\n              r.drawEdgeText(context, ele);\n            }\n\n            r.drawEdge(context, ele, true);\n          }\n          \n          \n        }\n\n      }\n\n      var needMbClear = [];\n\n      needMbClear[CR.NODE] = !needDraw[CR.NODE] && motionBlur && !r.clearedForMotionBlur[CR.NODE] || r.clearingMotionBlur;\n      if( needMbClear[CR.NODE] ){ r.clearedForMotionBlur[CR.NODE] = true; }\n\n      needMbClear[CR.DRAG] = !needDraw[CR.DRAG] && motionBlur && !r.clearedForMotionBlur[CR.DRAG] || r.clearingMotionBlur;\n      if( needMbClear[CR.DRAG] ){ r.clearedForMotionBlur[CR.DRAG] = true; }\n\n      // console.log('--');\n\n      // if( needDraw[CR.DRAG] && motionBlur && needDraw[CR.NODE] && inNodeDragGesture ){\n      //   console.log('NODE blurclean');\n      // \n      //   var context = data.contexts[CR.NODE];\n      // \n      //   setContextTransform( context, true );\n      //   drawElements(eles.nondrag, context);\n      // \n      //   needDraw[CR.NODE] = false; \n      //   needMbClear[CR.NODE] = false;\n      // \n      // } else \n      if( needDraw[CR.NODE] || drawAllLayers || drawOnlyNodeLayer || needMbClear[CR.NODE] ){\n        // console.log('NODE', needDraw[CR.NODE], needMbClear[CR.NODE]);\n\n        var useBuffer = motionBlur && !needMbClear[CR.NODE] && mbPxRatio !== 1;\n        var context = forcedContext || ( useBuffer ? r.data.bufferContexts[ CR.MOTIONBLUR_BUFFER_NODE ] : data.contexts[CR.NODE] );\n        var clear = motionBlur && !useBuffer ? 'motionBlur' : undefined;\n\n        // if( needDraw[CR.DRAG] && needDraw[CR.NODE] ){\n        //   clear = true;\n        // }\n\n        setContextTransform( context, clear );\n        drawElements(eles.nondrag, context);\n        \n        if( !drawAllLayers && !motionBlur ){\n          needDraw[CR.NODE] = false; \n        }\n      }\n\n      if ( !drawOnlyNodeLayer && (needDraw[CR.DRAG] || drawAllLayers || needMbClear[CR.DRAG]) ) {\n        // console.log('DRAG');\n\n        var useBuffer = motionBlur && !needMbClear[CR.DRAG] && mbPxRatio !== 1;\n        var context = forcedContext || ( useBuffer ? r.data.bufferContexts[ CR.MOTIONBLUR_BUFFER_DRAG ] : data.contexts[CR.DRAG] );\n        \n        setContextTransform( context, motionBlur && !useBuffer ? 'motionBlur' : undefined );\n        drawElements(eles.drag, context);\n        \n        if( !drawAllLayers && !motionBlur ){\n          needDraw[CR.DRAG] = false;\n        }\n      }\n      \n      if( r.showFps || (!drawOnlyNodeLayer && (needDraw[CR.SELECT_BOX] && !drawAllLayers)) ) {\n        // console.log('redrawing selection box');\n        \n        var context = forcedContext || data.contexts[CR.SELECT_BOX];\n\n        setContextTransform( context );\n\n        if( data.select[4] == 1 && ( r.hoverData.selecting || r.touchData.selecting ) ){\n          var zoom = data.cy.zoom();\n          var borderWidth = coreStyle['selection-box-border-width'].value / zoom;\n          \n          context.lineWidth = borderWidth;\n          context.fillStyle = \"rgba(\" \n            + coreStyle['selection-box-color'].value[0] + \",\"\n            + coreStyle['selection-box-color'].value[1] + \",\"\n            + coreStyle['selection-box-color'].value[2] + \",\"\n            + coreStyle['selection-box-opacity'].value + \")\";\n          \n          context.fillRect(\n            data.select[0],\n            data.select[1],\n            data.select[2] - data.select[0],\n            data.select[3] - data.select[1]);\n          \n          if (borderWidth > 0) {\n            context.strokeStyle = \"rgba(\" \n              + coreStyle['selection-box-border-color'].value[0] + \",\"\n              + coreStyle['selection-box-border-color'].value[1] + \",\"\n              + coreStyle['selection-box-border-color'].value[2] + \",\"\n              + coreStyle['selection-box-opacity'].value + \")\";\n            \n            context.strokeRect(\n              data.select[0],\n              data.select[1],\n              data.select[2] - data.select[0],\n              data.select[3] - data.select[1]);\n          }\n        }\n\n        if( data.bgActivePosistion && !r.hoverData.selecting ){\n          var zoom = data.cy.zoom();\n          var pos = data.bgActivePosistion;\n\n          context.fillStyle = \"rgba(\" \n            + coreStyle['active-bg-color'].value[0] + \",\"\n            + coreStyle['active-bg-color'].value[1] + \",\"\n            + coreStyle['active-bg-color'].value[2] + \",\"\n            + coreStyle['active-bg-opacity'].value + \")\";\n\n          context.beginPath();\n          context.arc(pos.x, pos.y, coreStyle['active-bg-size'].pxValue / zoom, 0, 2 * Math.PI); \n          context.fill();\n        }\n        \n        var timeToRender = r.averageRedrawTime;\n        if( r.showFps && timeToRender ){\n          timeToRender = Math.round( timeToRender );\n          var fps = Math.round(1000/timeToRender);\n\n          context.setTransform(1, 0, 0, 1, 0, 0);\n\n          //context.font = '20px helvetica';\n          context.fillStyle = 'rgba(255, 0, 0, 0.75)';\n          context.strokeStyle = 'rgba(255, 0, 0, 0.75)';\n          context.lineWidth = 1;\n          context.fillText( '1 frame = ' + timeToRender + ' ms = ' + fps + ' fps', 0, 20);\n\n          var maxFps = 60;\n          context.strokeRect(0, 30, 250, 20);\n          context.fillRect(0, 30, 250 * Math.min(fps/maxFps, 1), 20);\n        }\n\n        if( !drawAllLayers ){\n          needDraw[CR.SELECT_BOX] = false; \n        }\n      }\n\n      // motionblur: blit rendered blurry frames\n      if( motionBlur && mbPxRatio !== 1 ){\n        var cxtNode = data.contexts[CR.NODE];\n        var txtNode = r.data.bufferCanvases[ CR.MOTIONBLUR_BUFFER_NODE ];\n\n        var cxtDrag = data.contexts[CR.DRAG];\n        var txtDrag = r.data.bufferCanvases[ CR.MOTIONBLUR_BUFFER_DRAG ];\n\n        var drawMotionBlur = function( cxt, txt, needClear ){\n          cxt.setTransform(1, 0, 0, 1, 0, 0);\n\n          if( needClear || !motionBlurFadeEffect ){\n            cxt.clearRect( 0, 0, r.canvasWidth, r.canvasHeight );\n          } else {\n            mbclear( cxt, 0, 0, r.canvasWidth, r.canvasHeight );\n          }\n          \n          var pxr = /*r.fullQualityMb ? 1 :*/ mbPxRatio;\n\n          cxt.drawImage( \n            txt, // img\n            0, 0, // sx, sy\n            r.canvasWidth * pxr, r.canvasHeight * pxr, // sw, sh\n            0, 0, // x, y\n            r.canvasWidth, r.canvasHeight // w, h\n          );\n        };\n\n        if( needDraw[CR.NODE] || needMbClear[CR.NODE] ){\n          // console.log('mb NODE', needMbClear[CR.NODE]);\n\n          drawMotionBlur( cxtNode, txtNode, needMbClear[CR.NODE] );\n          needDraw[CR.NODE] = false;\n        }\n\n        if( needDraw[CR.DRAG] || needMbClear[CR.DRAG] ){\n          // console.log('mb DRAG');\n\n          drawMotionBlur( cxtDrag, txtDrag, needMbClear[CR.DRAG] );\n          needDraw[CR.DRAG] = false;\n          //needMbClear[CR.NODE] = true;\n        }\n      }\n\n\n      var endTime = Date.now();\n\n      if( r.averageRedrawTime === undefined ){\n        r.averageRedrawTime = endTime - startTime;\n      }\n\n      if( r.redrawCount === undefined ){\n        r.redrawCount = 0;\n      }\n\n      r.redrawCount++;\n\n      if( r.redrawTotalTime === undefined ){\n        r.redrawTotalTime = 0;\n      }\n\n      r.redrawTotalTime += endTime - startTime;\n      r.lastRedrawTime = endTime - startTime;\n\n      // use a weighted average with a bias from the previous average so we don't spike so easily\n      r.averageRedrawTime = r.averageRedrawTime/2 + (endTime - startTime)/2;\n      //console.log('actual: %i, average: %i', endTime - startTime, this.averageRedrawTime);\n\n      r.currentlyDrawing = false;\n\n      r.prevViewport = vp;\n\n      // console.profileEnd('draw' + startTime)\n\n      if( r.clearingMotionBlur ){\n        r.clearingMotionBlur = false;\n        r.motionBlurCleared = true;\n        r.motionBlur = true;\n      }\n\n      if( motionBlur ){ \n        r.motionBlurTimeout = setTimeout(function(){\n          r.motionBlurTimeout = null;\n          // console.log('mb CLEAR');\n\n          r.clearedForMotionBlur[CR.NODE] = false;\n          r.clearedForMotionBlur[CR.DRAG] = false;\n          r.motionBlur = false;\n          r.clearingMotionBlur = !textureDraw;\n          r.mbFrames = 0;\n\n          needDraw[CR.NODE] = true; \n          needDraw[CR.DRAG] = true; \n\n          r.redraw();\n        }, CanvasRenderer.motionBlurDelay);\n      }\n\n      r.drawingImage = false;\n\n    } // draw to context\n\n    if( !forcedContext ){\n      $$.util.requestAnimationFrame(drawToContext); // makes direct renders to screen a bit more responsive\n    } else {\n      drawToContext();\n    }\n\n    if( !forcedContext && !r.initrender ){\n      r.initrender = true;\n      cy.trigger('initrender');\n    }\n\n    if( !forcedContext ){\n      cy.triggerOnRender();\n    }\n    \n  };\n\n})( cytoscape );\n\n;(function($$){ 'use strict';\n\n  var CanvasRenderer = $$('renderer', 'canvas');\n  var CRp = CanvasRenderer.prototype;\n\n  // @O Polygon drawing\n  CRp.drawPolygonPath = function(\n    context, x, y, width, height, points) {\n\n    var halfW = width / 2;\n    var halfH = height / 2;\n\n    if( context.beginPath ){ context.beginPath(); }\n\n    context.moveTo( x + halfW * points[0], y + halfH * points[1] );\n\n    for (var i = 1; i < points.length / 2; i++) {\n      context.lineTo( x + halfW * points[i * 2], y + halfH * points[i * 2 + 1] );\n    }\n    \n    context.closePath();\n  };\n  \n  CRp.drawPolygon = function(\n    context, x, y, width, height, points) {\n\n    // Draw path\n    this.drawPolygonPath(context, x, y, width, height, points);\n    \n    // Fill path\n    context.fill();\n  };\n  \n  // Round rectangle drawing\n  CRp.drawRoundRectanglePath = function(\n    context, x, y, width, height, radius) {\n    \n    var halfWidth = width / 2;\n    var halfHeight = height / 2;\n    var cornerRadius = $$.math.getRoundRectangleRadius(width, height);\n    \n    if( context.beginPath ){ context.beginPath(); }\n    \n    // Start at top middle\n    context.moveTo(x, y - halfHeight);\n    // Arc from middle top to right side\n    context.arcTo(x + halfWidth, y - halfHeight, x + halfWidth, y, cornerRadius);\n    // Arc from right side to bottom\n    context.arcTo(x + halfWidth, y + halfHeight, x, y + halfHeight, cornerRadius);\n    // Arc from bottom to left side\n    context.arcTo(x - halfWidth, y + halfHeight, x - halfWidth, y, cornerRadius);\n    // Arc from left side to topBorder\n    context.arcTo(x - halfWidth, y - halfHeight, x, y - halfHeight, cornerRadius);\n    // Join line\n    context.lineTo(x, y - halfHeight);\n    \n    \n    context.closePath();\n  };\n  \n  CRp.drawRoundRectangle = function(\n    context, x, y, width, height, radius) {\n    \n    this.drawRoundRectanglePath(context, x, y, width, height, radius);\n    \n    context.fill();\n  };\n\n\n})( cytoscape );\n\n;(function($$){ 'use strict';\n\n  var CanvasRenderer = $$('renderer', 'canvas');\n  var CRp = CanvasRenderer.prototype;\n\n  CRp.createBuffer = function(w, h) {\n    var buffer = document.createElement('canvas');\n    buffer.width = w;\n    buffer.height = h;\n    \n    return [buffer, buffer.getContext('2d')];\n  };\n\n  CRp.bufferCanvasImage = function( options ){\n    var data = this.data;\n    var cy = data.cy;\n    var bb = cy.elements().boundingBox();\n    var width = options.full ? Math.ceil(bb.w) : this.data.container.clientWidth;\n    var height = options.full ? Math.ceil(bb.h) : this.data.container.clientHeight;\n    var scale = 1;\n\n    if( options.scale !== undefined ){\n      width *= options.scale;\n      height *= options.scale;\n\n      scale = options.scale;\n    } else if( $$.is.number(options.maxWidth) || $$.is.number(options.maxHeight) ){\n      var maxScaleW = Infinity;\n      var maxScaleH = Infinity;\n\n      if( $$.is.number(options.maxWidth) ){\n        maxScaleW = scale * options.maxWidth / width;\n      }\n\n      if( $$.is.number(options.maxHeight) ){\n        maxScaleH = scale * options.maxHeight / height;\n      }\n\n      scale = Math.min( maxScaleW, maxScaleH );\n\n      width *= scale;\n      height *= scale;\n    }\n\n    var buffCanvas = document.createElement('canvas');\n\n    buffCanvas.width = width;\n    buffCanvas.height = height;\n\n    buffCanvas.style.width = width + 'px';\n    buffCanvas.style.height = height + 'px';\n\n    var buffCxt = buffCanvas.getContext('2d');\n\n    // Rasterize the layers, but only if container has nonzero size\n    if (width > 0 && height > 0) {\n\n      buffCxt.clearRect( 0, 0, width, height );\n\n      if( options.bg ){\n        buffCxt.fillStyle = options.bg;\n        buffCxt.rect( 0, 0, width, height );\n        buffCxt.fill();\n      }\n\n      buffCxt.globalCompositeOperation = 'source-over';\n\n      if( options.full ){ // draw the full bounds of the graph\n        this.redraw({\n          forcedContext: buffCxt,\n          drawAllLayers: true,\n          forcedZoom: scale,\n          forcedPan: { x: -bb.x1*scale, y: -bb.y1*scale },\n          forcedPxRatio: 1\n        });\n      } else { // draw the current view\n        var cyPan = cy.pan();\n        var pan = {\n          x: cyPan.x * scale,\n          y: cyPan.y * scale\n        };\n        var zoom = cy.zoom() * scale;\n\n        this.redraw({\n          forcedContext: buffCxt,\n          drawAllLayers: true,\n          forcedZoom: zoom,\n          forcedPan: pan,\n          forcedPxRatio: 1\n        });\n      }\n    }\n\n    return buffCanvas;\n  }; \n\n  CRp.png = function( options ){\n    return this.bufferCanvasImage( options ).toDataURL('image/png');\n  };\n  \n  CRp.jpg = function( options ){\n    return this.bufferCanvasImage( options ).toDataURL('image/jpeg');\n  };\n\n})( cytoscape );\n\n;(function($$){ 'use strict';\n\n  var CanvasRenderer = $$('renderer', 'canvas');\n  var CR = CanvasRenderer;\n  var CRp = CR.prototype;\n\n  CRp.registerBinding = function(target, event, handler, useCapture){\n    this.bindings.push({\n      target: target,\n      event: event,\n      handler: handler,\n      useCapture: useCapture\n    });\n\n    target.addEventListener(event, handler, useCapture);\n  };\n\n  CRp.nodeIsDraggable = function(node) {\n    if (node._private.style['opacity'].value !== 0\n      && node._private.style['visibility'].value == 'visible'\n      && node._private.style['display'].value == 'element'\n      && !node.locked()\n      && node.grabbable() ) {\n\n      return true;\n    }\n\n    return false;\n  };\n\n  CRp.load = function() {\n    var r = this;\n\n    var getDragListIds = function(opts){\n      var listHasId;\n\n      if( opts.addToList && r.data.cy.hasCompoundNodes() ){ // only needed for compound graphs\n        if( !opts.addToList.hasId ){ // build ids lookup if doesn't already exist\n          opts.addToList.hasId = {};\n\n          for( var i = 0; i < opts.addToList.length; i++ ){\n            var ele = opts.addToList[i];\n\n            opts.addToList.hasId[ ele.id() ] = true;\n          }\n        }\n\n        listHasId = opts.addToList.hasId;\n      }\n\n      return listHasId || {};\n    };\n\n    // helper function to determine which child nodes and inner edges\n    // of a compound node to be dragged as well as the grabbed and selected nodes\n    var addDescendantsToDrag = function(node, opts){\n      if( !node._private.cy.hasCompoundNodes() ){\n        return;\n      }\n\n      if( opts.inDragLayer == null && opts.addToList == null ){ return; } // nothing to do\n\n      var listHasId = getDragListIds( opts );\n\n      var innerNodes = node.descendants();\n\n      // TODO do not drag hidden children & children of hidden children?\n      for( var i = 0; i < innerNodes.size(); i++ ){\n        var iNode = innerNodes[i];\n        var _p = iNode._private;\n\n        if( opts.inDragLayer ){\n          _p.rscratch.inDragLayer = true;\n        }\n\n        if( opts.addToList && !listHasId[ iNode.id() ] ){\n          opts.addToList.push( iNode );\n          listHasId[ iNode.id() ] = true;\n\n          _p.grabbed = true;\n        }\n\n        var edges = _p.edges;\n        for( var j = 0; opts.inDragLayer && j < edges.length; j++ ){\n          edges[j]._private.rscratch.inDragLayer = true;\n        }\n      }\n    };\n\n    // adds the given nodes, and its edges to the drag layer\n    var addNodeToDrag = function(node, opts){\n\n      var _p = node._private;\n      var listHasId = getDragListIds( opts );\n\n      if( opts.inDragLayer ){\n        _p.rscratch.inDragLayer = true;\n      }\n\n      if( opts.addToList && !listHasId[ node.id() ] ){\n        opts.addToList.push( node );\n        listHasId[ node.id() ] = true;\n\n        _p.grabbed = true;\n      }\n\n      var edges = _p.edges;\n      for( var i = 0; opts.inDragLayer && i < edges.length; i++ ){\n        edges[i]._private.rscratch.inDragLayer = true;\n      }\n\n      addDescendantsToDrag( node, opts ); // always add to drag\n\n      // also add nodes and edges related to the topmost ancestor\n      updateAncestorsInDragLayer( node, {\n        inDragLayer: opts.inDragLayer\n      } );\n    };\n    \n    var freeDraggedElements = function( draggedElements ){\n      if( !draggedElements ){ return; }\n      \n      for (var i=0; i < draggedElements.length; i++) {\n\n        var dEi_p = draggedElements[i]._private;\n\n        if(dEi_p.group === 'nodes') {\n          dEi_p.rscratch.inDragLayer = false;\n          dEi_p.grabbed = false;\n\n          var sEdges = dEi_p.edges;\n          for( var j = 0; j < sEdges.length; j++ ){ sEdges[j]._private.rscratch.inDragLayer = false; }\n\n          // for compound nodes, also remove related nodes and edges from the drag layer\n          updateAncestorsInDragLayer(draggedElements[i], { inDragLayer: false });\n\n        } else if( dEi_p.group === 'edges' ){\n          dEi_p.rscratch.inDragLayer = false;\n        }\n\n      }\n    };\n\n    // helper function to determine which ancestor nodes and edges should go\n    // to the drag layer (or should be removed from drag layer).\n    var updateAncestorsInDragLayer = function(node, opts) {\n\n      if( opts.inDragLayer == null && opts.addToList == null ){ return; } // nothing to do\n\n      // find top-level parent\n      var parent = node;\n\n      if( !node._private.cy.hasCompoundNodes() ){\n        return;\n      }\n\n      while( parent.parent().nonempty() ){\n        parent = parent.parent()[0];\n      }\n\n      // no parent node: no nodes to add to the drag layer\n      if( parent == node ){\n        return;\n      }\n\n      var nodes = parent.descendants()\n        .merge( parent )\n        .unmerge( node )\n        .unmerge( node.descendants() )\n      ;\n\n      var edges = nodes.connectedEdges();\n\n      var listHasId = getDragListIds( opts );\n\n      for( var i = 0; i < nodes.size(); i++ ){\n        if( opts.inDragLayer !== undefined ){\n          nodes[i]._private.rscratch.inDragLayer = opts.inDragLayer;\n        }\n\n        if( opts.addToList && !listHasId[ nodes[i].id() ] ){\n          opts.addToList.push( nodes[i] );\n          listHasId[ nodes[i].id() ] = true;\n\n          nodes[i]._private.grabbed = true;\n        }\n      }\n\n      for( var j = 0; opts.inDragLayer !== undefined && j < edges.length; j++ ) {\n        edges[j]._private.rscratch.inDragLayer = opts.inDragLayer;\n      }\n    };\n\n    if( typeof MutationObserver !== 'undefined' ){\n      r.removeObserver = new MutationObserver(function( mutns ){\n        for( var i = 0; i < mutns.length; i++ ){\n          var mutn = mutns[i];\n          var rNodes = mutn.removedNodes;\n\n          if( rNodes ){ for( var j = 0; j < rNodes.length; j++ ){\n            var rNode = rNodes[j];\n\n            if( rNode === r.data.container ){\n              r.destroy();\n              break;\n            }\n          } }\n        }\n      });\n\n      r.removeObserver.observe( r.data.container.parentNode, { childList: true } );\n    } else {\n      r.registerBinding(r.data.container, 'DOMNodeRemoved', function(e){\n        r.destroy();\n      });\n    }\n\n\n\n    // auto resize\n    r.registerBinding(window, 'resize', $$.util.debounce( function(e) {\n      r.invalidateContainerClientCoordsCache();\n\n      r.matchCanvasSize(r.data.container);\n      r.data.canvasNeedsRedraw[CR.NODE] = true;\n      r.redraw();\n    }, 100 ) );\n\n    var invalCtnrBBOnScroll = function(domEle){\n      r.registerBinding(domEle, 'scroll', function(e){\n        r.invalidateContainerClientCoordsCache();\n      } );\n    };\n\n    var bbCtnr = r.data.cy.container();\n\n    for( ;; ){\n\n      invalCtnrBBOnScroll( bbCtnr );\n\n      if( bbCtnr.parentNode ){\n        bbCtnr = bbCtnr.parentNode;\n      } else {\n        break;\n      }\n\n    }\n\n    // stop right click menu from appearing on cy\n    r.registerBinding(r.data.container, 'contextmenu', function(e){\n      e.preventDefault();\n    });\n\n    var inBoxSelection = function(){\n      return r.data.select[4] !== 0;\n    };\n\n    // Primary key\n    r.registerBinding(r.data.container, 'mousedown', function(e) {\n      e.preventDefault();\n      r.hoverData.capture = true;\n      r.hoverData.which = e.which;\n\n      var cy = r.data.cy;\n      var pos = r.projectIntoViewport(e.clientX, e.clientY);\n      var select = r.data.select;\n      var near = r.findNearestElement(pos[0], pos[1], true, false);\n      var draggedElements = r.dragData.possibleDragElements;\n\n      r.hoverData.mdownPos = pos;\n      \n      var needsRedraw = r.data.canvasNeedsRedraw;\n\n      var checkForTaphold = function(){\n        r.hoverData.tapholdCancelled = false;\n\n        clearTimeout( r.hoverData.tapholdTimeout );\n\n        r.hoverData.tapholdTimeout = setTimeout(function(){\n\n          if( r.hoverData.tapholdCancelled ){\n            return;\n          } else {\n            var ele = r.hoverData.down;\n\n            if( ele ){\n              ele.trigger( new $$.Event(e, {\n                type: 'taphold',\n                cyPosition: { x: pos[0], y: pos[1] }\n              }) );\n            } else {\n              cy.trigger( new $$.Event(e, {\n                type: 'taphold',\n                cyPosition: { x: pos[0], y: pos[1] }\n              }) );\n            }\n          }\n\n        }, r.tapholdDuration);\n      };\n\n      // Right click button\n      if( e.which == 3 ){\n\n        r.hoverData.cxtStarted = true;\n\n        var cxtEvt = new $$.Event(e, {\n          type: 'cxttapstart',\n          cyPosition: { x: pos[0], y: pos[1] }\n        });\n\n        if( near ){\n          near.activate();\n          near.trigger( cxtEvt );\n\n          r.hoverData.down = near;\n        } else {\n          cy.trigger( cxtEvt );\n        }\n\n        r.hoverData.downTime = (new Date()).getTime();\n        r.hoverData.cxtDragged = false;\n\n      // Primary button\n      } else if (e.which == 1) {\n\n        if( near ){\n          near.activate();\n        }\n\n        // Element dragging\n        {\n          // If something is under the cursor and it is draggable, prepare to grab it\n          if (near != null) {\n\n            if( r.nodeIsDraggable(near) ){\n\n              var grabEvent = new $$.Event(e, {\n                type: 'grab',\n                cyPosition: { x: pos[0], y: pos[1] }\n              });\n\n              if ( near.isNode() && !near.selected() ){\n\n                draggedElements = r.dragData.possibleDragElements = [];\n                addNodeToDrag( near, { addToList: draggedElements } );\n\n                near.trigger(grabEvent);\n\n              } else if ( near.isNode() && near.selected() ){\n                draggedElements = r.dragData.possibleDragElements = [  ];\n\n                var selectedNodes = cy.$(function(){ return this.isNode() && this.selected(); });\n\n                for( var i = 0; i < selectedNodes.length; i++ ){\n\n                  // Only add this selected node to drag if it is draggable, eg. has nonzero opacity\n                  if( r.nodeIsDraggable( selectedNodes[i] ) ){\n                    addNodeToDrag( selectedNodes[i], { addToList: draggedElements } );\n                  }\n                }\n\n                near.trigger( grabEvent );\n              }\n\n              needsRedraw[CR.NODE] = true;\n              needsRedraw[CR.DRAG] = true;\n\n            }\n\n            near\n              .trigger(new $$.Event(e, {\n                type: 'mousedown',\n                cyPosition: { x: pos[0], y: pos[1] }\n              }))\n              .trigger(new $$.Event(e, {\n                type: 'tapstart',\n                cyPosition: { x: pos[0], y: pos[1] }\n              }))\n              .trigger(new $$.Event(e, {\n                type: 'vmousedown',\n                cyPosition: { x: pos[0], y: pos[1] }\n              }))\n            ;\n\n          } else if (near == null) {\n            cy\n              .trigger(new $$.Event(e, {\n                type: 'mousedown',\n                cyPosition: { x: pos[0], y: pos[1] }\n              }))\n              .trigger(new $$.Event(e, {\n                type: 'tapstart',\n                cyPosition: { x: pos[0], y: pos[1] }\n              }))\n              .trigger(new $$.Event(e, {\n                type: 'vmousedown',\n                cyPosition: { x: pos[0], y: pos[1] }\n              }))\n            ;\n          }\n\n          r.hoverData.down = near;\n          r.hoverData.downTime = (new Date()).getTime();\n\n        }\n\n        // Selection box\n        if ( near == null || near.isEdge() ) {\n          select[4] = 1;\n          var timeUntilActive = Math.max( 0, CR.panOrBoxSelectDelay - (+new Date() - r.hoverData.downTime) );\n\n          clearTimeout( r.bgActiveTimeout );\n\n          if( cy.boxSelectionEnabled() || ( near && near.isEdge() ) ){\n            r.bgActiveTimeout = setTimeout(function(){\n              if( near ){\n                near.unactivate();\n              }\n\n              r.data.bgActivePosistion = {\n                x: pos[0],\n                y: pos[1]\n              };\n\n              r.hoverData.dragging = true;\n\n              //checkForTaphold();\n\n              needsRedraw[CR.SELECT_BOX] = true;\n\n              r.redraw();\n            }, timeUntilActive);\n          } else {\n            r.data.bgActivePosistion = {\n              x: pos[0],\n              y: pos[1]\n            };\n\n            //r.hoverData.dragging = true;\n\n            //checkForTaphold();\n\n            needsRedraw[CR.SELECT_BOX] = true;\n\n            r.redraw();\n          }\n\n        }\n\n        checkForTaphold();\n\n      }\n\n      // Initialize selection box coordinates\n      select[0] = select[2] = pos[0];\n      select[1] = select[3] = pos[1];\n\n    }, false);\n\n    r.registerBinding(window, 'mousemove', $$.util.throttle( function(e) {\n      var preventDefault = false;\n      var capture = r.hoverData.capture;\n\n      // save cycles if mouse events aren't to be captured\n      if ( !capture ){\n        var containerPageCoords = r.findContainerClientCoords();\n\n        if (e.clientX > containerPageCoords[0] && e.clientX < containerPageCoords[0] + r.canvasWidth\n          && e.clientY > containerPageCoords[1] && e.clientY < containerPageCoords[1] + r.canvasHeight\n        ) {\n          // inside container bounds so OK\n        } else {\n          return;\n        }\n\n        var cyContainer = r.data.container;\n        var target = e.target;\n        var tParent = target.parentNode;\n        var containerIsTarget = false;\n\n        while( tParent ){\n          if( tParent === cyContainer ){\n            containerIsTarget = true;\n            break;\n          }\n\n          tParent = tParent.parentNode;\n        }\n\n        if( !containerIsTarget ){ return; } // if target is outisde cy container, then this event is not for us\n      }\n\n      var cy = r.data.cy;\n      var zoom = cy.zoom();\n      var pos = r.projectIntoViewport(e.clientX, e.clientY);\n      var select = r.data.select;\n      var needsRedraw = r.data.canvasNeedsRedraw;\n\n      var near = null;\n      if( !r.hoverData.draggingEles ){\n        near = r.findNearestElement(pos[0], pos[1], true, false);\n      }\n      var last = r.hoverData.last;\n      var down = r.hoverData.down;\n\n      var disp = [pos[0] - select[2], pos[1] - select[3]];\n\n      var draggedElements = r.dragData.possibleDragElements;\n\n      var dx = select[2] - select[0];\n      var dx2 = dx * dx;\n      var dy = select[3] - select[1];\n      var dy2 = dy * dy;\n      var dist2 = dx2 + dy2;\n      var rdist2 = dist2 * zoom * zoom;\n\n      r.hoverData.tapholdCancelled = true;\n\n      var updateDragDelta = function(){\n        var dragDelta = r.hoverData.dragDelta = r.hoverData.dragDelta || [];\n\n        if( dragDelta.length === 0 ){\n          dragDelta.push( disp[0] );\n          dragDelta.push( disp[1] );\n        } else {\n          dragDelta[0] += disp[0];\n          dragDelta[1] += disp[1];\n        }\n      };\n\n\n      preventDefault = true;\n\n      // Mousemove event\n      {\n        if (near != null) {\n          near\n            .trigger(new $$.Event(e, {\n              type: 'mousemove',\n              cyPosition: { x: pos[0], y: pos[1] }\n            }))\n            .trigger(new $$.Event(e, {\n              type: 'vmousemove',\n              cyPosition: { x: pos[0], y: pos[1] }\n            }))\n            .trigger(new $$.Event(e, {\n              type: 'tapdrag',\n              cyPosition: { x: pos[0], y: pos[1] }\n            }))\n          ;\n\n        } else if (near == null) {\n          cy\n            .trigger(new $$.Event(e, {\n              type: 'mousemove',\n              cyPosition: { x: pos[0], y: pos[1] }\n            }))\n            .trigger(new $$.Event(e, {\n              type: 'vmousemove',\n              cyPosition: { x: pos[0], y: pos[1] }\n            }))\n            .trigger(new $$.Event(e, {\n              type: 'tapdrag',\n              cyPosition: { x: pos[0], y: pos[1] }\n            }))\n          ;\n        }\n\n      }\n\n      // trigger context drag if rmouse down\n      if( r.hoverData.which === 3 ){\n        var cxtEvt = new $$.Event(e, {\n          type: 'cxtdrag',\n          cyPosition: { x: pos[0], y: pos[1] }\n        });\n\n        if( down ){\n          down.trigger( cxtEvt );\n        } else {\n          cy.trigger( cxtEvt );\n        }\n\n        r.hoverData.cxtDragged = true;\n\n        if( !r.hoverData.cxtOver || near !== r.hoverData.cxtOver ){\n\n          if( r.hoverData.cxtOver ){\n            r.hoverData.cxtOver.trigger( new $$.Event(e, {\n              type: 'cxtdragout',\n              cyPosition: { x: pos[0], y: pos[1] }\n            }) );\n\n            // console.log('cxtdragout ' + r.hoverData.cxtOver.id());\n          }\n\n          r.hoverData.cxtOver = near;\n\n          if( near ){\n            near.trigger( new $$.Event(e, {\n              type: 'cxtdragover',\n              cyPosition: { x: pos[0], y: pos[1] }\n            }) );\n\n            // console.log('cxtdragover ' + near.id());\n          }\n\n        }\n\n      // Check if we are drag panning the entire graph\n      } else if (r.hoverData.dragging) {\n        preventDefault = true;\n\n        if( cy.panningEnabled() && cy.userPanningEnabled() ){\n          var deltaP;\n\n          if( r.hoverData.justStartedPan ){\n            var mdPos = r.hoverData.mdownPos;\n\n            deltaP = {\n              x: ( pos[0] - mdPos[0] ) * zoom,\n              y: ( pos[1] - mdPos[1] ) * zoom\n            };\n\n            r.hoverData.justStartedPan = false;\n\n          } else {\n            deltaP = {\n              x: disp[0] * zoom,\n              y: disp[1] * zoom\n            };\n\n          }\n\n          cy.panBy( deltaP );\n\n          r.hoverData.dragged = true;\n        }\n\n        // Needs reproject due to pan changing viewport\n        pos = r.projectIntoViewport(e.clientX, e.clientY);\n\n      // Checks primary button down & out of time & mouse not moved much\n      } else if(\n          select[4] == 1 && (down == null || down.isEdge())\n          && ( !cy.boxSelectionEnabled() || (+new Date() - r.hoverData.downTime >= CR.panOrBoxSelectDelay) )\n          //&& (Math.abs(select[3] - select[1]) + Math.abs(select[2] - select[0]) < 4)\n          && !r.hoverData.selecting\n          && rdist2 >= r.desktopTapThreshold2\n          && cy.panningEnabled() && cy.userPanningEnabled()\n      ){\n        r.hoverData.dragging = true;\n        r.hoverData.selecting = false;\n        r.hoverData.justStartedPan = true;\n        select[4] = 0;\n\n      } else {\n        // deactivate bg on box selection\n        if (cy.boxSelectionEnabled() && !r.hoverData.dragging && Math.pow(select[2] - select[0], 2) + Math.pow(select[3] - select[1], 2) > 7 && select[4]){\n          clearTimeout( r.bgActiveTimeout );\n          r.data.bgActivePosistion = undefined;\n          r.hoverData.selecting = true;\n\n          needsRedraw[CR.SELECT_BOX] = true;\n          r.redraw();\n        }\n\n        if( down && down.isEdge() && down.active() ){ down.unactivate(); }\n\n        if (near != last) {\n\n          if (last) {\n            last.trigger( new $$.Event(e, {\n              type: 'mouseout',\n              cyPosition: { x: pos[0], y: pos[1] }\n            }) );\n\n            last.trigger( new $$.Event(e, {\n              type: 'tapdragout',\n              cyPosition: { x: pos[0], y: pos[1] }\n            }) );\n          }\n\n          if (near) {\n            near.trigger( new $$.Event(e, {\n              type: 'mouseover',\n              cyPosition: { x: pos[0], y: pos[1] }\n            }) );\n\n            near.trigger( new $$.Event(e, {\n              type: 'tapdragover',\n              cyPosition: { x: pos[0], y: pos[1] }\n            }) );\n          }\n\n          r.hoverData.last = near;\n        }\n\n        if( down && down.isNode() && r.nodeIsDraggable(down) ){\n\n          if( rdist2 >= r.desktopTapThreshold2 ){ // then drag\n\n            var justStartedDrag = !r.dragData.didDrag;\n\n            if( justStartedDrag ) {\n              needsRedraw[CR.NODE] = true;\n            }\n\n            r.dragData.didDrag = true; // indicate that we actually did drag the node\n\n            var toTrigger = [];\n\n            for( var i = 0; i < draggedElements.length; i++ ){\n              var dEle = draggedElements[i];\n\n              // now, add the elements to the drag layer if not done already\n              if( !r.hoverData.draggingEles ){\n                addNodeToDrag( dEle, { inDragLayer: true } );\n              }\n\n              // Locked nodes not draggable, as well as non-visible nodes\n              if( dEle.isNode() && r.nodeIsDraggable(dEle) && dEle.grabbed() ){\n                var dPos = dEle._private.position;\n\n                toTrigger.push( dEle );\n\n                if( $$.is.number(disp[0]) && $$.is.number(disp[1]) ){\n                  dPos.x += disp[0];\n                  dPos.y += disp[1];\n\n                  if( justStartedDrag ){\n                    var dragDelta = r.hoverData.dragDelta;\n\n                    if( $$.is.number(dragDelta[0]) && $$.is.number(dragDelta[1]) ){\n                      dPos.x += dragDelta[0];\n                      dPos.y += dragDelta[1];\n                    }\n                  }\n                }\n\n              }\n            }\n\n            r.hoverData.draggingEles = true;\n\n            var tcol = (new $$.Collection(cy, toTrigger));\n\n            tcol.updateCompoundBounds();\n            tcol.trigger('position drag');\n\n            needsRedraw[CR.DRAG] = true;\n            r.redraw();\n\n          } else { // otherwise save drag delta for when we actually start dragging so the relative grab pos is constant\n            updateDragDelta();\n          }\n        }\n\n        // prevent the dragging from triggering text selection on the page\n        preventDefault = true;\n      }\n\n      select[2] = pos[0]; select[3] = pos[1];\n\n      if( preventDefault ){\n        if(e.stopPropagation) e.stopPropagation();\n          if(e.preventDefault) e.preventDefault();\n          return false;\n        }\n    }, 1000/30, { trailing: true }), false);\n\n    r.registerBinding(window, 'mouseup', function(e) {\n      // console.log('--\\nmouseup', e)\n\n      var capture = r.hoverData.capture;\n      if (!capture) { return; }\n      r.hoverData.capture = false;\n\n      var cy = r.data.cy; var pos = r.projectIntoViewport(e.clientX, e.clientY); var select = r.data.select;\n      var near = r.findNearestElement(pos[0], pos[1], true, false);\n      var draggedElements = r.dragData.possibleDragElements; var down = r.hoverData.down;\n      var shiftDown = e.shiftKey;\n      var needsRedraw = r.data.canvasNeedsRedraw;\n\n      if( r.data.bgActivePosistion ){\n        needsRedraw[CR.SELECT_BOX] = true;\n        r.redraw();\n      }\n\n      r.data.bgActivePosistion = undefined; // not active bg now\n      clearTimeout( r.bgActiveTimeout );\n\n      if( down ){\n        down.unactivate();\n      }\n\n      if( r.hoverData.which === 3 ){\n        var cxtEvt = new $$.Event(e, {\n          type: 'cxttapend',\n          cyPosition: { x: pos[0], y: pos[1] }\n        });\n\n        if( down ){\n          down.trigger( cxtEvt );\n        } else {\n          cy.trigger( cxtEvt );\n        }\n\n        if( !r.hoverData.cxtDragged ){\n          var cxtTap = new $$.Event(e, {\n            type: 'cxttap',\n            cyPosition: { x: pos[0], y: pos[1] }\n          });\n\n          if( down ){\n            down.trigger( cxtTap );\n          } else {\n            cy.trigger( cxtTap );\n          }\n        }\n\n        r.hoverData.cxtDragged = false;\n        r.hoverData.which = null;\n\n      // if not right mouse\n      } else {\n\n        // Deselect all elements if nothing is currently under the mouse cursor and we aren't dragging something\n        if ( (down == null) // not mousedown on node\n          && !r.dragData.didDrag // didn't move the node around\n          //&& !(Math.pow(select[2] - select[0], 2) + Math.pow(select[3] - select[1], 2) > 7 && select[4]) // not box selection\n          && !r.hoverData.dragged // didn't pan\n        ) {\n\n          cy.$(function(){\n            return this.selected();\n          }).unselect();\n\n          if (draggedElements.length > 0) {\n            needsRedraw[CR.NODE] = true;\n          }\n\n          r.dragData.possibleDragElements = draggedElements = [];\n        }\n\n\n        // Mouseup event\n        {\n          // console.log('trigger mouseup et al');\n\n          if (near != null) {\n            near\n              .trigger(new $$.Event(e, {\n                type: 'mouseup',\n                cyPosition: { x: pos[0], y: pos[1] }\n              }))\n              .trigger(new $$.Event(e, {\n                type: 'tapend',\n                cyPosition: { x: pos[0], y: pos[1] }\n              }))\n              .trigger(new $$.Event(e, {\n                type: 'vmouseup',\n                cyPosition: { x: pos[0], y: pos[1] }\n              }))\n            ;\n          } else if (near == null) {\n            cy\n              .trigger(new $$.Event(e, {\n                type: 'mouseup',\n                cyPosition: { x: pos[0], y: pos[1] }\n              }))\n              .trigger(new $$.Event(e, {\n                type: 'tapend',\n                cyPosition: { x: pos[0], y: pos[1] }\n              }))\n              .trigger(new $$.Event(e, {\n                type: 'vmouseup',\n                cyPosition: { x: pos[0], y: pos[1] }\n              }))\n            ;\n          }\n        }\n\n        // Click event\n        {\n          // console.log('trigger click et al');\n\n          if(\n            //Math.pow(select[2] - select[0], 2) + Math.pow(select[3] - select[1], 2) === 0\n            !r.dragData.didDrag // didn't move a node around\n            && !r.hoverData.dragged // didn't pan\n          ){\n            if (near != null) {\n              near\n                .trigger( new $$.Event(e, {\n                  type: 'click',\n                  cyPosition: { x: pos[0], y: pos[1] }\n                }) )\n                .trigger( new $$.Event(e, {\n                  type: 'tap',\n                  cyPosition: { x: pos[0], y: pos[1] }\n                }) )\n                .trigger( new $$.Event(e, {\n                  type: 'vclick',\n                  cyPosition: { x: pos[0], y: pos[1] }\n                }) )\n              ;\n            } else if (near == null) {\n              cy\n                .trigger( new $$.Event(e, {\n                  type: 'click',\n                  cyPosition: { x: pos[0], y: pos[1] }\n                }) )\n                .trigger( new $$.Event(e, {\n                  type: 'tap',\n                  cyPosition: { x: pos[0], y: pos[1] }\n                }) )\n                .trigger( new $$.Event(e, {\n                  type: 'vclick',\n                  cyPosition: { x: pos[0], y: pos[1] }\n                }) )\n              ;\n            }\n          }\n        }\n\n        // Single selection\n        if (near == down && !r.dragData.didDrag) {\n          if (near != null && near._private.selectable) {\n\n            // console.log('single selection')\n\n            if( r.hoverData.dragging ){\n              // if panning, don't change selection state\n            } else if( cy.selectionType() === 'additive' || shiftDown ){\n              if( near.selected() ){\n                near.unselect();\n              } else {\n                near.select();\n              }\n            } else {\n              if( !shiftDown ){\n                cy.$(':selected').unmerge( near ).unselect();\n                near.select();\n              }\n            }\n\n            needsRedraw[CR.NODE] = true;\n\n          }\n\n        }\n\n        if ( r.hoverData.selecting && cy.boxSelectionEnabled() &&  Math.pow(select[2] - select[0], 2) + Math.pow(select[3] - select[1], 2) > 7 && select[4] ) {\n          var newlySelected = [];\n          var box = r.getAllInBox( select[0], select[1], select[2], select[3] );\n\n          needsRedraw[CR.SELECT_BOX] = true;\n\n          if( box.length > 0 ) {\n            needsRedraw[CR.NODE] = true;\n          }\n\n          for( var i = 0; i < box.length; i++ ){\n            if( box[i]._private.selectable ){\n              newlySelected.push( box[i] );\n            }\n          }\n\n          var newlySelCol = new $$.Collection( cy, newlySelected );\n\n          if( cy.selectionType() === 'additive' ){\n            newlySelCol.select();\n          } else {\n            if( !shiftDown ){\n              cy.$(':selected').unmerge( newlySelCol ).unselect();\n            }\n\n            newlySelCol.select();\n          }\n\n          // always need redraw in case eles unselectable\n          r.redraw();\n\n        }\n\n        // Cancel drag pan\n        if( r.hoverData.dragging ){\n          r.hoverData.dragging = false;\n          \n          needsRedraw[CR.SELECT_BOX] = true;\n          needsRedraw[CR.NODE] = true;\n          \n          r.redraw();\n        }\n\n        if (!select[4]) {\n          // console.log('free at end', draggedElements)\n\n          needsRedraw[CR.DRAG] = true;\n          needsRedraw[CR.NODE] = true;\n\n          freeDraggedElements( draggedElements );\n\n          if( down ){ down.trigger('free'); }\n\n  //        draggedElements = r.dragData.possibleDragElements = [];\n\n        }\n\n      } // else not right mouse\n\n      select[4] = 0; r.hoverData.down = null;\n\n      //r.data.canvasNeedsRedraw[CR.SELECT_BOX] = true;\n\n//      console.log('mu', pos[0], pos[1]);\n//      console.log('ss', select);\n\n      r.hoverData.cxtStarted = false;\n      r.hoverData.draggingEles = false;\n      r.hoverData.selecting = false;\n      r.dragData.didDrag = false;\n      r.hoverData.dragged = false;\n      r.hoverData.dragDelta = [];\n\n    }, false);\n\n    var wheelHandler = function(e) {\n      if( r.scrollingPage ){ return; } // while scrolling, ignore wheel-to-zoom\n\n      var cy = r.data.cy;\n      var pos = r.projectIntoViewport(e.clientX, e.clientY);\n      var rpos = [pos[0] * cy.zoom() + cy.pan().x,\n                    pos[1] * cy.zoom() + cy.pan().y];\n\n      if( r.hoverData.draggingEles || r.hoverData.dragging || r.hoverData.cxtStarted || inBoxSelection() ){ // if pan dragging or cxt dragging, wheel movements make no zoom\n        e.preventDefault();\n        return;\n      }\n\n      if( cy.panningEnabled() && cy.userPanningEnabled() && cy.zoomingEnabled() && cy.userZoomingEnabled() ){\n        e.preventDefault();\n\n        r.data.wheelZooming = true;\n        clearTimeout( r.data.wheelTimeout );\n        r.data.wheelTimeout = setTimeout(function(){\n          r.data.wheelZooming = false;\n\n          r.data.canvasNeedsRedraw[CR.NODE] = true;\n          r.redraw();\n        }, 150);\n\n        var diff = e.deltaY / -250 || e.wheelDeltaY / 1000 || e.wheelDelta / 1000;\n        diff = diff * r.wheelSensitivity;\n\n        var needsWheelFix = e.deltaMode === 1;\n        if( needsWheelFix ){ // fixes slow wheel events on ff/linux and ff/windows\n          diff *= 33;\n        }\n\n        cy.zoom({\n          level: cy.zoom() * Math.pow(10, diff),\n          renderedPosition: { x: rpos[0], y: rpos[1] }\n        });\n      }\n\n    };\n\n    // Functions to help with whether mouse wheel should trigger zooming\n    // --\n    r.registerBinding(r.data.container, 'wheel', wheelHandler, true);\n\n    // disable nonstandard wheel events\n    // r.registerBinding(r.data.container, 'mousewheel', wheelHandler, true);\n    // r.registerBinding(r.data.container, 'DOMMouseScroll', wheelHandler, true);\n    // r.registerBinding(r.data.container, 'MozMousePixelScroll', wheelHandler, true); // older firefox\n\n    r.registerBinding(window, 'scroll', function(e){\n      r.scrollingPage = true;\n\n      clearTimeout( r.scrollingPageTimeout );\n      r.scrollingPageTimeout = setTimeout(function(){\n        r.scrollingPage = false;\n      }, 250);\n    }, true);\n\n    // Functions to help with handling mouseout/mouseover on the Cytoscape container\n          // Handle mouseout on Cytoscape container\n    r.registerBinding(r.data.container, 'mouseout', function(e) {\n      var pos = r.projectIntoViewport(e.clientX, e.clientY);\n\n      r.data.cy.trigger(new $$.Event(e, {\n        type: 'mouseout',\n        cyPosition: { x: pos[0], y: pos[1] }\n      }));\n    }, false);\n\n    r.registerBinding(r.data.container, 'mouseover', function(e) {\n      var pos = r.projectIntoViewport(e.clientX, e.clientY);\n\n      r.data.cy.trigger(new $$.Event(e, {\n        type: 'mouseover',\n        cyPosition: { x: pos[0], y: pos[1] }\n      }));\n    }, false);\n\n    var f1x1, f1y1, f2x1, f2y1; // starting points for pinch-to-zoom\n    var distance1, distance1Sq; // initial distance between finger 1 and finger 2 for pinch-to-zoom\n    var center1, modelCenter1; // center point on start pinch to zoom\n    var offsetLeft, offsetTop;\n    var containerWidth, containerHeight;\n    var twoFingersStartInside;\n\n    var distance = function(x1, y1, x2, y2){\n      return Math.sqrt( (x2-x1)*(x2-x1) + (y2-y1)*(y2-y1) );\n    };\n\n    var distanceSq = function(x1, y1, x2, y2){\n      return (x2-x1)*(x2-x1) + (y2-y1)*(y2-y1);\n    };\n\n    r.registerBinding(r.data.container, 'touchstart', function(e) {\n\n      clearTimeout( this.threeFingerSelectTimeout );\n\n      if( e.target !== r.data.link ){\n        e.preventDefault();\n      }\n\n      r.touchData.capture = true;\n      r.data.bgActivePosistion = undefined;\n\n      var cy = r.data.cy;\n      var nodes = r.getCachedNodes();\n      var edges = r.getCachedEdges();\n      var now = r.touchData.now;\n      var earlier = r.touchData.earlier;\n      var needsRedraw = r.data.canvasNeedsRedraw;\n\n      if (e.touches[0]) { var pos = r.projectIntoViewport(e.touches[0].clientX, e.touches[0].clientY); now[0] = pos[0]; now[1] = pos[1]; }\n      if (e.touches[1]) { var pos = r.projectIntoViewport(e.touches[1].clientX, e.touches[1].clientY); now[2] = pos[0]; now[3] = pos[1]; }\n      if (e.touches[2]) { var pos = r.projectIntoViewport(e.touches[2].clientX, e.touches[2].clientY); now[4] = pos[0]; now[5] = pos[1]; }\n\n\n      // record starting points for pinch-to-zoom\n      if( e.touches[1] ){\n\n        // anything in the set of dragged eles should be released\n        var release = function( eles ){\n          for( var i = 0; i < eles.length; i++ ){\n            eles[i]._private.grabbed = false;\n            eles[i]._private.rscratch.inDragLayer = false;\n            if( eles[i].active() ){ eles[i].unactivate(); }\n          }\n        };\n        release(nodes);\n        release(edges);\n\n        var offsets = r.findContainerClientCoords();\n        offsetLeft = offsets[0];\n        offsetTop = offsets[1];\n        containerWidth = offsets[2];\n        containerHeight = offsets[3];\n\n        f1x1 = e.touches[0].clientX - offsetLeft;\n        f1y1 = e.touches[0].clientY - offsetTop;\n\n        f2x1 = e.touches[1].clientX - offsetLeft;\n        f2y1 = e.touches[1].clientY - offsetTop;\n\n        twoFingersStartInside =\n             0 <= f1x1 && f1x1 <= containerWidth\n          && 0 <= f2x1 && f2x1 <= containerWidth\n          && 0 <= f1y1 && f1y1 <= containerHeight\n          && 0 <= f2y1 && f2y1 <= containerHeight\n        ;\n\n        var pan = cy.pan();\n        var zoom = cy.zoom();\n\n        distance1 = distance( f1x1, f1y1, f2x1, f2y1 );\n        distance1Sq = distanceSq( f1x1, f1y1, f2x1, f2y1 );\n        center1 = [ (f1x1 + f2x1)/2, (f1y1 + f2y1)/2 ];\n        modelCenter1 = [\n          (center1[0] - pan.x) / zoom,\n          (center1[1] - pan.y) / zoom\n        ];\n\n        // consider context tap\n        var cxtDistThreshold = 200;\n        var cxtDistThresholdSq = cxtDistThreshold * cxtDistThreshold;\n        if( distance1Sq < cxtDistThresholdSq && !e.touches[2] ){\n\n          var near1 = r.findNearestElement(now[0], now[1], true, true);\n          var near2 = r.findNearestElement(now[2], now[3], true, true);\n\n          //console.log(distance1)\n\n          if( near1 && near1.isNode() ){\n            near1.activate().trigger( new $$.Event(e, {\n              type: 'cxttapstart',\n              cyPosition: { x: now[0], y: now[1] }\n            }) );\n            r.touchData.start = near1;\n\n          } else if( near2 && near2.isNode() ){\n            near2.activate().trigger( new $$.Event(e, {\n              type: 'cxttapstart',\n              cyPosition: { x: now[0], y: now[1] }\n            }) );\n            r.touchData.start = near2;\n\n          } else {\n            cy.trigger( new $$.Event(e, {\n              type: 'cxttapstart',\n              cyPosition: { x: now[0], y: now[1] }\n            }) );\n            r.touchData.start = null;\n          }\n\n          if( r.touchData.start ){ r.touchData.start._private.grabbed = false; }\n          r.touchData.cxt = true;\n          r.touchData.cxtDragged = false;\n          r.data.bgActivePosistion = undefined;\n\n          //console.log('cxttapstart')\n\n          r.redraw();\n          return;\n\n        }\n\n        // console.log(center1);\n        // console.log('touchstart ptz');\n        // console.log(offsetLeft, offsetTop);\n        // console.log(f1x1, f1y1);\n        // console.log(f2x1, f2y1);\n        // console.log(distance1);\n        // console.log(center1);\n      }\n\n      // console.log('another tapstart')\n\n\n      if (e.touches[2]) {\n\n      } else if (e.touches[1]) {\n\n      } else if (e.touches[0]) {\n        var near = r.findNearestElement(now[0], now[1], true, true);\n\n        if (near != null) {\n          near.activate();\n\n          r.touchData.start = near;\n\n          if( near.isNode() && r.nodeIsDraggable(near) ){\n\n            var draggedEles = r.dragData.touchDragEles = [];\n\n            needsRedraw[CR.NODE] = true;\n            needsRedraw[CR.DRAG] = true;\n\n            if( near.selected() ){\n              // reset drag elements, since near will be added again\n\n              var selectedNodes = cy.$(function(){\n                return this.isNode() && this.selected();\n              });\n\n              for( var k = 0; k < selectedNodes.length; k++ ){\n                var selectedNode = selectedNodes[k];\n\n                if( r.nodeIsDraggable(selectedNode) ){\n                  addNodeToDrag( selectedNode, { addToList: draggedEles } );\n                }\n              }\n            } else {\n              addNodeToDrag( near, { addToList: draggedEles } );\n            }\n\n            near.trigger( new $$.Event(e, {\n              type: 'grab',\n              cyPosition: { x: now[0], y: now[1] }\n            }) );\n          }\n\n          near\n            .trigger(new $$.Event(e, {\n              type: 'touchstart',\n              cyPosition: { x: now[0], y: now[1] }\n            }))\n            .trigger(new $$.Event(e, {\n              type: 'tapstart',\n              cyPosition: { x: now[0], y: now[1] }\n            }))\n            .trigger(new $$.Event(e, {\n              type: 'vmousdown',\n              cyPosition: { x: now[0], y: now[1] }\n            }))\n          ;\n        } if (near == null) {\n          cy\n            .trigger(new $$.Event(e, {\n              type: 'touchstart',\n              cyPosition: { x: now[0], y: now[1] }\n            }))\n            .trigger(new $$.Event(e, {\n              type: 'tapstart',\n              cyPosition: { x: now[0], y: now[1] }\n            }))\n            .trigger(new $$.Event(e, {\n              type: 'vmousedown',\n              cyPosition: { x: now[0], y: now[1] }\n            }))\n          ;\n\n          r.data.bgActivePosistion = {\n            x: pos[0],\n            y: pos[1]\n          };\n\n          needsRedraw[CR.SELECT_BOX] = true;\n          r.redraw();\n        }\n\n\n        // Tap, taphold\n        // -----\n\n        for (var i=0; i<now.length; i++) {\n          earlier[i] = now[i];\n          r.touchData.startPosition[i] = now[i];\n        }\n\n        r.touchData.singleTouchMoved = false;\n        r.touchData.singleTouchStartTime = +new Date();\n\n        clearTimeout( r.touchData.tapholdTimeout );\n        r.touchData.tapholdTimeout = setTimeout(function() {\n          if(\n              r.touchData.singleTouchMoved === false\n              && !r.pinching // if pinching, then taphold unselect shouldn't take effect\n\n              // This time double constraint prevents multiple quick taps\n              // followed by a taphold triggering multiple taphold events\n              //&& Date.now() - r.touchData.singleTouchStartTime > 250\n          ){\n            if (r.touchData.start) {\n              r.touchData.start.trigger( new $$.Event(e, {\n                type: 'taphold',\n                cyPosition: { x: now[0], y: now[1] }\n              }) );\n            } else {\n              r.data.cy.trigger( new $$.Event(e, {\n                type: 'taphold',\n                cyPosition: { x: now[0], y: now[1] }\n              }) );\n\n              cy.$(':selected').unselect();\n            }\n\n//            console.log('taphold');\n          }\n        }, r.tapholdDuration);\n      }\n\n      //r.redraw();\n\n    }, false);\n\n// console.log = function(m){ $('#console').append('<div>'+m+'</div>'); };\n\n    r.registerBinding(window, 'touchmove', $$.util.throttle(function(e) {\n\n      var select = r.data.select;\n      var capture = r.touchData.capture; //if (!capture) { return; };\n      if( capture ){ e.preventDefault(); }\n\n      var cy = r.data.cy;\n      var now = r.touchData.now; var earlier = r.touchData.earlier;\n      var zoom = cy.zoom();\n      \n      var needsRedraw = r.data.canvasNeedsRedraw;\n\n      if (e.touches[0]) { var pos = r.projectIntoViewport(e.touches[0].clientX, e.touches[0].clientY); now[0] = pos[0]; now[1] = pos[1]; }\n      if (e.touches[1]) { var pos = r.projectIntoViewport(e.touches[1].clientX, e.touches[1].clientY); now[2] = pos[0]; now[3] = pos[1]; }\n      if (e.touches[2]) { var pos = r.projectIntoViewport(e.touches[2].clientX, e.touches[2].clientY); now[4] = pos[0]; now[5] = pos[1]; }\n      var disp = []; for (var j=0;j<now.length;j++) { disp[j] = now[j] - earlier[j]; }\n\n      var startPos = r.touchData.startPosition;\n\n      var dx = now[0] - startPos[0];\n      var dx2 = dx * dx;\n      var dy = now[1] - startPos[1];\n      var dy2 = dy * dy;\n      var dist2 = dx2 + dy2;\n      var rdist2 = dist2 * zoom * zoom;\n\n      if( capture && r.touchData.cxt ){\n        var f1x2 = e.touches[0].clientX - offsetLeft, f1y2 = e.touches[0].clientY - offsetTop;\n        var f2x2 = e.touches[1].clientX - offsetLeft, f2y2 = e.touches[1].clientY - offsetTop;\n        // var distance2 = distance( f1x2, f1y2, f2x2, f2y2 );\n        var distance2Sq = distanceSq( f1x2, f1y2, f2x2, f2y2 );\n        var factorSq = distance2Sq / distance1Sq;\n\n        var distThreshold = 150;\n        var distThresholdSq = distThreshold * distThreshold;\n        var factorThreshold = 1.5;\n        var factorThresholdSq = factorThreshold * factorThreshold;\n\n        //console.log(factor, distance2)\n\n        // cancel ctx gestures if the distance b/t the fingers increases\n        if( factorSq >= factorThresholdSq || distance2Sq >= distThresholdSq ){\n          r.touchData.cxt = false;\n          if( r.touchData.start ){ r.touchData.start.unactivate(); r.touchData.start = null; }\n          r.data.bgActivePosistion = undefined;\n          needsRedraw[CR.SELECT_BOX] = true;\n\n          var cxtEvt = new $$.Event(e, {\n            type: 'cxttapend',\n            cyPosition: { x: now[0], y: now[1] }\n          });\n          if( r.touchData.start ){\n            r.touchData.start.trigger( cxtEvt );\n          } else {\n            cy.trigger( cxtEvt );\n          }\n        }\n\n      }\n\n      if( capture && r.touchData.cxt ){\n        var cxtEvt = new $$.Event(e, {\n          type: 'cxtdrag',\n          cyPosition: { x: now[0], y: now[1] }\n        });\n        r.data.bgActivePosistion = undefined;\n        needsRedraw[CR.SELECT_BOX] = true;\n\n        if( r.touchData.start ){\n          r.touchData.start.trigger( cxtEvt );\n        } else {\n          cy.trigger( cxtEvt );\n        }\n\n        if( r.touchData.start ){ r.touchData.start._private.grabbed = false; }\n        r.touchData.cxtDragged = true;\n\n        //console.log('cxtdrag')\n\n        var near = r.findNearestElement(now[0], now[1], true, true);\n\n        if( !r.touchData.cxtOver || near !== r.touchData.cxtOver ){\n\n          if( r.touchData.cxtOver ){\n            r.touchData.cxtOver.trigger( new $$.Event(e, {\n              type: 'cxtdragout',\n              cyPosition: { x: now[0], y: now[1] }\n            }) );\n\n            // console.log('cxtdragout');\n          }\n\n          r.touchData.cxtOver = near;\n\n          if( near ){\n            near.trigger( new $$.Event(e, {\n              type: 'cxtdragover',\n              cyPosition: { x: now[0], y: now[1] }\n            }) );\n\n            // console.log('cxtdragover');\n          }\n\n        }\n\n      } else if( capture && e.touches[2] && cy.boxSelectionEnabled() ){\n        r.data.bgActivePosistion = undefined;\n        clearTimeout( this.threeFingerSelectTimeout );\n        this.lastThreeTouch = +new Date();\n        r.touchData.selecting = true;\n\n        needsRedraw[CR.SELECT_BOX] = true;\n\n        if( !select || select.length === 0 || select[0] === undefined ){\n          select[0] = (now[0] + now[2] + now[4])/3;\n          select[1] = (now[1] + now[3] + now[5])/3;\n          select[2] = (now[0] + now[2] + now[4])/3 + 1;\n          select[3] = (now[1] + now[3] + now[5])/3 + 1;\n        } else {\n          select[2] = (now[0] + now[2] + now[4])/3;\n          select[3] = (now[1] + now[3] + now[5])/3;\n        }\n\n        select[4] = 1;\n        r.touchData.selecting = true;\n\n        r.redraw();\n\n      } else if ( capture && e.touches[1] && cy.zoomingEnabled() && cy.panningEnabled() && cy.userZoomingEnabled() && cy.userPanningEnabled() ) { // two fingers => pinch to zoom\n        r.data.bgActivePosistion = undefined;\n        needsRedraw[CR.SELECT_BOX] = true;\n\n        var draggedEles = r.dragData.touchDragEles;\n        if( draggedEles ){\n          needsRedraw[CR.DRAG] = true;\n\n          for( var i = 0; i < draggedEles.length; i++ ){\n            draggedEles[i]._private.grabbed = false;\n            draggedEles[i]._private.rscratch.inDragLayer = false;\n          }\n        }\n\n        // console.log('touchmove ptz');\n\n        // (x2, y2) for fingers 1 and 2\n        var f1x2 = e.touches[0].clientX - offsetLeft, f1y2 = e.touches[0].clientY - offsetTop;\n        var f2x2 = e.touches[1].clientX - offsetLeft, f2y2 = e.touches[1].clientY - offsetTop;\n\n        // console.log( f1x2, f1y2 )\n        // console.log( f2x2, f2y2 )\n\n        var distance2 = distance( f1x2, f1y2, f2x2, f2y2 );\n        // var distance2Sq = distanceSq( f1x2, f1y2, f2x2, f2y2 );\n        // var factor = Math.sqrt( distance2Sq ) / Math.sqrt( distance1Sq );\n        var factor = distance2 / distance1;\n\n        // console.log(distance2)\n        // console.log(factor)\n\n        if( factor != 1 && twoFingersStartInside){\n\n          // console.log(factor)\n          // console.log(distance2 + ' / ' + distance1);\n          // console.log('--');\n\n          // delta finger1\n          var df1x = f1x2 - f1x1;\n          var df1y = f1y2 - f1y1;\n\n          // delta finger 2\n          var df2x = f2x2 - f2x1;\n          var df2y = f2y2 - f2y1;\n\n          // translation is the normalised vector of the two fingers movement\n          // i.e. so pinching cancels out and moving together pans\n          var tx = (df1x + df2x)/2;\n          var ty = (df1y + df2y)/2;\n\n          // adjust factor by the speed multiplier\n          // var speed = 1.5;\n          // if( factor > 1 ){\n          //   factor = (factor - 1) * speed + 1;\n          // } else {\n          //   factor = 1 - (1 - factor) * speed;\n          // }\n\n          // now calculate the zoom\n          var zoom1 = cy.zoom();\n          var zoom2 = zoom1 * factor;\n          var pan1 = cy.pan();\n\n          // the model center point converted to the current rendered pos\n          var ctrx = modelCenter1[0] * zoom1 + pan1.x;\n          var ctry = modelCenter1[1] * zoom1 + pan1.y;\n\n          var pan2 = {\n            x: -zoom2/zoom1 * (ctrx - pan1.x - tx) + ctrx,\n            y: -zoom2/zoom1 * (ctry - pan1.y - ty) + ctry\n          };\n\n          // console.log(pan2);\n          // console.log(zoom2);\n\n          // remove dragged eles\n          if( r.touchData.start ){\n            var draggedEles = r.dragData.touchDragEles;\n\n            if( draggedEles ){ for( var i = 0; i < draggedEles.length; i++ ){\n              var dEi_p = draggedEles[i]._private;\n              \n              dEi_p.grabbed = false;\n              dEi_p.rscratch.inDragLayer = false;\n            } }\n\n            var start_p = r.touchData.start._private;\n            start_p.active = false;\n            start_p.grabbed = false;\n            start_p.rscratch.inDragLayer = false;\n\n            needsRedraw[CR.DRAG] = true;\n\n            r.touchData.start\n              .trigger('free')\n              .trigger('unactivate')\n            ;\n          }\n\n          cy.viewport({\n            zoom: zoom2,\n            pan: pan2,\n            cancelOnFailedZoom: true\n          });\n\n          distance1 = distance2;\n          f1x1 = f1x2;\n          f1y1 = f1y2;\n          f2x1 = f2x2;\n          f2y1 = f2y2;\n\n          r.pinching = true;\n        }\n\n        // Re-project\n        if (e.touches[0]) { var pos = r.projectIntoViewport(e.touches[0].clientX, e.touches[0].clientY); now[0] = pos[0]; now[1] = pos[1]; }\n        if (e.touches[1]) { var pos = r.projectIntoViewport(e.touches[1].clientX, e.touches[1].clientY); now[2] = pos[0]; now[3] = pos[1]; }\n        if (e.touches[2]) { var pos = r.projectIntoViewport(e.touches[2].clientX, e.touches[2].clientY); now[4] = pos[0]; now[5] = pos[1]; }\n\n      } else if (e.touches[0]) {\n        var start = r.touchData.start;\n        var last = r.touchData.last;\n        var near = near || r.findNearestElement(now[0], now[1], true, true);\n\n        if( start != null && start._private.group == 'nodes' && r.nodeIsDraggable(start) ){\n\n          if( rdist2 >= r.touchTapThreshold2 ){ // then dragging can happen\n            var draggedEles = r.dragData.touchDragEles;\n\n            for( var k = 0; k < draggedEles.length; k++ ){\n              var draggedEle = draggedEles[k];\n\n              if( r.nodeIsDraggable(draggedEle) && draggedEle.isNode() && draggedEle.grabbed() ){\n                r.dragData.didDrag = true;\n                var dPos = draggedEle._private.position;\n                var justStartedDrag = !r.hoverData.draggingEles;\n\n                if( $$.is.number(disp[0]) && $$.is.number(disp[1]) ){\n                  dPos.x += disp[0];\n                  dPos.y += disp[1];\n                }\n\n                if( justStartedDrag ){\n                  addNodeToDrag( draggedEle, { inDragLayer: true } );\n                  \n                  needsRedraw[CR.NODE] = true;\n\n                  var dragDelta = r.touchData.dragDelta;\n\n                  if( $$.is.number(dragDelta[0]) && $$.is.number(dragDelta[1]) ){\n                    dPos.x += dragDelta[0];\n                    dPos.y += dragDelta[1];\n                  }\n\n                }\n              }\n            }\n\n            var tcol = new $$.Collection(cy, draggedEle);\n\n            tcol.updateCompoundBounds();\n            tcol.trigger('position drag');\n\n            r.hoverData.draggingEles = true;\n\n            needsRedraw[CR.DRAG] = true;\n\n            if(\n                 r.touchData.startPosition[0] == earlier[0]\n              && r.touchData.startPosition[1] == earlier[1]\n            ){\n\n              needsRedraw[CR.NODE] = true;\n            }\n\n            r.redraw();\n          } else { // otherise keep track of drag delta for later\n            var dragDelta = r.touchData.dragDelta = r.touchData.dragDelta || [];\n\n            if( dragDelta.length === 0 ){\n              dragDelta.push( disp[0] );\n              dragDelta.push( disp[1] );\n            } else {\n              dragDelta[0] += disp[0];\n              dragDelta[1] += disp[1];\n            }\n          }\n        }\n\n        // Touchmove event\n        {\n\n          if (start != null) {\n            start.trigger( new $$.Event(e, {\n              type: 'touchmove',\n              cyPosition: { x: now[0], y: now[1] }\n            }) );\n\n            start.trigger( new $$.Event(e, {\n              type: 'tapdrag',\n              cyPosition: { x: now[0], y: now[1] }\n            }) );\n\n            start.trigger( new $$.Event(e, {\n              type: 'vmousemove',\n              cyPosition: { x: now[0], y: now[1] }\n            }) );\n          }\n\n          if (start == null) {\n\n            if (near != null) {\n              near.trigger( new $$.Event(e, {\n                type: 'touchmove',\n                cyPosition: { x: now[0], y: now[1] }\n              }) );\n\n              near.trigger( new $$.Event(e, {\n                type: 'tapdrag',\n                cyPosition: { x: now[0], y: now[1] }\n              }) );\n\n              near.trigger( new $$.Event(e, {\n                type: 'vmousemove',\n                cyPosition: { x: now[0], y: now[1] }\n              }) );\n            }\n\n            if (near == null) {\n              cy.trigger( new $$.Event(e, {\n                type: 'touchmove',\n                cyPosition: { x: now[0], y: now[1] }\n              }) );\n\n              cy.trigger( new $$.Event(e, {\n                type: 'tapdrag',\n                cyPosition: { x: now[0], y: now[1] }\n              }) );\n\n              cy.trigger( new $$.Event(e, {\n                type: 'vmousemove',\n                cyPosition: { x: now[0], y: now[1] }\n              }) );\n            }\n          }\n\n          if (near != last) {\n            if (last) { last.trigger(new $$.Event(e, { type: 'tapdragout', cyPosition: { x: now[0], y: now[1] } })); }\n            if (near) { near.trigger(new $$.Event(e, { type: 'tapdragover', cyPosition: { x: now[0], y: now[1] } })); }\n          }\n\n          r.touchData.last = near;\n        }\n\n        // Check to cancel taphold\n        for (var i=0;i<now.length;i++) {\n          if (now[i]\n            && r.touchData.startPosition[i]\n            && Math.abs(now[i] - r.touchData.startPosition[i]) > 4) {\n\n            r.touchData.singleTouchMoved = true;\n          }\n        }\n\n        if(\n            capture\n            && ( start == null || start.isEdge() )\n            && cy.panningEnabled() && cy.userPanningEnabled()\n        ){\n\n          if( r.swipePanning ){\n            cy.panBy({\n              x: disp[0] * zoom,\n              y: disp[1] * zoom\n            });\n\n          } else if( rdist2 >= r.touchTapThreshold2 ){\n            r.swipePanning = true;\n\n            cy.panBy({\n              x: dx * zoom,\n              y: dy * zoom\n            });\n          }\n\n          if( start ){\n            start.unactivate();\n\n            if( !r.data.bgActivePosistion ){\n              r.data.bgActivePosistion = {\n                x: now[0],\n                y: now[1]\n              };\n            }\n\n            needsRedraw[CR.SELECT_BOX] = true;\n\n            r.touchData.start = null;\n          }\n\n          // Re-project\n          var pos = r.projectIntoViewport(e.touches[0].clientX, e.touches[0].clientY);\n          now[0] = pos[0]; now[1] = pos[1];\n        }\n      }\n\n      for (var j=0; j<now.length; j++) { earlier[j] = now[j]; }\n      //r.redraw();\n\n    }, 1000/30, { trailing: true }), false);\n\n    r.registerBinding(window, 'touchcancel', function(e) {\n      var start = r.touchData.start;\n\n      r.touchData.capture = false;\n\n      if( start ){\n        start.unactivate();\n      }\n    });\n\n    r.registerBinding(window, 'touchend', function(e) {\n      var start = r.touchData.start;\n\n      var capture = r.touchData.capture;\n\n      if( capture ){\n        r.touchData.capture = false;\n      } else {\n        return;\n      }\n\n      e.preventDefault();\n      var select = r.data.select;\n\n      r.swipePanning = false;\n      r.hoverData.draggingEles = false;\n\n      var cy = r.data.cy;\n      var zoom = cy.zoom();\n      var now = r.touchData.now;\n      var earlier = r.touchData.earlier;\n      \n      var needsRedraw = r.data.canvasNeedsRedraw;\n\n      if (e.touches[0]) { var pos = r.projectIntoViewport(e.touches[0].clientX, e.touches[0].clientY); now[0] = pos[0]; now[1] = pos[1]; }\n      if (e.touches[1]) { var pos = r.projectIntoViewport(e.touches[1].clientX, e.touches[1].clientY); now[2] = pos[0]; now[3] = pos[1]; }\n      if (e.touches[2]) { var pos = r.projectIntoViewport(e.touches[2].clientX, e.touches[2].clientY); now[4] = pos[0]; now[5] = pos[1]; }\n\n      if( start ){\n        start.unactivate();\n      }\n\n      var ctxTapend;\n      if( r.touchData.cxt ){\n        ctxTapend = new $$.Event(e, {\n          type: 'cxttapend',\n          cyPosition: { x: now[0], y: now[1] }\n        });\n\n        if( start ){\n          start.trigger( ctxTapend );\n        } else {\n          cy.trigger( ctxTapend );\n        }\n\n        //console.log('cxttapend')\n\n        if( !r.touchData.cxtDragged ){\n          var ctxTap = new $$.Event(e, {\n            type: 'cxttap',\n            cyPosition: { x: now[0], y: now[1] }\n          });\n\n          if( start ){\n            start.trigger( ctxTap );\n          } else {\n            cy.trigger( ctxTap );\n          }\n\n          //console.log('cxttap')\n        }\n\n        if( r.touchData.start ){ r.touchData.start._private.grabbed = false; }\n        r.touchData.cxt = false;\n        r.touchData.start = null;\n\n        r.redraw();\n        return;\n      }\n\n      // no more box selection if we don't have three fingers\n      if( !e.touches[2] && cy.boxSelectionEnabled() && r.touchData.selecting ){\n        r.touchData.selecting = false;\n        clearTimeout( this.threeFingerSelectTimeout );\n        //this.threeFingerSelectTimeout = setTimeout(function(){\n          var newlySelected = [];\n          var box = r.getAllInBox( select[0], select[1], select[2], select[3] );\n\n          select[0] = undefined;\n          select[1] = undefined;\n          select[2] = undefined;\n          select[3] = undefined;\n          select[4] = 0;\n\n          needsRedraw[CR.SELECT_BOX] = true;\n\n          // console.log(box);\n          for( var i = 0; i< box.length; i++ ) {\n            if( box[i]._private.selectable ){\n              newlySelected.push( box[i] );\n            }\n          }\n\n          var newlySelCol = new $$.Collection( cy, newlySelected );\n\n          if( cy.selectionType() === 'single' ){\n            cy.$(':selected').unmerge( newlySelCol ).unselect();\n          }\n\n          newlySelCol.select();\n\n          if( newlySelCol.length > 0 ) {\n            needsRedraw[CR.NODE] = true;\n          } else {\n            r.redraw();\n          }\n\n        //}, 100);\n      }\n\n      var updateStartStyle = false;\n\n      if( start != null ){\n        start._private.active = false;\n        updateStartStyle = true;\n        start.unactivate();\n      }\n\n      if (e.touches[2]) {\n        r.data.bgActivePosistion = undefined;\n        needsRedraw[CR.SELECT_BOX] = true;\n      } else if (e.touches[1]) {\n\n      } else if (e.touches[0]) {\n\n      // Last touch released\n      } else if (!e.touches[0]) {\n\n        r.data.bgActivePosistion = undefined;\n        needsRedraw[CR.SELECT_BOX] = true;\n        \n        var draggedEles = r.dragData.touchDragEles;\n\n        if (start != null ) {\n\n          var startWasGrabbed = start._private.grabbed;\n          \n          freeDraggedElements( draggedEles );\n\n          needsRedraw[CR.DRAG] = true;\n          needsRedraw[CR.NODE] = true;\n          \n          if( startWasGrabbed ){\n            start.trigger('free');\n          }\n\n          start\n            .trigger(new $$.Event(e, {\n              type: 'touchend',\n              cyPosition: { x: now[0], y: now[1] }\n            }))\n            .trigger(new $$.Event(e, {\n              type: 'tapend',\n              cyPosition: { x: now[0], y: now[1] }\n            }))\n            .trigger(new $$.Event(e, {\n              type: 'vmouseup',\n              cyPosition: { x: now[0], y: now[1] }\n            }))\n          ;\n\n          start.unactivate();\n\n          r.touchData.start = null;\n\n        } else {\n          var near = r.findNearestElement(now[0], now[1], true, true);\n\n          if (near != null) {\n            near\n              .trigger(new $$.Event(e, {\n                type: 'touchend',\n                cyPosition: { x: now[0], y: now[1] }\n              }))\n              .trigger(new $$.Event(e, {\n                type: 'tapend',\n                cyPosition: { x: now[0], y: now[1] }\n              }))\n              .trigger(new $$.Event(e, {\n                type: 'vmouseup',\n                cyPosition: { x: now[0], y: now[1] }\n              }))\n            ;\n          }\n\n          if (near == null) {\n            cy\n              .trigger(new $$.Event(e, {\n                type: 'touchend',\n                cyPosition: { x: now[0], y: now[1] }\n              }))\n              .trigger(new $$.Event(e, {\n                type: 'tapend',\n                cyPosition: { x: now[0], y: now[1] }\n              }))\n              .trigger(new $$.Event(e, {\n                type: 'vmouseup',\n                cyPosition: { x: now[0], y: now[1] }\n              }))\n            ;\n          }\n        }\n\n        var dx = r.touchData.startPosition[0] - now[0];\n        var dx2 = dx * dx;\n        var dy = r.touchData.startPosition[1] - now[1];\n        var dy2 = dy * dy;\n        var dist2 = dx2 + dy2;\n        var rdist2 = dist2 * zoom * zoom;\n\n        // Prepare to select the currently touched node, only if it hasn't been dragged past a certain distance\n        if (start != null\n            && !r.dragData.didDrag // didn't drag nodes around\n            && start._private.selectable\n            && rdist2 < r.touchTapThreshold2\n            && !r.pinching // pinch to zoom should not affect selection\n        ) {\n\n          if( cy.selectionType() === 'single' ){\n            cy.$(':selected').unmerge( start ).unselect();\n            start.select();\n          } else {\n            if( start.selected() ){\n              start.unselect();\n            } else {\n              start.select();\n            }\n          }\n\n          updateStartStyle = true;\n\n\n          needsRedraw[CR.NODE] = true;\n        }\n\n        // Tap event, roughly same as mouse click event for touch\n        if ( r.touchData.singleTouchMoved === false ) {\n\n          if (start) {\n            start\n              .trigger(new $$.Event(e, {\n                type: 'tap',\n                cyPosition: { x: now[0], y: now[1] }\n              }))\n              .trigger(new $$.Event(e, {\n                type: 'vclick',\n                cyPosition: { x: now[0], y: now[1] }\n              }))\n            ;\n          } else {\n            cy\n              .trigger(new $$.Event(e, {\n                type: 'tap',\n                cyPosition: { x: now[0], y: now[1] }\n              }))\n              .trigger(new $$.Event(e, {\n                type: 'vclick',\n                cyPosition: { x: now[0], y: now[1] }\n              }))\n            ;\n          }\n\n//          console.log('tap');\n        }\n\n        r.touchData.singleTouchMoved = true;\n      }\n\n      for( var j = 0; j < now.length; j++ ){ earlier[j] = now[j]; }\n\n      r.dragData.didDrag = false; // reset for next mousedown\n\n      if( e.touches.length === 0 ){\n        r.touchData.dragDelta = [];\n      }\n\n      if( updateStartStyle && start ){\n        start.updateStyle(false);\n      }\n\n      if( e.touches.length < 2 ){\n        r.pinching = false;\n        needsRedraw[CR.NODE] = true;\n        r.redraw();\n      }\n\n      //r.redraw();\n\n    }, false);\n  };\n\n})( cytoscape );\n\n;(function($$){ 'use strict';\n\n  var CanvasRenderer = $$('renderer', 'canvas');\n  var renderer = CanvasRenderer.prototype;\n  var usePaths = CanvasRenderer.usePaths();\n\n  // Node shape contract:\n  //\n  // draw: draw\n  // intersectLine: report intersection from x, y, to node center\n  // checkPoint: check x, y in node\n\n  var nodeShapes = CanvasRenderer.nodeShapes = {};\n\n  var sin0 = Math.sin(0);\n  var cos0 = Math.cos(0);\n\n  var sin = {};\n  var cos = {};\n\n  var ellipseStepSize = 0.1;\n\n  for (var i = 0 * Math.PI; i < 2 * Math.PI; i += ellipseStepSize ) {\n    sin[i] = Math.sin(i);\n    cos[i] = Math.cos(i);\n  }\n\n  nodeShapes['ellipse'] = {\n    draw: function(context, centerX, centerY, width, height) {\n      nodeShapes['ellipse'].drawPath(context, centerX, centerY, width, height);\n      context.fill();\n    },\n    \n    drawPath: function(context, centerX, centerY, width, height) {\n      \n      if( usePaths ){\n        if( context.beginPath ){ context.beginPath(); }\n\n        var xPos, yPos;\n        var rw = width/2;\n        var rh = height/2;\n        for (var i = 0 * Math.PI; i < 2 * Math.PI; i += ellipseStepSize ) {\n            xPos = centerX - (rw * sin[i]) * sin0 + (rw * cos[i]) * cos0;\n            yPos = centerY + (rh * cos[i]) * sin0 + (rh * sin[i]) * cos0;\n\n            if (i === 0) {\n                context.moveTo(xPos, yPos);\n            } else {\n                context.lineTo(xPos, yPos);\n            }\n        }\n        context.closePath();\n\n      } else {\n\n        if( context.beginPath ){ context.beginPath(); }\n        context.translate(centerX, centerY);\n        context.scale(width / 2, height / 2);\n        // At origin, radius 1, 0 to 2pi\n        context.arc(0, 0, 1, 0, Math.PI * 2 * 0.999, false); // *0.999 b/c chrome rendering bug on full circle\n        context.closePath();\n\n        context.scale(2/width, 2/height);\n        context.translate(-centerX, -centerY);\n\n      }\n      \n    },\n    \n    intersectLine: function(nodeX, nodeY, width, height, x, y, padding) {\n      var intersect = $$.math.intersectLineEllipse(\n        x, y,\n        nodeX,\n        nodeY,\n        width / 2 + padding,\n        height / 2 + padding);\n      \n      return intersect;\n    },\n    \n    intersectBox: function(\n      x1, y1, x2, y2, width, height, centerX, centerY, padding) {\n      \n      return $$.math.boxIntersectEllipse(\n        x1, y1, x2, y2, padding, width, height, centerX, centerY);\n    },\n    \n    checkPoint: function(\n      x, y, padding, width, height, centerX, centerY) {\n      \n//      console.log(arguments);\n      \n      x -= centerX;\n      y -= centerY;\n      \n      x /= (width / 2 + padding);\n      y /= (height / 2 + padding);\n      \n      return (Math.pow(x, 2) + Math.pow(y, 2) <= 1);\n    }\n  };\n  \n  function generatePolygon( name, points ){\n    nodeShapes[name] = {\n      points: points,\n      \n      draw: function(context, centerX, centerY, width, height) {\n        renderer.drawPolygon(context,\n          centerX, centerY,\n          width, height,\n          nodeShapes[name].points);\n      },\n      \n      drawPath: function(context, centerX, centerY, width, height) {\n        renderer.drawPolygonPath(context,\n          centerX, centerY,\n          width, height,\n          nodeShapes[name].points);\n      },\n      \n      intersectLine: function(nodeX, nodeY, width, height, x, y, padding) {\n        return $$.math.polygonIntersectLine(\n            x, y,\n            nodeShapes[name].points,\n            nodeX,\n            nodeY,\n            width / 2, height / 2,\n            padding);\n      },\n      \n      intersectBox: function(\n        x1, y1, x2, y2,\n        width, height, centerX, \n        centerY, padding) {\n        \n        var points = nodeShapes[name].points;\n        \n        return $$.math.boxIntersectPolygon(\n          x1, y1, x2, y2,\n          points, width, height, centerX, \n          centerY, [0, -1], padding);\n      },\n      \n      checkPoint: function(\n        x, y, padding, width, height, centerX, centerY) {\n        \n        return $$.math.pointInsidePolygon(x, y, nodeShapes[name].points,\n          centerX, centerY, width, height, [0, -1], padding);\n      }\n    };\n  }\n  \n  generatePolygon( 'triangle', $$.math.generateUnitNgonPointsFitToSquare(3, 0) );\n  \n  generatePolygon( 'square', $$.math.generateUnitNgonPointsFitToSquare(4, 0) );\n  nodeShapes['rectangle'] = nodeShapes['square'];\n  \n  nodeShapes['roundrectangle'] = {\n    points: $$.math.generateUnitNgonPointsFitToSquare(4, 0),\n    \n    draw: function(context, centerX, centerY, width, height) {\n      renderer.drawRoundRectangle(context,\n        centerX, centerY,\n        width, height,\n        10);\n    },\n    \n    drawPath: function(context, centerX, centerY, width, height) {\n      renderer.drawRoundRectanglePath(context,\n        centerX, centerY,\n        width, height,\n        10);\n    },\n    \n    intersectLine: function(nodeX, nodeY, width, height, x, y, padding) {\n      return $$.math.roundRectangleIntersectLine(\n          x, y,\n          nodeX,\n          nodeY,\n          width, height,\n          padding);\n    },\n    \n    intersectBox: function(\n      x1, y1, x2, y2,\n      width, height, centerX, \n      centerY, padding) {\n\n      return $$.math.roundRectangleIntersectBox(\n        x1, y1, x2, y2, \n        width, height, centerX, centerY, padding);\n    },\n    \n    // Looks like the width passed into this function is actually the total width / 2\n    checkPoint: function(\n      x, y, padding, width, height, centerX, centerY) {\n      \n      var cornerRadius = $$.math.getRoundRectangleRadius(width, height);\n      \n      // Check hBox\n      if ($$.math.pointInsidePolygon(x, y, nodeShapes['roundrectangle'].points,\n        centerX, centerY, width, height - 2 * cornerRadius, [0, -1], padding)) {\n        return true;\n      }\n      \n      // Check vBox\n      if ($$.math.pointInsidePolygon(x, y, nodeShapes['roundrectangle'].points,\n        centerX, centerY, width - 2 * cornerRadius, height, [0, -1], padding)) {\n        return true;\n      }\n      \n      var checkInEllipse = function(x, y, centerX, centerY, width, height, padding) {\n        x -= centerX;\n        y -= centerY;\n        \n        x /= (width / 2 + padding);\n        y /= (height / 2 + padding);\n        \n        return (Math.pow(x, 2) + Math.pow(y, 2) <= 1);\n      };\n      \n      \n      // Check top left quarter circle\n      if (checkInEllipse(x, y,\n        centerX - width / 2 + cornerRadius,\n        centerY - height / 2 + cornerRadius,\n        cornerRadius * 2, cornerRadius * 2, padding)) {\n        \n        return true;\n      }\n      \n      /*\n      if (renderer.boxIntersectEllipse(x, y, x, y, padding, \n        cornerRadius * 2, cornerRadius * 2,\n        centerX - width + cornerRadius,\n        centerY - height + cornerRadius)) {\n        return true;\n      }\n      */\n      \n      // Check top right quarter circle\n      if (checkInEllipse(x, y,\n        centerX + width / 2 - cornerRadius,\n        centerY - height / 2 + cornerRadius,\n        cornerRadius * 2, cornerRadius * 2, padding)) {\n        \n        return true;\n      }\n      \n      // Check bottom right quarter circle\n      if (checkInEllipse(x, y,\n        centerX + width / 2 - cornerRadius,\n        centerY + height / 2 - cornerRadius,\n        cornerRadius * 2, cornerRadius * 2, padding)) {\n        \n        return true;\n      }\n      \n      // Check bottom left quarter circle\n      if (checkInEllipse(x, y,\n        centerX - width / 2 + cornerRadius,\n        centerY + height / 2 - cornerRadius,\n        cornerRadius * 2, cornerRadius * 2, padding)) {\n        \n        return true;\n      }\n      \n      return false;\n    }\n  };\n  \n  generatePolygon( 'diamond', [\n    0, 1,\n    1, 0,\n    0, -1,\n    -1, 0\n  ] );\n  \n  generatePolygon( 'pentagon', $$.math.generateUnitNgonPointsFitToSquare(5, 0) );\n  \n  generatePolygon( 'hexagon', $$.math.generateUnitNgonPointsFitToSquare(6, 0) );\n  \n  generatePolygon( 'heptagon', $$.math.generateUnitNgonPointsFitToSquare(7, 0) );\n  \n  generatePolygon( 'octagon', $$.math.generateUnitNgonPointsFitToSquare(8, 0) );\n    \n  var star5Points = new Array(20);\n  {\n    var outerPoints = $$.math.generateUnitNgonPoints(5, 0);\n    var innerPoints = $$.math.generateUnitNgonPoints(5, Math.PI / 5);\n    \n  //  console.log(outerPoints);\n  //  console.log(innerPoints);\n    \n    // Outer radius is 1; inner radius of star is smaller\n    var innerRadius = 0.5 * (3 - Math.sqrt(5));\n    innerRadius *= 1.57;\n    \n    for (var i=0;i<innerPoints.length/2;i++) {\n      innerPoints[i*2] *= innerRadius;\n      innerPoints[i*2+1] *= innerRadius;\n    }\n    \n    for (var i=0;i<20/4;i++) {\n      star5Points[i*4] = outerPoints[i*2];\n      star5Points[i*4+1] = outerPoints[i*2+1];\n      \n      star5Points[i*4+2] = innerPoints[i*2];\n      star5Points[i*4+3] = innerPoints[i*2+1];\n    }\n    \n  //  console.log(star5Points);\n  }\n\n  star5Points = $$.math.fitPolygonToSquare( star5Points );\n  \n  generatePolygon( 'star', star5Points );\n  \n  generatePolygon( 'vee', [\n    -1, -1,\n    0, -0.333,\n    1, -1,\n    0, 1\n  ] );\n  \n  generatePolygon( 'rhomboid', [\n    -1, -1,\n    0.333, -1,\n    1, 1,\n    -0.333, 1\n  ] );\n\n})( cytoscape );\n\n;(function($$){ 'use strict';\n  \n  var defaults = {\n    animate: true, // whether to show the layout as it's running\n    maxSimulationTime: 4000, // max length in ms to run the layout\n    fit: true, // on every layout reposition of nodes, fit the viewport\n    padding: 30, // padding around the simulation\n    boundingBox: undefined, // constrain layout bounds; { x1, y1, x2, y2 } or { x1, y1, w, h }\n    ungrabifyWhileSimulating: false, // so you can't drag nodes during layout\n\n    // callbacks on layout events\n    ready: undefined, // callback on layoutready \n    stop: undefined, // callback on layoutstop\n\n    // forces used by arbor (use arbor default on undefined)\n    repulsion: undefined,\n    stiffness: undefined,\n    friction: undefined,\n    gravity: true,\n    fps: undefined,\n    precision: undefined,\n\n    // static numbers or functions that dynamically return what these\n    // values should be for each element\n    // e.g. nodeMass: function(n){ return n.data('weight') }\n    nodeMass: undefined, \n    edgeLength: undefined,\n\n    stepSize: 0.1, // smoothing of arbor bounding box\n\n    // function that returns true if the system is stable to indicate\n    // that the layout can be stopped\n    stableEnergy: function( energy ){\n      var e = energy; \n      return (e.max <= 0.5) || (e.mean <= 0.3);\n    },\n\n    // infinite layout options\n    infinite: false // overrides all other options for a forces-all-the-time mode\n  };\n  \n  function ArborLayout(options){\n    this._private = {};\n\n    this._private.options = $$.util.extend({}, defaults, options);\n  }\n    \n  ArborLayout.prototype.run = function(){\n    var layout = this;\n    var options = this._private.options;\n\n    $$.util.require('arbor', function(arbor){\n\n      var cy = options.cy;\n      var eles = options.eles;\n      var nodes = eles.nodes().not(':parent');\n      var edges = eles.edges();\n      var bb = $$.util.makeBoundingBox( options.boundingBox ? options.boundingBox : {\n        x1: 0, y1: 0, w: cy.width(), h: cy.height()\n      } );\n      var simUpdatingPos = false;\n\n      layout.trigger({ type: 'layoutstart', layout: layout });\n\n      // backward compatibility for old animation option\n      if( options.liveUpdate !== undefined ){\n        options.animate = options.liveUpdate;\n      }\n\n      // arbor doesn't work with just 1 node \n      if( eles.nodes().size() <= 1 ){\n        if( options.fit ){\n          cy.reset();\n        }\n\n        eles.nodes().position({\n          x: Math.round( (bb.x1 + bb.x2)/2 ),\n          y: Math.round( (bb.y1 + bb.y2)/2 )\n        });\n\n        layout.one('layoutready', options.ready);\n        layout.trigger({ type: 'layoutready', layout: layout });\n\n        layout.one('layoutstop', options.stop);\n        layout.trigger({ type: 'layoutstop', layout: layout });\n\n        return;\n      }\n\n      var sys = layout._private.system = arbor.ParticleSystem();\n\n      sys.parameters({\n        repulsion: options.repulsion,\n        stiffness: options.stiffness, \n        friction: options.friction, \n        gravity: options.gravity, \n        fps: options.fps, \n        dt: options.dt, \n        precision: options.precision\n      });\n\n      if( options.animate && options.fit ){\n        cy.fit( bb, options.padding );\n      }\n      \n      var doneTime = 250;\n      var doneTimeout;\n      \n      var ready = false;\n      \n      var lastDraw = +new Date();\n      var sysRenderer = {\n        init: function(system){\n        },\n        redraw: function(){\n          var energy = sys.energy();\n\n          // if we're stable (according to the client), we're done\n          if( !options.infinite && options.stableEnergy != null && energy != null && energy.n > 0 && options.stableEnergy(energy) ){\n            layout.stop();\n            return;\n          }\n\n          if( !options.infinite && doneTime != Infinity ){\n            clearTimeout(doneTimeout);\n            doneTimeout = setTimeout(doneHandler, doneTime);\n          }\n          \n          var movedNodes = cy.collection();\n          \n          sys.eachNode(function(n, point){ \n            var data = n.data;\n            var node = data.element;\n            \n            if( node == null ){\n              return;\n            }\n\n            if( !node.locked() && !node.grabbed() ){\n              node.silentPosition({\n                x: bb.x1 + point.x,\n                y: bb.y1 + point.y\n              });\n\n              movedNodes.merge( node );\n            }\n          });\n          \n\n          if( options.animate && movedNodes.length > 0 ){\n            simUpdatingPos = true;\n\n            movedNodes.rtrigger('position');\n\n            if( options.fit ){\n              cy.fit( options.padding );\n            }\n\n            lastDraw = +new Date();\n            simUpdatingPos = false;\n          }\n\n          \n          if( !ready ){\n            ready = true;\n            layout.one('layoutready', options.ready);\n            layout.trigger({ type: 'layoutready', layout: layout });\n          }\n        }\n        \n      };\n      sys.renderer = sysRenderer;\n      sys.screenSize( bb.w, bb.h );\n      sys.screenPadding( options.padding, options.padding, options.padding, options.padding );\n      sys.screenStep( options.stepSize );\n\n      function calculateValueForElement(element, value){\n        if( value == null ){\n          return undefined;\n        } else if( typeof value == typeof function(){} ){\n          return value.apply(element, [element._private.data, {\n            nodes: nodes.length,\n            edges: edges.length,\n            element: element\n          }]); \n        } else {\n          return value;\n        }\n      }\n\n      var grabHandler;\n      nodes.on('grab free position', grabHandler = function(e){\n        if( simUpdatingPos ){ return; }\n\n        var pos = this.position();\n        var apos = sys.fromScreen( pos );\n        if( !apos ){ return; }\n\n        var p = arbor.Point(apos.x, apos.y);\n        var padding = options.padding;\n\n        if(\n          bb.x1 + padding <= pos.x && pos.x <= bb.x2 - padding &&\n          bb.y1 + padding <= pos.y && pos.y <= bb.y2 - padding\n        ){\n          this.scratch().arbor.p = p;\n        }\n        \n        switch( e.type ){\n        case 'grab':\n          this.scratch().arbor.fixed = true;\n          break;\n        case 'free':\n          this.scratch().arbor.fixed = false;\n          //this.scratch().arbor.tempMass = 1000;\n          break;\n        }\n      });\n\n      var lockHandler;\n      nodes.on('lock unlock', lockHandler = function(e){\n        node.scratch().arbor.fixed = node.locked();\n      });\n            \n      var removeHandler;\n      eles.on('remove', removeHandler = function(e){ return; // TODO enable when layout add/remove api added\n        // var ele = this;\n        // var arborEle = ele.scratch().arbor;\n\n        // if( !arborEle ){ return; }\n\n        // if( ele.isNode() ){\n        //   sys.pruneNode( arborEle );\n        // } else {\n        //   sys.pruneEdge( arborEle );\n        // }\n      });\n\n      var addHandler;\n      cy.on('add', '*', addHandler = function(){ return; // TODO enable when layout add/remove api added\n        // var ele = this;\n\n        // if( ele.isNode() ){\n        //   addNode( ele );\n        // } else {\n        //   addEdge( ele );\n        // }\n      });\n\n      var resizeHandler;\n      cy.on('resize', resizeHandler = function(){\n        if( options.boundingBox == null && layout._private.system != null ){\n          var w = cy.width();\n          var h = cy.height();\n\n          sys.screenSize( w, h );\n        }\n      });\n\n      function addNode( node ){\n        if( node.isFullAutoParent() ){ return; } // they don't exist in the sim\n\n        var id = node._private.data.id;\n        var mass = calculateValueForElement(node, options.nodeMass);\n        var locked = node._private.locked;\n        var nPos = node.position();\n        \n        var pos = sys.fromScreen({\n          x: nPos.x,\n          y: nPos.y\n        });\n\n        node.scratch().arbor = sys.addNode(id, {\n          element: node,\n          mass: mass,\n          fixed: locked,\n          x: locked ? pos.x : undefined,\n          y: locked ? pos.y : undefined\n        });\n      }\n\n      function addEdge( edge ){\n        var src = edge.source().id();\n        var tgt = edge.target().id();\n        var length = calculateValueForElement(edge, options.edgeLength);\n        \n        edge.scratch().arbor = sys.addEdge(src, tgt, {\n          length: length\n        }); \n      }\n\n      nodes.each(function(i, node){\n        addNode( node );\n      });\n      \n      edges.each(function(i, edge){\n        addEdge( edge );\n      });\n      \n      var grabbableNodes = nodes.filter(\":grabbable\");\n      // disable grabbing if so set\n      if( options.ungrabifyWhileSimulating ){\n        grabbableNodes.ungrabify();\n      }\n      \n      var doneHandler = layout._private.doneHandler = function(){\n        layout._private.doneHandler = null;\n\n        if( !options.animate ){\n          if( options.fit ){\n            cy.reset();\n          }\n\n          nodes.rtrigger('position');\n        }\n\n        // unbind handlers\n        nodes.off('grab free position', grabHandler);\n        nodes.off('lock unlock', lockHandler);\n        eles.off('remove', removeHandler);\n        cy.off('add', '*', addHandler);\n        cy.off('resize', resizeHandler);\n        \n        // enable back grabbing if so set\n        if( options.ungrabifyWhileSimulating ){\n          grabbableNodes.grabify();\n        }\n\n        layout.one('layoutstop', options.stop);\n        layout.trigger({ type: 'layoutstop', layout: layout });\n      };\n      \n      sys.start();\n      if( !options.infinite && options.maxSimulationTime != null && options.maxSimulationTime > 0 && options.maxSimulationTime !== Infinity ){\n        setTimeout(function(){\n          layout.stop();\n        }, options.maxSimulationTime);\n      }\n    \n    }); // require\n\n    return this; // chaining\n  };\n\n\n  ArborLayout.prototype.stop = function(){\n    if( this._private.system != null ){\n      this._private.system.stop();\n    }\n\n    if( this._private.doneHandler ){\n      this._private.doneHandler();\n    }\n\n    return this; // chaining\n  };\n  \n  $$('layout', 'arbor', ArborLayout);\n  \n  \n})(cytoscape);\n\n;(function($$){ 'use strict';\n  \n  var defaults = {\n    fit: true, // whether to fit the viewport to the graph\n    directed: false, // whether the tree is directed downwards (or edges can point in any direction if false)\n    padding: 30, // padding on fit\n    circle: false, // put depths in concentric circles if true, put depths top down if false\n    spacingFactor: 1.75, // positive spacing factor, larger => more space between nodes (N.B. n/a if causes overlap)\n    boundingBox: undefined, // constrain layout bounds; { x1, y1, x2, y2 } or { x1, y1, w, h }\n    avoidOverlap: true, // prevents node overlap, may overflow boundingBox if not enough space\n    roots: undefined, // the roots of the trees\n    maximalAdjustments: 0, // how many times to try to position the nodes in a maximal way (i.e. no backtracking)\n    animate: false, // whether to transition the node positions\n    animationDuration: 500, // duration of animation in ms if enabled\n    ready: undefined, // callback on layoutready\n    stop: undefined // callback on layoutstop\n  };\n  \n  function BreadthFirstLayout( options ){\n    this.options = $$.util.extend({}, defaults, options);\n  }\n  \n  BreadthFirstLayout.prototype.run = function(){\n    var params = this.options;\n    var options = params;\n    \n    var cy = params.cy;\n    var eles = options.eles;\n    var nodes = eles.nodes().not(':parent');\n    var graph = eles;\n    \n    var bb = $$.util.makeBoundingBox( options.boundingBox ? options.boundingBox : {\n      x1: 0, y1: 0, w: cy.width(), h: cy.height()\n    } );\n\n    var roots;\n    if( $$.is.elementOrCollection(options.roots) ){\n      roots = options.roots;\n    } else if( $$.is.array(options.roots) ){\n      var rootsArray = [];\n\n      for( var i = 0; i < options.roots.length; i++ ){\n        var id = options.roots[i];\n        var ele = cy.getElementById( id );\n        rootsArray.push( ele );\n      }\n\n      roots = new $$.Collection( cy, rootsArray );\n    } else if( $$.is.string(options.roots) ){\n      roots = cy.$( options.roots );\n\n    } else {\n      if( options.directed ){\n        roots = nodes.roots();\n      } else {\n        var components = [];\n        var unhandledNodes = nodes;\n\n        while( unhandledNodes.length > 0 ){\n          var currComp = cy.collection();\n\n          eles.bfs({\n            roots: unhandledNodes[0],\n            visit: function(i, depth, node, edge, pNode){\n              currComp = currComp.add( node );\n            },\n            directed: false\n          });\n\n          unhandledNodes = unhandledNodes.not( currComp );\n          components.push( currComp );\n        }\n\n        roots = cy.collection();\n        for( var i = 0; i < components.length; i++ ){\n          var comp = components[i];\n          var maxDegree = comp.maxDegree( false );\n          var compRoots = comp.filter(function(){\n            return this.degree(false) === maxDegree;\n          });\n\n          roots = roots.add( compRoots );\n        }\n        \n      }\n    }\n\n\n    var depths = [];\n    var foundByBfs = {};\n    var id2depth = {};\n    var prevNode = {};\n    var prevEdge = {};\n    var successors = {};\n\n    // find the depths of the nodes\n    graph.bfs({\n      roots: roots,\n      directed: options.directed,\n      visit: function(i, depth, node, edge, pNode){\n        var ele = this[0];\n        var id = ele.id();\n\n        if( !depths[depth] ){\n          depths[depth] = [];\n        }\n\n        depths[depth].push( ele );\n        foundByBfs[ id ] = true;\n        id2depth[ id ] = depth;\n        prevNode[ id ] = pNode;\n        prevEdge[ id ] = edge;\n\n        if( pNode ){\n          var prevId = pNode.id();\n          var succ = successors[ prevId ] = successors[ prevId ] || [];\n          \n          succ.push( node );\n        }\n      }\n    });\n\n    // check for nodes not found by bfs\n    var orphanNodes = [];\n    for( var i = 0; i < nodes.length; i++ ){\n      var ele = nodes[i];\n\n      if( foundByBfs[ ele.id() ] ){\n        continue;\n      } else {\n        orphanNodes.push( ele );\n      }\n    }\n\n    // assign orphan nodes a depth from their neighborhood\n    var maxChecks = orphanNodes.length * 3;\n    var checks = 0;\n    while( orphanNodes.length !== 0 && checks < maxChecks ){\n      var node = orphanNodes.shift();\n      var neighbors = node.neighborhood().nodes();\n      var assignedDepth = false;\n\n      for( var i = 0; i < neighbors.length; i++ ){\n        var depth = id2depth[ neighbors[i].id() ];\n\n        if( depth !== undefined ){\n          depths[depth].push( node );\n          assignedDepth = true;\n          break;\n        }\n      }\n\n      if( !assignedDepth ){\n        orphanNodes.push( node );\n      }\n\n      checks++;\n    }\n\n    // assign orphan nodes that are still left to the depth of their subgraph\n    while( orphanNodes.length !== 0 ){\n      var node = orphanNodes.shift();\n      //var subgraph = graph.bfs( node ).path;\n      var assignedDepth = false;\n\n      // for( var i = 0; i < subgraph.length; i++ ){\n      //   var depth = id2depth[ subgraph[i].id() ];\n\n      //   if( depth !== undefined ){\n      //     depths[depth].push( node );\n      //     assignedDepth = true;\n      //     break;\n      //   }\n      // }\n\n      if( !assignedDepth ){ // worst case if the graph really isn't tree friendly, then just dump it in 0\n        if( depths.length === 0 ){\n          depths.push([]);\n        }\n        \n        depths[0].push( node );\n      }\n    }\n\n    // assign the nodes a depth and index\n    var assignDepthsToEles = function(){\n      for( var i = 0; i < depths.length; i++ ){\n        var eles = depths[i];\n\n        for( var j = 0; j < eles.length; j++ ){\n          var ele = eles[j];\n\n          ele._private.scratch.breadthfirst = {\n            depth: i,\n            index: j\n          };\n        }\n      }\n    };\n    assignDepthsToEles();\n\n\n    var intersectsDepth = function( node ){ // returns true if has edges pointing in from a higher depth\n      var edges = node.connectedEdges(function(){\n        return this.data('target') === node.id();\n      });\n      var thisInfo = node._private.scratch.breadthfirst;\n      var highestDepthOfOther = 0;\n      var highestOther;\n      for( var i = 0; i < edges.length; i++ ){\n        var edge = edges[i];\n        var otherNode = edge.source()[0];\n        var otherInfo = otherNode._private.scratch.breadthfirst;\n\n        if( thisInfo.depth <= otherInfo.depth && highestDepthOfOther < otherInfo.depth ){\n          highestDepthOfOther = otherInfo.depth;\n          highestOther = otherNode;\n        }\n      }\n\n      return highestOther;\n    };\n\n     // make maximal if so set by adjusting depths\n    for( var adj = 0; adj < options.maximalAdjustments; adj++ ){\n\n      var nDepths = depths.length;\n      var elesToMove = [];\n      for( var i = 0; i < nDepths; i++ ){\n        var depth = depths[i];\n\n        var nDepth = depth.length;\n        for( var j = 0; j < nDepth; j++ ){\n          var ele = depth[j];\n          var info = ele._private.scratch.breadthfirst;\n          var intEle = intersectsDepth(ele);\n\n          if( intEle ){\n            info.intEle = intEle;\n            elesToMove.push( ele );\n          }\n        }\n      }\n\n      for( var i = 0; i < elesToMove.length; i++ ){ \n        var ele = elesToMove[i];\n        var info = ele._private.scratch.breadthfirst;\n        var intEle = info.intEle;\n        var intInfo = intEle._private.scratch.breadthfirst;\n\n        depths[ info.depth ].splice( info.index, 1 ); // remove from old depth & index\n\n        // add to end of new depth\n        var newDepth = intInfo.depth + 1;\n        while( newDepth > depths.length - 1 ){\n          depths.push([]);\n        }\n        depths[ newDepth ].push( ele );\n\n        info.depth = newDepth;\n        info.index = depths[newDepth].length - 1;\n      }\n\n      assignDepthsToEles();\n    }\n\n    // find min distance we need to leave between nodes\n    var minDistance = 0;\n    if( options.avoidOverlap ){\n      for( var i = 0; i < nodes.length; i++ ){\n        var w = nodes[i].outerWidth();\n        var h = nodes[i].outerHeight();\n        \n        minDistance = Math.max(minDistance, w, h);\n      }\n      minDistance *= options.spacingFactor; // just to have some nice spacing\n    }\n\n    // get the weighted percent for an element based on its connectivity to other levels\n    var cachedWeightedPercent = {};\n    var getWeightedPercent = function( ele ){\n      if( cachedWeightedPercent[ ele.id() ] ){\n        return cachedWeightedPercent[ ele.id() ];\n      }\n\n      var eleDepth = ele._private.scratch.breadthfirst.depth;\n      var neighbors = ele.neighborhood().nodes().not(':parent');\n      var percent = 0;\n      var samples = 0;\n\n      for( var i = 0; i < neighbors.length; i++ ){\n        var neighbor = neighbors[i];\n        var bf = neighbor._private.scratch.breadthfirst;\n        var index = bf.index;\n        var depth = bf.depth;\n        var nDepth = depths[depth].length;\n\n        if( eleDepth > depth || eleDepth === 0 ){ // only get influenced by elements above\n          percent += index / nDepth;\n          samples++;\n        }\n      }\n\n      samples = Math.max(1, samples);\n      percent = percent / samples;\n\n      if( samples === 0 ){ // so lone nodes have a \"don't care\" state in sorting\n        percent = undefined;\n      }\n\n      cachedWeightedPercent[ ele.id() ] = percent;\n      return percent;\n    };\n\n\n    // rearrange the indices in each depth level based on connectivity\n\n    var sortFn = function(a, b){\n      var apct = getWeightedPercent( a );\n      var bpct = getWeightedPercent( b );\n\n      return apct - bpct;\n    };\n\n    for( var times = 0; times < 3; times++ ){ // do it a few times b/c the depths are dynamic and we want a more stable result\n\n      for( var i = 0; i < depths.length; i++ ){\n        depths[i] = depths[i].sort( sortFn );\n      }\n      assignDepthsToEles(); // and update\n\n    }\n\n    var biggestDepthSize = 0;\n    for( var i = 0; i < depths.length; i++ ){\n      biggestDepthSize = Math.max( depths[i].length, biggestDepthSize );\n    }\n\n    var center = {\n      x: bb.x1 + bb.w/2,\n      y: bb.x1 + bb.h/2\n    };\n   \n    var getPosition = function( ele, isBottomDepth ){\n      var info = ele._private.scratch.breadthfirst;\n      var depth = info.depth;\n      var index = info.index;\n      var depthSize = depths[depth].length;\n\n      var distanceX = Math.max( bb.w / (depthSize + 1), minDistance );\n      var distanceY = Math.max( bb.h / (depths.length + 1), minDistance );\n      var radiusStepSize = Math.min( bb.w / 2 / depths.length, bb.h / 2 / depths.length );\n      radiusStepSize = Math.max( radiusStepSize, minDistance );\n\n      if( !options.circle ){\n        \n        var epos = {\n          x: center.x + (index + 1 - (depthSize + 1)/2) * distanceX,\n          y: (depth + 1) * distanceY\n        };\n\n        if( isBottomDepth ){\n          return epos;\n        }\n\n        // var succs = successors[ ele.id() ];\n        // if( succs ){\n        //   epos.x = 0;\n        // \n        //   for( var i = 0 ; i < succs.length; i++ ){\n        //     var spos = pos[ succs[i].id() ];\n        //     \n        //     epos.x += spos.x;\n        //   }\n        // \n        //   epos.x /= succs.length;\n        // } else {\n        //   //debugger;\n        // }\n\n        return epos;\n\n      } else {\n        if( options.circle ){\n          var radius = radiusStepSize * depth + radiusStepSize - (depths.length > 0 && depths[0].length <= 3 ? radiusStepSize/2 : 0);\n          var theta = 2 * Math.PI / depths[depth].length * index;\n\n          if( depth === 0 && depths[0].length === 1 ){\n            radius = 1;\n          }\n\n          return {\n            x: center.x + radius * Math.cos(theta),\n            y: center.y + radius * Math.sin(theta)\n          };\n\n        } else {\n          return {\n            x: center.x + (index + 1 - (depthSize + 1)/2) * distanceX,\n            y: (depth + 1) * distanceY\n          };\n        }\n      }\n      \n    };\n\n    // get positions in reverse depth order\n    var pos = {};\n    for( var i = depths.length - 1; i >=0; i-- ){\n      var depth = depths[i];\n\n      for( var j = 0; j < depth.length; j++ ){\n        var node = depth[j];\n\n        pos[ node.id() ] = getPosition( node, i === depths.length - 1 );\n      }\n    }\n\n    nodes.layoutPositions(this, options, function(){\n      return pos[ this.id() ];\n    });\n    \n    return this; // chaining\n  };\n  \n  $$('layout', 'breadthfirst', BreadthFirstLayout);\n  \n})( cytoscape );\n\n;(function($$){ 'use strict';\n  \n  var defaults = {\n    fit: true, // whether to fit the viewport to the graph\n    padding: 30, // the padding on fit\n    boundingBox: undefined, // constrain layout bounds; { x1, y1, x2, y2 } or { x1, y1, w, h }\n    avoidOverlap: true, // prevents node overlap, may overflow boundingBox and radius if not enough space\n    radius: undefined, // the radius of the circle\n    startAngle: 3/2 * Math.PI, // the position of the first node\n    counterclockwise: false, // whether the layout should go counterclockwise (true) or clockwise (false)\n    sort: undefined, // a sorting function to order the nodes; e.g. function(a, b){ return a.data('weight') - b.data('weight') }\n    animate: false, // whether to transition the node positions\n    animationDuration: 500, // duration of animation in ms if enabled\n    ready: undefined, // callback on layoutready\n    stop: undefined // callback on layoutstop\n  };\n  \n  function CircleLayout( options ){\n    this.options = $$.util.extend({}, defaults, options);\n  }\n  \n  CircleLayout.prototype.run = function(){\n    var params = this.options;\n    var options = params;\n    \n    var cy = params.cy;\n    var eles = options.eles;\n      \n    var nodes = eles.nodes().not(':parent');\n\n    if( options.sort ){\n      nodes = nodes.sort( options.sort );\n    }\n    \n    var bb = $$.util.makeBoundingBox( options.boundingBox ? options.boundingBox : {\n      x1: 0, y1: 0, w: cy.width(), h: cy.height()\n    } );\n\n    var center = {\n      x: bb.x1 + bb.w/2,\n      y: bb.y1 + bb.h/2\n    };\n    \n    var theta = options.startAngle;\n    var dTheta = 2 * Math.PI / nodes.length;\n    var r;\n\n    var minDistance = 0;\n    for( var i = 0; i < nodes.length; i++ ){\n      var w = nodes[i].outerWidth();\n      var h = nodes[i].outerHeight();\n      \n      minDistance = Math.max(minDistance, w, h);\n    }\n\n    if( $$.is.number(options.radius) ){\n      r = options.radius;\n    } else if( nodes.length <= 1 ){\n      r = 0;\n    } else {\n      r = Math.min( bb.h, bb.w )/2 - minDistance;\n    }\n\n    // calculate the radius\n    if( nodes.length > 1 && options.avoidOverlap ){ // but only if more than one node (can't overlap)\n      minDistance *= 1.75; // just to have some nice spacing\n\n      var dTheta = 2 * Math.PI / nodes.length;\n      var dcos = Math.cos(dTheta) - Math.cos(0);\n      var dsin = Math.sin(dTheta) - Math.sin(0);\n      var rMin = Math.sqrt( minDistance * minDistance / ( dcos*dcos + dsin*dsin ) ); // s.t. no nodes overlapping\n      r = Math.max( rMin, r );\n    }\n\n    var getPos = function( i, ele ){\n      var rx = r * Math.cos( theta );\n      var ry = r * Math.sin( theta );\n      var pos = {\n        x: center.x + rx,\n        y: center.y + ry\n      };\n\n      theta = options.counterclockwise ? theta - dTheta : theta + dTheta;\n      return pos;\n    };\n    \n    nodes.layoutPositions( this, options, getPos );\n\n    return this; // chaining\n  };\n  \n  $$('layout', 'circle', CircleLayout);\n  \n})( cytoscape );\n\n;(function($$){ 'use strict';\n\n  // default layout options\n  var defaults = {\n    animate: true, // whether to show the layout as it's running\n    refresh: 1, // number of ticks per frame; higher is faster but more jerky\n    maxSimulationTime: 4000, // max length in ms to run the layout\n    ungrabifyWhileSimulating: false, // so you can't drag nodes during layout\n    fit: true, // on every layout reposition of nodes, fit the viewport\n    padding: 30, // padding around the simulation\n    boundingBox: undefined, // constrain layout bounds; { x1, y1, x2, y2 } or { x1, y1, w, h }\n\n    // layout event callbacks\n    ready: function(){}, // on layoutready\n    stop: function(){}, // on layoutstop\n\n    // positioning options\n    randomize: false, // use random node positions at beginning of layout\n    avoidOverlap: true, // if true, prevents overlap of node bounding boxes\n    handleDisconnected: true, // if true, avoids disconnected components from overlapping\n    nodeSpacing: function( node ){ return 10; }, // extra spacing around nodes\n    flow: undefined, // use DAG/tree flow layout if specified, e.g. { axis: 'y', minSeparation: 30 }\n    alignment: undefined, // relative alignment constraints on nodes, e.g. function( node ){ return { x: 0, y: 1 } }\n\n    // different methods of specifying edge length\n    // each can be a constant numerical value or a function like `function( edge ){ return 2; }`\n    edgeLength: undefined, // sets edge length directly in simulation\n    edgeSymDiffLength: undefined, // symmetric diff edge length in simulation\n    edgeJaccardLength: undefined, // jaccard edge length in simulation\n\n    // iterations of cola algorithm; uses default values on undefined\n    unconstrIter: undefined, // unconstrained initial layout iterations\n    userConstIter: undefined, // initial layout iterations with user-specified constraints\n    allConstIter: undefined, // initial layout iterations with all constraints including non-overlap\n\n    // infinite layout options\n    infinite: false // overrides all other options for a forces-all-the-time mode\n  };\n\n  // constructor\n  // options : object containing layout options\n  function ColaLayout( options ){\n    this.options = $$.util.extend(true, {}, defaults, options); \n  }\n\n  // runs the layout\n  ColaLayout.prototype.run = function(){\n    var layout = this;\n    var options = this.options;\n    \n    layout.manuallyStopped = false;\n\n    $$.util.require('cola', function(cola){\n\n      var cy = options.cy; // cy is automatically populated for us in the constructor\n      var eles = options.eles;\n      var nodes = eles.nodes();\n      var edges = eles.edges();\n      var ready = false;\n      \n      var bb = $$.util.makeBoundingBox( options.boundingBox ? options.boundingBox : {\n        x1: 0, y1: 0, w: cy.width(), h: cy.height()\n      } );\n\n      var getOptVal = function( val, ele ){\n        if( $$.is.fn(val) ){\n          var fn = val;\n          return fn.apply( ele, [ ele ] );\n        } else {\n          return val;\n        }\n      };\n\n      var updateNodePositions = function(){\n        var x = { min: Infinity, max: -Infinity };\n        var y = { min: Infinity, max: -Infinity };\n\n        for( var i = 0; i < nodes.length; i++ ){\n          var node = nodes[i];\n          var scratch = node._private.scratch.cola;\n\n          x.min = Math.min( x.min, scratch.x || 0 );\n          x.max = Math.max( x.max, scratch.x || 0 );\n\n          y.min = Math.min( y.min, scratch.y || 0 );\n          y.max = Math.max( y.max, scratch.y || 0 );\n          \n          // update node dims\n          if( !scratch.updatedDims ){\n            var nbb = node.boundingBox();\n            var padding = getOptVal( options.nodeSpacing, node );\n            \n            scratch.width = nbb.w + 2*padding;\n            scratch.height = nbb.h + 2*padding;\n          }\n        }\n\n        nodes.positions(function(i, node){\n          var scratch = node._private.scratch.cola;\n          var retPos;\n\n          if( !node.grabbed() && !node.isParent() ){\n            retPos = {\n              x: bb.x1 + scratch.x - x.min,\n              y: bb.y1 + scratch.y - y.min\n            };\n\n            if( !$$.is.number(retPos.x) || !$$.is.number(retPos.y) ){\n              retPos = undefined;\n            }\n          }\n\n          return retPos;\n        });\n\n        nodes.updateCompoundBounds(); // because the way this layout sets positions is buggy for some reason; ref #878\n\n        if( !ready ){\n          onReady();\n          ready = true;\n        }\n\n        if( options.fit ){\n          cy.fit( options.padding );\n        }\n      };\n\n      var onDone = function(){\n        if( options.ungrabifyWhileSimulating ){\n          grabbableNodes.grabify();\n        }\n\n        nodes.off('grab free position', grabHandler);\n        nodes.off('lock unlock', lockHandler);\n\n        // trigger layoutstop when the layout stops (e.g. finishes)\n        layout.one('layoutstop', options.stop);\n        layout.trigger({ type: 'layoutstop', layout: layout });\n      };\n\n      var onReady = function(){\n        // trigger layoutready when each node has had its position set at least once\n        layout.one('layoutready', options.ready);\n        layout.trigger({ type: 'layoutready', layout: layout });\n      };\n\n      var ticksPerFrame = options.refresh;\n      var tickSkip = 1; // frames until a tick; used to slow down sim for debugging\n\n      if( options.refresh < 0 ){\n        tickSkip = Math.abs( options.refresh );\n        ticksPerFrame = 1;\n      } else {\n        ticksPerFrame = Math.max( 1, ticksPerFrame ); // at least 1\n      }\n\n      var adaptor = layout.adaptor = cola.adaptor({\n        trigger: function( e ){ // on sim event      \n          var TICK = cola.EventType ? cola.EventType.tick : null;\n          var END = cola.EventType ? cola.EventType.end : null;\n          \n          switch( e.type ){\n            case 'tick':\n            case TICK:\n              if( options.animate ){\n                updateNodePositions();\n              }\n              break;\n\n            case 'end':\n            case END:\n              updateNodePositions();\n              if( !options.infinite ){ onDone(); }           \n              break;\n          }\n        },\n\n        kick: function(){ // kick off the simulation\n          var skip = 0;\n\n          var inftick = function(){\n            if( layout.manuallyStopped ){\n              onDone();\n              \n              return true;\n            }\n            \n            var ret = adaptor.tick();\n\n            if( ret && options.infinite ){ // resume layout if done\n              adaptor.resume(); // resume => new kick\n            }\n            \n            return ret; // allow regular finish b/c of new kick\n          };\n\n          var multitick = function(){ // multiple ticks in a row\n            var ret;\n\n            // skip ticks to slow down layout for debugging\n            // var thisSkip = skip;\n            // skip = (skip + 1) % tickSkip;\n            // if( thisSkip !== 0 ){\n            //   return false;\n            // }\n\n            for( var i = 0; i < ticksPerFrame && !ret; i++ ){\n              ret = ret || inftick(); // pick up true ret vals => sim done\n            }\n\n            return ret;\n          };\n\n          if( options.animate ){\n            var frame = function(){\n              if( multitick() ){ return; }\n\n              $$.util.requestAnimationFrame( frame );\n            };\n\n            $$.util.requestAnimationFrame( frame );\n          } else {\n            while( !inftick() ){}\n          }\n        },\n\n        on: function( type, listener ){}, // dummy; not needed\n\n        drag: function(){} // not needed for our case\n      });\n      layout.adaptor = adaptor;\n\n      // if set no grabbing during layout\n      var grabbableNodes = nodes.filter(':grabbable');\n      if( options.ungrabifyWhileSimulating ){\n        grabbableNodes.ungrabify();\n      }\n\n      // handle node dragging\n      var grabHandler;\n      nodes.on('grab free position', grabHandler = function(e){\n        var node = this;\n        var scrCola = node._private.scratch.cola;\n        var pos = node._private.position;\n\n        if( node.grabbed() ){\n          scrCola.x = pos.x - bb.x1;\n          scrCola.y = pos.y - bb.y1;\n\n          adaptor.dragstart( scrCola );\n        } else if( $$.is.number(scrCola.x) && $$.is.number(scrCola.y) ){\n          pos.x = scrCola.x + bb.x1;\n          pos.y = scrCola.y + bb.y1;\n        }\n\n        switch( e.type ){\n          case 'grab':\n            adaptor.dragstart( scrCola );\n            adaptor.resume();\n            break;\n          case 'free':\n            adaptor.dragend( scrCola );\n            break;\n        }\n        \n      });\n\n      var lockHandler;\n      nodes.on('lock unlock', lockHandler = function(e){\n        var node = this;\n        var scrCola = node._private.scratch.cola;\n      \n        if( node.locked() ){\n          adaptor.dragstart( scrCola );\n        } else {\n          adaptor.dragend( scrCola );\n        }\n      });\n\n      var nonparentNodes = nodes.stdFilter(function( node ){\n        return !node.isParent();\n      });\n\n      // add nodes to cola\n      adaptor.nodes( nonparentNodes.map(function( node, i ){\n        var padding = getOptVal( options.nodeSpacing, node );\n        var pos = node.position();\n        var nbb = node.boundingBox();\n\n        var struct = node._private.scratch.cola = {\n          x: options.randomize || pos.x === undefined ? Math.round( Math.random() * bb.w ) : pos.x,\n          y: options.randomize || pos.y === undefined ? Math.round( Math.random() * bb.h ) : pos.y,\n          width: nbb.w + 2*padding,\n          height: nbb.h + 2*padding,\n          index: i\n        };\n\n        return struct;\n      }) );\n\n      if( options.alignment ){ // then set alignment constraints\n\n        var offsetsX = [];\n        var offsetsY = [];\n\n        nonparentNodes.forEach(function( node ){\n          var align = getOptVal( options.alignment, node );\n          var scrCola = node._private.scratch.cola;\n          var index = scrCola.index;\n\n          if( !align ){ return; }\n\n          if( align.x != null ){\n            offsetsX.push({\n              node: index,\n              offset: align.x\n            });\n          }\n\n          if( align.y != null ){\n            offsetsY.push({\n              node: index,\n              offset: align.y\n            });\n          }\n        });\n\n        // add alignment constraints on nodes\n        var constraints = [];\n\n        if( offsetsX.length > 0 ){\n          constraints.push({\n            type: 'alignment',\n            axis: 'x',\n            offsets: offsetsX\n          });\n        }\n\n        if( offsetsY.length > 0 ){\n          constraints.push({\n            type: 'alignment',\n            axis: 'y',\n            offsets: offsetsY\n          });\n        }\n        \n        adaptor.constraints( constraints );\n\n      }\n\n      // add compound nodes to cola\n      adaptor.groups( nodes.stdFilter(function( node ){\n        return node.isParent();\n      }).map(function( node, i ){ // add basic group incl leaf nodes\n        var style = node._private.style;\n        \n        var optPadding = getOptVal( options.nodeSpacing, node );\n        \n        var pleft = style['padding-left'].pxValue + optPadding;\n        var pright = style['padding-right'].pxValue + optPadding;\n        var ptop = style['padding-top'].pxValue + optPadding;\n        var pbottom = style['padding-bottom'].pxValue + optPadding;\n        \n        node._private.scratch.cola = {\n          index: i,\n          \n          padding: Math.max( pleft, pright, ptop, pbottom ),\n\n          leaves: node.descendants().stdFilter(function( child ){\n            return !child.isParent();\n          }).map(function( child ){\n            return child[0]._private.scratch.cola.index;\n          })\n        };\n\n        return node;\n      }).map(function( node ){ // add subgroups\n        node._private.scratch.cola.groups = node.descendants().stdFilter(function( child ){\n          return child.isParent();\n        }).map(function( child ){\n          return child._private.scratch.cola.index;\n        });\n\n        return node._private.scratch.cola;\n      }) );\n\n      // get the edge length setting mechanism\n      var length;\n      var lengthFnName;\n      if( options.edgeLength != null ){\n        length = options.edgeLength;\n        lengthFnName = 'linkDistance';\n      } else if( options.edgeSymDiffLength != null ){\n        length = options.edgeSymDiffLength;\n        lengthFnName = 'symmetricDiffLinkLengths';\n      } else if( options.edgeJaccardLength != null ){\n        length = options.edgeJaccardLength;\n        lengthFnName = 'jaccardLinkLengths';\n      } else {\n        length = 100;\n        lengthFnName = 'linkDistance';\n      }\n\n      var lengthGetter = function( link ){\n        return link.calcLength;\n      };\n\n      // add the edges to cola\n      adaptor.links( edges.stdFilter(function( edge ){\n        return !edge.source().isParent() && !edge.target().isParent();\n      }).map(function( edge, i ){\n        var c = edge._private.scratch.cola = {\n          source: edge.source()[0]._private.scratch.cola.index,\n          target: edge.target()[0]._private.scratch.cola.index\n        };\n\n        if( length != null ){\n          c.calcLength = getOptVal( length, edge );\n        }\n\n        return c;\n      }) );\n\n      adaptor.size([ bb.w, bb.h ]);\n\n      if( length != null ){\n        adaptor[ lengthFnName ]( lengthGetter );\n      }\n\n      // set the flow of cola\n      if( options.flow ){\n        var flow;\n        var defAxis = 'y';\n        var defMinSep = 50;\n\n        if( $$.is.string(options.flow) ){\n          flow = {\n            axis: options.flow,\n            minSeparation: defMinSep\n          };\n        } else if( $$.is.number(options.flow) ){\n          flow = {\n            axis: defAxis,\n            minSeparation: options.flow\n          };\n        } else if( $$.is.plainObject(options.flow) ){\n          flow = options.flow;\n\n          flow.axis = flow.axis || defAxis;\n          flow.minSeparation = flow.minSeparation != null ? flow.minSeparation : defMinSep;\n        } else { // e.g. options.flow: true\n          flow = {\n            axis: defAxis,\n            minSeparation: defMinSep\n          };\n        }\n\n        adaptor.flowLayout( flow.axis , flow.minSeparation );\n      }\n\n      layout.trigger({ type: 'layoutstart', layout: layout });\n\n      adaptor\n        .avoidOverlaps( options.avoidOverlap )\n        .handleDisconnected( options.handleDisconnected )\n        .start( options.unconstrIter, options.userConstIter, options.allConstIter)\n      ;\n\n      if( !options.infinite ){\n        setTimeout(function(){\n          if( !layout.manuallyStopped ){\n            adaptor.stop();\n          }\n        }, options.maxSimulationTime);\n      }\n\n    }); // require\n\n    return this; // chaining\n  };\n\n  // called on continuous layouts to stop them before they finish\n  ColaLayout.prototype.stop = function(){\n    if( this.adaptor ){\n      this.manuallyStopped = true;\n      this.adaptor.stop();\n    }\n\n    return this; // chaining\n  };\n\n  // register the layout\n  $$('layout', 'cola', ColaLayout);\n\n})(cytoscape);\n\n;(function($$){ 'use strict';\n  \n  var defaults = {\n    fit: true, // whether to fit the viewport to the graph\n    padding: 30, // the padding on fit\n    startAngle: 3/2 * Math.PI, // the position of the first node\n    counterclockwise: false, // whether the layout should go counterclockwise/anticlockwise (true) or clockwise (false)\n    minNodeSpacing: 10, // min spacing between outside of nodes (used for radius adjustment)\n    boundingBox: undefined, // constrain layout bounds; { x1, y1, x2, y2 } or { x1, y1, w, h }\n    avoidOverlap: true, // prevents node overlap, may overflow boundingBox if not enough space\n    height: undefined, // height of layout area (overrides container height)\n    width: undefined, // width of layout area (overrides container width)\n    concentric: function(node){ // returns numeric value for each node, placing higher nodes in levels towards the centre\n      return node.degree();\n    },\n    levelWidth: function(nodes){ // the variation of concentric values in each level\n      return nodes.maxDegree() / 4;\n    },\n    animate: false, // whether to transition the node positions\n    animationDuration: 500, // duration of animation in ms if enabled\n    ready: undefined, // callback on layoutready\n    stop: undefined // callback on layoutstop\n  };\n  \n  function ConcentricLayout( options ){\n    this.options = $$.util.extend({}, defaults, options);\n  }\n  \n  ConcentricLayout.prototype.run = function(){\n    var params = this.options;\n    var options = params;\n    \n    var cy = params.cy;\n    \n    var eles = options.eles;\n    var nodes = eles.nodes().not(':parent');\n    \n    var bb = $$.util.makeBoundingBox( options.boundingBox ? options.boundingBox : {\n      x1: 0, y1: 0, w: cy.width(), h: cy.height()\n    } );\n\n    var center = {\n      x: bb.x1 + bb.w/2,\n      y: bb.y1 + bb.h/2\n    };\n    \n    var nodeValues = []; // { node, value }\n    var theta = options.startAngle;\n    var maxNodeSize = 0;\n\n    for( var i = 0; i < nodes.length; i++ ){\n      var node = nodes[i];\n      var value;\n      \n      // calculate the node value\n      value = options.concentric.apply(node, [ node ]);\n      nodeValues.push({\n        value: value,\n        node: node\n      });\n\n      // for style mapping\n      node._private.scratch.concentric = value;\n    }\n\n    // in case we used the `concentric` in style\n    nodes.updateStyle();\n\n    // calculate max size now based on potentially updated mappers\n    for( var i = 0; i < nodes.length; i++ ){\n      var node = nodes[i];\n\n      maxNodeSize = Math.max( maxNodeSize, node.outerWidth(), node.outerHeight() );\n    }\n\n    // sort node values in descreasing order\n    nodeValues.sort(function(a, b){\n      return b.value - a.value;\n    });\n\n    var levelWidth = options.levelWidth( nodes );\n\n    // put the values into levels\n    var levels = [ [] ];\n    var currentLevel = levels[0];\n    for( var i = 0; i < nodeValues.length; i++ ){\n      var val = nodeValues[i];\n\n      if( currentLevel.length > 0 ){\n        var diff = Math.abs( currentLevel[0].value - val.value );\n\n        if( diff >= levelWidth ){\n          currentLevel = [];\n          levels.push( currentLevel );\n        }\n      }\n\n      currentLevel.push( val );\n    }\n\n    // create positions from levels\n\n    var pos = {}; // id => position\n    var r = 0;\n    var minDist = maxNodeSize + options.minNodeSpacing; // min dist between nodes\n\n    if( !options.avoidOverlap ){ // then strictly constrain to bb\n      var firstLvlHasMulti = levels.length > 0 && levels[0].length > 1;\n      var maxR = ( Math.min(bb.w, bb.h) / 2 - minDist );\n      var rStep = maxR / ( levels.length + firstLvlHasMulti ? 1 : 0 );\n\n      minDist = Math.min( minDist, rStep );\n    }\n\n    for( var i = 0; i < levels.length; i++ ){\n      var level = levels[i];\n      var dTheta = 2 * Math.PI / level.length;\n\n      // calculate the radius\n      if( level.length > 1 && options.avoidOverlap ){ // but only if more than one node (can't overlap)\n        var dcos = Math.cos(dTheta) - Math.cos(0);\n        var dsin = Math.sin(dTheta) - Math.sin(0);\n        var rMin = Math.sqrt( minDist * minDist / ( dcos*dcos + dsin*dsin ) ); // s.t. no nodes overlapping\n        r = Math.max( rMin, r );\n      }\n\n      for( var j = 0; j < level.length; j++ ){\n        var val = level[j];\n        var theta = options.startAngle + (options.counterclockwise ? -1 : 1) * dTheta * j;\n\n        var p = {\n          x: center.x + r * Math.cos(theta),\n          y: center.y + r * Math.sin(theta)\n        };\n\n        pos[ val.node.id() ] = p;\n      }\n\n      r += minDist;\n      \n    } \n\n    // position the nodes\n    nodes.layoutPositions(this, options, function(){\n      var id = this.id();\n\n      return pos[id];\n    });\n  \n    return this; // chaining\n  };\n  \n  $$('layout', 'concentric', ConcentricLayout);\n  \n})( cytoscape );\n\n/*\n  The CoSE layout was written by Gerardo Huck.\n\n  Modifications tracked on Github.\n*/\n\n;(function($$) { 'use strict';\n\n  var DEBUG;\n\n  /**\n   * @brief :  default layout options\n   */\n  var defaults = {\n    // Called on `layoutready`\n    ready               : function() {},\n\n    // Called on `layoutstop`\n    stop                : function() {},\n\n    // Whether to animate while running the layout\n    animate             : true,\n\n    // Number of iterations between consecutive screen positions update (0 -> only updated on the end)\n    refresh             : 4,\n    \n    // Whether to fit the network view after when done\n    fit                 : true, \n\n    // Padding on fit\n    padding             : 30, \n\n    // Constrain layout bounds; { x1, y1, x2, y2 } or { x1, y1, w, h }\n    boundingBox         : undefined,\n\n    // Whether to randomize node positions on the beginning\n    randomize           : true,\n    \n    // Whether to use the JS console to print debug messages\n    debug               : false,\n\n    // Node repulsion (non overlapping) multiplier\n    nodeRepulsion       : 400000,\n    \n    // Node repulsion (overlapping) multiplier\n    nodeOverlap         : 10,\n    \n    // Ideal edge (non nested) length\n    idealEdgeLength     : 10,\n    \n    // Divisor to compute edge forces\n    edgeElasticity      : 100,\n    \n    // Nesting factor (multiplier) to compute ideal edge length for nested edges\n    nestingFactor       : 5, \n    \n    // Gravity force (constant)\n    gravity             : 250, \n    \n    // Maximum number of iterations to perform\n    numIter             : 100,\n    \n    // Initial temperature (maximum node displacement)\n    initialTemp         : 200,\n    \n    // Cooling factor (how the temperature is reduced between consecutive iterations\n    coolingFactor       : 0.95, \n    \n    // Lower temperature threshold (below this point the layout will end)\n    minTemp             : 1.0\n  };\n\n\n  /**\n   * @brief       : constructor\n   * @arg options : object containing layout options\n   */\n  function CoseLayout(options) {\n    this.options = $$.util.extend({}, defaults, options); \n  }\n\n\n  /**\n   * @brief : runs the layout\n   */\n  CoseLayout.prototype.run = function() {\n    var options = this.options;\n    var cy      = options.cy;\n    var layout  = this;\n\n    layout.stopped = false;\n\n    layout.trigger({ type: 'layoutstart', layout: layout });\n\n    // Set DEBUG - Global variable\n    if (true === options.debug) {\n      DEBUG = true;\n    } else {\n      DEBUG = false;\n    }\n\n    // Get start time\n    var startTime = new Date();\n\n    // Initialize layout info\n    var layoutInfo = createLayoutInfo(cy, layout, options);\n    \n    // Show LayoutInfo contents if debugging\n    if (DEBUG) {\n      printLayoutInfo(layoutInfo);\n    }\n\n    // If required, randomize node positions\n    if (true === options.randomize) {\n      randomizePositions(layoutInfo, cy);\n    }\n\n    updatePositions(layoutInfo, cy, options);\n\n    var mainLoop = function(i){\n      if( layout.stopped ){\n        // logDebug(\"Layout manually stopped. Stopping computation in step \" + i);\n        return false;\n      }\n\n      // Do one step in the phisical simulation\n      step(layoutInfo, cy, options, i);\n      \n      // Update temperature\n      layoutInfo.temperature = layoutInfo.temperature * options.coolingFactor;\n      // logDebug(\"New temperature: \" + layoutInfo.temperature);\n\n      if (layoutInfo.temperature < options.minTemp) {\n        // logDebug(\"Temperature drop below minimum threshold. Stopping computation in step \" + i);\n        return false;\n      }\n\n      return true;\n    };\n\n    var done = function(){\n      refreshPositions(layoutInfo, cy, options);\n\n      // Fit the graph if necessary\n      if (true === options.fit) {\n        cy.fit( options.padding );\n      }\n      \n      // Get end time\n      var endTime = new Date();\n\n      console.info('Layout took ' + (endTime - startTime) + ' ms');\n\n      // Layout has finished\n      layout.one('layoutstop', options.stop);\n      layout.trigger({ type: 'layoutstop', layout: layout });\n    };\n\n    if( options.animate ){\n      var i = 0;\n      var frame = function(){\n\n        var f = 0;\n        var loopRet;\n        while( f < options.refresh && i < options.numIter ){\n          var loopRet = mainLoop(i);\n          if( loopRet === false ){ break; }\n\n          f++;\n          i++;\n        }\n\n        refreshPositions(layoutInfo, cy, options);\n        if( options.fit ){\n          cy.fit( options.padding );\n        }\n\n        if ( loopRet !== false && i + 1 < options.numIter ) {\n          $$.util.requestAnimationFrame( frame );\n        } else {\n          done();\n        }\n      };\n\n      $$.util.requestAnimationFrame( frame );\n    } else {\n      for (var i = 0; i < options.numIter; i++) {\n        if( mainLoop(i) === false ){ break; }\n      }\n\n      done();\n    }\n   \n    return this; // chaining\n  };\n\n\n  /**\n   * @brief : called on continuous layouts to stop them before they finish\n   */\n  CoseLayout.prototype.stop = function(){\n    this.stopped = true;\n\n    return this; // chaining\n  };\n\n\n  /**\n   * @brief     : Creates an object which is contains all the data\n   *              used in the layout process\n   * @arg cy    : cytoscape.js object\n   * @return    : layoutInfo object initialized\n   */\n  var createLayoutInfo = function(cy, layout, options) {\n    // Shortcut\n    var edges = options.eles.edges();\n    var nodes = options.eles.nodes();\n\n    var layoutInfo   = {\n      layout       : layout,\n      layoutNodes  : [], \n      idToIndex    : {},\n      nodeSize     : nodes.size(),\n      graphSet     : [],\n      indexToGraph : [], \n      layoutEdges  : [],\n      edgeSize     : edges.size(),\n      temperature  : options.initialTemp,\n      clientWidth  : cy.width(),\n      clientHeight : cy.width(),\n      boundingBox  : $$.util.makeBoundingBox( options.boundingBox ? options.boundingBox : {\n                       x1: 0, y1: 0, w: cy.width(), h: cy.height()\n                     } )\n    }; \n    \n    // Iterate over all nodes, creating layout nodes\n    for (var i = 0; i < layoutInfo.nodeSize; i++) {\n      var tempNode        = {};\n      tempNode.id         = nodes[i].data('id');\n      tempNode.parentId   = nodes[i].data('parent');      \n      tempNode.children   = [];\n      tempNode.positionX  = nodes[i].position('x');\n      tempNode.positionY  = nodes[i].position('y');\n      tempNode.offsetX    = 0;      \n      tempNode.offsetY    = 0;\n      tempNode.height     = nodes[i].height();\n      tempNode.width      = nodes[i].width();\n      tempNode.maxX       = tempNode.positionX + tempNode.width  / 2;\n      tempNode.minX       = tempNode.positionX - tempNode.width  / 2;\n      tempNode.maxY       = tempNode.positionY + tempNode.height / 2;\n      tempNode.minY       = tempNode.positionY - tempNode.height / 2;\n      tempNode.padLeft    = nodes[i]._private.style['padding-left'].pxValue;\n      tempNode.padRight   = nodes[i]._private.style['padding-right'].pxValue;\n      tempNode.padTop     = nodes[i]._private.style['padding-top'].pxValue;\n      tempNode.padBottom  = nodes[i]._private.style['padding-bottom'].pxValue;\n      \n      // Add new node\n      layoutInfo.layoutNodes.push(tempNode);\n      // Add entry to id-index map\n      layoutInfo.idToIndex[tempNode.id] = i;\n    }\n\n    // Inline implementation of a queue, used for traversing the graph in BFS order\n    var queue = [];\n    var start = 0;   // Points to the start the queue\n    var end   = -1;  // Points to the end of the queue\n\n    var tempGraph = [];\n\n    // Second pass to add child information and \n    // initialize queue for hierarchical traversal\n    for (var i = 0; i < layoutInfo.nodeSize; i++) {\n      var n = layoutInfo.layoutNodes[i];\n      var p_id = n.parentId;\n      // Check if node n has a parent node\n      if (null != p_id) {\n      // Add node Id to parent's list of children\n      layoutInfo.layoutNodes[layoutInfo.idToIndex[p_id]].children.push(n.id);\n      } else {\n      // If a node doesn't have a parent, then it's in the root graph\n      queue[++end] = n.id;\n      tempGraph.push(n.id);    \n      }\n    }\n    \n    // Add root graph to graphSet\n    layoutInfo.graphSet.push(tempGraph);\n\n    // Traverse the graph, level by level, \n    while (start <= end) {\n      // Get the node to visit and remove it from queue\n      var node_id  = queue[start++];\n      var node_ix  = layoutInfo.idToIndex[node_id];\n      var node     = layoutInfo.layoutNodes[node_ix];\n      var children = node.children;\n      if (children.length > 0) {\n      // Add children nodes as a new graph to graph set\n      layoutInfo.graphSet.push(children);\n      // Add children to que queue to be visited\n      for (var i = 0; i < children.length; i++) {\n        queue[++end] = children[i];\n      }\n      }\n    }\n\n    // Create indexToGraph map\n    for (var i = 0; i < layoutInfo.graphSet.length; i++) {      \n      var graph = layoutInfo.graphSet[i];\n      for (var j = 0; j < graph.length; j++) {\n      var index = layoutInfo.idToIndex[graph[j]];\n      layoutInfo.indexToGraph[index] = i;\n      }\n    }\n    \n    // Iterate over all edges, creating Layout Edges\n    for (var i = 0; i < layoutInfo.edgeSize; i++) {\n      var e = edges[i];\n      var tempEdge = {};      \n      tempEdge.id       = e.data('id');\n      tempEdge.sourceId = e.data('source');\n      tempEdge.targetId = e.data('target');\n\n      // Compute ideal length\n      var idealLength = options.idealEdgeLength;\n\n      // Check if it's an inter graph edge\n      var sourceIx    = layoutInfo.idToIndex[tempEdge.sourceId];\n      var targetIx    = layoutInfo.idToIndex[tempEdge.targetId];\n      var sourceGraph = layoutInfo.indexToGraph[sourceIx];\n      var targetGraph = layoutInfo.indexToGraph[targetIx];\n\n      if (sourceGraph != targetGraph) {\n      // Find lowest common graph ancestor\n      var lca = findLCA(tempEdge.sourceId, tempEdge.targetId, layoutInfo);\n\n      // Compute sum of node depths, relative to lca graph\n      var lcaGraph = layoutInfo.graphSet[lca];\n      var depth    = 0;\n\n      // Source depth\n      var tempNode = layoutInfo.layoutNodes[sourceIx];\n      while (-1 === $.inArray(tempNode.id, lcaGraph)) {\n        tempNode = layoutInfo.layoutNodes[layoutInfo.idToIndex[tempNode.parentId]];\n        depth++;\n      }\n\n      // Target depth\n      tempNode = layoutInfo.layoutNodes[targetIx];\n      while (-1 === $.inArray(tempNode.id, lcaGraph)) {\n        tempNode = layoutInfo.layoutNodes[layoutInfo.idToIndex[tempNode.parentId]];\n        depth++;\n      }\n\n      // logDebug('LCA of nodes ' + tempEdge.sourceId + ' and ' + tempEdge.targetId +  \n        //  \". Index: \" + lca + \" Contents: \" + lcaGraph.toString() + \n        //  \". Depth: \" + depth);\n\n      // Update idealLength\n      idealLength *= depth * options.nestingFactor;\n      }\n\n      tempEdge.idealLength = idealLength;\n\n      layoutInfo.layoutEdges.push(tempEdge);\n    }\n\n    // Finally, return layoutInfo object\n    return layoutInfo;\n  };\n\n  \n  /**\n   * @brief : This function finds the index of the lowest common \n   *          graph ancestor between 2 nodes in the subtree \n   *          (from the graph hierarchy induced tree) whose\n   *          root is graphIx\n   *\n   * @arg node1: node1's ID\n   * @arg node2: node2's ID\n   * @arg layoutInfo: layoutInfo object\n   *\n   */\n  var findLCA = function(node1, node2, layoutInfo) {\n    // Find their common ancester, starting from the root graph\n    var res = findLCA_aux(node1, node2, 0, layoutInfo);\n    if (2 > res.count) {\n      // If aux function couldn't find the common ancester, \n      // then it is the root graph\n      return 0;\n    } else {\n      return res.graph;\n    }\n  };\n\n\n  /**\n   * @brief          : Auxiliary function used for LCA computation\n   * \n   * @arg node1      : node1's ID\n   * @arg node2      : node2's ID\n   * @arg graphIx    : subgraph index\n   * @arg layoutInfo : layoutInfo object\n   *\n   * @return         : object of the form {count: X, graph: Y}, where:\n   *                   X is the number of ancesters (max: 2) found in \n   *                   graphIx (and it's subgraphs),\n   *                   Y is the graph index of the lowest graph containing \n   *                   all X nodes\n   */\n  var findLCA_aux = function(node1, node2, graphIx, layoutInfo) {\n    var graph = layoutInfo.graphSet[graphIx];\n    // If both nodes belongs to graphIx\n    if (-1 < $.inArray(node1, graph) && -1 < $.inArray(node2, graph)) {\n      return {count:2, graph:graphIx};\n    }\n\n    // Make recursive calls for all subgraphs\n    var c = 0;\n    for (var i = 0; i < graph.length; i++) {\n      var nodeId   = graph[i];\n      var nodeIx   = layoutInfo.idToIndex[nodeId];\n      var children = layoutInfo.layoutNodes[nodeIx].children;\n\n      // If the node has no child, skip it\n      if (0 === children.length) {\n      continue;\n      }\n\n      var childGraphIx = layoutInfo.indexToGraph[layoutInfo.idToIndex[children[0]]];\n      var result = findLCA_aux(node1, node2, childGraphIx, layoutInfo);\n      if (0 === result.count) {\n      // Neither node1 nor node2 are present in this subgraph\n      continue;\n      } else if (1 === result.count) {\n      // One of (node1, node2) is present in this subgraph\n      c++;\n      if (2 === c) {\n        // We've already found both nodes, no need to keep searching\n        break;\n      }\n      } else {\n      // Both nodes are present in this subgraph\n      return result;\n      }      \n    }\n    \n    return {count:c, graph:graphIx};\n  };\n\n\n  /**\n   * @brief: printsLayoutInfo into js console\n   *         Only used for debbuging \n   */\n  var printLayoutInfo = function(layoutInfo) {\n    if (!DEBUG) {\n      return;\n    }\n    console.debug(\"layoutNodes:\");\n    for (var i = 0; i < layoutInfo.nodeSize; i++) {\n      var n = layoutInfo.layoutNodes[i];\n      var s = \n      \"\\nindex: \"     + i + \n      \"\\nId: \"        + n.id + \n      \"\\nChildren: \"  + n.children.toString() +  \n      \"\\nparentId: \"  + n.parentId  + \n      \"\\npositionX: \" + n.positionX + \n      \"\\npositionY: \" + n.positionY +\n      \"\\nOffsetX: \" + n.offsetX + \n      \"\\nOffsetY: \" + n.offsetY + \n      \"\\npadLeft: \" + n.padLeft + \n      \"\\npadRight: \" + n.padRight + \n      \"\\npadTop: \" + n.padTop + \n      \"\\npadBottom: \" + n.padBottom;\n\n      console.debug(s);    \n    }  \n    \n    console.debug('idToIndex');\n    for (var i in layoutInfo.idToIndex) {\n      console.debug(\"Id: \" + i + \"\\nIndex: \" + layoutInfo.idToIndex[i]);\n    }\n\n    console.debug('Graph Set');\n    var set = layoutInfo.graphSet;\n    for (var i = 0; i < set.length; i ++) {\n      console.debug(\"Set : \" + i + \": \" + set[i].toString());\n    } \n\n    var s = 'IndexToGraph';\n    for (var i = 0; i < layoutInfo.indexToGraph.length; i ++) {\n      s += \"\\nIndex : \" + i + \" Graph: \"+ layoutInfo.indexToGraph[i];\n    }\n    console.debug(s);\n\n    s = 'Layout Edges';\n    for (var i = 0; i < layoutInfo.layoutEdges.length; i++) {\n      var e = layoutInfo.layoutEdges[i];\n      s += \"\\nEdge Index: \" + i + \" ID: \" + e.id + \n      \" SouceID: \" + e.sourceId + \" TargetId: \" + e.targetId + \n      \" Ideal Length: \" + e.idealLength;\n    }\n    console.debug(s);\n\n    s =  \"nodeSize: \" + layoutInfo.nodeSize;\n    s += \"\\nedgeSize: \" + layoutInfo.edgeSize;\n    s += \"\\ntemperature: \" + layoutInfo.temperature;\n    console.debug(s);\n\n    return;\n  };\n\n\n  /**\n   * @brief : Randomizes the position of all nodes\n   */\n  var randomizePositions = function(layoutInfo, cy) {\n    var width     = layoutInfo.clientWidth;\n    var height    = layoutInfo.clientHeight;\n\n    for (var i = 0; i < layoutInfo.nodeSize; i++) {\n      var n = layoutInfo.layoutNodes[i];\n      // No need to randomize compound nodes\n      if (true || 0 === n.children.length) {\n        n.positionX = Math.random() * width;\n        n.positionY = Math.random() * height;\n      }\n    }\n  };\n\n  \n  /**\n   * @brief          : Updates the positions of nodes in the network\n   * @arg layoutInfo : LayoutInfo object\n   * @arg cy         : Cytoscape object\n   * @arg options    : Layout options\n   */\n  var refreshPositions = function(layoutInfo, cy, options) {  \n    // var s = 'Refreshing positions';\n    // logDebug(s);\n\n    var layout = layoutInfo.layout;\n    var nodes = options.eles.nodes();\n    var bb = layoutInfo.boundingBox;\n    var coseBB = { x1: Infinity, x2: -Infinity, y1: Infinity, y2: -Infinity };\n    \n    if( options.boundingBox ){\n      nodes.forEach(function( node ){\n        var lnode = layoutInfo.layoutNodes[layoutInfo.idToIndex[node.data('id')]];\n\n        coseBB.x1 = Math.min( coseBB.x1, lnode.positionX );\n        coseBB.x2 = Math.max( coseBB.x2, lnode.positionX );\n\n        coseBB.y1 = Math.min( coseBB.y1, lnode.positionY );\n        coseBB.y2 = Math.max( coseBB.y2, lnode.positionY );\n      });\n\n      coseBB.w = coseBB.x2 - coseBB.x1;\n      coseBB.h = coseBB.y2 - coseBB.y1;\n    }\n\n    nodes.positions(function(i, ele) {\n      var lnode = layoutInfo.layoutNodes[layoutInfo.idToIndex[ele.data('id')]];\n      // s = \"Node: \" + lnode.id + \". Refreshed position: (\" + \n      // lnode.positionX + \", \" + lnode.positionY + \").\";\n      // logDebug(s);\n\n      if( options.boundingBox ){ // then add extra bounding box constraint\n        var pctX = (lnode.positionX - coseBB.x1) / coseBB.w;\n        var pctY = (lnode.positionY - coseBB.y1) / coseBB.h;\n\n        return {\n          x: bb.x1 + pctX * bb.w,\n          y: bb.y1 + pctY * bb.h\n        };\n      } else {\n        return {\n          x: lnode.positionX,\n          y: lnode.positionY\n        };\n      }\n    });\n\n    // Trigger layoutReady only on first call\n    if (true !== layoutInfo.ready) {\n      // s = 'Triggering layoutready';\n      // logDebug(s);\n      layoutInfo.ready = true;\n      layout.one('layoutready', options.ready);\n      layout.trigger({ type: 'layoutready', layout: this });\n    }\n  };\n\n\n  /**\n   * @brief          : Performs one iteration of the physical simulation\n   * @arg layoutInfo : LayoutInfo object already initialized\n   * @arg cy         : Cytoscape object\n   * @arg options    : Layout options\n   */\n  var step = function(layoutInfo, cy, options, step) {  \n    // var s = \"\\n\\n###############################\";\n    // s += \"\\nSTEP: \" + step;\n    // s += \"\\n###############################\\n\";\n    // logDebug(s);\n\n    // Calculate node repulsions\n    calculateNodeForces(layoutInfo, cy, options);\n    // Calculate edge forces\n    calculateEdgeForces(layoutInfo, cy, options);\n    // Calculate gravity forces\n    calculateGravityForces(layoutInfo, cy, options);\n    // Propagate forces from parent to child\n    propagateForces(layoutInfo, cy, options);\n    // Update positions based on calculated forces\n    updatePositions(layoutInfo, cy, options);\n  };\n\n  \n  /**\n   * @brief : Computes the node repulsion forces\n   */\n  var calculateNodeForces = function(layoutInfo, cy, options) {\n    // Go through each of the graphs in graphSet\n    // Nodes only repel each other if they belong to the same graph\n    // var s = 'calculateNodeForces';\n    // logDebug(s);\n    for (var i = 0; i < layoutInfo.graphSet.length; i ++) {\n      var graph    = layoutInfo.graphSet[i];\n      var numNodes = graph.length;\n\n      // s = \"Set: \" + graph.toString();\n      // logDebug(s);\n\n      // Now get all the pairs of nodes \n      // Only get each pair once, (A, B) = (B, A)\n      for (var j = 0; j < numNodes; j++) {\n      var node1 = layoutInfo.layoutNodes[layoutInfo.idToIndex[graph[j]]];\n      for (var k = j + 1; k < numNodes; k++) {\n        var node2 = layoutInfo.layoutNodes[layoutInfo.idToIndex[graph[k]]];\n        nodeRepulsion(node1, node2, layoutInfo, cy, options);\n      } \n      }\n    } \n  };\n\n\n  /**\n   * @brief : Compute the node repulsion forces between a pair of nodes\n   */\n  var nodeRepulsion = function(node1, node2, layoutInfo, cy, options) {\n    // var s = \"Node repulsion. Node1: \" + node1.id + \" Node2: \" + node2.id;\n\n    // Get direction of line connecting both node centers\n    var directionX = node2.positionX - node1.positionX;\n    var directionY = node2.positionY - node1.positionY;\n    // s += \"\\ndirectionX: \" + directionX + \", directionY: \" + directionY;\n\n    // If both centers are the same, apply a random force\n    if (0 === directionX && 0 === directionY) {\n      // s += \"\\nNodes have the same position.\";\n      return; // TODO\n    }\n\n    var overlap = nodesOverlap(node1, node2, directionX, directionY);\n    \n    if (overlap > 0) {\n      // s += \"\\nNodes DO overlap.\";\n      // s += \"\\nOverlap: \" + overlap;\n      // If nodes overlap, repulsion force is proportional \n      // to the overlap\n      var force    = options.nodeOverlap * overlap;\n\n      // Compute the module and components of the force vector\n      var distance = Math.sqrt(directionX * directionX + directionY * directionY);\n      // s += \"\\nDistance: \" + distance;\n      var forceX   = force * directionX / distance;\n      var forceY   = force * directionY / distance;\n\n    } else {\n      // s += \"\\nNodes do NOT overlap.\";\n      // If there's no overlap, force is inversely proportional \n      // to squared distance\n\n      // Get clipping points for both nodes\n      var point1 = findClippingPoint(node1, directionX, directionY);\n      var point2 = findClippingPoint(node2, -1 * directionX, -1 * directionY);\n\n      // Use clipping points to compute distance\n      var distanceX   = point2.x - point1.x;\n      var distanceY   = point2.y - point1.y;\n      var distanceSqr = distanceX * distanceX + distanceY * distanceY;\n      var distance    = Math.sqrt(distanceSqr);\n      // s += \"\\nDistance: \" + distance;\n\n      // Compute the module and components of the force vector\n      var force  = options.nodeRepulsion / distanceSqr;\n      var forceX = force * distanceX / distance;\n      var forceY = force * distanceY / distance;\n    }\n\n    // Apply force\n    node1.offsetX -= forceX;\n    node1.offsetY -= forceY;\n    node2.offsetX += forceX;\n    node2.offsetY += forceY;\n\n    // s += \"\\nForceX: \" + forceX + \" ForceY: \" + forceY;\n    // logDebug(s);\n\n    return;\n  };\n\n\n  /**\n   * @brief : Finds the point in which an edge (direction dX, dY) intersects \n   *          the rectangular bounding box of it's source/target node \n   */\n  var findClippingPoint = function(node, dX, dY) {\n\n    // Shorcuts\n    var X = node.positionX;\n    var Y = node.positionY;\n    var H = node.height;\n    var W = node.width;\n    var dirSlope     = dY / dX;\n    var nodeSlope    = H / W;\n\n    // var s = 'Computing clipping point of node ' + node.id + \n    //   \" . Height:  \" + H + \", Width: \" + W + \n    //   \"\\nDirection \" + dX + \", \" + dY; \n    // \n    // Compute intersection\n    var res = {};\n    do {\n      // Case: Vertical direction (up)\n      if (0 === dX && 0 < dY) {\n        res.x = X;\n        // s += \"\\nUp direction\";\n        res.y = Y + H / 2;\n        break;\n      }\n\n      // Case: Vertical direction (down)\n      if (0 === dX && 0 > dY) {\n        res.x = X;\n        res.y = Y + H / 2;\n        // s += \"\\nDown direction\";\n        break;\n      }      \n\n      // Case: Intersects the right border\n      if (0 < dX && \n      -1 * nodeSlope <= dirSlope && \n      dirSlope <= nodeSlope) {\n        res.x = X + W / 2;\n        res.y = Y + (W * dY / 2 / dX);\n        // s += \"\\nRightborder\";\n        break;\n      }\n\n      // Case: Intersects the left border\n      if (0 > dX && \n      -1 * nodeSlope <= dirSlope && \n      dirSlope <= nodeSlope) {\n        res.x = X - W / 2;\n        res.y = Y - (W * dY / 2 / dX);\n        // s += \"\\nLeftborder\";\n        break;\n      }\n\n      // Case: Intersects the top border\n      if (0 < dY && \n      ( dirSlope <= -1 * nodeSlope ||\n        dirSlope >= nodeSlope )) {\n        res.x = X + (H * dX / 2 / dY);\n        res.y = Y + H / 2;\n        // s += \"\\nTop border\";\n        break;\n      }\n\n      // Case: Intersects the bottom border\n      if (0 > dY && \n      ( dirSlope <= -1 * nodeSlope ||\n        dirSlope >= nodeSlope )) {\n        res.x = X - (H * dX / 2 / dY);\n        res.y = Y - H / 2;\n        // s += \"\\nBottom border\";\n        break;\n      }\n\n    } while (false);\n\n    // s += \"\\nClipping point found at \" + res.x + \", \" + res.y;\n    // logDebug(s);\n    return res;\n  };\n\n\n  /**\n   * @brief  : Determines whether two nodes overlap or not\n   * @return : Amount of overlapping (0 => no overlap)\n   */\n  var nodesOverlap = function(node1, node2, dX, dY) {\n\n    if (dX > 0) {\n      var overlapX = node1.maxX - node2.minX;\n    } else {\n      var overlapX = node2.maxX - node1.minX;\n    }\n\n    if (dY > 0) {\n      var overlapY = node1.maxY - node2.minY;\n    } else {\n      var overlapY = node2.maxY - node1.minY;\n    }\n\n    if (overlapX >= 0 && overlapY >= 0) {\n      return Math.sqrt(overlapX * overlapX + overlapY * overlapY);\n    } else {\n      return 0;\n    }\n  };\n    \n  \n  /**\n   * @brief : Calculates all edge forces\n   */\n  var calculateEdgeForces = function(layoutInfo, cy, options) {\n    // Iterate over all edges\n    for (var i = 0; i < layoutInfo.edgeSize; i++) {\n      // Get edge, source & target nodes\n      var edge     = layoutInfo.layoutEdges[i];\n      var sourceIx = layoutInfo.idToIndex[edge.sourceId];\n      var source   = layoutInfo.layoutNodes[sourceIx];\n      var targetIx = layoutInfo.idToIndex[edge.targetId];\n      var target   = layoutInfo.layoutNodes[targetIx];\n\n      // Get direction of line connecting both node centers\n      var directionX = target.positionX - source.positionX;\n      var directionY = target.positionY - source.positionY;\n      \n      // If both centers are the same, do nothing.\n      // A random force has already been applied as node repulsion\n      if (0 === directionX && 0 === directionY) {\n      return;\n      }\n\n      // Get clipping points for both nodes\n      var point1 = findClippingPoint(source, directionX, directionY);\n      var point2 = findClippingPoint(target, -1 * directionX, -1 * directionY);\n\n\n      var lx = point2.x - point1.x;\n      var ly = point2.y - point1.y;\n      var l  = Math.sqrt(lx * lx + ly * ly);\n\n      var force  = Math.pow(edge.idealLength - l, 2) / options.edgeElasticity; \n\n      if (0 !== l) {\n        var forceX = force * lx / l;\n        var forceY = force * ly / l;\n      } else {\n        var forceX = 0;\n        var forceY = 0;\n      }\n\n      // Add this force to target and source nodes\n      source.offsetX += forceX;\n      source.offsetY += forceY;\n      target.offsetX -= forceX;\n      target.offsetY -= forceY;\n\n      // var s = 'Edge force between nodes ' + source.id + ' and ' + target.id;\n      // s += \"\\nDistance: \" + l + \" Force: (\" + forceX + \", \" + forceY + \")\";\n      // logDebug(s);\n    }\n  };\n\n\n  /**\n   * @brief : Computes gravity forces for all nodes\n   */\n  var calculateGravityForces = function(layoutInfo, cy, options) {\n    // var s = 'calculateGravityForces';\n    // logDebug(s);\n    for (var i = 0; i < layoutInfo.graphSet.length; i ++) {\n      var graph    = layoutInfo.graphSet[i];\n      var numNodes = graph.length;\n\n      // s = \"Set: \" + graph.toString();\n      // logDebug(s);\n          \n      // Compute graph center\n      if (0 === i) {\n        var centerX   = layoutInfo.clientHeight / 2;\n        var centerY   = layoutInfo.clientWidth  / 2;    \n      } else {\n        // Get Parent node for this graph, and use its position as center\n        var temp    = layoutInfo.layoutNodes[layoutInfo.idToIndex[graph[0]]];\n        var parent  = layoutInfo.layoutNodes[layoutInfo.idToIndex[temp.parentId]];\n        var centerX = parent.positionX;\n        var centerY = parent.positionY;\n      }\n      // s = \"Center found at: \" + centerX + \", \" + centerY;\n      // logDebug(s);\n\n      // Apply force to all nodes in graph\n      for (var j = 0; j < numNodes; j++) {\n        var node = layoutInfo.layoutNodes[layoutInfo.idToIndex[graph[j]]];\n        // s = \"Node: \" + node.id;\n        var dx = centerX - node.positionX;\n        var dy = centerY - node.positionY;\n        var d  = Math.sqrt(dx * dx + dy * dy);\n        if (d > 1.0) { // TODO: Use global variable for distance threshold\n          var fx = options.gravity * dx / d;\n          var fy = options.gravity * dy / d;\n          node.offsetX += fx;\n          node.offsetY += fy;\n          // s += \": Applied force: \" + fx + \", \" + fy;\n        } else {\n          // s += \": skypped since it's too close to center\";\n        }\n        // logDebug(s);\n      }\n    }\n  };\n\n\n  /**\n   * @brief          : This function propagates the existing offsets from \n   *                   parent nodes to its descendents.\n   * @arg layoutInfo : layoutInfo Object\n   * @arg cy         : cytoscape Object\n   * @arg options    : Layout options\n   */\n  var propagateForces = function(layoutInfo, cy, options) {  \n    // Inline implementation of a queue, used for traversing the graph in BFS order\n    var queue = [];\n    var start = 0;   // Points to the start the queue\n    var end   = -1;  // Points to the end of the queue\n\n    // logDebug('propagateForces');\n\n    // Start by visiting the nodes in the root graph\n    queue.push.apply(queue, layoutInfo.graphSet[0]);\n    end += layoutInfo.graphSet[0].length;\n\n    // Traverse the graph, level by level, \n    while (start <= end) {\n      // Get the node to visit and remove it from queue\n      var nodeId    = queue[start++];\n      var nodeIndex = layoutInfo.idToIndex[nodeId];\n      var node      = layoutInfo.layoutNodes[nodeIndex];\n      var children  = node.children;\n\n      // We only need to process the node if it's compound\n      if (0 < children.length) {    \n      var offX = node.offsetX;\n      var offY = node.offsetY;\n\n      // var s = \"Propagating offset from parent node : \" + node.id + \n      //   \". OffsetX: \" + offX + \". OffsetY: \" + offY;\n      // s += \"\\n Children: \" + children.toString();\n      // logDebug(s);\n      \n      for (var i = 0; i < children.length; i++) {\n        var childNode = layoutInfo.layoutNodes[layoutInfo.idToIndex[children[i]]];\n        // Propagate offset\n        childNode.offsetX += offX;\n        childNode.offsetY += offY;\n        // Add children to queue to be visited\n        queue[++end] = children[i];\n      }\n      \n      // Reset parent offsets\n      node.offsetX = 0;\n      node.offsetY = 0;\n      }\n      \n    }\n  };\n\n\n  /**\n   * @brief : Updates the layout model positions, based on \n   *          the accumulated forces\n   */\n  var updatePositions = function(layoutInfo, cy, options) {\n    // var s = 'Updating positions';\n    // logDebug(s);\n\n    // Reset boundaries for compound nodes\n    for (var i = 0; i < layoutInfo.nodeSize; i++) {\n      var n = layoutInfo.layoutNodes[i];\n      if (0 < n.children.length) {\n        // logDebug(\"Resetting boundaries of compound node: \" + n.id);\n        n.maxX = undefined;\n        n.minX = undefined;\n        n.maxY = undefined;\n        n.minY = undefined;\n      }\n    }\n\n    for (var i = 0; i < layoutInfo.nodeSize; i++) {\n      var n = layoutInfo.layoutNodes[i];\n      if (0 < n.children.length) {\n        // No need to set compound node position\n        // logDebug(\"Skipping position update of node: \" + n.id);\n        continue;\n      }\n      // s = \"Node: \" + n.id + \" Previous position: (\" + \n      // n.positionX + \", \" + n.positionY + \").\"; \n\n      // Limit displacement in order to improve stability\n      var tempForce = limitForce(n.offsetX, n.offsetY, layoutInfo.temperature);\n      n.positionX += tempForce.x; \n      n.positionY += tempForce.y;\n      n.offsetX = 0;\n      n.offsetY = 0;\n      n.minX    = n.positionX - n.width; \n      n.maxX    = n.positionX + n.width; \n      n.minY    = n.positionY - n.height; \n      n.maxY    = n.positionY + n.height; \n      // s += \" New Position: (\" + n.positionX + \", \" + n.positionY + \").\";\n      // logDebug(s);\n\n      // Update ancestry boudaries\n      updateAncestryBoundaries(n, layoutInfo);\n    }\n\n    // Update size, position of compund nodes\n    for (var i = 0; i < layoutInfo.nodeSize; i++) {\n      var n = layoutInfo.layoutNodes[i];\n      if (0 < n.children.length) {\n        n.positionX = (n.maxX + n.minX) / 2;\n        n.positionY = (n.maxY + n.minY) / 2;\n        n.width     = n.maxX - n.minX;\n        n.height    = n.maxY - n.minY;\n        // s = \"Updating position, size of compound node \" + n.id;\n        // s += \"\\nPositionX: \" + n.positionX + \", PositionY: \" + n.positionY;\n        // s += \"\\nWidth: \" + n.width + \", Height: \" + n.height;\n        // logDebug(s);\n      }\n    }  \n  };\n\n\n  /**\n   * @brief : Limits a force (forceX, forceY) to be not \n   *          greater (in modulo) than max. \n   8          Preserves force direction. \n   */\n  var limitForce = function(forceX, forceY, max) {\n    // var s = \"Limiting force: (\" + forceX + \", \" + forceY + \"). Max: \" + max;\n    var force = Math.sqrt(forceX * forceX + forceY * forceY);\n\n    if (force > max) {\n      var res = {\n      x : max * forceX / force,\n      y : max * forceY / force\n      };      \n\n    } else {\n      var res = {\n      x : forceX,\n      y : forceY\n      };\n    }\n\n    // s += \".\\nResult: (\" + res.x + \", \" + res.y + \")\";\n    // logDebug(s);\n\n    return res;\n  };\n\n\n  /**\n   * @brief : Function used for keeping track of compound node \n   *          sizes, since they should bound all their subnodes.\n   */\n  var updateAncestryBoundaries = function(node, layoutInfo) {\n    // var s = \"Propagating new position/size of node \" + node.id;\n    var parentId = node.parentId;\n    if (null == parentId) {\n      // If there's no parent, we are done\n      // s += \". No parent node.\";\n      // logDebug(s);\n      return;\n    }\n\n    // Get Parent Node\n    var p = layoutInfo.layoutNodes[layoutInfo.idToIndex[parentId]];\n    var flag = false;\n\n    // MaxX\n    if (null == p.maxX || node.maxX + p.padRight > p.maxX) {\n      p.maxX = node.maxX + p.padRight;\n      flag = true;\n      // s += \"\\nNew maxX for parent node \" + p.id + \": \" + p.maxX;\n    }\n\n    // MinX\n    if (null == p.minX || node.minX - p.padLeft < p.minX) {\n      p.minX = node.minX - p.padLeft;\n      flag = true;\n      // s += \"\\nNew minX for parent node \" + p.id + \": \" + p.minX;\n    }\n\n    // MaxY\n    if (null == p.maxY || node.maxY + p.padBottom > p.maxY) {\n      p.maxY = node.maxY + p.padBottom;\n      flag = true;\n      // s += \"\\nNew maxY for parent node \" + p.id + \": \" + p.maxY;\n    }\n\n    // MinY\n    if (null == p.minY || node.minY - p.padTop < p.minY) {\n      p.minY = node.minY - p.padTop;\n      flag = true;\n      // s += \"\\nNew minY for parent node \" + p.id + \": \" + p.minY;\n    }\n\n    // If updated boundaries, propagate changes upward\n    if (flag) {\n      // logDebug(s);\n      return updateAncestryBoundaries(p, layoutInfo);\n    } \n\n    // s += \". No changes in boundaries/position of parent node \" + p.id;  \n    // logDebug(s);\n    return;\n  };\n\n\n  /**\n   * @brief : Logs a debug message in JS console, if DEBUG is ON\n   */\n  // var logDebug = function(text) {\n  //   if (DEBUG) {\n  //     console.debug(text);\n  //   }\n  // };\n\n\n  // register the layout\n  $$('layout', 'cose', CoseLayout);\n\n})(cytoscape);\n\n;(function($$){ 'use strict';\n\n  // default layout options\n  var defaults = {\n    // dagre algo options, uses default value on undefined\n    nodeSep: undefined, // the separation between adjacent nodes in the same rank\n    edgeSep: undefined, // the separation between adjacent edges in the same rank\n    rankSep: undefined, // the separation between adjacent nodes in the same rank\n    rankDir: undefined, // 'TB' for top to bottom flow, 'LR' for left to right\n    minLen: function( edge ){ return 1; }, // number of ranks to keep between the source and target of the edge\n    edgeWeight: function( edge ){ return 1; }, // higher weight edges are generally made shorter and straighter than lower weight edges\n    \n    // general layout options\n    fit: true, // whether to fit to viewport\n    padding: 30, // fit padding\n    animate: false, // whether to transition the node positions\n    animationDuration: 500, // duration of animation in ms if enabled\n    boundingBox: undefined, // constrain layout bounds; { x1, y1, x2, y2 } or { x1, y1, w, h }\n    ready: function(){}, // on layoutready\n    stop: function(){} // on layoutstop\n  };\n\n  // constructor\n  // options : object containing layout options\n  function DagreLayout( options ){\n    this.options = $$.util.extend(true, {}, defaults, options); \n  }\n\n  // runs the layout\n  DagreLayout.prototype.run = function(){\n    var options = this.options;\n    var layout = this;\n\n    $$.util.require('dagre', function(dagre){\n\n      var cy = options.cy; // cy is automatically populated for us in the constructor\n      var eles = options.eles;\n\n      var getVal = function( ele, val ){\n        return $$.is.fn(val) ? val.apply( ele, [ ele ] ) : val;\n      };\n\n      var bb = $$.util.makeBoundingBox( options.boundingBox ? options.boundingBox : {\n        x1: 0, y1: 0, w: cy.width(), h: cy.height()\n      } );\n\n      var g = new dagre.graphlib.Graph({\n        multigraph: true,\n        compound: true\n      });\n\n      var gObj = {};\n      var setGObj = function( name, val ){\n        if( val != null ){\n          gObj[ name ] = val;\n        }\n      };\n      \n      setGObj( 'nodesep', options.nodeSep );\n      setGObj( 'edgesep', options.edgeSep );\n      setGObj( 'ranksep', options.rankSep );\n      setGObj( 'rankdir', options.rankDir );\n\n      g.setGraph( gObj );\n\n      g.setDefaultEdgeLabel(function() { return {}; });\n      g.setDefaultNodeLabel(function() { return {}; });\n\n      // add nodes to dagre\n      var nodes = eles.nodes();\n      for( var i = 0; i < nodes.length; i++ ){\n        var node = nodes[i];\n\n        g.setNode( node.id(), {\n          width: node.width(),\n          height: node.height(),\n          name: node.id()\n        } );\n\n        // console.log( g.node(node.id()) );\n      }\n\n      // set compound parents\n      for( var i = 0; i < nodes.length; i++ ){\n        var node = nodes[i];\n\n        if( node.isChild() ){\n          g.setParent( node.id(), node.parent().id() );\n        }\n      }\n\n      // add edges to dagre\n      var edges = eles.edges().stdFilter(function( edge ){\n        return !edge.source().isParent() && !edge.target().isParent(); // dagre can't handle edges on compound nodes\n      });\n      for( var i = 0; i < edges.length; i++ ){\n        var edge = edges[i];\n\n        g.setEdge( edge.source().id(), edge.target().id(), {\n          minlen: getVal( edge, options.minLen ),\n          weight: getVal( edge, options.edgeWeight ),\n          name: edge.id()\n        }, edge.id() );\n\n        // console.log( g.edge(edge.source().id(), edge.target().id(), edge.id()) );\n      }\n\n      dagre.layout( g );\n\n      var gNodeIds = g.nodes();\n      for( var i = 0; i < gNodeIds.length; i++ ){\n        var id = gNodeIds[i];\n        var n = g.node( id );\n\n        cy.getElementById(id).scratch().dagre = n;\n      }\n\n      var dagreBB;\n\n      if( options.boundingBox ){\n        dagreBB = { x1: Infinity, x2: -Infinity, y1: Infinity, y2: -Infinity };\n        nodes.forEach(function( node ){\n          var dModel = node.scratch().dagre;\n\n          dagreBB.x1 = Math.min( dagreBB.x1, dModel.x );\n          dagreBB.x2 = Math.max( dagreBB.x2, dModel.x );\n\n          dagreBB.y1 = Math.min( dagreBB.y1, dModel.y );\n          dagreBB.y2 = Math.max( dagreBB.y2, dModel.y );\n        });\n\n        dagreBB.w = dagreBB.x2 - dagreBB.x1;\n        dagreBB.h = dagreBB.y2 - dagreBB.y1;\n      } else {\n        dagreBB = bb;\n      }\n\n      var constrainPos = function( p ){\n        if( options.boundingBox ){\n          var xPct = (p.x - dagreBB.x1) / dagreBB.w;\n          var yPct = (p.y - dagreBB.y1) / dagreBB.h;\n\n          return {\n            x: bb.x1 + xPct * bb.w,\n            y: bb.y1 + yPct * bb.h\n          };\n        } else {\n          return p;\n        }\n      };\n\n      nodes.layoutPositions(layout, options, function(){\n        var dModel = this.scratch().dagre;\n\n        return constrainPos({\n          x: dModel.x,\n          y: dModel.y\n        });\n      });\n\n    }); // require\n\n    return this; // chaining\n  };\n\n  // register the layout\n  $$('layout', 'dagre', DagreLayout);\n\n})(cytoscape);\n\n;(function($$){ 'use strict';\n  \n  var defaults = {\n    fit: true, // whether to fit the viewport to the graph\n    padding: 30, // padding used on fit\n    boundingBox: undefined, // constrain layout bounds; { x1, y1, x2, y2 } or { x1, y1, w, h }\n    avoidOverlap: true, // prevents node overlap, may overflow boundingBox if not enough space\n    rows: undefined, // force num of rows in the grid\n    columns: undefined, // force num of cols in the grid\n    position: function( node ){}, // returns { row, col } for element\n    sort: undefined, // a sorting function to order the nodes; e.g. function(a, b){ return a.data('weight') - b.data('weight') }\n    animate: false, // whether to transition the node positions\n    animationDuration: 500, // duration of animation in ms if enabled\n    ready: undefined, // callback on layoutready\n    stop: undefined // callback on layoutstop\n  };\n  \n  function GridLayout( options ){\n    this.options = $$.util.extend({}, defaults, options);\n  }\n  \n  GridLayout.prototype.run = function(){\n    var params = this.options;\n    var options = params;\n    \n    var cy = params.cy;\n    var eles = options.eles;\n    var nodes = eles.nodes().not(':parent');\n\n    if( options.sort ){\n      nodes = nodes.sort( options.sort );\n    }\n    \n    var bb = $$.util.makeBoundingBox( options.boundingBox ? options.boundingBox : {\n      x1: 0, y1: 0, w: cy.width(), h: cy.height()\n    } );\n\n    if( bb.h === 0 || bb.w === 0){\n      nodes.layoutPositions(this, options, function(){\n        return { x: bb.x1, y: bb.y1 };\n      });\n      \n    } else {\n      \n      // width/height * splits^2 = cells where splits is number of times to split width\n      var cells = nodes.size();\n      var splits = Math.sqrt( cells * bb.h/bb.w );\n      var rows = Math.round( splits );\n      var cols = Math.round( bb.w/bb.h * splits );\n\n      var small = function(val){\n        if( val == null ){\n          return Math.min(rows, cols);\n        } else {\n          var min = Math.min(rows, cols);\n          if( min == rows ){\n            rows = val;\n          } else {\n            cols = val;\n          }\n        }\n      };\n      \n      var large = function(val){\n        if( val == null ){\n          return Math.max(rows, cols);\n        } else {\n          var max = Math.max(rows, cols);\n          if( max == rows ){\n            rows = val;\n          } else {\n            cols = val;\n          }\n        }\n      };\n      \n      // if rows or columns were set in options, use those values\n      if( options.rows != null && options.columns != null ){\n        rows = options.rows;\n        cols = options.columns;\n      } else if( options.rows != null && options.columns == null ){\n        rows = options.rows;\n        cols = Math.ceil( cells / rows );\n      } else if( options.rows == null && options.columns != null ){\n        cols = options.columns;\n        rows = Math.ceil( cells / cols );\n      }\n      \n      // otherwise use the automatic values and adjust accordingly\n      \n      // if rounding was up, see if we can reduce rows or columns\n      else if( cols * rows > cells ){\n        var sm = small();\n        var lg = large();\n        \n        // reducing the small side takes away the most cells, so try it first\n        if( (sm - 1) * lg >= cells ){\n          small(sm - 1);\n        } else if( (lg - 1) * sm >= cells ){\n          large(lg - 1);\n        } \n      } else {\n        \n        // if rounding was too low, add rows or columns\n        while( cols * rows < cells ){\n          var sm = small();\n          var lg = large();\n          \n          // try to add to larger side first (adds less in multiplication)\n          if( (lg + 1) * sm >= cells ){\n            large(lg + 1);\n          } else {\n            small(sm + 1);\n          }\n        }\n      }\n      \n      var cellWidth = bb.w / cols;\n      var cellHeight = bb.h / rows;\n\n      if( options.avoidOverlap ){\n        for( var i = 0; i < nodes.length; i++ ){\n          var node = nodes[i];\n          var w = node.outerWidth();\n          var h = node.outerHeight();\n\n          cellWidth = Math.max( cellWidth, w );\n          cellHeight = Math.max( cellHeight, h );\n        }\n      }\n      \n      var cellUsed = {}; // e.g. 'c-0-2' => true\n      \n      var used = function(row, col){\n        return cellUsed['c-' + row + '-' + col] ? true : false;\n      };\n      \n      var use = function(row, col){\n        cellUsed['c-' + row + '-' + col] = true;\n      };\n\n      // to keep track of current cell position\n      var row = 0;\n      var col = 0;\n      var moveToNextCell = function(){\n        col++;\n        if( col >= cols ){\n          col = 0;\n          row++;\n        }\n      };\n\n      // get a cache of all the manual positions\n      var id2manPos = {};\n      for( var i = 0; i < nodes.length; i++ ){\n        var node = nodes[i];\n        var rcPos = options.position( node );\n\n        if( rcPos && (rcPos.row !== undefined || rcPos.col !== undefined) ){ // must have at least row or col def'd\n          var pos = {\n            row: rcPos.row,\n            col: rcPos.col\n          };\n\n          if( pos.col === undefined ){ // find unused col\n            pos.col = 0;\n\n            while( used(pos.row, pos.col) ){\n              pos.col++;\n            }\n          } else if( pos.row === undefined ){ // find unused row\n            pos.row = 0;\n\n            while( used(pos.row, pos.col) ){\n              pos.row++;\n            }\n          }\n\n          id2manPos[ node.id() ] = pos;\n          use( pos.row, pos.col );\n        }\n      }\n\n      var getPos = function(i, element){\n        var x, y;\n\n        if( element.locked() || element.isFullAutoParent() ){\n          return false;\n        }\n\n        // see if we have a manual position set\n        var rcPos = id2manPos[ element.id() ];\n        if( rcPos ){\n          x = rcPos.col * cellWidth + cellWidth/2 + bb.x1;\n          y = rcPos.row * cellHeight + cellHeight/2 + bb.y1;\n        \n        } else { // otherwise set automatically\n        \n          while( used(row, col) ){\n            moveToNextCell();\n          }\n\n          x = col * cellWidth + cellWidth/2 + bb.x1;\n          y = row * cellHeight + cellHeight/2 + bb.y1;\n          use( row, col );\n          \n          moveToNextCell();\n        }\n        \n        return { x: x, y: y };\n        \n      };\n\n      nodes.layoutPositions( this, options, getPos );\n    }\n\n    return this; // chaining\n    \n  };\n  \n  $$('layout', 'grid', GridLayout);\n  \n})( cytoscape );\n\n;(function($$){ 'use strict';\n\n  // default layout options\n  var defaults = {\n    ready: function(){}, // on layoutready\n    stop: function(){} // on layoutstop\n  };\n\n  // constructor\n  // options : object containing layout options\n  function NullLayout( options ){\n    this.options = $$.util.extend(true, {}, defaults, options); \n  }\n\n  // runs the layout\n  NullLayout.prototype.run = function(){\n    var options = this.options;\n    var eles = options.eles; // elements to consider in the layout\n    var layout = this;\n\n    // cy is automatically populated for us in the constructor\n    var cy = options.cy; // jshint ignore:line\n\n    layout.trigger('layoutstart');\n\n    // puts all nodes at (0, 0)\n    eles.nodes().positions(function(){\n      return {\n        x: 0,\n        y: 0\n      };\n    });\n\n    // trigger layoutready when each node has had its position set at least once\n    layout.one('layoutready', options.ready);\n    layout.trigger('layoutready');\n\n    // trigger layoutstop when the layout stops (e.g. finishes)\n    layout.one('layoutstop', options.stop);\n    layout.trigger('layoutstop');\n\n    return this; // chaining\n  };\n\n  // called on continuous layouts to stop them before they finish\n  NullLayout.prototype.stop = function(){\n    return this; // chaining\n  };\n\n  // register the layout\n  $$('layout', 'null', NullLayout);\n\n})(cytoscape);\n;(function($$){ 'use strict';\n  \n  var defaults = {\n    positions: undefined, // map of (node id) => (position obj); or function(node){ return somPos; }\n    zoom: undefined, // the zoom level to set (prob want fit = false if set)\n    pan: undefined, // the pan level to set (prob want fit = false if set)\n    fit: true, // whether to fit to viewport\n    padding: 30, // padding on fit\n    animate: false, // whether to transition the node positions\n    animationDuration: 500, // duration of animation in ms if enabled\n    ready: undefined, // callback on layoutready\n    stop: undefined // callback on layoutstop\n  };\n  \n  function PresetLayout( options ){\n    this.options = $$.util.extend(true, {}, defaults, options);\n  }\n  \n  PresetLayout.prototype.run = function(){\n    var options = this.options;\n    var eles = options.eles;\n\n    var nodes = eles.nodes();\n    var posIsFn = $$.is.fn( options.positions );\n\n    function getPosition(node){\n      if( options.positions == null ){\n        return null;\n      }\n\n      if( posIsFn ){\n        return options.positions.apply( node, [ node ] );\n      }\n      \n      var pos = options.positions[node._private.data.id];\n\n      if( pos == null ){\n        return null;\n      }\n      \n      return pos;\n    }\n    \n    nodes.layoutPositions(this, options, function(i, node){\n      var position = getPosition(node);\n      \n      if( node.locked() || position == null ){\n        return false;\n      }\n      \n      return position;\n    });\n        \n    return this; // chaining\n  };\n  \n  $$('layout', 'preset', PresetLayout);\n  \n})(cytoscape);\n\n;(function($$){ 'use strict';\n  \n  var defaults = {\n    fit: true, // whether to fit to viewport\n    padding: 30, // fit padding\n    boundingBox: undefined, // constrain layout bounds; { x1, y1, x2, y2 } or { x1, y1, w, h }\n    animate: false, // whether to transition the node positions\n    animationDuration: 500, // duration of animation in ms if enabled\n    ready: undefined, // callback on layoutready\n    stop: undefined // callback on layoutstop\n  };\n  \n  function RandomLayout( options ){\n    this.options = $$.util.extend(true, {}, defaults, options);\n  }\n  \n  RandomLayout.prototype.run = function(){\n    var options = this.options;\n    var cy = options.cy;\n    var eles = options.eles;\n    var nodes = eles.nodes().not(':parent');\n    \n    var bb = $$.util.makeBoundingBox( options.boundingBox ? options.boundingBox : {\n      x1: 0, y1: 0, w: cy.width(), h: cy.height()\n    } );\n\n    var getPos = function( i, node ){\n      return {\n        x: bb.x1 + Math.round( Math.random() * bb.w ),\n        y: bb.y1 + Math.round( Math.random() * bb.h )\n      };\n    };\n\n    nodes.layoutPositions( this, options, getPos );\n\n    return this; // chaining\n  };\n  \n  // register the layout\n  $$(\n    'layout', // we're registering a layout\n    'random', // the layout name\n    RandomLayout // the layout prototype\n  );\n  \n})(cytoscape);\n\n;( function( $$ ){ 'use strict';\n\n  /*\n   * This layout combines several algorithms:\n   *\n   * - It generates an initial position of the nodes by using the\n   *   Fruchterman-Reingold algorithm (doi:10.1002/spe.4380211102)\n   *\n   * - Finally it eliminates overlaps by using the method described by\n   *   Gansner and North (doi:10.1007/3-540-37623-2_28)\n   */\n\n  var defaults = {\n    animate: true, // whether to show the layout as it's running\n    ready: undefined, // Callback on layoutready\n    stop: undefined, // Callback on layoutstop\n    fit: true, // Reset viewport to fit default simulationBounds\n    minDist: 20, // Minimum distance between nodes\n    padding: 20, // Padding\n    expandingFactor: -1.0, // If the network does not satisfy the minDist\n    // criterium then it expands the network of this amount\n    // If it is set to -1.0 the amount of expansion is automatically\n    // calculated based on the minDist, the aspect ratio and the\n    // number of nodes\n    maxFruchtermanReingoldIterations: 50, // Maximum number of initial force-directed iterations\n    maxExpandIterations: 4, // Maximum number of expanding iterations\n    boundingBox: undefined // Constrain layout bounds; { x1, y1, x2, y2 } or { x1, y1, w, h }\n  };\n\n  function SpreadLayout( options ) {\n    this.options = $$.util.extend( {}, defaults, options );\n  }\n\n  function cellCentroid( cell ) {\n    var hes = cell.halfedges;\n    var area = 0,\n      x = 0,\n      y = 0;\n    var p1, p2, f;\n\n    for( var i = 0; i < hes.length; ++i ) {\n      p1 = hes[ i ].getEndpoint();\n      p2 = hes[ i ].getStartpoint();\n\n      area += p1.x * p2.y;\n      area -= p1.y * p2.x;\n\n      f = p1.x * p2.y - p2.x * p1.y;\n      x += ( p1.x + p2.x ) * f;\n      y += ( p1.y + p2.y ) * f;\n    }\n\n    area /= 2;\n    f = area * 6;\n    return {\n      x: x / f,\n      y: y / f\n    };\n  }\n\n  function sitesDistance( ls, rs ) {\n    var dx = ls.x - rs.x;\n    var dy = ls.y - rs.y;\n    return Math.sqrt( dx * dx + dy * dy );\n  }\n\n  SpreadLayout.prototype.run = function() {\n\n    var layout = this;\n    // var self = this;\n    var options = this.options;\n\n    $$.util.requires(['foograph', 'Voronoi'], function(foograph, Voronoi){\n\n      var cy = options.cy;\n      // var allNodes = cy.nodes();\n      var nodes = cy.nodes();\n      //var allEdges = cy.edges();\n      var edges = cy.edges();\n      var cWidth = cy.width();\n      var cHeight = cy.height();\n      var simulationBounds = options.boundingBox ? $$.util.makeBoundingBox( options.boundingBox ) : null;\n      var padding = options.padding;\n      var simBBFactor = Math.max( 1, Math.log(nodes.length) * 0.8 );\n      \n      if( nodes.length < 100 ){\n        simBBFactor /= 2;\n      }\n\n      layout.trigger( {\n        type: 'layoutstart',\n        layout: layout\n      } );\n\n      var simBB = {\n        x1: 0,\n        y1: 0,\n        x2: cWidth * simBBFactor,\n        y2: cHeight * simBBFactor\n      };\n\n      if( simulationBounds ) {\n        simBB.x1 = simulationBounds.x1;\n        simBB.y1 = simulationBounds.y1;\n        simBB.x2 = simulationBounds.x2;\n        simBB.y2 = simulationBounds.y2;\n      }\n\n      simBB.x1 += padding;\n      simBB.y1 += padding;\n      simBB.x2 -= padding;\n      simBB.y2 -= padding;\n\n      var width = simBB.x2 - simBB.x1;\n      var height = simBB.y2 - simBB.y1;\n\n      // Get start time\n      var startTime = Date.now();\n\n      // layout doesn't work with just 1 node\n      if( nodes.size() <= 1 ) {\n        nodes.positions( {\n          x: Math.round( ( simBB.x1 + simBB.x2 ) / 2 ),\n          y: Math.round( ( simBB.y1 + simBB.y2 ) / 2 )\n        } );\n\n        if( options.fit ) {\n          cy.fit( options.padding );\n        }\n\n        // Get end time\n        var endTime = Date.now();\n        console.info( \"Layout on \" + nodes.size() + \" nodes took \" + ( endTime - startTime ) + \" ms\" );\n\n        layout.one( \"layoutready\", options.ready );\n        layout.trigger( \"layoutready\" );\n\n        layout.one( \"layoutstop\", options.stop );\n        layout.trigger( \"layoutstop\" );\n\n        return;\n      }\n\n      // First I need to create the data structure to pass to the worker\n      var pData = {\n        'width': width,\n        'height': height,\n        'minDist': options.minDist,\n        'expFact': options.expandingFactor,\n        'expIt': 0,\n        'maxExpIt': options.maxExpandIterations,\n        'vertices': [],\n        'edges': [],\n        'startTime': startTime,\n        'maxFruchtermanReingoldIterations': options.maxFruchtermanReingoldIterations\n      };\n\n      nodes.each(\n        function( i, node ) {\n          var nodeId = this._private.data.id;\n          pData[ 'vertices' ].push( {\n            id: nodeId,\n            x: 0,\n            y: 0\n          } );\n        } );\n\n      edges.each(\n        function() {\n          var srcNodeId = this.source().id();\n          var tgtNodeId = this.target().id();\n          pData[ 'edges' ].push( {\n            src: srcNodeId,\n            tgt: tgtNodeId\n          } );\n        } );\n\n      //Decleration\n      var t1 = $$.Thread();\n      // And to add the required scripts\n      //EXTERNAL 1\n      t1.require( foograph, 'foograph' );\n      //EXTERNAL 2\n      t1.require( Voronoi );\n\n      //Local function\n      t1.require( sitesDistance );\n      t1.require( cellCentroid );\n\n      function setPositions( pData ){ //console.log('set posns')\n        // First we retrieve the important data\n        // var expandIteration = pData[ 'expIt' ];\n        var dataVertices = pData[ 'vertices' ];\n        var vertices = [];\n        for( var i = 0; i < dataVertices.length; ++i ) {\n          var dv = dataVertices[ i ];\n          vertices[ dv.id ] = {\n            x: dv.x,\n            y: dv.y\n          };\n        }\n        /*\n         * FINALLY:\n         *\n         * We position the nodes based on the calculation\n         */\n        nodes.positions(\n          function( i, node ) {\n            var id = node._private.data.id;\n            // var pos = node._private.position;\n            var vertex = vertices[ id ];\n\n            return {\n              x: Math.round( simBB.x1 + vertex.x ),\n              y: Math.round( simBB.y1 + vertex.y )\n            };\n          } );\n\n        if( options.fit ) {\n          cy.fit( options.padding );\n        }\n\n        cy.nodes().rtrigger( \"position\" );\n      }\n\n      var didLayoutReady = false;\n      t1.on('message', function(e){\n        var pData = e.message; //console.log('message', e)\n\n        if( !options.animate ){\n          return;\n        }\n\n        setPositions( pData );\n\n        if( !didLayoutReady ){\n          layout.trigger( \"layoutready\" );\n\n          didLayoutReady = true;\n        }\n      });\n\n      layout.one( \"layoutready\", options.ready );\n\n      t1.pass( pData ).run( function( pData ) {\n        \n        foograph = eval('foograph');\n        Voronoi = eval('Voronoi');\n        \n        // I need to retrieve the important data\n        var lWidth = pData[ 'width' ];\n        var lHeight = pData[ 'height' ];\n        var lMinDist = pData[ 'minDist' ];\n        var lExpFact = pData[ 'expFact' ];\n        var lMaxExpIt = pData[ 'maxExpIt' ];\n        var lMaxFruchtermanReingoldIterations = pData[ 'maxFruchtermanReingoldIterations' ];\n\n        // Prepare the data to output\n        var savePositions = function(){\n          pData[ 'width' ] = lWidth;\n          pData[ 'height' ] = lHeight;\n          pData[ 'expIt' ] = expandIteration;\n          pData[ 'expFact' ] = lExpFact;\n\n          pData[ 'vertices' ] = [];\n          for( var i = 0; i < fv.length; ++i ) {\n            pData[ 'vertices' ].push( {\n              id: fv[ i ].label,\n              x: fv[ i ].x,\n              y: fv[ i ].y\n            } );\n          }\n        };\n\n        var messagePositions = function(){\n          broadcast( pData );\n        };\n\n        /*\n         * FIRST STEP: Application of the Fruchterman-Reingold algorithm\n         *\n         * We use the version implemented by the foograph library\n         *\n         * Ref.: https://code.google.com/p/foograph/\n         */\n\n        // We need to create an instance of a graph compatible with the library\n        var frg = new foograph.Graph( \"FRgraph\", false );\n\n        var frgNodes = {};\n\n        // Then we have to add the vertices\n        var dataVertices = pData[ 'vertices' ];\n        for( var ni = 0; ni < dataVertices.length; ++ni ) {\n          var id = dataVertices[ ni ][ 'id' ];\n          var v = new foograph.Vertex( id, Math.round( Math.random() * lHeight ), Math.round( Math.random() * lHeight ) );\n          frgNodes[ id ] = v;\n          frg.insertVertex( v );\n        }\n\n        var dataEdges = pData[ 'edges' ];\n        for( var ei = 0; ei < dataEdges.length; ++ei ) {\n          var srcNodeId = dataEdges[ ei ][ 'src' ];\n          var tgtNodeId = dataEdges[ ei ][ 'tgt' ];\n          frg.insertEdge( \"\", 1, frgNodes[ srcNodeId ], frgNodes[ tgtNodeId ] );\n        }\n\n        var fv = frg.vertices;\n\n        // Then we apply the layout\n        var iterations = lMaxFruchtermanReingoldIterations;\n        var frLayoutManager = new foograph.ForceDirectedVertexLayout( lWidth, lHeight, iterations, false, lMinDist );\n\n        frLayoutManager.callback = function(){\n          savePositions();\n          messagePositions();\n        };\n\n        frLayoutManager.layout( frg );\n\n        savePositions();\n        messagePositions();\n\n        /*\n         * SECOND STEP: Tiding up of the graph.\n         *\n         * We use the method described by Gansner and North, based on Voronoi\n         * diagrams.\n         *\n         * Ref: doi:10.1007/3-540-37623-2_28\n         */\n\n        // We calculate the Voronoi diagram dor the position of the nodes\n        var voronoi = new Voronoi();\n        var bbox = {\n          xl: 0,\n          xr: lWidth,\n          yt: 0,\n          yb: lHeight\n        };\n        var vSites = [];\n        for( var i = 0; i < fv.length; ++i ) {\n          vSites[ fv[ i ].label ] = fv[ i ];\n        }\n\n        function checkMinDist( ee ) {\n          var infractions = 0;\n          // Then we check if the minimum distance is satisfied\n          for( var eei = 0; eei < ee.length; ++eei ) {\n            var e = ee[ eei ];\n            if( ( e.lSite != null ) && ( e.rSite != null ) && sitesDistance( e.lSite, e.rSite ) < lMinDist ) {\n              ++infractions;\n            }\n          }\n          return infractions;\n        }\n\n        var diagram = voronoi.compute( fv, bbox );\n\n        // Then we reposition the nodes at the centroid of their Voronoi cells\n        var cells = diagram.cells;\n        for( var i = 0; i < cells.length; ++i ) {\n          var cell = cells[ i ];\n          var site = cell.site;\n          var centroid = cellCentroid( cell );\n          var currv = vSites[ site.label ];\n          currv.x = centroid.x;\n          currv.y = centroid.y;\n        }\n\n        if( lExpFact < 0.0 ) {\n          // Calculates the expanding factor\n          lExpFact = Math.max( 0.05, Math.min( 0.10, lMinDist / Math.sqrt( ( lWidth * lHeight ) / fv.length ) * 0.5 ) );\n          //console.info(\"Expanding factor is \" + (options.expandingFactor * 100.0) + \"%\");\n        }\n\n        var prevInfractions = checkMinDist( diagram.edges );\n        //console.info(\"Initial infractions \" + prevInfractions);\n\n        var bStop = ( prevInfractions <= 0 );\n\n        var voronoiIteration = 0;\n        var expandIteration = 0;\n\n        // var initWidth = lWidth;\n\n        while( !bStop ) {\n          ++voronoiIteration;\n          for( var it = 0; it <= 4; ++it ) {\n            voronoi.recycle( diagram );\n            diagram = voronoi.compute( fv, bbox );\n\n            // Then we reposition the nodes at the centroid of their Voronoi cells\n            cells = diagram.cells;\n            for( var i = 0; i < cells.length; ++i ) {\n              var cell = cells[ i ];\n              var site = cell.site;\n              var centroid = cellCentroid( cell );\n              var currv = vSites[ site.label ];\n              currv.x = centroid.x;\n              currv.y = centroid.y;\n            }\n          }\n\n          var currInfractions = checkMinDist( diagram.edges );\n          //console.info(\"Current infractions \" + currInfractions);\n\n          if( currInfractions <= 0 ) {\n            bStop = true;\n          } else {\n            if( currInfractions >= prevInfractions || voronoiIteration >= 4 ) {\n              if( expandIteration >= lMaxExpIt ) {\n                bStop = true;\n              } else {\n                lWidth += lWidth * lExpFact;\n                lHeight += lHeight * lExpFact;\n                bbox = {\n                  xl: 0,\n                  xr: lWidth,\n                  yt: 0,\n                  yb: lHeight\n                };\n                ++expandIteration;\n                voronoiIteration = 0;\n                //console.info(\"Expanded to (\"+width+\",\"+height+\")\");\n              }\n            }\n          }\n          prevInfractions = currInfractions;\n\n          savePositions();\n          messagePositions();\n        }\n\n        savePositions();\n        return pData;\n\n      } ).then( function( pData ) {\n        // var expandIteration = pData[ 'expIt' ];\n        var dataVertices = pData[ 'vertices' ];\n\n        setPositions( pData );\n\n        // Get end time\n        var startTime = pData[ 'startTime' ];\n        var endTime = new Date();\n        console.info( \"Layout on \" + dataVertices.length + \" nodes took \" + ( endTime - startTime ) + \" ms\" );\n\n        layout.one( \"layoutstop\", options.stop );\n\n        if( !options.animate ){\n          layout.trigger( \"layoutready\" );\n        }\n\n        layout.trigger( \"layoutstop\" );\n\n        t1.stop();\n      } );\n\n    });\n\n    return this;\n  }; // run\n\n  SpreadLayout.prototype.stop = function() {};\n\n  $$( 'layout', 'spread', SpreadLayout );\n\n\n} )( cytoscape );\n\n;(function($$){ 'use strict';\n  \n  var defaults = {\n    animate: true, // whether to show the layout as it's running\n    maxSimulationTime: 4000, // max length in ms to run the layout\n    ungrabifyWhileSimulating: false, // so you can't drag nodes during layout\n    fit: true, // whether to fit the viewport to the graph\n    padding: 30, // padding on fit\n    boundingBox: undefined, // constrain layout bounds; { x1, y1, x2, y2 } or { x1, y1, w, h }\n    random: false, // whether to use random initial positions\n    infinite: false, // overrides all other options for a forces-all-the-time mode\n    ready: undefined, // callback on layoutready\n    stop: undefined, // callback on layoutstop\n\n    // springy forces\n    stiffness: 400,\n    repulsion: 400,\n    damping: 0.5\n  };\n\n  function SpringyLayout( options ){\n    this.options = $$.util.extend(true, {}, defaults, options);\n  }\n  \n  SpringyLayout.prototype.run = function(){\n    var layout = this;\n    var self = this;\n    var options = this.options;\n\n    $$.util.require('Springy', function(Springy){\n\n      var simUpdatingPos = false;\n\n      var cy = options.cy;\n      layout.trigger({ type: 'layoutstart', layout: layout });\n      \n      var eles = options.eles;\n      var nodes = eles.nodes().not(':parent');\n      var edges = eles.edges();\n   \n      var bb = $$.util.makeBoundingBox( options.boundingBox ? options.boundingBox : {\n        x1: 0, y1: 0, w: cy.width(), h: cy.height()\n      } );\n      \n      // make a new graph\n      var graph = new Springy.Graph();\n\n      // make some nodes\n      nodes.each(function(i, node){\n        node.scratch('springy', {\n          model: graph.newNode({\n            element: node\n          })\n        });\n      });\n\n      // connect them with edges\n      edges.each(function(i, edge){\n        var fdSrc = edge.source().scratch('springy').model;\n        var fdTgt = edge.target().scratch('springy').model;\n        \n        edge.scratch('springy', {\n          model: graph.newEdge(fdSrc, fdTgt, {\n            element: edge\n          })\n        });\n      });\n      \n      var sim = window.sim = new Springy.Layout.ForceDirected(graph, options.stiffness, options.repulsion, options.damping);\n\n      if( options.infinite ){\n        sim.minEnergyThreshold = -Infinity;\n      }\n\n      var currentBB = sim.getBoundingBox();\n      // var targetBB = {bottomleft: new Springy.Vector(-2, -2), topright: new Springy.Vector(2, 2)};\n      \n      // convert to/from screen coordinates\n      var toScreen = function(p) {\n        currentBB = sim.getBoundingBox();\n\n        var size = currentBB.topright.subtract(currentBB.bottomleft);\n        var sx = p.subtract(currentBB.bottomleft).divide(size.x).x * bb.w + bb.x1;\n        var sy = p.subtract(currentBB.bottomleft).divide(size.y).y * bb.h + bb.x1;\n\n        return new Springy.Vector(sx, sy);\n      };\n\n      var fromScreen = function(s) {\n        currentBB = sim.getBoundingBox();\n\n        var size = currentBB.topright.subtract(currentBB.bottomleft);\n        var px = ((s.x - bb.x1) / bb.w) * size.x + currentBB.bottomleft.x;\n        var py = ((s.y - bb.y1) / bb.h) * size.y + currentBB.bottomleft.y;\n\n        return new Springy.Vector(px, py);\n      };\n      \n      var movedNodes = cy.collection();\n      \n      var numNodes = cy.nodes().size();\n      var drawnNodes = 1;\n      var fdRenderer = new Springy.Renderer(sim,\n        function clear() {\n          if( self.stopped ){ return; } // because springy is a buggy layout\n          \n          if( movedNodes.length > 0 && options.animate ){\n            simUpdatingPos = true;\n\n            movedNodes.rtrigger('position');\n\n            if( options.fit ){\n              cy.fit( options.padding );\n            }\n\n            movedNodes = cy.collection();\n\n            simUpdatingPos = false;\n          }\n        },\n\n        function drawEdge(edge, p1, p2) {\n          // draw an edge\n        },\n\n        function drawNode(node, p) {\n          if( self.stopped ){ return; } // because springy is a buggy layout\n\n          var v = toScreen(p);\n          var element = node.data.element;\n          \n          if( !element.locked() && !element.grabbed() ){\n              element._private.position = {\n                x: v.x,\n                y: v.y\n              };\n              movedNodes.merge(element);\n          } else {\n            //setLayoutPositionForElement(element);\n          }\n          \n          if( drawnNodes == numNodes ){\n            layout.one('layoutready', options.ready);\n            layout.trigger({ type: 'layoutready', layout: layout });\n          } \n          \n          drawnNodes++;\n        \n        }\n      );\n      \n      // set initial node points\n      nodes.each(function(i, ele){\n        if( !options.random ){\n          setLayoutPositionForElement(ele);\n        }\n      });\n      \n      // update node positions when dragging\n      var dragHandler;\n      nodes.on('position', dragHandler = function(){\n        if( simUpdatingPos ){ return; }\n\n        setLayoutPositionForElement(this);\n      });\n      \n      function setLayoutPositionForElement(element){\n        var fdId = element.scratch('springy').model.id;\n        var fdP = fdRenderer.layout.nodePoints[fdId].p;\n        var pos = element.position();\n        var positionInFd = (pos.x != null && pos.y != null) ? fromScreen(element.position()) : {\n          x: Math.random() * 4 - 2,\n          y: Math.random() * 4 - 2\n        };\n        \n        fdP.x = positionInFd.x;\n        fdP.y = positionInFd.y;\n      }\n      \n      var grabbableNodes = nodes.filter(\":grabbable\");\n      \n      function start(){\n        self.stopped = false;\n\n        // disable grabbing if so set\n        if( options.ungrabifyWhileSimulating ){\n          grabbableNodes.ungrabify();\n        }\n        \n        fdRenderer.start();\n      }\n      \n      self.stopSystem = function(){\n        self.stopped = true;\n\n        graph.filterNodes(function(){\n          return false; // remove all nodes\n        });\n        \n        if( options.ungrabifyWhileSimulating ){\n          grabbableNodes.grabify();\n        }\n\n        if( options.fit ){\n          cy.fit( options.padding );\n        }\n        \n        nodes.off('drag position', dragHandler);\n\n        layout.one('layoutstop', options.stop);\n        layout.trigger({ type: 'layoutstop', layout: layout });\n\n        self.stopSystem = null;\n      };\n      \n      start();\n      if( !options.infinite ){\n        setTimeout(function(){\n          self.stop();\n        }, options.maxSimulationTime);\n      }\n\n    }); // require\n\n    return this; // chaining\n  };\n\n  SpringyLayout.prototype.stop = function(){\n    if( this.stopSystem != null ){\n      this.stopSystem();\n    }\n\n    return this; // chaining\n  };\n  \n  $$('layout', 'springy', SpringyLayout);\n\n  \n})(cytoscape);\n\n;(function($$){ 'use strict';\n    \n  function NullRenderer(options){\n    this.options = options;\n  }\n  \n  NullRenderer.prototype.recalculateRenderedStyle = function(){\n  };\n\n  NullRenderer.prototype.notify = function(){\n    // the null renderer does nothing\n  };\n  \n  $$('renderer', 'null', NullRenderer);\n  \n})( cytoscape );\n","/*! imjs - v3.13.0 - 2015-05-08 */\n\n// This library is open source software according to the definition of the\n// GNU Lesser General Public Licence, Version 3, (LGPLv3) a copy of which is\n// included with this software. All use of this software is covered according to\n// the terms of the LGPLv3.\n// \n// The copyright is held by InterMine (www.intermine.org) and Alex Kalderimis (alex@intermine.org).\n\n(function (intermine) {\n!function(e){if(\"object\"==typeof exports&&\"undefined\"!=typeof module)module.exports=e();else if(\"function\"==typeof define&&define.amd)define([],e);else{var f;\"undefined\"!=typeof window?f=window:\"undefined\"!=typeof global?f=global:\"undefined\"!=typeof self&&(f=self),f.imjs=e()}}(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(_dereq_,module,exports){\n(function() {\n  exports.ACCEPT_HEADER = {\n    'xml': 'application/xml',\n    'json': 'application/json',\n    'tsv': 'text/tab-separated-values',\n    'tab': 'text/tab-separated-values',\n    'csv': 'text/comma-separated-values',\n    'fasta': 'text/x-fasta',\n    'gff3': 'text/x-gff3',\n    'bed': 'text/x-bed',\n    'objects': 'application/json;type=objects',\n    'jsonobjects': 'application/json;type=objects',\n    'jsontable': 'application/json;type=table',\n    'jsonrows': 'application/json;type=rows',\n    'jsoncount': 'application/json;type=count',\n    'jsonp': 'application/javascript',\n    'jsonpobjects': 'application/javascript;type=objects',\n    'jsonptable': 'application/javascript;type=table',\n    'jsonprows': 'application/javascript;type=rows',\n    'jsonpcount': 'application/javascript;type=count'\n  };\n\n}).call(this);\n\n},{}],2:[function(_dereq_,module,exports){\n(function (global){\n(function() {\n  var expose, imjs, merge;\n\n  _dereq_('./shiv');\n\n  module.exports = imjs = _dereq_('./service');\n\n  merge = imjs.utils.merge;\n\n  expose = function(name, thing) {\n    if ('function' === typeof define && define.amd) {\n      return define(name, [], thing);\n    } else {\n      return global[name] = thing;\n    }\n  };\n\n  expose('imjs', imjs);\n\n  if (typeof intermine === 'undefined') {\n    expose('intermine', imjs);\n  } else {\n    expose('intermine', merge(intermine, imjs));\n  }\n\n}).call(this);\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{\"./service\":10,\"./shiv\":12}],3:[function(_dereq_,module,exports){\n(function() {\n  var ACCEPT_HEADER, JSONStream, PESKY_COMMA, URL, URLENC, USER_AGENT, VERSION, blocking, defer, error, getMsg, http, invoke, merge, parseOptions, rejectAfter, streaming, utils, _ref;\n\n  URL = _dereq_('url');\n\n  JSONStream = _dereq_('JSONStream');\n\n  http = _dereq_('http');\n\n  ACCEPT_HEADER = _dereq_('./constants').ACCEPT_HEADER;\n\n  VERSION = _dereq_('./version').VERSION;\n\n  _ref = utils = _dereq_('./util'), error = _ref.error, defer = _ref.defer, merge = _ref.merge, invoke = _ref.invoke;\n\n  USER_AGENT = \"node-http/imjs-\" + VERSION;\n\n  PESKY_COMMA = /,\\s*$/;\n\n  URLENC = \"application/x-www-form-urlencoded\";\n\n  exports.supports = function() {\n    return true;\n  };\n\n  streaming = function(opts, resolve, reject) {\n    return function(resp) {\n      var errors, results;\n      if (resp.pipe == null) {\n        return reject(new Error('response is not a stream'));\n      }\n      resp.on('error', reject);\n      if ((resp.statusCode != null) && resp.statusCode !== 200) {\n        errors = JSONStream.parse('error');\n        errors.pause();\n        resp.pipe(errors);\n        return reject([resp.statusCode, errors]);\n      } else {\n        results = JSONStream.parse('results.*');\n        results.pause();\n        resp.pipe(results);\n        return resolve(results);\n      }\n    };\n  };\n\n  getMsg = function(_arg, text, e, code) {\n    var type, url;\n    type = _arg.type, url = _arg.url;\n    return \"Could not parse response to \" + type + \" \" + url + \": \\\"\" + text + \"\\\" (\" + code + \": \" + e + \")\";\n  };\n\n  blocking = function(opts, resolve, reject) {\n    return function(resp) {\n      var containerBuffer;\n      containerBuffer = '';\n      resp.on('data', function(chunk) {\n        return containerBuffer += chunk;\n      });\n      resp.on('error', reject);\n      return resp.on('end', function() {\n        var ct, e, err, f, match, parsed, _ref1;\n        ct = resp.headers['content-type'];\n        if ('application/json' === ct || /json/.test(opts.dataType) || /json/.test(opts.data.format)) {\n          if ('' === containerBuffer && resp.statusCode === 200) {\n            return resolve();\n          } else {\n            try {\n              parsed = JSON.parse(containerBuffer);\n              if (err = parsed.error) {\n                return reject(new Error(err));\n              } else {\n                return resolve(parsed);\n              }\n            } catch (_error) {\n              e = _error;\n              if (resp.statusCode >= 400) {\n                return reject(new Error(resp.statusCode));\n              } else {\n                return reject(new Error(getMsg(opts, containerBuffer, e, resp.statusCode)));\n              }\n            }\n          }\n        } else {\n          if (match = containerBuffer.match(/\\[ERROR\\] (\\d+)([\\s\\S]*)/)) {\n            return reject(new Error(match[2]));\n          } else {\n            f = (200 <= (_ref1 = resp.statusCode) && _ref1 < 400) ? resolve : reject;\n            return f(containerBuffer);\n          }\n        }\n      });\n    };\n  };\n\n  exports.iterReq = function(method, path, format) {\n    return function(q, page, cb, eb, onEnd) {\n      var attach, promise, readErrors, req, _ref1;\n      if (page == null) {\n        page = {};\n      }\n      if (cb == null) {\n        cb = (function() {});\n      }\n      if (eb == null) {\n        eb = (function() {});\n      }\n      if (onEnd == null) {\n        onEnd = (function() {});\n      }\n      if (utils.isFunction(page)) {\n        _ref1 = [{}, page, cb, eb], page = _ref1[0], cb = _ref1[1], eb = _ref1[2], onEnd = _ref1[3];\n      }\n      req = merge({\n        format: format\n      }, page, {\n        query: q.toXML()\n      });\n      attach = function(stream) {\n        stream.on('data', cb);\n        stream.on('error', eb);\n        stream.on('end', onEnd);\n        setTimeout((function() {\n          if (stream.resume != null) {\n            return stream.resume();\n          }\n        }), 3);\n        return stream;\n      };\n      readErrors = function(_arg) {\n        var errors, sc;\n        sc = _arg[0], errors = _arg[1];\n        errors.on('data', eb);\n        errors.on('error', eb);\n        errors.on('end', onEnd);\n        if (errors.resume != null) {\n          errors.resume();\n        }\n        return error(sc);\n      };\n      promise = this.makeRequest(method, path, req, null, true);\n      promise.then(attach, readErrors);\n      return promise;\n    };\n  };\n\n  rejectAfter = function(timeout, reject, promise) {\n    var to;\n    to = setTimeout((function() {\n      return reject(\"Request timed out.\");\n    }), timeout);\n    return promise.then(function() {\n      return cancelTimeout(to);\n    });\n  };\n\n  parseOptions = function(opts) {\n    var k, parsed, postdata, sep, v, _ref1, _ref2, _ref3;\n    if (!opts.url) {\n      throw new Error(\"No url provided in \" + (JSON.stringify(opts)));\n    }\n    if (typeof opts.data === 'string') {\n      postdata = opts.data;\n      if ((_ref1 = opts.type) === 'GET' || _ref1 === 'DELETE') {\n        throw new Error(\"Invalid request. \" + opts.type + \" requests must not have bodies\");\n      }\n    } else {\n      postdata = utils.querystring(opts.data);\n    }\n    parsed = URL.parse(opts.url, true);\n    parsed.withCredentials = false;\n    parsed.method = opts.type || 'GET';\n    if (opts.port != null) {\n      parsed.port = opts.port;\n    }\n    parsed.headers = {\n      'User-Agent': USER_AGENT,\n      'Accept': ACCEPT_HEADER[opts.dataType]\n    };\n    if (((_ref2 = parsed.method) === 'GET' || _ref2 === 'DELETE') && (postdata != null ? postdata.length : void 0)) {\n      sep = /\\?/.test(parsed.path) ? '&' : '?';\n      parsed.path += sep + postdata;\n      postdata = null;\n    } else {\n      parsed.headers['Content-Type'] = (opts.contentType || URLENC) + '; charset=UTF-8';\n      parsed.headers['Content-Length'] = postdata.length;\n    }\n    if (opts.headers != null) {\n      _ref3 = opts.headers;\n      for (k in _ref3) {\n        v = _ref3[k];\n        parsed.headers[k] = v;\n      }\n    }\n    if (opts.auth != null) {\n      parsed.auth = opts.auth;\n    }\n    return [parsed, postdata];\n  };\n\n  exports.doReq = function(opts, iter) {\n    var e, handler, postdata, promise, reject, req, resolve, timeout, url, _ref1, _ref2;\n    _ref1 = defer(), promise = _ref1.promise, resolve = _ref1.resolve, reject = _ref1.reject;\n    promise.then(null, opts.error);\n    try {\n      _ref2 = parseOptions(opts), url = _ref2[0], postdata = _ref2[1];\n      handler = (iter ? streaming : blocking)(opts, resolve, reject);\n      req = http.request(url, handler);\n      req.on('error', function(err) {\n        return reject(new Error(\"Error: \" + url.method + \" \" + opts.url + \": \" + err));\n      });\n      if (postdata != null) {\n        req.write(postdata);\n      }\n      req.end();\n      timeout = opts.timeout;\n      if (timeout > 0) {\n        rejectAfter(timeout, reject, promise);\n      }\n    } catch (_error) {\n      e = _error;\n      reject(e);\n    }\n    return promise;\n  };\n\n}).call(this);\n\n},{\"./constants\":1,\"./util\":15,\"./version\":16,\"JSONStream\":18,\"http\":50,\"url\":47}],4:[function(_dereq_,module,exports){\n(function() {\n  var CategoryResults, IDResolutionJob, IdResults, ONE_MINUTE, concatMap, defer, difference, fold, funcutils, get, id, intermine, uniqBy, withCB,\n    __hasProp = {}.hasOwnProperty,\n    __indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; },\n    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };\n\n  funcutils = _dereq_('./util');\n\n  intermine = exports;\n\n  uniqBy = funcutils.uniqBy, difference = funcutils.difference, defer = funcutils.defer, withCB = funcutils.withCB, id = funcutils.id, get = funcutils.get, fold = funcutils.fold, concatMap = funcutils.concatMap;\n\n  ONE_MINUTE = 60 * 1000;\n\n  CategoryResults = (function() {\n    var getIssueMatches;\n\n    function CategoryResults(results) {\n      var k, v;\n      for (k in results) {\n        if (!__hasProp.call(results, k)) continue;\n        v = results[k];\n        this[k] = v;\n      }\n    }\n\n    CategoryResults.prototype.getStats = function(type) {\n      if (type != null) {\n        return this.stats[type];\n      } else {\n        return this.stats;\n      }\n    };\n\n    getIssueMatches = concatMap(get('matches'));\n\n    CategoryResults.prototype.getMatches = function(k) {\n      var _ref;\n      if (k === 'MATCH') {\n        return this.matches[k];\n      } else {\n        return (_ref = getIssueMatches(this.matches[k])) != null ? _ref : [];\n      }\n    };\n\n    CategoryResults.prototype.getMatchIds = function(k) {\n      if (k != null) {\n        return this.getMatches(k).map(get('id'));\n      } else {\n        return this.allMatchIds();\n      }\n    };\n\n    CategoryResults.prototype.goodMatchIds = function() {\n      return this.getMatchIds('MATCH');\n    };\n\n    CategoryResults.prototype.allMatchIds = function() {\n      var combineIds;\n      combineIds = fold((function(_this) {\n        return function(res, issueSet) {\n          return res.concat(_this.getMatchIds(issueSet));\n        };\n      })(this));\n      return combineIds(this.goodMatchIds(), ['DUPLICATE', 'WILDCARD', 'TYPE_CONVERTED', 'OTHER']);\n    };\n\n    return CategoryResults;\n\n  })();\n\n  IdResults = (function() {\n    var flatten, getReasons, isGood, unique;\n\n    unique = uniqBy(id);\n\n    flatten = concatMap(id);\n\n    getReasons = function(match) {\n      var k, vals;\n      return flatten((function() {\n        var _ref, _results;\n        _ref = match.identifiers;\n        _results = [];\n        for (k in _ref) {\n          vals = _ref[k];\n          _results.push(vals);\n        }\n        return _results;\n      })());\n    };\n\n    isGood = function(match, k) {\n      return (k == null) || __indexOf.call(getReasons(match), k) >= 0;\n    };\n\n    function IdResults(results) {\n      var k, v;\n      for (k in results) {\n        if (!__hasProp.call(results, k)) continue;\n        v = results[k];\n        this[k] = v;\n      }\n    }\n\n    IdResults.prototype.getStats = function(type) {\n      switch (type) {\n        case 'objects':\n          return this.getObjectStats();\n        case 'identifiers':\n          return this.getIdentifierStats();\n        default:\n          return {\n            objects: this.getObjectStats(),\n            identifiers: this.getIdentifierStats()\n          };\n      }\n    };\n\n    IdResults.prototype.getIdentifierStats = function() {\n      var all, allIdents, issues, matchIdents, matches, toIdents;\n      toIdents = function(ms) {\n        var ident, match;\n        return unique(flatten((function() {\n          var _i, _len, _results;\n          _results = [];\n          for (_i = 0, _len = ms.length; _i < _len; _i++) {\n            match = ms[_i];\n            _results.push((function() {\n              var _results1;\n              _results1 = [];\n              for (ident in match != null ? match.identifiers : void 0) {\n                _results1.push(ident);\n              }\n              return _results1;\n            })());\n          }\n          return _results;\n        })()));\n      };\n      matchIdents = toIdents(this.getMatches('MATCH'));\n      allIdents = toIdents(this.getMatches());\n      matches = matchIdents.length;\n      all = allIdents.length;\n      issues = (difference(allIdents, matchIdents)).length;\n      return {\n        matches: matches,\n        all: all,\n        issues: issues\n      };\n    };\n\n    IdResults.prototype.getObjectStats = function() {\n      var all, issues, match, matches;\n      matches = this.goodMatchIds().length;\n      all = this.allMatchIds().length;\n      issues = ((function() {\n        var _results;\n        _results = [];\n        for (id in this) {\n          if (!__hasProp.call(this, id)) continue;\n          match = this[id];\n          if (__indexOf.call(getReasons(match), 'MATCH') < 0) {\n            _results.push(id);\n          }\n        }\n        return _results;\n      }).call(this)).length;\n      return {\n        matches: matches,\n        all: all,\n        issues: issues\n      };\n    };\n\n    IdResults.prototype.getMatches = function(k) {\n      var match, _results;\n      _results = [];\n      for (id in this) {\n        if (!__hasProp.call(this, id)) continue;\n        match = this[id];\n        if (isGood(match, k)) {\n          _results.push(match);\n        }\n      }\n      return _results;\n    };\n\n    IdResults.prototype.getMatchIds = function(k) {\n      var match, _results;\n      _results = [];\n      for (id in this) {\n        if (!__hasProp.call(this, id)) continue;\n        match = this[id];\n        if (isGood(match, k)) {\n          _results.push(id);\n        }\n      }\n      return _results;\n    };\n\n    IdResults.prototype.goodMatchIds = function() {\n      return this.getMatchIds('MATCH');\n    };\n\n    IdResults.prototype.allMatchIds = function() {\n      return this.getMatchIds();\n    };\n\n    return IdResults;\n\n  })();\n\n  IDResolutionJob = (function() {\n    function IDResolutionJob(uid, service) {\n      this.uid = uid;\n      this.service = service;\n      this.del = __bind(this.del, this);\n      this.fetchResults = __bind(this.fetchResults, this);\n      this.fetchErrorMessage = __bind(this.fetchErrorMessage, this);\n      this.fetchStatus = __bind(this.fetchStatus, this);\n    }\n\n    IDResolutionJob.prototype.fetchStatus = function(cb) {\n      return withCB(cb, this.service.get(\"ids/\" + this.uid + \"/status\").then(get('status')));\n    };\n\n    IDResolutionJob.prototype.fetchErrorMessage = function(cb) {\n      return withCB(cb, this.service.get(\"ids/\" + this.uid + \"/status\").then(get('message')));\n    };\n\n    IDResolutionJob.prototype.fetchResults = function(cb) {\n      var gettingRes, gettingVer;\n      gettingRes = this.service.get(\"ids/\" + this.uid + \"/result\").then(get('results'));\n      gettingVer = this.service.fetchVersion();\n      return gettingVer.then(function(v) {\n        return gettingRes.then(function(results) {\n          if (v >= 16) {\n            return new CategoryResults(results);\n          } else {\n            return new IdResults(results);\n          }\n        });\n      });\n    };\n\n    IDResolutionJob.prototype.del = function(cb) {\n      return withCB(cb, this.service.makeRequest('DELETE', \"ids/\" + this.uid));\n    };\n\n    IDResolutionJob.prototype.decay = 50;\n\n    IDResolutionJob.prototype.poll = function(onSuccess, onError, onProgress) {\n      var backOff, notify, promise, reject, resolve, resp, _ref;\n      _ref = defer(), promise = _ref.promise, resolve = _ref.resolve, reject = _ref.reject;\n      promise.then(onSuccess, onError);\n      notify = onProgress != null ? onProgress : (function() {});\n      resp = this.fetchStatus();\n      resp.then(null, reject);\n      backOff = this.decay;\n      this.decay = Math.min(ONE_MINUTE, backOff * 1.25);\n      resp.then((function(_this) {\n        return function(status) {\n          notify(status);\n          switch (status) {\n            case 'SUCCESS':\n              return _this.fetchResults().then(resolve, reject);\n            case 'ERROR':\n              return _this.fetchErrorMessage().then(reject, reject);\n            default:\n              return setTimeout((function() {\n                return _this.poll(resolve, reject, notify);\n              }), backOff);\n          }\n        };\n      })(this));\n      return promise;\n    };\n\n    return IDResolutionJob;\n\n  })();\n\n  IDResolutionJob.prototype.wait = IDResolutionJob.prototype.poll;\n\n  IDResolutionJob.create = function(service) {\n    return function(uid) {\n      return new IDResolutionJob(uid, service);\n    };\n  };\n\n  intermine.IDResolutionJob = IDResolutionJob;\n\n  intermine.CategoryResults = CategoryResults;\n\n  intermine.IdResults = IdResults;\n\n}).call(this);\n\n},{\"./util\":15}],5:[function(_dereq_,module,exports){\n(function() {\n  var INVITES, List, REQUIRES_VERSION, SHARES, TAGS_PATH, dejoin, get, getFolderName, intermine, invoke, isFolder, merge, set, utils, withCB,\n    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },\n    __hasProp = {}.hasOwnProperty,\n    __indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };\n\n  utils = _dereq_('./util');\n\n  intermine = exports;\n\n  merge = utils.merge, withCB = utils.withCB, get = utils.get, invoke = utils.invoke, REQUIRES_VERSION = utils.REQUIRES_VERSION, set = utils.set, dejoin = utils.dejoin;\n\n  TAGS_PATH = \"list/tags\";\n\n  SHARES = \"lists/shares\";\n\n  INVITES = 'lists/invitations';\n\n  isFolder = function(t) {\n    return t.substr(0, t.indexOf(':')) === '__folder__';\n  };\n\n  getFolderName = function(t) {\n    return t.substr(t.indexOf(':') + 1);\n  };\n\n  List = (function() {\n    var getTags;\n\n    function List(properties, service) {\n      var k, v;\n      this.service = service;\n      this._updateTags = __bind(this._updateTags, this);\n      this.hasTag = __bind(this.hasTag, this);\n      for (k in properties) {\n        if (!__hasProp.call(properties, k)) continue;\n        v = properties[k];\n        this[k] = v;\n      }\n      this.dateCreated = (this.dateCreated != null) ? new Date(this.dateCreated) : null;\n      this.folders = this.tags.filter(isFolder).map(getFolderName);\n    }\n\n    List.prototype.hasTag = function(t) {\n      return __indexOf.call(this.tags, t) >= 0;\n    };\n\n    List.prototype.query = function(view) {\n      if (view == null) {\n        view = ['*'];\n      }\n      return this.service.query({\n        select: view,\n        from: this.type,\n        where: [[this.type, 'IN', this.name]]\n      });\n    };\n\n    List.prototype.del = function(cb) {\n      return this.service.makeRequest('DELETE', 'lists', {\n        name: this.name\n      }, cb);\n    };\n\n    getTags = function(_arg) {\n      var tags;\n      tags = _arg.tags;\n      return tags;\n    };\n\n    List.prototype._updateTags = function(err, tags) {\n      if (err != null) {\n        return;\n      }\n      this.tags = tags.slice();\n      return this.folders = this.tags.filter(isFolder).map(getFolderName);\n    };\n\n    List.prototype.fetchTags = function(cb) {\n      return withCB(this._updateTags, cb, this.service.makeRequest('GET', 'list/tags', {\n        name: this.name\n      }).then(getTags));\n    };\n\n    List.prototype.addTags = function(tags, cb) {\n      var req;\n      req = {\n        name: this.name,\n        tags: tags\n      };\n      return withCB(this._updateTags, cb, this.service.makeRequest('POST', 'list/tags', req).then(getTags));\n    };\n\n    List.prototype.removeTags = function(tags, cb) {\n      var req;\n      req = {\n        name: this.name,\n        tags: tags\n      };\n      return withCB(this._updateTags, cb, this.service.makeRequest('DELETE', 'list/tags', req).then(getTags));\n    };\n\n    List.prototype.contents = function(cb) {\n      return withCB(cb, this.query().then(dejoin).then(invoke('records')));\n    };\n\n    List.prototype.rename = function(newName, cb) {\n      var promise;\n      promise = this.service.post('lists/rename', {\n        oldname: this.name,\n        newname: newName\n      }).then(get('listName')).then((function(_this) {\n        return function(n) {\n          return _this.name = n;\n        };\n      })(this)).then(this.service.fetchList);\n      return withCB(cb, promise);\n    };\n\n    List.prototype.copy = function(opts, cb) {\n      var baseName, name, query, tags, _ref, _ref1, _ref2;\n      if (opts == null) {\n        opts = {};\n      }\n      if (cb == null) {\n        cb = (function() {});\n      }\n      if (arguments.length === 1 && utils.isFunction(opts)) {\n        _ref = [{}, opts], opts = _ref[0], cb = _ref[1];\n      }\n      if (typeof opts === 'string') {\n        opts = {\n          name: opts\n        };\n      }\n      name = baseName = (_ref1 = opts.name) != null ? _ref1 : \"\" + this.name + \"_copy\";\n      tags = this.tags.concat((_ref2 = opts.tags) != null ? _ref2 : []);\n      query = this.query(['id']);\n      return withCB(cb, this.service.fetchLists().then(invoke('map', get('name'))).then((function(_this) {\n        return function(names) {\n          var c;\n          c = 1;\n          while (__indexOf.call(names, name) >= 0) {\n            name = \"\" + baseName + \"-\" + (c++);\n          }\n          return query.then(invoke('saveAsList', {\n            name: name,\n            tags: tags,\n            description: _this.description\n          }));\n        };\n      })(this)));\n    };\n\n    List.prototype.enrichment = function(opts, cb) {\n      return this.service.enrichment(merge({\n        list: this.name\n      }, opts), cb);\n    };\n\n    List.prototype.shareWithUser = function(recipient, cb) {\n      return withCB(cb, this.service.post(SHARES, {\n        'list': this.name,\n        'with': recipient\n      }));\n    };\n\n    List.prototype.inviteUserToShare = function(recipient, notify, cb) {\n      if (notify == null) {\n        notify = true;\n      }\n      if (cb == null) {\n        cb = (function() {});\n      }\n      return withCB(cb, this.service.post(INVITES, {\n        list: this.name,\n        to: recipient,\n        notify: !!notify\n      }));\n    };\n\n    return List;\n\n  })();\n\n  intermine.List = List;\n\n}).call(this);\n\n},{\"./util\":15}],6:[function(_dereq_,module,exports){\n(function() {\n  var JAVA_LANG_OBJ, Model, PathInfo, Table, error, find, flatten, intermine, omap, _ref,\n    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },\n    __indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };\n\n  Table = _dereq_('./table').Table;\n\n  PathInfo = _dereq_('./path').PathInfo;\n\n  _ref = _dereq_('./util'), flatten = _ref.flatten, find = _ref.find, error = _ref.error, omap = _ref.omap;\n\n  intermine = exports;\n\n  JAVA_LANG_OBJ = new Table({\n    name: 'Object',\n    tags: [],\n    displayName: 'Object',\n    attributes: {},\n    references: {},\n    collections: {}\n  });\n\n  Model = (function() {\n    function Model(_arg) {\n      var classes, liftToTable;\n      this.name = _arg.name, classes = _arg.classes;\n      this.findCommonType = __bind(this.findCommonType, this);\n      this.findSharedAncestor = __bind(this.findSharedAncestor, this);\n      this.getAncestorsOf = __bind(this.getAncestorsOf, this);\n      this.getSubclassesOf = __bind(this.getSubclassesOf, this);\n      this.getPathInfo = __bind(this.getPathInfo, this);\n      liftToTable = omap((function(_this) {\n        return function(k, v) {\n          return [k, new Table(v, _this)];\n        };\n      })(this));\n      this.classes = liftToTable(classes);\n      this.classes['java.lang.Object'] = JAVA_LANG_OBJ;\n    }\n\n    Model.prototype.getPathInfo = function(path, subcls) {\n      return PathInfo.parse(this, path, subcls);\n    };\n\n    Model.prototype.getSubclassesOf = function(cls) {\n      var cd, clazz, ret, _, _ref1, _ref2;\n      clazz = cls && cls.name ? cls : this.classes[cls];\n      if (clazz == null) {\n        throw new Error(\"\" + cls + \" is not a table\");\n      }\n      ret = [clazz.name];\n      _ref1 = this.classes;\n      for (_ in _ref1) {\n        cd = _ref1[_];\n        if (_ref2 = clazz.name, __indexOf.call(cd.parents(), _ref2) >= 0) {\n          ret = ret.concat(this.getSubclassesOf(cd));\n        }\n      }\n      return ret;\n    };\n\n    Model.prototype.getAncestorsOf = function(cls) {\n      var clazz, parents;\n      clazz = cls && cls.name ? cls : this.classes[cls];\n      if (clazz == null) {\n        throw new Error(\"\" + cls + \" is not a table\");\n      }\n      parents = clazz.parents();\n      return parents.filter((function(_this) {\n        return function(p) {\n          return _this.classes[p];\n        };\n      })(this)).reduce(((function(_this) {\n        return function(as, p) {\n          return as.concat(_this.getAncestorsOf(p));\n        };\n      })(this)), parents);\n    };\n\n    Model.prototype.findSharedAncestor = function(classA, classB) {\n      var a_ancestry, b_ancestry, firstCommon;\n      if (classB === null || classA === null) {\n        return null;\n      }\n      if (classA === classB) {\n        return classA;\n      }\n      a_ancestry = this.getAncestorsOf(classA);\n      if (__indexOf.call(a_ancestry, classB) >= 0) {\n        return classB;\n      }\n      b_ancestry = this.getAncestorsOf(classB);\n      if (__indexOf.call(b_ancestry, classA) >= 0) {\n        return classA;\n      }\n      firstCommon = find(a_ancestry, function(a) {\n        return __indexOf.call(b_ancestry, a) >= 0;\n      });\n      return firstCommon;\n    };\n\n    Model.prototype.findCommonType = function(xs) {\n      if (xs == null) {\n        xs = [];\n      }\n      return xs.reduce(this.findSharedAncestor);\n    };\n\n    return Model;\n\n  })();\n\n  Model.prototype.makePath = Model.prototype.getPathInfo;\n\n  Model.prototype.findCommonTypeOfMultipleClasses = Model.prototype.findCommonType;\n\n  Model.load = function(data) {\n    var e;\n    try {\n      return new Model(data);\n    } catch (_error) {\n      e = _error;\n      throw new Error(\"Error loading model: \" + e);\n    }\n  };\n\n  Model.INTEGRAL_TYPES = [\"int\", \"Integer\", \"long\", \"Long\"];\n\n  Model.FRACTIONAL_TYPES = [\"double\", \"Double\", \"float\", \"Float\"];\n\n  Model.NUMERIC_TYPES = Model.INTEGRAL_TYPES.concat(Model.FRACTIONAL_TYPES);\n\n  Model.BOOLEAN_TYPES = [\"boolean\", \"Boolean\"];\n\n  intermine.Model = Model;\n\n}).call(this);\n\n},{\"./path\":7,\"./table\":13,\"./util\":15}],7:[function(_dereq_,module,exports){\n(function() {\n  var NAMES, PARSED, PathInfo, any, concatMap, copy, error, get, intermine, makeKey, set, success, utils, withCB,\n    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },\n    __slice = [].slice,\n    __indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };\n\n  intermine = exports;\n\n  utils = _dereq_('./util');\n\n  withCB = utils.withCB, concatMap = utils.concatMap, get = utils.get, any = utils.any, set = utils.set, copy = utils.copy, success = utils.success, error = utils.error;\n\n  NAMES = {};\n\n  PARSED = {};\n\n  makeKey = function(model, path, subclasses) {\n    var k, v, _ref;\n    return \"\" + (model != null ? model.name : void 0) + \"|\" + (model != null ? (_ref = model.service) != null ? _ref.root : void 0 : void 0) + \"|\" + path + \":\" + ((function() {\n      var _results;\n      _results = [];\n      for (k in subclasses) {\n        v = subclasses[k];\n        _results.push(\"\" + k + \"=\" + v);\n      }\n      return _results;\n    })());\n  };\n\n  PathInfo = (function() {\n    function PathInfo(_arg) {\n      var _i, _ref;\n      this.root = _arg.root, this.model = _arg.model, this.descriptors = _arg.descriptors, this.subclasses = _arg.subclasses, this.displayName = _arg.displayName, this.ident = _arg.ident;\n      this.allDescriptors = __bind(this.allDescriptors, this);\n      this.getChildNodes = __bind(this.getChildNodes, this);\n      this.getDisplayName = __bind(this.getDisplayName, this);\n      this.isa = __bind(this.isa, this);\n      this.append = __bind(this.append, this);\n      this.getParent = __bind(this.getParent, this);\n      this.getEndClass = __bind(this.getEndClass, this);\n      this.containsCollection = __bind(this.containsCollection, this);\n      this.isCollection = __bind(this.isCollection, this);\n      this.isReverseReference = __bind(this.isReverseReference, this);\n      this.isReference = __bind(this.isReference, this);\n      this.isClass = __bind(this.isClass, this);\n      this.isAttribute = __bind(this.isAttribute, this);\n      this.isRoot = __bind(this.isRoot, this);\n      _ref = this.descriptors, this.mid = 2 <= _ref.length ? __slice.call(_ref, 0, _i = _ref.length - 1) : (_i = 0, []), this.end = _ref[_i++];\n      if (this.ident == null) {\n        this.ident = makeKey(this.model, this, this.subclasses);\n      }\n    }\n\n    PathInfo.prototype.isRoot = function() {\n      return this.descriptors.length === 0;\n    };\n\n    PathInfo.prototype.isAttribute = function() {\n      return (this.end != null) && !this.isReference();\n    };\n\n    PathInfo.prototype.isClass = function() {\n      return this.isRoot() || this.isReference();\n    };\n\n    PathInfo.prototype.isReference = function() {\n      var _ref;\n      return ((_ref = this.end) != null ? _ref.referencedType : void 0) != null;\n    };\n\n    PathInfo.prototype.isReverseReference = function() {\n      var gp, p, referencedType, reverseReference, _ref;\n      if (this.isReference() && (this.mid.length > 0)) {\n        _ref = this.end, reverseReference = _ref.reverseReference, referencedType = _ref.referencedType;\n        p = this.getParent();\n        gp = p.getParent();\n        return (referencedType != null) && (gp.isa(referencedType)) && (p.end.name === reverseReference);\n      }\n      return false;\n    };\n\n    PathInfo.prototype.isCollection = function() {\n      var _ref, _ref1;\n      return (_ref = (_ref1 = this.end) != null ? _ref1.isCollection : void 0) != null ? _ref : false;\n    };\n\n    PathInfo.prototype.containsCollection = function() {\n      return any(this.descriptors, function(x) {\n        return x.isCollection;\n      });\n    };\n\n    PathInfo.prototype.getEndClass = function() {\n      var _ref;\n      return this.model.classes[this.subclasses[this.toString()] || ((_ref = this.end) != null ? _ref.referencedType : void 0)] || this.root;\n    };\n\n    PathInfo.prototype.getParent = function() {\n      var data;\n      if (this.isRoot()) {\n        throw new Error(\"Root paths do not have parents\");\n      }\n      data = {\n        root: this.root,\n        model: this.model,\n        descriptors: this.mid.slice(),\n        subclasses: this.subclasses\n      };\n      return new PathInfo(data);\n    };\n\n    PathInfo.prototype.append = function(attr) {\n      var data, fld;\n      if (this.isAttribute()) {\n        throw new Error(\"\" + this + \" is an attribute.\");\n      }\n      fld = typeof attr === 'string' ? this.getType().fields[attr] : attr;\n      if (fld == null) {\n        throw new Error(\"\" + attr + \" is not a field of \" + (this.getType()));\n      }\n      data = {\n        root: this.root,\n        model: this.model,\n        descriptors: this.descriptors.concat([fld]),\n        subclasses: this.subclasses\n      };\n      return new PathInfo(data);\n    };\n\n    PathInfo.prototype.isa = function(clazz) {\n      var name, type;\n      if (clazz == null) {\n        return false;\n      }\n      if (this.isAttribute()) {\n        return this.getType() === clazz;\n      } else {\n        name = clazz.name ? clazz.name : '' + clazz;\n        type = this.getType();\n        return (name === type.name) || (__indexOf.call(this.model.getAncestorsOf(type), name) >= 0);\n      }\n    };\n\n    PathInfo.prototype.getDisplayName = function(cb) {\n      var cached, custom, params, path;\n      if (custom = this.displayName) {\n        return success(custom);\n      }\n      if (this.namePromise == null) {\n        this.namePromise = (cached = NAMES[this.ident]) ? success(cached) : this.isRoot() && this.root.displayName ? success(this.root.displayName) : this.model.service == null ? error(\"No service\") : (path = 'model' + (concatMap(function(d) {\n          return '/' + d.name;\n        }))(this.allDescriptors()), params = (set({\n          format: 'json'\n        }))(copy(this.subclasses)), this.model.service.get(path, params).then(get('display')).then((function(_this) {\n          return function(n) {\n            var _name;\n            return NAMES[_name = _this.ident] != null ? NAMES[_name] : NAMES[_name] = n;\n          };\n        })(this)));\n      }\n      return withCB(cb, this.namePromise);\n    };\n\n    PathInfo.prototype.getChildNodes = function() {\n      var fld, name, _ref, _ref1, _results;\n      _ref1 = ((_ref = this.getEndClass()) != null ? _ref.fields : void 0) || {};\n      _results = [];\n      for (name in _ref1) {\n        fld = _ref1[name];\n        _results.push(this.append(fld));\n      }\n      return _results;\n    };\n\n    PathInfo.prototype.allDescriptors = function() {\n      return [this.root].concat(this.descriptors);\n    };\n\n    PathInfo.prototype.toString = function() {\n      return this.allDescriptors().map(get('name')).join('.');\n    };\n\n    PathInfo.prototype.equals = function(other) {\n      return this === other || (this.ident && (other != null ? other.ident : void 0) === this.ident);\n    };\n\n    PathInfo.prototype.getType = function() {\n      var _ref, _ref1;\n      return ((_ref = this.end) != null ? (_ref1 = _ref.type) != null ? _ref1.replace(/java\\.lang\\./, '') : void 0 : void 0) || this.getEndClass();\n    };\n\n    return PathInfo;\n\n  })();\n\n  PathInfo.prototype.toPathString = PathInfo.prototype.toString;\n\n  PathInfo.parse = function(model, path, subclasses) {\n    var cached, cd, descriptors, fld, ident, keyPath, part, parts, root;\n    if (subclasses == null) {\n      subclasses = {};\n    }\n    ident = makeKey(model, path, subclasses);\n    if (cached = PARSED[ident]) {\n      return cached;\n    }\n    parts = (path + '').split('.');\n    root = cd = model.classes[parts.shift()];\n    keyPath = root.name;\n    descriptors = (function() {\n      var _i, _len, _ref, _results;\n      _results = [];\n      for (_i = 0, _len = parts.length; _i < _len; _i++) {\n        part = parts[_i];\n        fld = (cd != null ? cd.fields[part] : void 0) || ((_ref = (cd = model.classes[subclasses[keyPath]])) != null ? _ref.fields[part] : void 0);\n        if (!fld) {\n          throw new Error(\"Could not find \" + part + \" in \" + cd + \" when parsing \" + path);\n        }\n        keyPath += \".\" + part;\n        cd = model.classes[fld.type || fld.referencedType];\n        _results.push(fld);\n      }\n      return _results;\n    })();\n    return PARSED[ident] = new PathInfo({\n      root: root,\n      model: model,\n      descriptors: descriptors,\n      subclasses: subclasses,\n      ident: ident\n    });\n  };\n\n  PathInfo.flushCache = function() {\n    PARSED = {};\n    return NAMES = {};\n  };\n\n  intermine.PathInfo = PathInfo;\n\n}).call(this);\n\n},{\"./util\":15}],8:[function(_dereq_,module,exports){\n(function() {\n  var Promise;\n\n  Promise = _dereq_('es6-promise').Promise;\n\n  module.exports = Promise;\n\n}).call(this);\n\n},{\"es6-promise\":22}],9:[function(_dereq_,module,exports){\n(function() {\n  var BASIC_ATTRS, CODES, Events, LIST_PIPE, Query, REQUIRES_VERSION, RESULTS_METHODS, SIMPLE_ATTRS, bioUriArgs, conAttrs, conStr, conToJSON, conValStr, concatMap, copyCon, decapitate, didntRemove, f, filter, fold, get, get_canonical_op, headLess, id, idConStr, intermine, interpretConArray, interpretConstraint, invoke, merge, mth, multiConStr, noUndefVals, noValueConStr, partition, removeIrrelevantSortOrders, simpleConStr, stringToSortOrder, stringifySortOrder, toQueryString, typeConStr, union, utils, withCB, _fn, _get_data_fetcher, _i, _j, _len, _len1, _ref,\n    __indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; },\n    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },\n    __slice = [].slice,\n    __hasProp = {}.hasOwnProperty;\n\n  Events = _dereq_('backbone-events-standalone');\n\n  intermine = exports;\n\n  intermine.xml = _dereq_('./xml');\n\n  utils = _dereq_('./util');\n\n  REQUIRES_VERSION = utils.REQUIRES_VERSION, withCB = utils.withCB, merge = utils.merge, filter = utils.filter, partition = utils.partition, fold = utils.fold, concatMap = utils.concatMap, id = utils.id, get = utils.get, invoke = utils.invoke;\n\n  toQueryString = utils.querystring;\n\n  get_canonical_op = function(orig) {\n    var canonical;\n    canonical = (orig != null ? orig.toLowerCase : void 0) != null ? Query.OP_DICT[orig.toLowerCase()] : null;\n    if (!canonical) {\n      throw new Error(\"Illegal constraint operator: \" + orig);\n    }\n    return canonical;\n  };\n\n  BASIC_ATTRS = ['path', 'op', 'code'];\n\n  SIMPLE_ATTRS = BASIC_ATTRS.concat(['value', 'extraValue']);\n\n  RESULTS_METHODS = ['rowByRow', 'eachRow', 'recordByRecord', 'eachRecord', 'records', 'rows', 'table', 'tableRows', 'values'];\n\n  LIST_PIPE = function(service) {\n    return utils.compose(service.fetchList, get('listName'));\n  };\n\n  CODES = ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z'];\n\n  decapitate = function(x) {\n    if (x == null) {\n      x = '';\n    }\n    return x.substr(x.indexOf('.'));\n  };\n\n  conValStr = function(v) {\n    if (v != null) {\n      return \"<value>\" + (utils.escape(v)) + \"</value>\";\n    } else {\n      return \"<nullValue/>\";\n    }\n  };\n\n  conAttrs = function(c, names) {\n    var k, v;\n    return ((function() {\n      var _results;\n      _results = [];\n      for (k in c) {\n        v = c[k];\n        if ((__indexOf.call(names, k) >= 0)) {\n          _results.push(\"\" + k + \"=\\\"\" + (utils.escape(v)) + \"\\\" \");\n        }\n      }\n      return _results;\n    })()).join('');\n  };\n\n  noValueConStr = function(c) {\n    return \"<constraint \" + (conAttrs(c, BASIC_ATTRS)) + \"/>\";\n  };\n\n  typeConStr = function(c) {\n    return \"<constraint \" + (conAttrs(c, ['path', 'type'])) + \"/>\";\n  };\n\n  simpleConStr = function(c) {\n    return \"<constraint \" + (conAttrs(c, SIMPLE_ATTRS)) + \"/>\";\n  };\n\n  multiConStr = function(c) {\n    return \"<constraint \" + (conAttrs(c, BASIC_ATTRS)) + \">\" + (concatMap(conValStr)(c.values)) + \"</constraint>\";\n  };\n\n  idConStr = function(c) {\n    return \"<constraint \" + (conAttrs(c, BASIC_ATTRS)) + \"ids=\\\"\" + (c.ids.join(',')) + \"\\\"/>\";\n  };\n\n  conStr = function(c) {\n    var _ref;\n    if (c.values != null) {\n      return multiConStr(c);\n    } else if (c.ids != null) {\n      return idConStr(c);\n    } else if (c.op == null) {\n      return typeConStr(c);\n    } else if (_ref = c.op, __indexOf.call(Query.NULL_OPS, _ref) >= 0) {\n      return noValueConStr(c);\n    } else {\n      return simpleConStr(c);\n    }\n  };\n\n  headLess = function(path) {\n    return path.replace(/^[^\\.]+\\./, '');\n  };\n\n  copyCon = function(con) {\n    var code, editable, extraValue, ids, op, path, switchable, switched, type, value, values;\n    path = con.path, type = con.type, op = con.op, value = con.value, values = con.values, extraValue = con.extraValue, ids = con.ids, code = con.code, editable = con.editable, switched = con.switched, switchable = con.switchable;\n    ids = ids != null ? ids.slice() : void 0;\n    values = values != null ? values.slice() : void 0;\n    return noUndefVals({\n      path: path,\n      type: type,\n      op: op,\n      value: value,\n      values: values,\n      extraValue: extraValue,\n      ids: ids,\n      code: code,\n      editable: editable,\n      switched: switched,\n      switchable: switchable\n    });\n  };\n\n  conToJSON = function(con) {\n    var copy;\n    copy = copyCon(con);\n    copy.path = headLess(copy.path);\n    return copy;\n  };\n\n  noUndefVals = function(x) {\n    var k, v;\n    for (k in x) {\n      v = x[k];\n      if (v == null) {\n        delete x[k];\n      }\n    }\n    return x;\n  };\n\n  didntRemove = function(orig, reduced) {\n    return \"Did not remove a single constraint. original = \" + orig + \", reduced = \" + reduced;\n  };\n\n  interpretConstraint = function(path, con) {\n    var constraint, k, keys, v, x, _ref, _ref1;\n    constraint = {\n      path: path\n    };\n    if (con === null) {\n      constraint.op = 'IS NULL';\n    } else if (utils.isArray(con)) {\n      constraint.op = 'ONE OF';\n      constraint.values = con;\n    } else if ((_ref = typeof con) === 'string' || _ref === 'number' || _ref === 'boolean') {\n      if (_ref1 = typeof con.toUpperCase === \"function\" ? con.toUpperCase() : void 0, __indexOf.call(Query.NULL_OPS, _ref1) >= 0) {\n        constraint.op = con;\n      } else {\n        constraint.op = '=';\n        constraint.value = con;\n      }\n    } else {\n      keys = (function() {\n        var _results;\n        _results = [];\n        for (k in con) {\n          x = con[k];\n          _results.push(k);\n        }\n        return _results;\n      })();\n      if (__indexOf.call(keys, 'isa') >= 0) {\n        if (utils.isArray(con.isa)) {\n          constraint.op = k;\n          constraint.values = con.isa;\n        } else {\n          constraint.type = con.isa;\n        }\n      } else {\n        if (__indexOf.call(keys, 'extraValue') >= 0) {\n          constraint.extraValue = con.extraValue;\n        }\n        for (k in con) {\n          v = con[k];\n          if (!(k !== 'extraValue')) {\n            continue;\n          }\n          constraint.op = k;\n          if (utils.isArray(v)) {\n            constraint.values = v;\n          } else {\n            constraint.value = v;\n          }\n        }\n      }\n    }\n    return constraint;\n  };\n\n  interpretConArray = function(conArgs) {\n    var a0, constraint, v, _ref;\n    conArgs = conArgs.slice();\n    constraint = {\n      path: conArgs.shift()\n    };\n    if (conArgs.length === 1) {\n      a0 = conArgs[0];\n      if (_ref = typeof a0.toUpperCase === \"function\" ? a0.toUpperCase() : void 0, __indexOf.call(Query.NULL_OPS, _ref) >= 0) {\n        constraint.op = a0;\n      } else {\n        constraint.type = a0;\n      }\n    } else if (conArgs.length >= 2) {\n      constraint.op = conArgs[0];\n      v = conArgs[1];\n      if (utils.isArray(v)) {\n        constraint.values = v;\n      } else {\n        constraint.value = v;\n      }\n      if (conArgs.length === 3) {\n        constraint.extraValue = conArgs[2];\n      }\n    }\n    return constraint;\n  };\n\n  stringifySortOrder = function(sortOrder) {\n    var oe;\n    return ((function() {\n      var _i, _len, _results;\n      _results = [];\n      for (_i = 0, _len = sortOrder.length; _i < _len; _i++) {\n        oe = sortOrder[_i];\n        _results.push(\"\" + oe.path + \" \" + oe.direction);\n      }\n      return _results;\n    })()).join(' ');\n  };\n\n  stringToSortOrder = function(str) {\n    var i, parts, pathIndices, x, _i, _len, _results;\n    if (str == null) {\n      return [];\n    }\n    parts = str.split(/\\s+/);\n    pathIndices = (function() {\n      var _i, _ref, _results;\n      _results = [];\n      for (x = _i = 0, _ref = parts.length / 2; 0 <= _ref ? _i < _ref : _i > _ref; x = 0 <= _ref ? ++_i : --_i) {\n        _results.push(x * 2);\n      }\n      return _results;\n    })();\n    _results = [];\n    for (_i = 0, _len = pathIndices.length; _i < _len; _i++) {\n      i = pathIndices[_i];\n      _results.push([parts[i], parts[i + 1]]);\n    }\n    return _results;\n  };\n\n  removeIrrelevantSortOrders = function() {\n    var oe, oldOrder;\n    oldOrder = this.sortOrder;\n    this.sortOrder = (function() {\n      var _i, _len, _results;\n      _results = [];\n      for (_i = 0, _len = oldOrder.length; _i < _len; _i++) {\n        oe = oldOrder[_i];\n        if (this.isRelevant(oe.path)) {\n          _results.push(oe);\n        }\n      }\n      return _results;\n    }).call(this);\n    if (oldOrder.length !== this.sortOrder.length) {\n      return this.trigger('change:sortorder change:orderby', this.sortOrder.slice());\n    }\n  };\n\n  Query = (function() {\n    var addPI, cAttrs, kids, parseSummary, qAttrs, scFold, toAttrPairs, toPathAndType, xmlAttr;\n\n    Query.JOIN_STYLES = ['INNER', 'OUTER'];\n\n    Query.BIO_FORMATS = ['gff3', 'fasta', 'bed'];\n\n    Query.NULL_OPS = ['IS NULL', 'IS NOT NULL'];\n\n    Query.ATTRIBUTE_VALUE_OPS = [\"=\", \"!=\", \">\", \">=\", \"<\", \"<=\", \"CONTAINS\", \"LIKE\", \"NOT LIKE\"];\n\n    Query.MULTIVALUE_OPS = ['ONE OF', 'NONE OF'];\n\n    Query.RANGE_OPS = ['OVERLAPS', 'DOES NOT OVERLAP', 'OUTSIDE', 'WITHIN', 'CONTAINS', 'DOES NOT CONTAIN'];\n\n    Query.TERNARY_OPS = ['LOOKUP'];\n\n    Query.LOOP_OPS = ['=', '!='];\n\n    Query.LIST_OPS = ['IN', 'NOT IN'];\n\n    Query.OP_DICT = {\n      '=': '=',\n      '==': '==',\n      'eq': '=',\n      'eqq': '==',\n      '!=': '!=',\n      'ne': '!=',\n      '>': '>',\n      'gt': '>',\n      '>=': '>=',\n      'ge': '>=',\n      '<': '<',\n      'lt': '<',\n      '<=': '<=',\n      'le': '<=',\n      'contains': 'CONTAINS',\n      'CONTAINS': 'CONTAINS',\n      'does not contain': 'DOES NOT CONTAIN',\n      'DOES NOT CONTAIN': 'DOES NOT CONTAIN',\n      'like': 'LIKE',\n      'LIKE': 'LIKE',\n      'not like': 'NOT LIKE',\n      'NOT LIKE': 'NOT LIKE',\n      'lookup': 'LOOKUP',\n      'IS NULL': 'IS NULL',\n      'is null': 'IS NULL',\n      'IS NOT NULL': 'IS NOT NULL',\n      'is not null': 'IS NOT NULL',\n      'ONE OF': 'ONE OF',\n      'one of': 'ONE OF',\n      'NONE OF': 'NONE OF',\n      'none of': 'NONE OF',\n      'in': 'IN',\n      'not in': 'NOT IN',\n      'IN': 'IN',\n      'NOT IN': 'NOT IN',\n      'WITHIN': 'WITHIN',\n      'within': 'WITHIN',\n      'OVERLAPS': 'OVERLAPS',\n      'overlaps': 'OVERLAPS',\n      'DOES NOT OVERLAP': 'DOES NOT OVERLAP',\n      'does not overlap': 'DOES NOT OVERLAP',\n      'OUTSIDE': 'OUTSIDE',\n      'outside': 'OUTSIDE',\n      'ISA': 'ISA',\n      'isa': 'ISA'\n    };\n\n    qAttrs = ['name', 'view', 'sortOrder', 'constraintLogic', 'title', 'description', 'comment'];\n\n    cAttrs = ['path', 'type', 'op', 'code', 'value', 'ids'];\n\n    toAttrPairs = function(el, attrs) {\n      var x, _i, _len, _results;\n      _results = [];\n      for (_i = 0, _len = attrs.length; _i < _len; _i++) {\n        x = attrs[_i];\n        if (el.hasAttribute(x)) {\n          _results.push([x, el.getAttribute(x)]);\n        }\n      }\n      return _results;\n    };\n\n    kids = function(el, name) {\n      var kid, _i, _len, _ref, _results;\n      _ref = el.getElementsByTagName(name);\n      _results = [];\n      for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n        kid = _ref[_i];\n        _results.push(kid);\n      }\n      return _results;\n    };\n\n    xmlAttr = function(name) {\n      return function(el) {\n        return el.getAttribute(name);\n      };\n    };\n\n    Query.fromXML = function(xml) {\n      var con, dom, j, pathOf, q, query, styleOf;\n      dom = intermine.xml.parse(xml);\n      query = kids(dom, 'query')[0] || kids(dom, 'template')[0];\n      if (!query) {\n        throw new Error(\"no query in xml\");\n      }\n      pathOf = xmlAttr('path');\n      styleOf = xmlAttr('style');\n      q = utils.pairsToObj(toAttrPairs(query, qAttrs));\n      q.view = q.view.split(/\\s+/);\n      q.sortOrder = stringToSortOrder(q.sortOrder);\n      q.joins = (function() {\n        var _i, _len, _ref, _results;\n        _ref = kids(query, 'join');\n        _results = [];\n        for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n          j = _ref[_i];\n          if (styleOf(j) === 'OUTER') {\n            _results.push(pathOf(j));\n          }\n        }\n        return _results;\n      })();\n      q.constraints = (function() {\n        var _i, _len, _ref, _results;\n        _ref = kids(query, 'constraint');\n        _results = [];\n        for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n          con = _ref[_i];\n          _results.push((function(con) {\n            var c, tn, v, values, x;\n            c = utils.pairsToObj(toAttrPairs(con, cAttrs));\n            if (c.ids != null) {\n              c.ids = (function() {\n                var _j, _len1, _ref1, _results1;\n                _ref1 = c.ids.split(',');\n                _results1 = [];\n                for (_j = 0, _len1 = _ref1.length; _j < _len1; _j++) {\n                  x = _ref1[_j];\n                  _results1.push(parseInt(x, 10));\n                }\n                return _results1;\n              })();\n            }\n            values = kids(con, 'value');\n            if (values.length) {\n              c.values = (function() {\n                var _j, _len1, _results1;\n                _results1 = [];\n                for (_j = 0, _len1 = values.length; _j < _len1; _j++) {\n                  v = values[_j];\n                  _results1.push(((function() {\n                    var _k, _len2, _ref1, _results2;\n                    _ref1 = v.childNodes;\n                    _results2 = [];\n                    for (_k = 0, _len2 = _ref1.length; _k < _len2; _k++) {\n                      tn = _ref1[_k];\n                      _results2.push(tn.data);\n                    }\n                    return _results2;\n                  })()).join(''));\n                }\n                return _results1;\n              })();\n            }\n            return c;\n          })(con));\n        }\n        return _results;\n      })();\n      return q;\n    };\n\n    Query.prototype.constraints = [];\n\n    Query.prototype.views = [];\n\n    Query.prototype.joins = {};\n\n    Query.prototype.constraintLogic = '';\n\n    Query.prototype.sortOrder = '';\n\n    Query.prototype.name = null;\n\n    Query.prototype.title = null;\n\n    Query.prototype.comment = null;\n\n    Query.prototype.description = null;\n\n    function Query(properties, service, _arg) {\n      var model, prop, summaryFields, _i, _len, _ref, _ref1, _ref10, _ref2, _ref3, _ref4, _ref5, _ref6, _ref7, _ref8, _ref9;\n      _ref = _arg != null ? _arg : {}, model = _ref.model, summaryFields = _ref.summaryFields;\n      this.addConstraint = __bind(this.addConstraint, this);\n      this.expandStar = __bind(this.expandStar, this);\n      this.adjustPath = __bind(this.adjustPath, this);\n      this.select = __bind(this.select, this);\n      if (properties == null) {\n        properties = {};\n      }\n      this.constraints = [];\n      this.views = [];\n      this.joins = {};\n      this.displayNames = utils.copy((_ref1 = (_ref2 = properties.displayNames) != null ? _ref2 : properties.aliases) != null ? _ref1 : {});\n      _ref3 = ['name', 'title', 'comment', 'description', 'type'];\n      for (_i = 0, _len = _ref3.length; _i < _len; _i++) {\n        prop = _ref3[_i];\n        if (properties[prop] != null) {\n          this[prop] = properties[prop];\n        }\n      }\n      this.service = service != null ? service : {};\n      this.model = (_ref4 = model != null ? model : properties.model) != null ? _ref4 : {};\n      this.summaryFields = (_ref5 = summaryFields != null ? summaryFields : properties.summaryFields) != null ? _ref5 : {};\n      this.root = (_ref6 = properties.root) != null ? _ref6 : properties.from;\n      this.maxRows = (_ref7 = (_ref8 = properties.size) != null ? _ref8 : properties.limit) != null ? _ref7 : properties.maxRows;\n      this.start = (_ref9 = (_ref10 = properties.start) != null ? _ref10 : properties.offset) != null ? _ref9 : 0;\n      this.select(properties.views || properties.view || properties.select || []);\n      this.addConstraints(properties.constraints || properties.where || []);\n      this.addJoins(properties.joins || properties.join || []);\n      this.orderBy(properties.sortOrder || properties.orderBy || []);\n      if (properties.constraintLogic != null) {\n        this.constraintLogic = properties.constraintLogic;\n      }\n      this.on('change:views', removeIrrelevantSortOrders, this);\n    }\n\n    Query.prototype.removeFromSelect = function(unwanted) {\n      var mapFn, so, uw, v;\n      if (unwanted == null) {\n        unwanted = [];\n      }\n      unwanted = utils.stringList(unwanted);\n      mapFn = utils.compose(this.expandStar, this.adjustPath);\n      unwanted = utils.flatten((function() {\n        var _i, _len, _results;\n        _results = [];\n        for (_i = 0, _len = unwanted.length; _i < _len; _i++) {\n          uw = unwanted[_i];\n          _results.push(mapFn(uw));\n        }\n        return _results;\n      })());\n      this.sortOrder = (function() {\n        var _i, _len, _ref, _ref1, _results;\n        _ref = this.sortOrder;\n        _results = [];\n        for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n          so = _ref[_i];\n          if (!(_ref1 = so.path, __indexOf.call(unwanted, _ref1) >= 0)) {\n            _results.push(so);\n          }\n        }\n        return _results;\n      }).call(this);\n      this.views = (function() {\n        var _i, _len, _ref, _results;\n        _ref = this.views;\n        _results = [];\n        for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n          v = _ref[_i];\n          if (!(__indexOf.call(unwanted, v) >= 0)) {\n            _results.push(v);\n          }\n        }\n        return _results;\n      }).call(this);\n      this.trigger('remove:view', unwanted);\n      this.trigger('change:views', this.views);\n      return this.trigger('change', this.views);\n    };\n\n    Query.prototype.removeConstraint = function(con, silent) {\n      var c, iscon, orig, reduced;\n      if (silent == null) {\n        silent = false;\n      }\n      orig = this.constraints;\n      iscon = typeof con === 'string' ? (function(c) {\n        return c.code === con;\n      }) : (function(c) {\n        var _ref, _ref1;\n        return (c.path === con.path) && (c.op === con.op) && (c.value === con.value) && (c.extraValue === con.extraValue) && (con.type === c.type) && (((_ref = c.values) != null ? _ref.join('%%') : void 0) === ((_ref1 = con.values) != null ? _ref1.join('%%') : void 0));\n      });\n      reduced = (function() {\n        var _i, _len, _results;\n        _results = [];\n        for (_i = 0, _len = orig.length; _i < _len; _i++) {\n          c = orig[_i];\n          if (!iscon(c)) {\n            _results.push(c);\n          }\n        }\n        return _results;\n      })();\n      if (reduced.length !== orig.length - 1) {\n        throw new Error(didntRemove(orig, reduced));\n      }\n      this.constraints = reduced;\n      if (!silent) {\n        this.trigger('change:constraints');\n        this.trigger('change');\n        return this.trigger('removed:constraint', utils.find(orig, iscon));\n      }\n    };\n\n    Query.prototype.addToSelect = function(views, opts) {\n      var dups, mapFn, p, toAdd, v, x, _ref, _ref1;\n      if (views == null) {\n        views = [];\n      }\n      if (opts == null) {\n        opts = {};\n      }\n      views = utils.stringList(views);\n      mapFn = utils.compose(this.expandStar, this.adjustPath);\n      toAdd = utils.flatten((function() {\n        var _i, _len, _results;\n        _results = [];\n        for (_i = 0, _len = views.length; _i < _len; _i++) {\n          v = views[_i];\n          _results.push(mapFn(v));\n        }\n        return _results;\n      })());\n      dups = (function() {\n        var _i, _len, _results;\n        _results = [];\n        for (_i = 0, _len = toAdd.length; _i < _len; _i++) {\n          p = toAdd[_i];\n          if (__indexOf.call(this.views, p) >= 0) {\n            _results.push(p);\n          }\n        }\n        return _results;\n      }).call(this);\n      if (dups.length) {\n        throw new Error(\"\" + dups + \" already in the select list\");\n      }\n      dups = (function() {\n        var _i, _len, _results;\n        _results = [];\n        for (_i = 0, _len = toAdd.length; _i < _len; _i++) {\n          p = toAdd[_i];\n          if (((function() {\n            var _j, _len1, _results1;\n            _results1 = [];\n            for (_j = 0, _len1 = toAdd.length; _j < _len1; _j++) {\n              x = toAdd[_j];\n              if (x === p) {\n                _results1.push(x);\n              }\n            }\n            return _results1;\n          })()).length > 1) {\n            _results.push(p);\n          }\n        }\n        return _results;\n      })();\n      if (dups.length) {\n        throw new Error(\"\" + dups + \" specified multiple times as arguments to addToSelect\");\n      }\n      (_ref = this.views).push.apply(_ref, toAdd);\n      if (opts.silent) {\n        opts.events = ((_ref1 = opts.events) != null ? _ref1 : []).concat(['change', 'add:view', 'change:views']);\n      } else {\n        this.trigger('add:view change:views', toAdd);\n        this.trigger('change');\n      }\n      return this;\n    };\n\n    Query.prototype.select = function(views, opts) {\n      var e, oldViews;\n      oldViews = this.views.slice();\n      try {\n        this.views = [];\n        this.addToSelect(views, opts);\n      } catch (_error) {\n        e = _error;\n        this.views = oldViews;\n        utils.error(e);\n      }\n      return this;\n    };\n\n    Query.prototype.adjustPath = function(path) {\n      path = path && path.name ? path.name : \"\" + path;\n      if (this.root != null) {\n        if (!path.match(\"^\" + this.root)) {\n          path = this.root + \".\" + path;\n        }\n      } else {\n        this.root = path.split('.')[0];\n      }\n      return path;\n    };\n\n    Query.prototype.getPossiblePaths = function(depth, allowReverseReferences, predicate) {\n      var getPaths, key, ret, test, _base;\n      if (depth == null) {\n        depth = 3;\n      }\n      if (allowReverseReferences == null) {\n        allowReverseReferences = true;\n      }\n      if (predicate == null) {\n        predicate = null;\n      }\n      test = typeof predicate === 'string' ? function(p) {\n        return p[predicate]();\n      } : predicate;\n      getPaths = (function(_this) {\n        return function(root, d) {\n          var cd, field, name, others, path, subPaths;\n          path = _this.getPathInfo(root);\n          if ((!allowReverseReferences) && path.isReverseReference()) {\n            return [];\n          } else if (path.isAttribute()) {\n            return [path];\n          } else {\n            cd = path.getType();\n            subPaths = concatMap(function(ref) {\n              return getPaths(\"\" + root + \".\" + ref.name, d - 1);\n            });\n            others = cd && (d > 0) ? subPaths((function() {\n              var _ref, _results;\n              _ref = cd.fields;\n              _results = [];\n              for (name in _ref) {\n                field = _ref[name];\n                _results.push(field);\n              }\n              return _results;\n            })()) : [];\n            return [path].concat(others);\n          }\n        };\n      })(this);\n      key = \"\" + depth + \"-\" + allowReverseReferences;\n      if (this._possiblePaths == null) {\n        this._possiblePaths = {};\n      }\n      ret = ((_base = this._possiblePaths)[key] != null ? _base[key] : _base[key] = getPaths(this.root, depth)).slice();\n      if (test != null) {\n        return ret.filter(test);\n      } else {\n        return ret;\n      }\n    };\n\n    Query.prototype.getPathInfo = function(path) {\n      var adjusted, pi, _ref;\n      adjusted = this.adjustPath(path);\n      pi = (_ref = this.model) != null ? typeof _ref.getPathInfo === \"function\" ? _ref.getPathInfo(adjusted, this.getSubclasses()) : void 0 : void 0;\n      if (pi && adjusted in this.displayNames) {\n        pi.displayName = this.displayNames[adjusted];\n      }\n      return pi;\n    };\n\n    Query.prototype.makePath = Query.prototype.getPathInfo;\n\n    toPathAndType = function(c) {\n      return [c.path, c.type];\n    };\n\n    scFold = utils.compose(utils.pairsToObj, utils.map(toPathAndType), filter(get('type')));\n\n    Query.prototype.getSubclasses = function() {\n      return scFold(this.constraints);\n    };\n\n    Query.prototype.getType = function(path) {\n      return this.getPathInfo(path).getType();\n    };\n\n    Query.prototype.getViewNodes = function() {\n      var p, toParentNode;\n      toParentNode = (function(_this) {\n        return function(v) {\n          return _this.getPathInfo(v).getParent();\n        };\n      })(this);\n      return utils.uniqBy(String, (function() {\n        var _i, _len, _ref, _results;\n        _ref = this.views;\n        _results = [];\n        for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n          p = _ref[_i];\n          _results.push(toParentNode(p));\n        }\n        return _results;\n      }).call(this));\n    };\n\n    Query.prototype.isInView = function(path) {\n      var pi, pstr, _ref;\n      pi = this.getPathInfo(path);\n      if (!pi) {\n        throw new Error(\"Invalid path: \" + path);\n      }\n      if (pi.isAttribute()) {\n        return _ref = pi.toString(), __indexOf.call(this.views, _ref) >= 0;\n      } else {\n        pstr = pi.toString();\n        return utils.any(this.getViewNodes(), function(n) {\n          return n.toString() === pstr;\n        });\n      }\n    };\n\n    Query.prototype.isConstrained = function(path, includeAttrs) {\n      var pi, test;\n      if (includeAttrs == null) {\n        includeAttrs = false;\n      }\n      pi = this.getPathInfo(path);\n      if (!pi) {\n        throw new Error(\"Invalid path: \" + path);\n      }\n      test = function(c) {\n        return (c.op != null) && c.path === pi.toString();\n      };\n      if ((!pi.isAttribute()) && includeAttrs) {\n        test = (function(_this) {\n          return function(c) {\n            return (c.op != null) && (c.path === pi.toString() || pi.equals(_this.getPathInfo(c.path).getParent()));\n          };\n        })(this);\n      }\n      return utils.any(this.constraints, test);\n    };\n\n    Query.prototype.canHaveMultipleValues = function(path) {\n      return this.getPathInfo(path).containsCollection();\n    };\n\n    Query.prototype.getQueryNodes = function() {\n      var c, constrainedNodes, pi, viewNodes;\n      viewNodes = this.getViewNodes();\n      constrainedNodes = (function() {\n        var _i, _len, _ref, _results;\n        _ref = this.constraints;\n        _results = [];\n        for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n          c = _ref[_i];\n          if (!(c.type == null)) {\n            continue;\n          }\n          pi = this.getPathInfo(c.path);\n          if (pi.isAttribute()) {\n            _results.push(pi.getParent());\n          } else {\n            _results.push(pi);\n          }\n        }\n        return _results;\n      }).call(this);\n      return utils.uniqBy(String, viewNodes.concat(constrainedNodes));\n    };\n\n    Query.prototype.isInQuery = function(p) {\n      var c, pi, pstr, _i, _len, _ref;\n      pi = this.getPathInfo(p);\n      if (pi) {\n        pstr = pi.toPathString();\n        _ref = this.views.concat((function() {\n          var _j, _len, _ref, _results;\n          _ref = this.constraints;\n          _results = [];\n          for (_j = 0, _len = _ref.length; _j < _len; _j++) {\n            c = _ref[_j];\n            if (c.type == null) {\n              _results.push(c.path);\n            }\n          }\n          return _results;\n        }).call(this));\n        for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n          p = _ref[_i];\n          if (0 === p.indexOf(pstr)) {\n            return true;\n          }\n        }\n        return false;\n      }\n      return true;\n    };\n\n    Query.prototype.isRelevant = function(path) {\n      var nodes, pi, sought;\n      pi = this.getPathInfo(path);\n      if (pi.isAttribute()) {\n        pi = pi.getParent();\n      }\n      sought = pi.toString();\n      nodes = this.getViewNodes();\n      return utils.any(nodes, function(n) {\n        return n.toPathString() === sought;\n      });\n    };\n\n    Query.prototype.expandStar = function(path) {\n      var attrViews, cd, expand, fn, n, name, pathStem, starViews;\n      if (/\\*$/.test(path)) {\n        pathStem = path.substr(0, path.lastIndexOf('.'));\n        expand = function(x) {\n          return pathStem + x;\n        };\n        cd = this.getType(pathStem);\n        if (/\\.\\*$/.test(path)) {\n          if (cd && this.summaryFields[cd.name]) {\n            fn = utils.compose(expand, decapitate);\n            return (function() {\n              var _i, _len, _ref, _results;\n              _ref = this.summaryFields[cd.name];\n              _results = [];\n              for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n                n = _ref[_i];\n                if (!this.hasView(n)) {\n                  _results.push(fn(n));\n                }\n              }\n              return _results;\n            }).call(this);\n          }\n        } else if (/\\.\\*\\*$/.test(path)) {\n          starViews = this.expandStar(pathStem + '.*');\n          attrViews = (function() {\n            var _results;\n            _results = [];\n            for (name in cd.attributes) {\n              _results.push(expand(\".\" + name));\n            }\n            return _results;\n          })();\n          return utils.uniqBy(id, starViews.concat(attrViews));\n        }\n      }\n      return path;\n    };\n\n    Query.prototype.isOuterJoin = function(p) {\n      return this.joins[this.adjustPath(p)] === 'OUTER';\n    };\n\n    Query.prototype.hasView = function(v) {\n      var _ref;\n      return this.views && (_ref = this.adjustPath(v), __indexOf.call(this.views, _ref) >= 0);\n    };\n\n    Query.prototype.count = function(cont) {\n      if (this.service.count) {\n        return this.service.count(this, cont);\n      } else {\n        throw new Error(\"This query has no service with count functionality attached.\");\n      }\n    };\n\n    Query.prototype.appendToList = function(target, cb) {\n      var name, processor, req, toRun, updateTarget;\n      if (target != null ? target.name : void 0) {\n        name = target.name;\n        updateTarget = function(err, list) {\n          if (err == null) {\n            return target.size = list.size;\n          }\n        };\n      } else {\n        name = String(target);\n        updateTarget = null;\n      }\n      toRun = this.makeListQuery();\n      req = {\n        listName: name,\n        query: toRun.toXML()\n      };\n      processor = LIST_PIPE(this.service);\n      return withCB(updateTarget, cb, this.service.post('query/append/tolist', req).then(processor));\n    };\n\n    Query.prototype.selectPreservingImpliedConstraints = function(paths) {\n      var n, toRun, _i, _len, _ref;\n      if (paths == null) {\n        paths = [];\n      }\n      toRun = this.clone();\n      toRun.select(paths);\n      _ref = this.getViewNodes();\n      for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n        n = _ref[_i];\n        if (!this.isOuterJoined(n)) {\n          if (!(toRun.isInView(n || toRun.isConstrained(n))) && (n.getEndClass().fields.id != null)) {\n            toRun.addConstraint([n.append('id'), 'IS NOT NULL']);\n          }\n        }\n      }\n      return toRun;\n    };\n\n    Query.prototype.makeListQuery = function() {\n      var paths, _ref;\n      paths = this.views.slice();\n      if (paths.length !== 1 || !((_ref = paths[0]) != null ? _ref.match(/\\.id$/) : void 0)) {\n        paths = ['id'];\n      }\n      return this.selectPreservingImpliedConstraints(paths);\n    };\n\n    Query.prototype.saveAsList = function(options, cb) {\n      var req, toRun;\n      toRun = this.makeListQuery();\n      req = utils.copy(options);\n      req.listName = req.listName || req.name;\n      req.query = toRun.toXML();\n      if (options.tags) {\n        req.tags = options.tags.join(';');\n      }\n      return withCB(cb, this.service.post('query/tolist', req).then(LIST_PIPE(this.service)));\n    };\n\n    Query.prototype.summarise = function(path, limit, cont) {\n      return this.filterSummary(path, '', limit, cont);\n    };\n\n    Query.prototype.summarize = function() {\n      var args;\n      args = 1 <= arguments.length ? __slice.call(arguments, 0) : [];\n      return this.summarise.apply(this, args);\n    };\n\n    parseSummary = function(data) {\n      var isNumeric, r, stats, _i, _len, _ref, _ref1;\n      isNumeric = ((_ref = data.results[0]) != null ? _ref.max : void 0) != null;\n      _ref1 = data.results;\n      for (_i = 0, _len = _ref1.length; _i < _len; _i++) {\n        r = _ref1[_i];\n        r.count = parseInt(r.count, 10);\n      }\n      stats = {\n        uniqueValues: data.uniqueValues,\n        filteredCount: data.filteredCount\n      };\n      if (isNumeric) {\n        stats = merge(stats, data.results[0]);\n      }\n      data.stats = stats;\n      return data;\n    };\n\n    Query.prototype.filterSummary = function(path, term, limit, cont) {\n      var req, toRun, _ref;\n      if (cont == null) {\n        cont = (function() {});\n      }\n      if (utils.isFunction(limit)) {\n        _ref = [limit, null], cont = _ref[0], limit = _ref[1];\n      }\n      path = this.adjustPath(path);\n      toRun = this.clone();\n      if (__indexOf.call(toRun.views, path) < 0) {\n        toRun.views.push(path);\n      }\n      req = {\n        query: toRun.toXML(),\n        summaryPath: path,\n        format: 'jsonrows'\n      };\n      if (limit) {\n        req.size = limit;\n      }\n      if (term) {\n        req.filterTerm = term;\n      }\n      return withCB(cont, this.service.post('query/results', req).then(parseSummary));\n    };\n\n    Query.prototype.clone = function(cloneEvents) {\n      var cloned, k, v, _ref;\n      cloned = new Query(this, this.service);\n      if (cloned._callbacks == null) {\n        cloned._callbacks = {};\n      }\n      if (cloneEvents) {\n        _ref = this._callbacks;\n        for (k in _ref) {\n          if (!__hasProp.call(_ref, k)) continue;\n          v = _ref[k];\n          cloned._callbacks[k] = v;\n        }\n        cloned.off('change:views', removeIrrelevantSortOrders, this);\n      }\n      return cloned;\n    };\n\n    Query.prototype.next = function() {\n      var clone;\n      clone = this.clone();\n      if (this.maxRows) {\n        clone.start = this.start + this.maxRows;\n      }\n      return clone;\n    };\n\n    Query.prototype.previous = function() {\n      var clone;\n      clone = this.clone();\n      if (this.maxRows) {\n        clone.start = this.start - this.maxRows;\n      } else {\n        clone.start = 0;\n      }\n      return clone;\n    };\n\n    Query.prototype.getSortDirection = function(sorted) {\n      var a, so;\n      a = this.adjustPath(sorted);\n      if (!(this.isInQuery(a) || this.isRelevant(a))) {\n        throw new Error(\"\" + sorted + \" is not in the query\");\n      }\n      so = utils.find(this.sortOrder, function(_arg) {\n        var path;\n        path = _arg.path;\n        return a === path;\n      });\n      return so != null ? so.direction : void 0;\n    };\n\n    Query.prototype.isOuterJoined = function(path) {\n      var dir, jp, _ref;\n      path = this.adjustPath(path);\n      _ref = this.joins;\n      for (jp in _ref) {\n        dir = _ref[jp];\n        if (dir === 'OUTER' && path.indexOf(jp) === 0) {\n          return true;\n        }\n      }\n      return false;\n    };\n\n    Query.prototype.getOuterJoin = function(path) {\n      var joinPaths, k;\n      path = this.adjustPath(path);\n      joinPaths = ((function() {\n        var _results;\n        _results = [];\n        for (k in this.joins) {\n          _results.push(k);\n        }\n        return _results;\n      }).call(this)).sort(function(a, b) {\n        return b.length - a.length;\n      });\n      return utils.find(joinPaths, (function(_this) {\n        return function(p) {\n          return _this.joins[p] === 'OUTER' && path.indexOf(p) === 0;\n        };\n      })(this));\n    };\n\n    Query.prototype._parse_sort_order = function(input) {\n      var direction, k, path, so, v, _ref;\n      if (input == null) {\n        throw new Error('No input');\n      }\n      if (typeof input === 'string') {\n        so = {\n          path: input,\n          direction: 'ASC'\n        };\n      } else if (utils.isArray(input)) {\n        path = input[0], direction = input[1];\n        so = {\n          path: path,\n          direction: direction\n        };\n      } else if (input.path == null) {\n        for (k in input) {\n          v = input[k];\n          _ref = [k, v], path = _ref[0], direction = _ref[1];\n        }\n        so = {\n          path: path,\n          direction: direction\n        };\n      } else {\n        path = input.path, direction = input.direction;\n        so = {\n          path: path,\n          direction: direction\n        };\n      }\n      so.path = this.adjustPath(so.path);\n      if (so.direction == null) {\n        so.direction = 'ASC';\n      }\n      so.direction = so.direction.toUpperCase();\n      return so;\n    };\n\n    Query.prototype.addOrSetSortOrder = function(so) {\n      var currentDirection, oe;\n      so = this._parse_sort_order(so);\n      currentDirection = this.getSortDirection(so.path);\n      if (currentDirection == null) {\n        this.addSortOrder(so);\n      } else if (currentDirection !== so.direction) {\n        oe = utils.find(this.sortOrder, function(_arg) {\n          var path;\n          path = _arg.path;\n          return path === so.path;\n        });\n        oe.direction = so.direction;\n        this.trigger('change:sortorder', this.sortOrder);\n        this.trigger('change');\n      }\n      return this;\n    };\n\n    Query.prototype.addSortOrder = function(so, _arg) {\n      var silent;\n      silent = (_arg != null ? _arg : {}).silent;\n      this.sortOrder.push(this._parse_sort_order(so));\n      if (!silent) {\n        this.trigger('add:sortorder', so);\n        this.trigger('change:sortorder', this.sortOrder);\n        return this.trigger('change');\n      }\n    };\n\n    Query.prototype.orderBy = function(oes, opts) {\n      var copy, direction, oe, oldSO, path, _i, _len, _ref;\n      if (opts == null) {\n        opts = {};\n      }\n      oldSO = this.sortOrder.slice();\n      this.sortOrder = [];\n      for (_i = 0, _len = oes.length; _i < _len; _i++) {\n        oe = oes[_i];\n        this.addSortOrder(this._parse_sort_order(oe), {\n          silent: true\n        });\n      }\n      copy = (function() {\n        var _j, _len1, _ref, _ref1, _results;\n        _ref = this.sortOrder;\n        _results = [];\n        for (_j = 0, _len1 = _ref.length; _j < _len1; _j++) {\n          _ref1 = _ref[_j], path = _ref1.path, direction = _ref1.direction;\n          _results.push({\n            path: path,\n            direction: direction\n          });\n        }\n        return _results;\n      }).call(this);\n      this.trigger('set:sortorder', copy);\n      if ((stringifySortOrder(oldSO)) !== this.getSorting()) {\n        if (opts.silent) {\n          opts.events = ((_ref = opts.events) != null ? _ref : []).concat(['change', 'change:sortorder']);\n        } else {\n          this.trigger('change:sortorder', copy);\n          this.trigger('change');\n        }\n      }\n      return this;\n    };\n\n    Query.prototype.addJoins = function(joins) {\n      var j, k, v, _i, _len, _results, _results1;\n      if (utils.isArray(joins)) {\n        _results = [];\n        for (_i = 0, _len = joins.length; _i < _len; _i++) {\n          j = joins[_i];\n          _results.push(this.addJoin(j));\n        }\n        return _results;\n      } else {\n        _results1 = [];\n        for (k in joins) {\n          v = joins[k];\n          _results1.push(this.addJoin({\n            path: k,\n            style: v\n          }));\n        }\n        return _results1;\n      }\n    };\n\n    Query.prototype.addJoin = function(join) {\n      if (typeof join === 'string') {\n        join = {\n          path: join,\n          style: 'OUTER'\n        };\n      }\n      return this.setJoinStyle(join.path, join.style);\n    };\n\n    Query.prototype.setJoinStyle = function(path, style) {\n      if (style == null) {\n        style = 'OUTER';\n      }\n      path = this.adjustPath(path);\n      style = style.toUpperCase();\n      if (__indexOf.call(Query.JOIN_STYLES, style) < 0) {\n        throw new Error(\"Invalid join style: \" + style);\n      }\n      if (this.joins[path] !== style) {\n        this.joins[path] = style;\n        this.trigger('change:joins', {\n          path: path,\n          style: style\n        });\n        this.trigger('change');\n      }\n      return this;\n    };\n\n    Query.prototype.addConstraints = function(constraints, conj) {\n      var c, con, oldLogic, path, _fn, _i, _len;\n      if (conj == null) {\n        conj = 'and';\n      }\n      this.__silent__ = true;\n      oldLogic = this.constraintLogic;\n      if (utils.isArray(constraints)) {\n        for (_i = 0, _len = constraints.length; _i < _len; _i++) {\n          c = constraints[_i];\n          this.addConstraint(c, conj);\n        }\n      } else {\n        _fn = (function(_this) {\n          return function(path, con) {\n            return _this.addConstraint(interpretConstraint(path, con), conj);\n          };\n        })(this);\n        for (path in constraints) {\n          con = constraints[path];\n          _fn(path, con);\n        }\n      }\n      this.__silent__ = false;\n      this.trigger('add:constraint');\n      this.trigger('change:constraints');\n      if (oldLogic !== this.constraintLogic) {\n        this.trigger('change:logic', this.constraintLogic);\n      }\n      return this.trigger('change');\n    };\n\n    Query.prototype.addConstraint = function(constraint, conj) {\n      var i, logic, needsLogicClause, newConLen, newLogic, oldLogic, _ref;\n      if (conj == null) {\n        conj = 'and';\n      }\n      if (conj !== 'and' && conj !== 'or') {\n        throw new Error('Unknown logical conjunction: ' + conj);\n      }\n      if (utils.isArray(constraint)) {\n        constraint = interpretConArray(constraint);\n      } else {\n        constraint = copyCon(constraint);\n      }\n      if (constraint.switched === 'OFF') {\n        return this;\n      }\n      constraint.path = this.adjustPath(constraint.path);\n      if (constraint.type == null) {\n        constraint.op = get_canonical_op(constraint.op);\n      }\n      this.constraints.push(constraint);\n      needsLogicClause = (conj === 'or') || (((_ref = this.constraintLogic) != null ? _ref.length : void 0) > 0);\n      newConLen = this.constraints.length;\n      oldLogic = this.constraintLogic;\n      if (needsLogicClause) {\n        newLogic = newConLen === 2 ? \"\" + CODES[0] + \" \" + conj + \" \" + CODES[1] : (logic = this.constraintLogic, logic || (logic = ((function() {\n          var _i, _ref1, _results;\n          _results = [];\n          for (i = _i = 0, _ref1 = newConLen - 2; 0 <= _ref1 ? _i <= _ref1 : _i >= _ref1; i = 0 <= _ref1 ? ++_i : --_i) {\n            _results.push(CODES[i]);\n          }\n          return _results;\n        })()).join(' and ')), \"(\" + logic + \") \" + conj + \" \" + CODES[newConLen - 1]);\n        this.constraintLogic = newLogic;\n      }\n      if (!this.__silent__) {\n        this.trigger('add:constraint', constraint);\n        this.trigger('change:constraints');\n        if (oldLogic !== this.constraintLogic) {\n          this.trigger('change:logic', this.constraintLogic);\n        }\n        this.trigger('change');\n      }\n      return this;\n    };\n\n    Query.prototype.getSorting = function() {\n      return stringifySortOrder(this.sortOrder);\n    };\n\n    Query.prototype.getConstraintXML = function() {\n      var c, toSerialise;\n      toSerialise = (function() {\n        var _i, _len, _ref, _results;\n        _ref = this.constraints;\n        _results = [];\n        for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n          c = _ref[_i];\n          if ((c.type == null) || this.isInQuery(c.path)) {\n            _results.push(c);\n          }\n        }\n        return _results;\n      }).call(this);\n      if (toSerialise.length) {\n        return concatMap(conStr)(concatMap(id)(partition(function(c) {\n          return c.type != null;\n        })(toSerialise)));\n      } else {\n        return '';\n      }\n    };\n\n    Query.prototype.getJoinXML = function() {\n      var p, s, strs;\n      strs = (function() {\n        var _ref, _results;\n        _ref = this.joins;\n        _results = [];\n        for (p in _ref) {\n          s = _ref[p];\n          if (this.isInQuery(p) && s === 'OUTER') {\n            _results.push(\"<join path=\\\"\" + p + \"\\\" style=\\\"OUTER\\\"/>\");\n          }\n        }\n        return _results;\n      }).call(this);\n      return strs.join('');\n    };\n\n    Query.prototype.toXML = function() {\n      var attrs, headAttrs, k, v;\n      attrs = {\n        model: this.model.name,\n        view: this.views.join(' '),\n        sortOrder: this.getSorting(),\n        constraintLogic: this.constraintLogic\n      };\n      if (this.name != null) {\n        attrs.name = this.name;\n      }\n      headAttrs = ((function() {\n        var _results;\n        _results = [];\n        for (k in attrs) {\n          v = attrs[k];\n          if (v) {\n            _results.push(k + '=\"' + v + '\"');\n          }\n        }\n        return _results;\n      })()).join(' ');\n      return \"<query \" + headAttrs + \" >\" + (this.getJoinXML()) + (this.getConstraintXML()) + \"</query>\";\n    };\n\n    Query.prototype.toJSON = function() {\n      var c, direction, path, style, v;\n      return noUndefVals({\n        name: this.name,\n        title: this.title,\n        comment: this.comment,\n        description: this.description,\n        constraintLogic: this.constraintLogic,\n        from: this.root,\n        select: (function() {\n          var _i, _len, _ref, _results;\n          _ref = this.views;\n          _results = [];\n          for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n            v = _ref[_i];\n            _results.push(headLess(v));\n          }\n          return _results;\n        }).call(this),\n        orderBy: (function() {\n          var _i, _len, _ref, _ref1, _results;\n          _ref = this.sortOrder;\n          _results = [];\n          for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n            _ref1 = _ref[_i], path = _ref1.path, direction = _ref1.direction;\n            _results.push({\n              path: headLess(path),\n              direction: direction\n            });\n          }\n          return _results;\n        }).call(this),\n        joins: (function() {\n          var _ref, _results;\n          _ref = this.joins;\n          _results = [];\n          for (path in _ref) {\n            style = _ref[path];\n            if (style === 'OUTER') {\n              _results.push(headLess(path));\n            }\n          }\n          return _results;\n        }).call(this),\n        where: (function() {\n          var _i, _len, _ref, _results;\n          _ref = this.constraints;\n          _results = [];\n          for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n            c = _ref[_i];\n            _results.push(conToJSON(c));\n          }\n          return _results;\n        }).call(this)\n      });\n    };\n\n    Query.prototype.fetchCode = function(lang, cb) {\n      var req;\n      req = {\n        query: this.toXML(),\n        lang: lang\n      };\n      return withCB(cb, this.service.post('query/code', req).then(this.service.VERIFIER).then(get('code')));\n    };\n\n    Query.prototype.setName = function(name) {\n      this.name = name;\n    };\n\n    Query.prototype.save = function(name, cb) {\n      return REQUIRES_VERSION(this.service, 16, (function(_this) {\n        return function() {\n          var req, _ref;\n          if (utils.isFunction(name)) {\n            _ref = [null, name], name = _ref[0], cb = _ref[1];\n          }\n          if (name != null) {\n            _this.setName(name);\n          }\n          req = {\n            type: 'PUT',\n            path: 'user/queries',\n            data: _this.toXML(),\n            contentType: 'application/xml',\n            dataType: 'json'\n          };\n          return withCB(cb, _this.service.authorise(req)).then(function(authed) {\n            return _this.service.doReq(authed);\n          }).then(function(resp) {\n            return resp.queries;\n          });\n        };\n      })(this));\n    };\n\n    Query.prototype.store = function(name, cb) {\n      return REQUIRES_VERSION(this.service, 16, (function(_this) {\n        return function() {\n          var getName, req, updateName, _ref;\n          if (utils.isFunction(name)) {\n            _ref = [null, name], name = _ref[0], cb = _ref[1];\n          }\n          if (name != null) {\n            _this.setName(name);\n          }\n          updateName = function(err, name) {\n            if (err == null) {\n              return _this.setName(name);\n            }\n          };\n          getName = utils.compose(get(_this.name), get('queries'));\n          req = {\n            type: 'POST',\n            path: 'user/queries',\n            data: _this.toXML(),\n            contentType: 'application/xml',\n            dataType: 'json'\n          };\n          return withCB(cb, updateName, _this.service.authorise(req)).then(function(authed) {\n            return _this.service.doReq(authed);\n          }).then(getName);\n        };\n      })(this));\n    };\n\n    Query.prototype.saveAsTemplate = function(name, cb) {\n      return REQUIRES_VERSION(this.service, 16, (function(_this) {\n        return function() {\n          var req, _ref;\n          if (utils.isFunction(name)) {\n            _ref = [null, name], name = _ref[0], cb = _ref[1];\n          }\n          if (name != null) {\n            _this.setName(name);\n          }\n          if (!_this.name) {\n            throw new Error(\"Templates must have a name\");\n          }\n          req = {\n            type: 'POST',\n            path: 'templates',\n            data: \"<template \" + (conAttrs(_this, ['name', 'title', 'comment'])) + \">\" + (_this.toXML()) + \"</template>\",\n            contentType: 'application/xml',\n            dataType: 'json'\n          };\n          return withCB(cb, _this.service.authorise(req).then(function(authed) {\n            return _this.service.doReq(authed);\n          }));\n        };\n      })(this));\n    };\n\n    Query.prototype.getCodeURI = function(lang) {\n      var req, _ref;\n      req = {\n        query: this.toXML(),\n        lang: lang,\n        format: 'text'\n      };\n      if (((_ref = this.service) != null ? _ref.token : void 0) != null) {\n        req.token = this.service.token;\n      }\n      return \"\" + this.service.root + \"query/code?\" + (toQueryString(req));\n    };\n\n    Query.prototype.getExportURI = function(format, options) {\n      var req, _ref;\n      if (format == null) {\n        format = 'tab';\n      }\n      if (options == null) {\n        options = {};\n      }\n      if (__indexOf.call(Query.BIO_FORMATS, format) >= 0) {\n        return this[\"get\" + (format.toUpperCase()) + \"URI\"](options);\n      }\n      req = merge(options, {\n        query: this.toXML(),\n        format: format\n      });\n      if (((_ref = this.service) != null ? _ref.token : void 0) != null) {\n        req.token = this.service.token;\n      }\n      return \"\" + this.service.root + \"query/results?\" + (toQueryString(req));\n    };\n\n    Query.prototype.needsAuthentication = function() {\n      return utils.any(this.constraints, function(c) {\n        var _ref;\n        return (_ref = c.op) === 'NOT IN' || _ref === 'IN';\n      });\n    };\n\n    Query.prototype.fetchQID = function(cb) {\n      return withCB(cb, this.service.post('queries', {\n        query: this.toXML()\n      }).then(get('id')));\n    };\n\n    addPI = function(p) {\n      return p.append('primaryIdentifier').toString();\n    };\n\n    Query.prototype.__bio_req = function(types, n) {\n      var isSuitable, toRun;\n      toRun = this.makeListQuery();\n      isSuitable = function(p) {\n        return utils.any(types, function(t) {\n          return p.isa(t);\n        });\n      };\n      toRun.views = utils.take(n)((function() {\n        var _i, _len, _ref, _results;\n        _ref = this.getViewNodes();\n        _results = [];\n        for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n          n = _ref[_i];\n          if (isSuitable(n)) {\n            _results.push(addPI(n));\n          }\n        }\n        return _results;\n      }).call(this));\n      return {\n        query: toRun.toXML(),\n        format: 'text'\n      };\n    };\n\n    Query.prototype._fasta_req = function() {\n      return this.__bio_req([\"SequenceFeature\", 'Protein'], 1);\n    };\n\n    Query.prototype._gff3_req = function() {\n      return this.__bio_req(['SequenceFeature']);\n    };\n\n    Query.prototype._bed_req = Query.prototype._gff3_req;\n\n    return Query;\n\n  })();\n\n  union = fold(function(xs, ys) {\n    return xs.concat(ys);\n  });\n\n  Query.prototype.toString = Query.prototype.toXML;\n\n  Query.ATTRIBUTE_OPS = union([Query.ATTRIBUTE_VALUE_OPS, Query.MULTIVALUE_OPS, Query.NULL_OPS]);\n\n  Query.REFERENCE_OPS = union([Query.TERNARY_OPS, Query.LOOP_OPS, Query.LIST_OPS]);\n\n  bioUriArgs = function(reqMeth, f) {\n    return function(opts, cb) {\n      var ensureAttr, obj, req, v, _ref;\n      if (opts == null) {\n        opts = {};\n      }\n      if (cb == null) {\n        cb = function() {};\n      }\n      if (utils.isFunction(opts)) {\n        _ref = [{}, opts], opts = _ref[0], cb = _ref[1];\n      }\n      ensureAttr = (function(_this) {\n        return function(p) {\n          var path;\n          path = _this.getPathInfo(p);\n          if (path.isAttribute()) {\n            return path;\n          } else {\n            return path.append('id');\n          }\n        };\n      })(this);\n      if ((opts != null ? opts.view : void 0) != null) {\n        opts.view = (function() {\n          var _i, _len, _ref1, _results;\n          _ref1 = opts.view;\n          _results = [];\n          for (_i = 0, _len = _ref1.length; _i < _len; _i++) {\n            v = _ref1[_i];\n            _results.push(this.getPathInfo(v).toString());\n          }\n          return _results;\n        }).call(this);\n      }\n      obj = opts[\"export\"] != null ? this.selectPreservingImpliedConstraints(opts[\"export\"].map(ensureAttr)) : this;\n      req = merge(obj[reqMeth](), opts);\n      return f.call(obj, req, cb);\n    };\n  };\n\n  _ref = Query.BIO_FORMATS;\n  _fn = function(f) {\n    var getMeth, reqMeth, uriMeth;\n    reqMeth = \"_\" + f + \"_req\";\n    getMeth = \"get\" + (f.toUpperCase());\n    uriMeth = getMeth + \"URI\";\n    Query.prototype[getMeth] = bioUriArgs(reqMeth, function(req, cb) {\n      return withCB(cb, this.service.post('query/results/' + f, req));\n    });\n    return Query.prototype[uriMeth] = bioUriArgs(reqMeth, function(req, cb) {\n      if (this.service.token != null) {\n        req.token = this.service.token;\n      }\n      return \"\" + this.service.root + \"query/results/\" + f + \"?\" + (toQueryString(req));\n    });\n  };\n  for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n    f = _ref[_i];\n    _fn(f);\n  }\n\n  _get_data_fetcher = function(server_fn) {\n    return function() {\n      var cbs, page, x, _ref1;\n      page = arguments[0], cbs = 2 <= arguments.length ? __slice.call(arguments, 1) : [];\n      if (this.service[server_fn]) {\n        if (page == null) {\n          page = {};\n        } else if (utils.isFunction(page)) {\n          page = {};\n          cbs = (function() {\n            var _j, _len1, _results;\n            _results = [];\n            for (_j = 0, _len1 = arguments.length; _j < _len1; _j++) {\n              x = arguments[_j];\n              _results.push(x);\n            }\n            return _results;\n          }).apply(this, arguments);\n        }\n        page = noUndefVals(merge({\n          start: this.start,\n          size: this.maxRows\n        }, page));\n        return (_ref1 = this.service)[server_fn].apply(_ref1, [this, page].concat(__slice.call(cbs)));\n      } else {\n        throw new Error(\"Service does not provide '\" + server_fn + \"'.\");\n      }\n    };\n  };\n\n  for (_j = 0, _len1 = RESULTS_METHODS.length; _j < _len1; _j++) {\n    mth = RESULTS_METHODS[_j];\n    Query.prototype[mth] = _get_data_fetcher(mth);\n  }\n\n  Events.mixin(Query.prototype);\n\n  Query.prototype.emit = Query.prototype.trigger;\n\n  Query.prototype.bind = Query.prototype.on;\n\n  intermine.Query = Query;\n\n}).call(this);\n\n},{\"./util\":15,\"./xml\":17,\"backbone-events-standalone\":21}],10:[function(_dereq_,module,exports){\n(function() {\n  var ALWAYS_AUTH, CLASSKEYS, CLASSKEY_PATH, DEFAULT_ERROR_HANDLER, DEFAULT_PROTOCOL, ENRICHMENT_PATH, HAS_PROTOCOL, HAS_SUFFIX, IDResolutionJob, ID_RESOLUTION_PATH, LISTS_PATH, LIST_OPERATION_PATHS, LIST_PIPE, List, MODELS, MODEL_PATH, Model, NEEDS_AUTH, NO_AUTH, PATH_VALUES_PATH, PREF_PATH, Promise, QUERY_RESULTS_PATH, QUICKSEARCH_PATH, Query, RELEASES, RELEASE_PATH, REQUIRES_VERSION, SUBTRACT_PATH, SUFFIX, SUMMARYFIELDS_PATH, SUMMARY_FIELDS, Service, TABLE_ROW_PATH, TEMPLATES_PATH, TO_NAMES, USER_TOKENS, User, VERSIONS, VERSION_PATH, WHOAMI_PATH, WIDGETS, WIDGETS_PATH, WITH_OBJ_PATH, dejoin, error, get, getListFinder, http, invoke, map, merge, p, set, success, to_query_string, utils, version, withCB, _get_or_fetch, _i, _j, _len, _len1, _ref, _ref1,\n    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },\n    __hasProp = {}.hasOwnProperty,\n    __slice = [].slice;\n\n  Promise = _dereq_('./promise');\n\n  Model = _dereq_('./model').Model;\n\n  Query = _dereq_('./query').Query;\n\n  List = _dereq_('./lists').List;\n\n  User = _dereq_('./user').User;\n\n  IDResolutionJob = _dereq_('./id-resolution-job').IDResolutionJob;\n\n  version = _dereq_('./version');\n\n  utils = _dereq_('./util');\n\n  http = _dereq_('./http');\n\n  to_query_string = utils.querystring;\n\n  withCB = utils.withCB, map = utils.map, merge = utils.merge, get = utils.get, set = utils.set, invoke = utils.invoke, success = utils.success, error = utils.error, REQUIRES_VERSION = utils.REQUIRES_VERSION, dejoin = utils.dejoin;\n\n  VERSIONS = {};\n\n  CLASSKEYS = {};\n\n  RELEASES = {};\n\n  MODELS = {};\n\n  SUMMARY_FIELDS = {};\n\n  WIDGETS = {};\n\n  DEFAULT_PROTOCOL = \"http://\";\n\n  VERSION_PATH = \"version\";\n\n  TEMPLATES_PATH = \"templates\";\n\n  RELEASE_PATH = \"version/release\";\n\n  CLASSKEY_PATH = \"classkeys\";\n\n  LISTS_PATH = \"lists\";\n\n  MODEL_PATH = \"model\";\n\n  SUMMARYFIELDS_PATH = \"summaryfields\";\n\n  QUERY_RESULTS_PATH = \"query/results\";\n\n  QUICKSEARCH_PATH = \"search\";\n\n  WIDGETS_PATH = \"widgets\";\n\n  ENRICHMENT_PATH = \"list/enrichment\";\n\n  WITH_OBJ_PATH = \"listswithobject\";\n\n  LIST_OPERATION_PATHS = {\n    union: \"lists/union\",\n    intersection: \"lists/intersect\",\n    difference: \"lists/diff\"\n  };\n\n  SUBTRACT_PATH = 'lists/subtract';\n\n  WHOAMI_PATH = \"user/whoami\";\n\n  TABLE_ROW_PATH = QUERY_RESULTS_PATH + '/tablerows';\n\n  PREF_PATH = 'user/preferences';\n\n  PATH_VALUES_PATH = 'path/values';\n\n  USER_TOKENS = 'user/tokens';\n\n  ID_RESOLUTION_PATH = 'ids';\n\n  NO_AUTH = {};\n\n  _ref = [VERSION_PATH, RELEASE_PATH, CLASSKEY_PATH, WIDGETS_PATH, MODEL_PATH, SUMMARYFIELDS_PATH, QUICKSEARCH_PATH, PATH_VALUES_PATH];\n  for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n    p = _ref[_i];\n    NO_AUTH[p] = true;\n  }\n\n  ALWAYS_AUTH = {};\n\n  _ref1 = [WHOAMI_PATH, PREF_PATH, LIST_OPERATION_PATHS, SUBTRACT_PATH, WITH_OBJ_PATH, ENRICHMENT_PATH, TEMPLATES_PATH, USER_TOKENS];\n  for (_j = 0, _len1 = _ref1.length; _j < _len1; _j++) {\n    p = _ref1[_j];\n    ALWAYS_AUTH[p] = true;\n  }\n\n  NEEDS_AUTH = function(path, q) {\n    if (NO_AUTH[path]) {\n      return false;\n    } else if (ALWAYS_AUTH[path]) {\n      return true;\n    } else if (!(q != null ? q.needsAuthentication : void 0)) {\n      return true;\n    } else {\n      return q.needsAuthentication();\n    }\n  };\n\n  HAS_PROTOCOL = /^https?:\\/\\//i;\n\n  HAS_SUFFIX = /service\\/?$/i;\n\n  SUFFIX = \"/service/\";\n\n  DEFAULT_ERROR_HANDLER = function(e) {\n    var f, _ref2;\n    f = (_ref2 = console.error) != null ? _ref2 : console.log;\n    return f(e);\n  };\n\n  _get_or_fetch = function(propName, store, path, key, cb) {\n    var opts, promise, root, useCache, value;\n    root = this.root, useCache = this.useCache;\n    promise = this[propName] != null ? this[propName] : this[propName] = useCache && (value = store[root]) ? success(value) : (opts = {\n      type: 'GET',\n      dataType: 'json',\n      data: {\n        format: 'json'\n      }\n    }, this.doReq(merge(opts, {\n      url: this.root + path\n    })).then(function(x) {\n      return store[root] = x[key];\n    }));\n    return withCB(cb, promise);\n  };\n\n  getListFinder = function(name) {\n    return function(lists) {\n      return new Promise(function(resolve, reject) {\n        var list;\n        if (list = utils.find(lists, function(l) {\n          return l.name === name;\n        })) {\n          return resolve(list);\n        } else {\n          return reject(\"List \\\"\" + name + \"\\\" not found among: \" + (lists.map(get('name'))));\n        }\n      });\n    };\n  };\n\n  LIST_PIPE = function(service, prop) {\n    if (prop == null) {\n      prop = 'listName';\n    }\n    return utils.compose(service.fetchList, get(prop));\n  };\n\n  TO_NAMES = function(xs) {\n    var x, _k, _len2, _ref2, _ref3, _results;\n    if (xs == null) {\n      xs = [];\n    }\n    _ref2 = (utils.isArray(xs) ? xs : [xs]);\n    _results = [];\n    for (_k = 0, _len2 = _ref2.length; _k < _len2; _k++) {\n      x = _ref2[_k];\n      _results.push((_ref3 = x.name) != null ? _ref3 : x);\n    }\n    return _results;\n  };\n\n  Service = (function() {\n    var FIVE_MIN, checkNameParam, getNewUserToken, loadQ, pathValuesReq, toMapByName;\n\n    Service.prototype.doReq = http.doReq;\n\n    function Service(_arg) {\n      var noCache;\n      this.root = _arg.root, this.token = _arg.token, this.errorHandler = _arg.errorHandler, this.DEBUG = _arg.DEBUG, this.help = _arg.help, noCache = _arg.noCache;\n      this.connectAs = __bind(this.connectAs, this);\n      this.createList = __bind(this.createList, this);\n      this.resolveIds = __bind(this.resolveIds, this);\n      this.templateQuery = __bind(this.templateQuery, this);\n      this.savedQuery = __bind(this.savedQuery, this);\n      this.query = __bind(this.query, this);\n      this.fetchRelease = __bind(this.fetchRelease, this);\n      this.fetchClassKeys = __bind(this.fetchClassKeys, this);\n      this.fetchVersion = __bind(this.fetchVersion, this);\n      this.fetchSummaryFields = __bind(this.fetchSummaryFields, this);\n      this.fetchModel = __bind(this.fetchModel, this);\n      this.fetchWidgetMap = __bind(this.fetchWidgetMap, this);\n      this.fetchWidgets = __bind(this.fetchWidgets, this);\n      this.complement = __bind(this.complement, this);\n      this.fetchListsContaining = __bind(this.fetchListsContaining, this);\n      this.fetchList = __bind(this.fetchList, this);\n      this.findLists = __bind(this.findLists, this);\n      this.fetchLists = __bind(this.fetchLists, this);\n      this.fetchTemplates = __bind(this.fetchTemplates, this);\n      this.tableRows = __bind(this.tableRows, this);\n      this.values = __bind(this.values, this);\n      this.rows = __bind(this.rows, this);\n      this.records = __bind(this.records, this);\n      this.table = __bind(this.table, this);\n      this.pathValues = __bind(this.pathValues, this);\n      this.fetchUser = __bind(this.fetchUser, this);\n      this.whoami = __bind(this.whoami, this);\n      this.findById = __bind(this.findById, this);\n      this.count = __bind(this.count, this);\n      this.enrichment = __bind(this.enrichment, this);\n      if (this.root == null) {\n        throw new Error(\"No service root provided. This is required\");\n      }\n      if (!HAS_PROTOCOL.test(this.root)) {\n        this.root = DEFAULT_PROTOCOL + this.root;\n      }\n      if (!HAS_SUFFIX.test(this.root)) {\n        this.root = this.root + SUFFIX;\n      }\n      this.root = this.root.replace(/ice$/, \"ice/\");\n      if (this.errorHandler == null) {\n        this.errorHandler = DEFAULT_ERROR_HANDLER;\n      }\n      if (this.help == null) {\n        this.help = 'no.help.available@dev.null';\n      }\n      this.useCache = !noCache;\n      this.getFormat = (function(_this) {\n        return function(intended) {\n          if (intended == null) {\n            intended = 'json';\n          }\n          return intended;\n        };\n      })(this);\n    }\n\n    Service.prototype.post = function(path, data) {\n      return this.makeRequest('POST', path, data);\n    };\n\n    Service.prototype.get = function(path, data) {\n      return this.makeRequest('GET', path, data);\n    };\n\n    Service.prototype.makeRequest = function(method, path, data, cb, indiv) {\n      var dataType, errBack, opts, timeout, _ref2, _ref3, _ref4;\n      if (method == null) {\n        method = 'GET';\n      }\n      if (path == null) {\n        path = '';\n      }\n      if (data == null) {\n        data = {};\n      }\n      if (cb == null) {\n        cb = (function() {});\n      }\n      if (indiv == null) {\n        indiv = false;\n      }\n      if (utils.isArray(cb)) {\n        _ref2 = cb, cb = _ref2[0], errBack = _ref2[1];\n      }\n      if (utils.isArray(data)) {\n        data = utils.pairsToObj(data);\n      }\n      if (errBack == null) {\n        errBack = this.errorHandler;\n      }\n      data = utils.copy(data);\n      dataType = this.getFormat(data.format);\n      if (!http.supports(method)) {\n        _ref3 = [method, http.getMethod(method)], data.method = _ref3[0], method = _ref3[1];\n      }\n      opts = {\n        data: data,\n        dataType: dataType,\n        success: cb,\n        error: errBack,\n        path: path,\n        type: method\n      };\n      if (data.auth != null) {\n        opts.auth = data.auth;\n        delete opts.data.auth;\n      }\n      if (data.headers != null) {\n        opts.headers = utils.copy(data.headers);\n        delete opts.data.headers;\n      }\n      if (timeout = (_ref4 = data.timeout) != null ? _ref4 : this.timeout) {\n        opts.timeout = timeout;\n        delete data.timeout;\n      }\n      return this.authorise(opts).then((function(_this) {\n        return function(authed) {\n          return _this.doReq(authed, indiv);\n        };\n      })(this));\n    };\n\n    Service.prototype.authorise = function(req) {\n      return this.fetchVersion().then((function(_this) {\n        return function(version) {\n          var opts, pathAdditions, _ref2;\n          opts = utils.copy(req);\n          if (opts.headers == null) {\n            opts.headers = {};\n          }\n          opts.url = _this.root + opts.path;\n          pathAdditions = [];\n          if (version < 14) {\n            if ('string' === typeof opts.data) {\n              pathAdditions.push(['format', opts.dataType]);\n            } else {\n              opts.data.format = opts.dataType;\n            }\n          }\n          if ((_this.token != null) && NEEDS_AUTH(req.path, (_ref2 = opts.data) != null ? _ref2.query : void 0)) {\n            if (version >= 14) {\n              opts.headers.Authorization = \"Token \" + _this.token;\n            } else if ('string' === typeof opts.data) {\n              pathAdditions.push(['token', _this.token]);\n            } else {\n              opts.data.token = _this.token;\n            }\n          }\n          if (pathAdditions.length) {\n            opts.url += '?' + to_query_string(pathAdditions);\n          }\n          return opts;\n        };\n      })(this));\n    };\n\n    Service.prototype.enrichment = function(opts, cb) {\n      return REQUIRES_VERSION(this, 8, (function(_this) {\n        return function() {\n          var req;\n          req = merge({\n            maxp: 0.05,\n            correction: 'Holm-Bonferroni'\n          }, opts);\n          return withCB(cb, _this.get(ENRICHMENT_PATH, req).then(get('results')));\n        };\n      })(this));\n    };\n\n    Service.prototype.search = function(options, cb) {\n      if (options == null) {\n        options = {};\n      }\n      if (cb == null) {\n        cb = (function() {});\n      }\n      return REQUIRES_VERSION(this, 9, (function(_this) {\n        return function() {\n          var k, req, v, _ref2;\n          if (utils.isFunction(options)) {\n            _ref2 = [options, {}], cb = _ref2[0], options = _ref2[1];\n          }\n          if (typeof options === 'string') {\n            req = {\n              q: options\n            };\n          } else {\n            req = {\n              q: options.q\n            };\n            for (k in options) {\n              if (!__hasProp.call(options, k)) continue;\n              v = options[k];\n              if (k !== 'q') {\n                req[\"facet_\" + k] = v;\n              }\n            }\n          }\n          return withCB(cb, _this.post(QUICKSEARCH_PATH, req));\n        };\n      })(this));\n    };\n\n    Service.prototype.makePath = function(path, subclasses, cb) {\n      if (subclasses == null) {\n        subclasses = {};\n      }\n      if (cb == null) {\n        cb = (function() {});\n      }\n      return withCB(cb, this.fetchModel().then(function(m) {\n        return m.makePath(path, subclasses);\n      }));\n    };\n\n    Service.prototype.count = function(q, cb) {\n      var promise, req;\n      if (cb == null) {\n        cb = (function() {});\n      }\n      promise = !q ? error(\"Not enough arguments\") : q.toPathString != null ? (p = q.isClass() ? q.append('id') : q, this.pathValues(p, 'count')) : q.toXML != null ? (req = {\n        query: q,\n        format: 'jsoncount'\n      }, this.post(QUERY_RESULTS_PATH, req).then(get('count'))) : typeof q === 'string' ? this.fetchModel().then((function(_this) {\n        return function(m) {\n          var e;\n          try {\n            return _this.count(m.makePath(q));\n          } catch (_error) {\n            e = _error;\n            return _this.query({\n              select: [q]\n            }).then(_this.count);\n          }\n        };\n      })(this)) : this.query(q).then(this.count);\n      return withCB(cb, promise);\n    };\n\n    Service.prototype.findById = function(type, id, fields, cb) {\n      var promise, _ref2;\n      if (fields == null) {\n        fields = ['**'];\n      }\n      if (cb == null) {\n        cb = (function() {});\n      }\n      if (utils.isFunction(fields)) {\n        _ref2 = [['**'], fields], fields = _ref2[0], cb = _ref2[1];\n      }\n      promise = this.query({\n        from: type,\n        select: fields,\n        where: {\n          id: id\n        }\n      }).then(dejoin).then(invoke('records')).then(get(0));\n      return withCB(cb, promise);\n    };\n\n    Service.prototype.lookup = function(type, term, context, cb) {\n      var promise, _ref2;\n      if (utils.isFunction(context)) {\n        _ref2 = [null, context], context = _ref2[0], cb = _ref2[1];\n      }\n      promise = this.query({\n        from: type,\n        select: ['**'],\n        where: [[type, 'LOOKUP', term, context]]\n      }).then(dejoin).then(invoke('records'));\n      return withCB(cb, promise);\n    };\n\n    Service.prototype.find = function(type, term, context, cb) {\n      var _ref2;\n      if (utils.isFunction(context)) {\n        _ref2 = [null, context], context = _ref2[0], cb = _ref2[1];\n      }\n      return withCB(cb, this.lookup(type, term, context).then(function(found) {\n        if ((found == null) || found.length === 0) {\n          return error(\"Nothing found\");\n        } else if (found.length > 1) {\n          return error(\"Multiple items found: \" + (found.slice(0, 3)) + \"...\");\n        } else {\n          return success(found[0]);\n        }\n      }));\n    };\n\n    Service.prototype.whoami = function(cb) {\n      return REQUIRES_VERSION(this, 9, (function(_this) {\n        return function() {\n          return withCB(cb, _this.get(WHOAMI_PATH).then(get('user')).then(function(x) {\n            return new User(_this, x);\n          }));\n        };\n      })(this));\n    };\n\n    Service.prototype.fetchUser = function() {\n      var args;\n      args = 1 <= arguments.length ? __slice.call(arguments, 0) : [];\n      return this.whoami.apply(this, args);\n    };\n\n    pathValuesReq = function(format, path) {\n      return {\n        format: format,\n        path: String(path),\n        typeConstraints: JSON.stringify(path.subclasses)\n      };\n    };\n\n    Service.prototype.pathValues = function(path, typeConstraints, cb) {\n      if (typeConstraints == null) {\n        typeConstraints = {};\n      }\n      return REQUIRES_VERSION(this, 6, (function(_this) {\n        return function() {\n          var e, format, promise, wanted, _ref2;\n          if (typeof typeConstraints === 'string') {\n            wanted = typeConstraints;\n            typeConstraints = {};\n          }\n          if (utils.isFunction(typeConstraints)) {\n            _ref2 = [cb, typeConstraints], typeConstraints = _ref2[0], cb = _ref2[1];\n          }\n          if (wanted !== 'count') {\n            wanted = 'results';\n          }\n          format = wanted === 'count' ? 'jsoncount' : 'json';\n          promise = (function() {\n            var _ref3;\n            try {\n              return this.fetchModel().then(invoke('makePath', path, (_ref3 = path.subclasses) != null ? _ref3 : typeConstraints)).then(function(path) {\n                return pathValuesReq(format, path);\n              }).then((function(_this) {\n                return function(req) {\n                  return _this.post(PATH_VALUES_PATH, req);\n                };\n              })(this)).then(get(wanted));\n            } catch (_error) {\n              e = _error;\n              return error(e);\n            }\n          }).call(_this);\n          return withCB(cb, promise);\n        };\n      })(this));\n    };\n\n    Service.prototype.doPagedRequest = function(q, path, page, format, cb) {\n      var req, _ref2;\n      if (page == null) {\n        page = {};\n      }\n      if (cb == null) {\n        cb = (function() {});\n      }\n      if (q.toXML != null) {\n        if (utils.isFunction(page)) {\n          _ref2 = [page, {}], cb = _ref2[0], page = _ref2[1];\n        }\n        req = merge(page, {\n          query: q,\n          format: format\n        });\n        return withCB(cb, this.post(path, req).then(get('results')));\n      } else {\n        return this.query(q).then((function(_this) {\n          return function(query) {\n            return _this.doPagedRequest(query, path, page, format, cb);\n          };\n        })(this));\n      }\n    };\n\n    Service.prototype.table = function(q, page, cb) {\n      return this.doPagedRequest(q, QUERY_RESULTS_PATH, page, 'jsontable', cb);\n    };\n\n    Service.prototype.records = function(q, page, cb) {\n      return this.doPagedRequest(q, QUERY_RESULTS_PATH, page, 'jsonobjects', cb);\n    };\n\n    Service.prototype.rows = function(q, page, cb) {\n      return this.doPagedRequest(q, QUERY_RESULTS_PATH, page, 'json', cb);\n    };\n\n    Service.prototype.values = function(q, opts, cb) {\n      var resp, _ref2;\n      if (utils.isFunction(opts)) {\n        _ref2 = [opts, cb], cb = _ref2[0], opts = _ref2[1];\n      }\n      resp = q == null ? error(\"No query term supplied\") : (q.descriptors != null) || typeof q === 'string' ? this.pathValues(q, opts).then(map(get('value'))) : q.toXML != null ? q.views.length !== 1 ? error(\"Expected one column, got \" + q.views.length) : this.rows(q, opts).then(map(get(0))) : this.query(q).then((function(_this) {\n        return function(query) {\n          return _this.values(query, opts);\n        };\n      })(this));\n      return withCB(cb, resp);\n    };\n\n    Service.prototype.tableRows = function(q, page, cb) {\n      return this.doPagedRequest(q, TABLE_ROW_PATH, page, 'json', cb);\n    };\n\n    Service.prototype.fetchTemplates = function(cb) {\n      return withCB(cb, this.get(TEMPLATES_PATH).then(get('templates')));\n    };\n\n    Service.prototype.fetchLists = function(cb) {\n      return this.findLists('', cb);\n    };\n\n    Service.prototype.findLists = function(name, cb) {\n      if (name == null) {\n        name = '';\n      }\n      if (cb == null) {\n        cb = (function() {});\n      }\n      return this.fetchVersion().then((function(_this) {\n        return function(v) {\n          var fn;\n          return withCB(cb, name && v < 13 ? error(\"Finding lists by name on the server requires version 13. This is only \" + v) : (fn = function(ls) {\n            var data, _k, _len2, _results;\n            _results = [];\n            for (_k = 0, _len2 = ls.length; _k < _len2; _k++) {\n              data = ls[_k];\n              _results.push(new List(data, _this));\n            }\n            return _results;\n          }, _this.get(LISTS_PATH, {\n            name: name\n          }).then(get('lists')).then(fn)));\n        };\n      })(this));\n    };\n\n    Service.prototype.fetchList = function(name, cb) {\n      return this.fetchVersion().then((function(_this) {\n        return function(v) {\n          return withCB(cb, v < 13 ? _this.findLists().then(getListFinder(name)) : _this.findLists(name).then(get(0)));\n        };\n      })(this));\n    };\n\n    Service.prototype.fetchListsContaining = function(opts, cb) {\n      var fn;\n      fn = (function(_this) {\n        return function(xs) {\n          var x, _k, _len2, _results;\n          _results = [];\n          for (_k = 0, _len2 = xs.length; _k < _len2; _k++) {\n            x = xs[_k];\n            _results.push(new List(x, _this));\n          }\n          return _results;\n        };\n      })(this);\n      return withCB(cb, this.get(WITH_OBJ_PATH, opts).then(get('lists')).then(fn));\n    };\n\n    Service.prototype.combineLists = function(operation, options, cb) {\n      var description, lists, name, req, tags, _ref2;\n      _ref2 = merge({\n        lists: [],\n        tags: []\n      }, options), name = _ref2.name, lists = _ref2.lists, tags = _ref2.tags, description = _ref2.description;\n      req = {\n        name: name,\n        description: description\n      };\n      if (req.description == null) {\n        req.description = \"\" + operation + \" of \" + (lists.join(', '));\n      }\n      req.tags = tags.join(';');\n      req.lists = lists.join(';');\n      return withCB(cb, this.get(LIST_OPERATION_PATHS[operation], req).then(LIST_PIPE(this)));\n    };\n\n    Service.prototype.merge = function() {\n      return this.combineLists.apply(this, ['union'].concat(__slice.call(arguments)));\n    };\n\n    Service.prototype.intersect = function() {\n      return this.combineLists.apply(this, ['intersection'].concat(__slice.call(arguments)));\n    };\n\n    Service.prototype.diff = function() {\n      return this.combineLists.apply(this, ['difference'].concat(__slice.call(arguments)));\n    };\n\n    Service.prototype.complement = function(options, cb) {\n      var defaultDesc, description, exclude, from, lists, name, references, req, tags;\n      if (options == null) {\n        options = {};\n      }\n      if (cb == null) {\n        cb = function() {};\n      }\n      from = options.from, exclude = options.exclude, name = options.name, description = options.description, tags = options.tags;\n      defaultDesc = function() {\n        return \"Relative complement of \" + (lists.join(' and ')) + \" in \" + (references.join(' and '));\n      };\n      references = TO_NAMES(from);\n      lists = TO_NAMES(exclude);\n      if (name == null) {\n        name = defaultDesc();\n      }\n      if (description == null) {\n        description = defaultDesc();\n      }\n      if (tags == null) {\n        tags = [];\n      }\n      req = {\n        name: name,\n        description: description,\n        tags: tags,\n        lists: lists,\n        references: references\n      };\n      return withCB(cb, this.post(SUBTRACT_PATH, req).then(LIST_PIPE(this)));\n    };\n\n    Service.prototype.fetchWidgets = function(cb) {\n      return REQUIRES_VERSION(this, 8, (function(_this) {\n        return function() {\n          return _get_or_fetch.call(_this, 'widgets', WIDGETS, WIDGETS_PATH, 'widgets', cb);\n        };\n      })(this));\n    };\n\n    toMapByName = utils.omap(function(w) {\n      return [w.name, w];\n    });\n\n    Service.prototype.fetchWidgetMap = function(cb) {\n      return REQUIRES_VERSION(this, 8, (function(_this) {\n        return function() {\n          return withCB(cb, (_this.__wmap__ != null ? _this.__wmap__ : _this.__wmap__ = _this.fetchWidgets().then(toMapByName)));\n        };\n      })(this));\n    };\n\n    Service.prototype.fetchModel = function(cb) {\n      var ret;\n      ret = _get_or_fetch.call(this, 'model', MODELS, MODEL_PATH, 'model').then(Model.load).then(set({\n        service: this\n      }));\n      return withCB(cb, ret);\n    };\n\n    Service.prototype.fetchSummaryFields = function(cb) {\n      return _get_or_fetch.call(this, 'summaryFields', SUMMARY_FIELDS, SUMMARYFIELDS_PATH, 'classes', cb);\n    };\n\n    Service.prototype.fetchVersion = function(cb) {\n      return _get_or_fetch.call(this, 'version', VERSIONS, VERSION_PATH, 'version', cb);\n    };\n\n    Service.prototype.fetchClassKeys = function(cb) {\n      return _get_or_fetch.call(this, 'classkeys', CLASSKEYS, CLASSKEY_PATH, 'classes', cb);\n    };\n\n    Service.prototype.fetchRelease = function(cb) {\n      return _get_or_fetch.call(this, 'release', RELEASES, RELEASE_PATH, 'version', cb);\n    };\n\n    Service.prototype.query = function(options, cb) {\n      var buildQuery;\n      buildQuery = (function(_this) {\n        return function(_arg) {\n          var model, summaryFields;\n          model = _arg[0], summaryFields = _arg[1];\n          return new Query(options, _this, {\n            model: model,\n            summaryFields: summaryFields\n          });\n        };\n      })(this);\n      return withCB(cb, utils.parallel(this.fetchModel(), this.fetchSummaryFields()).then(buildQuery));\n    };\n\n    loadQ = function(service, name) {\n      return function(q) {\n        if (!q) {\n          return error(\"No query found called \" + name);\n        }\n        return service.query(q);\n      };\n    };\n\n    checkNameParam = function(name) {\n      if (name) {\n        if ('string' === typeof name) {\n          return success();\n        } else {\n          return error(\"Name must be a string\");\n        }\n      } else {\n        return error(\"Name not provided\");\n      }\n    };\n\n    Service.prototype.savedQuery = function(name, cb) {\n      return REQUIRES_VERSION(this, 16, (function(_this) {\n        return function() {\n          return checkNameParam(name).then(function() {\n            return withCB(cb, _this.get('user/queries', {\n              filter: name\n            }).then(function(r) {\n              return r.queries[name];\n            }).then(loadQ(_this, name)));\n          });\n        };\n      })(this));\n    };\n\n    Service.prototype.templateQuery = function(name, cb) {\n      return checkNameParam(name).then((function(_this) {\n        return function() {\n          return withCB(cb, _this.fetchTemplates().then(get(name)).then(set('type', 'TEMPLATE')).then(loadQ(_this, name)));\n        };\n      })(this));\n    };\n\n    Service.prototype.manageUserPreferences = function(method, data, cb) {\n      return REQUIRES_VERSION(this, 11, (function(_this) {\n        return function() {\n          return withCB(cb, _this.makeRequest(method, PREF_PATH, data).then(get('preferences')));\n        };\n      })(this));\n    };\n\n    Service.prototype.resolveIds = function(opts, cb) {\n      return REQUIRES_VERSION(this, 10, (function(_this) {\n        return function() {\n          var req;\n          req = {\n            type: 'POST',\n            url: _this.root + ID_RESOLUTION_PATH,\n            contentType: 'application/json',\n            data: JSON.stringify(opts),\n            dataType: 'json'\n          };\n          return withCB(cb, _this.doReq(req).then(get('uid')).then(IDResolutionJob.create(_this)));\n        };\n      })(this));\n    };\n\n    Service.prototype.resolutionJob = function(id) {\n      return IDResolutionJob.create(this)(id);\n    };\n\n    Service.prototype.createList = function(opts, ids, cb) {\n      var adjust, req;\n      if (opts == null) {\n        opts = {};\n      }\n      if (ids == null) {\n        ids = '';\n      }\n      if (cb == null) {\n        cb = function() {};\n      }\n      adjust = (function(_this) {\n        return function(x) {\n          return merge(x, {\n            token: _this.token,\n            tags: opts.tags || []\n          });\n        };\n      })(this);\n      req = {\n        data: utils.isArray(ids) ? ids.map(function(x) {\n          return \"\\\"\" + x + \"\\\"\";\n        }).join(\"\\n\") : ids,\n        dataType: 'json',\n        url: \"\" + this.root + \"lists?\" + (to_query_string(adjust(opts))),\n        type: 'POST',\n        contentType: 'text/plain'\n      };\n      return withCB(cb, this.doReq(req).then(LIST_PIPE(this)));\n    };\n\n    getNewUserToken = function(resp) {\n      return resp.user.temporaryToken;\n    };\n\n    Service.prototype.connectAs = function(token) {\n      return Service.connect(merge(this, {\n        token: token,\n        noCache: !this.useCache\n      }));\n    };\n\n    Service.prototype.register = function(name, password, cb) {\n      return REQUIRES_VERSION(this, 9, (function(_this) {\n        return function() {\n          return withCB(cb, _this.post('users', {\n            name: name,\n            password: password\n          }).then(getNewUserToken).then(_this.connectAs));\n        };\n      })(this));\n    };\n\n    FIVE_MIN = 5 * 60;\n\n    Service.prototype.getDeregistrationToken = function(validity, cb) {\n      if (validity == null) {\n        validity = FIVE_MIN;\n      }\n      return REQUIRES_VERSION(this, 16, (function(_this) {\n        return function() {\n          var promise;\n          promise = _this.token != null ? _this.post('user/deregistration', {\n            validity: validity\n          }).then(get('token')) : error(\"Not registered\");\n          return withCB(cb, promise);\n        };\n      })(this));\n    };\n\n    Service.prototype.deregister = function(token, cb) {\n      return REQUIRES_VERSION(this, 16, (function(_this) {\n        return function() {\n          return withCB(cb, _this.makeRequest('DELETE', 'user', {\n            deregistrationToken: token,\n            format: 'xml'\n          }));\n        };\n      })(this));\n    };\n\n    Service.prototype.login = function(name, password, cb) {\n      return REQUIRES_VERSION(this, 9, (function(_this) {\n        return function() {\n          var auth;\n          auth = \"\" + name + \":\" + password;\n          return withCB(cb, _this.logout().then(function(service) {\n            return service.get('user/token', {\n              auth: auth\n            });\n          })).then(get('token')).then(_this.connectAs);\n        };\n      })(this));\n    };\n\n    Service.prototype.logout = function(cb) {\n      return withCB(cb, success(this.connectAs()));\n    };\n\n    return Service;\n\n  })();\n\n  Service.prototype.rowByRow = function() {\n    var args, f, q;\n    q = arguments[0], args = 2 <= arguments.length ? __slice.call(arguments, 1) : [];\n    f = http.iterReq('POST', QUERY_RESULTS_PATH, 'json');\n    if (q.toXML != null) {\n      return f.apply(this, arguments);\n    } else {\n      return this.query(q).then((function(_this) {\n        return function(query) {\n          return _this.rowByRow.apply(_this, [query].concat(__slice.call(args)));\n        };\n      })(this));\n    }\n  };\n\n  Service.prototype.eachRow = Service.prototype.rowByRow;\n\n  Service.prototype.recordByRecord = function() {\n    var args, f, q;\n    q = arguments[0], args = 2 <= arguments.length ? __slice.call(arguments, 1) : [];\n    f = http.iterReq('POST', QUERY_RESULTS_PATH, 'jsonobjects');\n    if (q.toXML != null) {\n      return f.apply(this, arguments);\n    } else {\n      return this.query(q).then((function(_this) {\n        return function(query) {\n          return _this.recordByRecord.apply(_this, [query].concat(__slice.call(args)));\n        };\n      })(this));\n    }\n  };\n\n  Service.prototype.eachRecord = Service.prototype.recordByRecord;\n\n  Service.prototype.union = Service.prototype.merge;\n\n  Service.prototype.difference = Service.prototype.diff;\n\n  Service.prototype.symmetricDifference = Service.prototype.diff;\n\n  Service.prototype.relativeComplement = Service.prototype.complement;\n\n  Service.prototype.subtract = Service.prototype.complement;\n\n  Service.flushCaches = function() {\n    MODELS = {};\n    VERSIONS = {};\n    RELEASES = {};\n    CLASSKEYS = {};\n    SUMMARY_FIELDS = {};\n    return WIDGETS = {};\n  };\n\n  Service.connect = function(opts) {\n    if ((opts != null ? opts.root : void 0) == null) {\n      throw new Error(\"Invalid options provided: \" + (JSON.stringify(opts)));\n    }\n    return new Service(opts);\n  };\n\n  exports.Service = Service;\n\n  exports.Model = Model;\n\n  exports.Query = Query;\n\n  exports.utils = utils;\n\n  exports.VERSION = version.VERSION;\n\n  exports.imjs = version;\n\n}).call(this);\n\n},{\"./http\":3,\"./id-resolution-job\":4,\"./lists\":5,\"./model\":6,\"./promise\":8,\"./query\":9,\"./user\":14,\"./util\":15,\"./version\":16}],11:[function(_dereq_,module,exports){\n(function (global){\n(function() {\n  var FakeDomParser;\n\n  exports.DOMParser = global.DOMParser != null ? global.DOMParser : FakeDomParser = (function() {\n    function FakeDomParser() {\n      throw new Error(\"DOMParser is not available\");\n    }\n\n    return FakeDomParser;\n\n  })();\n\n}).call(this);\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{}],12:[function(_dereq_,module,exports){\n(function() {\n  var HAS_CONSOLE, HAS_JSON, NOT_ENUM, hasDontEnumBug, hasOwnProperty, head, m, script, _fn, _i, _len, _ref;\n\n  HAS_CONSOLE = typeof console !== 'undefined';\n\n  HAS_JSON = typeof JSON !== 'undefined';\n\n  NOT_ENUM = ['toString', 'toLocaleString', 'valueOf', 'hasOwnProperty', 'isPrototypeOf', 'propertyIsEnumerable', 'constructor'];\n\n  if (!HAS_JSON) {\n    script = document.createElement('script');\n    script.src = 'http://cdn.intermine.org/js/json3/3.2.2/json3.min.js';\n    script.type = 'text/javascript';\n    head = document.getElementsByTagName('head')[0];\n    head.appendChild(script);\n  }\n\n  if (Object.keys == null) {\n    hasOwnProperty = Object.prototype.hasOwnProperty;\n    hasDontEnumBug = !{\n      toString: null\n    }.propertyIsEnumerable(\"toString\");\n    Object.keys = function(o) {\n      var keys, name, nonEnum, _i, _len;\n      if (typeof o !== \"object\" && typeof o !== \"\" || o === null) {\n        throw new TypeError(\"Object.keys called on a non-object\");\n      }\n      keys = (function() {\n        var _results;\n        _results = [];\n        for (name in o) {\n          if (hasOwnProperty.call(o, name)) {\n            _results.push(name);\n          }\n        }\n        return _results;\n      })();\n      if (hasDontEnumBug) {\n        for (_i = 0, _len = NOT_ENUM.length; _i < _len; _i++) {\n          nonEnum = NOT_ENUM[_i];\n          if (hasOwnProperty.call(o, nonEnum)) {\n            keys.push(nonEnum);\n          }\n        }\n      }\n      return keys;\n    };\n  }\n\n  if (Array.prototype.map == null) {\n    Array.prototype.map = function(f) {\n      var x, _i, _len, _results;\n      _results = [];\n      for (_i = 0, _len = this.length; _i < _len; _i++) {\n        x = this[_i];\n        _results.push(f(x));\n      }\n      return _results;\n    };\n  }\n\n  if (Array.prototype.filter == null) {\n    Array.prototype.filter = function(f) {\n      var x, _i, _len, _results;\n      _results = [];\n      for (_i = 0, _len = this.length; _i < _len; _i++) {\n        x = this[_i];\n        if (f(x)) {\n          _results.push(x);\n        }\n      }\n      return _results;\n    };\n  }\n\n  if (Array.prototype.reduce == null) {\n    Array.prototype.reduce = function(f, initValue) {\n      var ret, x, xs, _i, _len;\n      xs = this.slice();\n      ret = arguments.length < 2 ? xs.pop() : initValue;\n      for (_i = 0, _len = xs.length; _i < _len; _i++) {\n        x = xs[_i];\n        ret = f(ret, x);\n      }\n      return ret;\n    };\n  }\n\n  if (Array.prototype.forEach == null) {\n    Array.prototype.forEach = function(f, ctx) {\n      var i, x, _i, _len, _results;\n      if (!f) {\n        throw new Error(\"No function provided\");\n      }\n      _results = [];\n      for (i = _i = 0, _len = this.length; _i < _len; i = ++_i) {\n        x = this[i];\n        _results.push(f.call(ctx != null ? ctx : this, x, i, this));\n      }\n      return _results;\n    };\n  }\n\n  if (!HAS_CONSOLE) {\n    this.console = {\n      log: (function() {}),\n      error: (function() {}),\n      debug: (function() {})\n    };\n    if (typeof window !== \"undefined\" && window !== null) {\n      window.console = this.console;\n    }\n  }\n\n  if (console.log == null) {\n    console.log = function() {};\n  }\n\n  if (console.error == null) {\n    console.error = function() {};\n  }\n\n  if (console.debug == null) {\n    console.debug = function() {};\n  }\n\n  if (console.log.apply == null) {\n    console.log(\"Your console needs patching.\");\n    _ref = ['log', 'error', 'debug'];\n    _fn = function(m) {\n      var oldM;\n      oldM = console[m];\n      return console[m] = function(args) {\n        return oldM(args);\n      };\n    };\n    for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n      m = _ref[_i];\n      _fn(m);\n    }\n  }\n\n}).call(this);\n\n},{}],13:[function(_dereq_,module,exports){\n(function() {\n  var Promise, merge, properties,\n    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };\n\n  merge = function(src, dest) {\n    var k, v, _results;\n    _results = [];\n    for (k in src) {\n      v = src[k];\n      _results.push(dest[k] = v);\n    }\n    return _results;\n  };\n\n  Promise = _dereq_('./promise');\n\n  properties = ['attributes', 'references', 'collections'];\n\n  exports.Table = (function() {\n    function Table(opts, model) {\n      var c, prop, _, _i, _len, _ref, _ref1;\n      this.model = model;\n      this.getDisplayName = __bind(this.getDisplayName, this);\n      this.name = opts.name, this.tags = opts.tags, this.displayName = opts.displayName, this.attributes = opts.attributes, this.references = opts.references, this.collections = opts.collections;\n      this.fields = {};\n      this.__parents__ = (_ref = opts['extends']) != null ? _ref : [];\n      for (_i = 0, _len = properties.length; _i < _len; _i++) {\n        prop = properties[_i];\n        if (this[prop] == null) {\n          throw new Error(\"Bad model data: missing \" + prop);\n        }\n        merge(this[prop], this.fields);\n      }\n      _ref1 = this.collections;\n      for (_ in _ref1) {\n        c = _ref1[_];\n        c.isCollection = true;\n      }\n    }\n\n    Table.prototype.toString = function() {\n      var n, _;\n      return \"[Table name=\" + this.name + \", fields=[\" + ((function() {\n        var _ref, _results;\n        _ref = this.fields;\n        _results = [];\n        for (n in _ref) {\n          _ = _ref[n];\n          _results.push(n);\n        }\n        return _results;\n      }).call(this)) + \"]]\";\n    };\n\n    Table.prototype.parents = function() {\n      var _ref;\n      return ((_ref = this.__parents__) != null ? _ref : []).slice();\n    };\n\n    Table.prototype.getDisplayName = function() {\n      return new Promise((function(_this) {\n        return function(resolve, reject) {\n          if (_this.model != null) {\n            return resolve(_this.model.makePath(_this.name).getDisplayName());\n          } else {\n            return reject(new Error('model not set - cannot make path'));\n          }\n        };\n      })(this));\n    };\n\n    return Table;\n\n  })();\n\n}).call(this);\n\n},{\"./promise\":8}],14:[function(_dereq_,module,exports){\n(function() {\n  var any, do_pref_req, error, get, isFunction, withCB, _ref,\n    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };\n\n  _ref = _dereq_('./util'), withCB = _ref.withCB, get = _ref.get, isFunction = _ref.isFunction, any = _ref.any, error = _ref.error;\n\n  do_pref_req = function(user, data, method, cb) {\n    return user.service.manageUserPreferences(method, data, cb).then(function(prefs) {\n      return user.preferences = prefs;\n    });\n  };\n\n  exports.User = (function() {\n    function User(service, _arg) {\n      this.service = service;\n      this.username = _arg.username, this.preferences = _arg.preferences;\n      this.refresh = __bind(this.refresh, this);\n      this.clearPreferences = __bind(this.clearPreferences, this);\n      this.clearPreference = __bind(this.clearPreference, this);\n      this.setPreferences = __bind(this.setPreferences, this);\n      this.setPreference = __bind(this.setPreference, this);\n      this.hasPreferences = this.preferences != null;\n      if (this.preferences == null) {\n        this.preferences = {};\n      }\n    }\n\n    User.prototype.setPreference = function(key, value, cb) {\n      var data, _ref1;\n      if (isFunction(value)) {\n        _ref1 = [null, value], value = _ref1[0], cb = _ref1[1];\n      }\n      if (typeof key === 'string') {\n        data = {};\n        data[key] = value;\n      } else if (value == null) {\n        data = key;\n      } else {\n        return withCB(cb, error(\"Incorrect arguments to setPreference\"));\n      }\n      return this.setPreferences(data, cb);\n    };\n\n    User.prototype.setPreferences = function(prefs, cb) {\n      return do_pref_req(this, prefs, 'POST', cb);\n    };\n\n    User.prototype.clearPreference = function(key, cb) {\n      return do_pref_req(this, {\n        key: key\n      }, 'DELETE', cb);\n    };\n\n    User.prototype.clearPreferences = function(cb) {\n      return do_pref_req(this, {}, 'DELETE', cb);\n    };\n\n    User.prototype.refresh = function(cb) {\n      return do_pref_req(this, {}, 'GET', cb);\n    };\n\n    User.prototype.createToken = function(type, message, cb) {\n      var _ref1, _ref2;\n      if (type == null) {\n        type = 'day';\n      }\n      if ((cb == null) && any([type, message], isFunction)) {\n        if (isFunction(type)) {\n          _ref1 = [null, null, type], type = _ref1[0], message = _ref1[1], cb = _ref1[2];\n        } else if (isFunction(message)) {\n          _ref2 = [null, message], message = _ref2[0], cb = _ref2[1];\n        }\n      }\n      return withCB(cb, this.service.post('user/tokens', {\n        type: type,\n        message: message\n      }).then(get('token')));\n    };\n\n    User.prototype.fetchCurrentTokens = function(cb) {\n      return withCB(cb, this.service.get('user/tokens').then(get('tokens')));\n    };\n\n    User.prototype.revokeAllTokens = function(cb) {\n      return withCB(cb, this.service.makeRequest('DELETE', 'user/tokens'));\n    };\n\n    User.prototype.revokeToken = function(token, cb) {\n      return withCB(cb, this.service.makeRequest('DELETE', \"user/tokens/\" + token));\n    };\n\n    return User;\n\n  })();\n\n}).call(this);\n\n},{\"./util\":15}],15:[function(_dereq_,module,exports){\n(function() {\n  var Promise, REQUIRES, comp, curry, encode, entities, error, flatten, fold, id, invoke, invokeWith, isArray, merge, pairFold, qsFromList, root, success, thenFold, _ref,\n    __slice = [].slice,\n    __indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; },\n    __hasProp = {}.hasOwnProperty;\n\n  Promise = _dereq_('./promise');\n\n  root = exports;\n\n  root.defer = function() {\n    var deferred;\n    deferred = {};\n    deferred.promise = new Promise(function(resolve, reject) {\n      deferred.resolve = resolve;\n      return deferred.reject = reject;\n    });\n    return deferred;\n  };\n\n  encode = function(x) {\n    return encodeURIComponent(String(x));\n  };\n\n  qsFromList = function(pairs) {\n    var pair;\n    return ((function() {\n      var _i, _len, _results;\n      _results = [];\n      for (_i = 0, _len = pairs.length; _i < _len; _i++) {\n        pair = pairs[_i];\n        _results.push(pair.map(encode).join('='));\n      }\n      return _results;\n    })()).join('&');\n  };\n\n  root.querystring = function(obj) {\n    var k, p, pairs, subList, sv, v;\n    if (!obj) {\n      return '';\n    }\n    if (isArray(obj)) {\n      pairs = obj.slice();\n    } else {\n      pairs = [];\n      for (k in obj) {\n        v = obj[k];\n        if (isArray(v)) {\n          subList = (function() {\n            var _i, _len, _results;\n            _results = [];\n            for (_i = 0, _len = v.length; _i < _len; _i++) {\n              sv = v[_i];\n              _results.push([k, sv]);\n            }\n            return _results;\n          })();\n          pairs = pairs.concat(subList);\n        } else {\n          pairs.push([k, v]);\n        }\n      }\n    }\n    return qsFromList((function() {\n      var _i, _len, _results;\n      _results = [];\n      for (_i = 0, _len = pairs.length; _i < _len; _i++) {\n        p = pairs[_i];\n        if (p[1] != null) {\n          _results.push(p);\n        }\n      }\n      return _results;\n    })());\n  };\n\n  root.curry = curry = function() {\n    var args, f;\n    f = arguments[0], args = 2 <= arguments.length ? __slice.call(arguments, 1) : [];\n    return function() {\n      var rest;\n      rest = 1 <= arguments.length ? __slice.call(arguments, 0) : [];\n      return f.apply(null, args.concat(rest));\n    };\n  };\n\n  root.error = error = function(e) {\n    return new Promise(function(_, reject) {\n      return reject(new Error(e));\n    });\n  };\n\n  root.success = success = function(x) {\n    return new Promise(function(resolve, _) {\n      return resolve(x);\n    });\n  };\n\n  root.parallel = function() {\n    var promises;\n    promises = 1 <= arguments.length ? __slice.call(arguments, 0) : [];\n    if (promises.length === 1 && (!promises[0].then) && promises[0].length) {\n      return Promise.all(promises[0]);\n    } else {\n      return Promise.all(promises);\n    }\n  };\n\n  root.withCB = function() {\n    var f, fs, onErr, onSucc, p, _i, _j, _len;\n    fs = 2 <= arguments.length ? __slice.call(arguments, 0, _i = arguments.length - 1) : (_i = 0, []), p = arguments[_i++];\n    for (_j = 0, _len = fs.length; _j < _len; _j++) {\n      f = fs[_j];\n      if (!(f != null)) {\n        continue;\n      }\n      onSucc = curry(f, null);\n      onErr = f;\n      p.then(onSucc, onErr);\n    }\n    return p;\n  };\n\n  root.fold = fold = function(f) {\n    return function(init, xs) {\n      var k, ret, v;\n      if (arguments.length === 1) {\n        xs = (init != null ? init.slice() : void 0) || init;\n        init = (xs != null ? xs.shift() : void 0) || {};\n      }\n      if (xs == null) {\n        throw new Error(\"xs is null\");\n      }\n      if (xs.reduce != null) {\n        return xs.reduce(f, init);\n      } else {\n        ret = init;\n        for (k in xs) {\n          v = xs[k];\n          ret = ret != null ? f(ret, k, v) : {\n            k: v\n          };\n        }\n        return ret;\n      }\n    };\n  };\n\n  root.take = function(n) {\n    return function(xs) {\n      if (n != null) {\n        return xs.slice(0, +(n - 1) + 1 || 9e9);\n      } else {\n        return xs.slice();\n      }\n    };\n  };\n\n  root.filter = function(f) {\n    return function(xs) {\n      var x, _i, _len, _results;\n      _results = [];\n      for (_i = 0, _len = xs.length; _i < _len; _i++) {\n        x = xs[_i];\n        if (f(x)) {\n          _results.push(x);\n        }\n      }\n      return _results;\n    };\n  };\n\n  root.uniqBy = function(f, xs) {\n    var k, keys, values, x, _i, _len;\n    if (arguments.length === 1) {\n      return curry(root.uniqBy, f);\n    }\n    keys = [];\n    values = [];\n    if (xs == null) {\n      return values;\n    }\n    for (_i = 0, _len = xs.length; _i < _len; _i++) {\n      x = xs[_i];\n      k = f(x);\n      if (__indexOf.call(keys, k) < 0) {\n        keys.push(k);\n        values.push(x);\n      }\n    }\n    return values;\n  };\n\n  root.find = function(xs, f) {\n    var x, _i, _len;\n    if (arguments.length === 1) {\n      f = xs;\n      return function(xs) {\n        return root.find(xs, f);\n      };\n    }\n    for (_i = 0, _len = xs.length; _i < _len; _i++) {\n      x = xs[_i];\n      if (f(x)) {\n        return x;\n      }\n    }\n    return null;\n  };\n\n  isArray = (_ref = Array.isArray) != null ? _ref : function(xs) {\n    return ((xs != null ? xs.splice : void 0) != null) && ((xs != null ? xs.push : void 0) != null) && ((xs != null ? xs.pop : void 0) != null) && ((xs != null ? xs.slice : void 0) != null);\n  };\n\n  root.isArray = isArray;\n\n  root.isFunction = typeof /./ !== 'function' ? function(f) {\n    return typeof f === 'function';\n  } : function(f) {\n    return (f != null) && (f.call != null) && (f.apply != null) && f.toString() === '[object Function]';\n  };\n\n  entities = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&apos;'\n  };\n\n  root.escape = function(str) {\n    var code, i, ret, withEntities, _i, _ref1;\n    if (str == null) {\n      return '';\n    }\n    withEntities = String(str).replace(/[&<>\"']/g, function(entity) {\n      return entities[entity];\n    });\n    ret = [];\n    for (i = _i = 0, _ref1 = withEntities.length; 0 <= _ref1 ? _i <= _ref1 : _i >= _ref1; i = 0 <= _ref1 ? ++_i : --_i) {\n      code = withEntities.charCodeAt(i);\n      if (code > 256) {\n        ret.push(\"&#\" + code + \";\");\n      } else {\n        ret.push(withEntities.charAt(i));\n      }\n    }\n    return ret.join('');\n  };\n\n  root.omap = function(f) {\n    var merger;\n    merger = fold(function(a, oldk, oldv) {\n      var newk, newv, _ref1;\n      _ref1 = f(oldk, oldv), newk = _ref1[0], newv = _ref1[1];\n      if (isArray(newv)) {\n        newv = newv.slice();\n      }\n      a[newk] = newv;\n      return a;\n    });\n    return function(xs) {\n      return merger({}, xs);\n    };\n  };\n\n  root.copy = root.omap(function(k, v) {\n    return [k, v];\n  });\n\n  root.partition = function(f) {\n    return function(xs) {\n      var divide;\n      divide = fold(function(_arg, x) {\n        var falses, trues;\n        trues = _arg[0], falses = _arg[1];\n        if (f(x)) {\n          return [trues.concat([x]), falses];\n        } else {\n          return [trues, falses.concat([x])];\n        }\n      });\n      return divide([[], []], xs);\n    };\n  };\n\n  root.id = id = function(x) {\n    return x;\n  };\n\n  root.concatMap = function(f) {\n    return function(xs) {\n      var fx, ret, x, _i, _len;\n      ret = void 0;\n      for (_i = 0, _len = xs.length; _i < _len; _i++) {\n        x = xs[_i];\n        fx = f(x);\n        ret = ret === void 0 ? fx : typeof ret === 'number' ? ret + fx : ret.concat != null ? ret.concat(fx) : merge(ret, fx);\n      }\n      return ret;\n    };\n  };\n\n  root.map = function(f) {\n    return invoke('map', f);\n  };\n\n  comp = fold(function(f, g) {\n    return function() {\n      var args;\n      args = 1 <= arguments.length ? __slice.call(arguments, 0) : [];\n      return f(g.apply(null, args));\n    };\n  });\n\n  root.compose = function() {\n    var fs;\n    fs = 1 <= arguments.length ? __slice.call(arguments, 0) : [];\n    return comp(fs);\n  };\n\n  root.flatMap = root.concatMap;\n\n  root.difference = function(xs, remove) {\n    var x, _i, _len, _results;\n    _results = [];\n    for (_i = 0, _len = xs.length; _i < _len; _i++) {\n      x = xs[_i];\n      if (__indexOf.call(remove, x) < 0) {\n        _results.push(x);\n      }\n    }\n    return _results;\n  };\n\n  root.stringList = function(x) {\n    if (typeof x === 'string') {\n      return [x];\n    } else {\n      return x;\n    }\n  };\n\n  root.flatten = flatten = function() {\n    var ret, x, xs, xx, _i, _j, _len, _len1, _ref1;\n    xs = 1 <= arguments.length ? __slice.call(arguments, 0) : [];\n    ret = [];\n    for (_i = 0, _len = xs.length; _i < _len; _i++) {\n      x = xs[_i];\n      if (isArray(x)) {\n        _ref1 = flatten.apply(null, x);\n        for (_j = 0, _len1 = _ref1.length; _j < _len1; _j++) {\n          xx = _ref1[_j];\n          ret.push(xx);\n        }\n      } else {\n        ret.push(x);\n      }\n    }\n    return ret;\n  };\n\n  root.sum = root.concatMap(id);\n\n  root.merge = merge = function() {\n    var k, newObj, o, objs, v, _i, _len;\n    objs = 1 <= arguments.length ? __slice.call(arguments, 0) : [];\n    newObj = {};\n    for (_i = 0, _len = objs.length; _i < _len; _i++) {\n      o = objs[_i];\n      for (k in o) {\n        if (!__hasProp.call(o, k)) continue;\n        v = o[k];\n        newObj[k] = v;\n      }\n    }\n    return newObj;\n  };\n\n  root.any = function(xs, f) {\n    var x, _i, _len;\n    if (f == null) {\n      f = id;\n    }\n    for (_i = 0, _len = xs.length; _i < _len; _i++) {\n      x = xs[_i];\n      if (f(x)) {\n        return true;\n      }\n    }\n    return false;\n  };\n\n  root.invoke = invoke = function() {\n    var args, name;\n    name = arguments[0], args = 2 <= arguments.length ? __slice.call(arguments, 1) : [];\n    return invokeWith(name, args);\n  };\n\n  root.invokeWith = invokeWith = function(name, args, ctx) {\n    if (args == null) {\n      args = [];\n    }\n    if (ctx == null) {\n      ctx = null;\n    }\n    return function(o) {\n      if (o == null) {\n        throw new Error(\"Cannot call method \\\"\" + name + \"\\\" of null\");\n      }\n      if (!o[name]) {\n        throw new Error(\"Cannot call undefined method \\\"\" + name + \" of \" + o);\n      } else {\n        return o[name].apply(ctx || o, args);\n      }\n    };\n  };\n\n  root.get = function(name) {\n    return function(obj) {\n      return obj[name];\n    };\n  };\n\n  root.set = function(name, value) {\n    return function(obj) {\n      var k, v;\n      if (arguments.length === 2) {\n        obj[name] = value;\n      } else {\n        for (k in name) {\n          if (!__hasProp.call(name, k)) continue;\n          v = name[k];\n          obj[k] = v;\n        }\n      }\n      return obj;\n    };\n  };\n\n  REQUIRES = function(required, got) {\n    return \"This service requires a service at version \" + required + \" or above. This one is at \" + got;\n  };\n\n  root.REQUIRES_VERSION = function(s, n, f) {\n    return s.fetchVersion().then(function(v) {\n      if (v >= n) {\n        return f();\n      } else {\n        return error(REQUIRES(n, v));\n      }\n    });\n  };\n\n  root.dejoin = function(q) {\n    var parts, view, _i, _len, _ref1;\n    _ref1 = q.views;\n    for (_i = 0, _len = _ref1.length; _i < _len; _i++) {\n      view = _ref1[_i];\n      parts = view.split('.');\n      if (parts.length > 2) {\n        q.addJoin(parts.slice(1, -1).join('.'));\n      }\n    }\n    return q;\n  };\n\n  thenFold = fold(function(p, f) {\n    return p.then(f);\n  });\n\n  root.sequence = function() {\n    var fns;\n    fns = 1 <= arguments.length ? __slice.call(arguments, 0) : [];\n    return thenFold(success(), fns);\n  };\n\n  pairFold = fold(function(o, _arg) {\n    var k, v;\n    k = _arg[0], v = _arg[1];\n    if (o[k] != null) {\n      throw new Error(\"Duplicate key: \" + k);\n    }\n    o[k] = v;\n    return o;\n  });\n\n  root.pairsToObj = function(pairs) {\n    return pairFold({}, pairs);\n  };\n\n}).call(this);\n\n},{\"./promise\":8}],16:[function(_dereq_,module,exports){\n(function() {\n  exports.VERSION = '3.13.0';\n\n}).call(this);\n\n},{}],17:[function(_dereq_,module,exports){\n(function() {\n  var DOMParser, sanitize;\n\n  DOMParser = _dereq_('xmldom').DOMParser;\n\n  sanitize = function(xml) {\n    xml = xml.replace(/^\\s*/g, '');\n    xml = xml.replace(/\\s$/g, '');\n    if (xml.length === 0) {\n      return xml;\n    } else if (xml[xml.length - 1] !== '>') {\n      return xml + '>';\n    } else {\n      return xml;\n    }\n  };\n\n  exports.parse = function(xml) {\n    var dom, parser;\n    if (typeof xml !== 'string') {\n      throw new Error(\"Expected a string - got \" + xml);\n    }\n    xml = sanitize(xml);\n    if (!xml) {\n      throw new Error(\"Expected content - got empty string\");\n    }\n    dom = (function() {\n      try {\n        parser = new DOMParser();\n        return parser.parseFromString(xml, 'text/xml');\n      } catch (_error) {}\n    })();\n    if ((!dom) || (!dom.documentElement) || dom.getElementsByTagName('parsererror').length) {\n      throw new Error(\"Invalid XML: \" + xml);\n    }\n    return dom;\n  };\n\n}).call(this);\n\n},{\"xmldom\":11}],18:[function(_dereq_,module,exports){\n(function (process,Buffer){\n\n\nvar Parser = _dereq_('jsonparse')\n  , through = _dereq_('through')\n\n/*\n\n  the value of this.stack that creationix's jsonparse has is weird.\n\n  it makes this code ugly, but his problem is way harder that mine,\n  so i'll forgive him.\n\n*/\n\nexports.parse = function (path, map) {\n\n  var parser = new Parser()\n  var stream = through(function (chunk) {\n    if('string' === typeof chunk)\n      chunk = new Buffer(chunk)\n    parser.write(chunk)\n  },\n  function (data) {\n    if(data)\n      stream.write(data)\n    stream.queue(null)\n  })\n\n  if('string' === typeof path)\n    path = path.split('.').map(function (e) {\n      if (e === '*')\n        return true\n      else if (e === '') // '..'.split('.') returns an empty string\n        return {recurse: true}\n      else\n        return e\n    })\n\n\n  var count = 0, _key\n  if(!path || !path.length)\n    path = null\n\n  parser.onValue = function (value) {\n    if (!this.root)\n      stream.root = value\n\n    if(! path) return\n\n    var i = 0 // iterates on path\n    var j  = 0 // iterates on stack\n    while (i < path.length) {\n      var key = path[i]\n      var c\n      j++\n\n      if (key && !key.recurse) {\n        c = (j === this.stack.length) ? this : this.stack[j]\n        if (!c) return\n        if (! check(key, c.key)) return\n        i++\n      } else {\n        i++\n        var nextKey = path[i]\n        if (! nextKey) return\n        while (true) {\n          c = (j === this.stack.length) ? this : this.stack[j]\n          if (!c) return\n          if (check(nextKey, c.key)) { i++; break}\n          j++\n        }\n      }\n    }\n    if (j !== this.stack.length) return\n\n    count ++\n    var actualPath = this.stack.slice(1).map(function(element) { return element.key }).concat([this.key])\n    var data = this.value[this.key]\n    if(null != data)\n      if(null != (data = map ? map(data, actualPath) : data))\n        stream.queue(data)\n    delete this.value[this.key]\n  }\n  parser._onToken = parser.onToken;\n\n  parser.onToken = function (token, value) {\n    parser._onToken(token, value);\n    if (this.stack.length === 0) {\n      if (stream.root) {\n        if(!path)\n          stream.queue(stream.root)\n        stream.emit('root', stream.root, count)\n        count = 0;\n        stream.root = null;\n      }\n    }\n  }\n\n  parser.onError = function (err) {\n    stream.emit('error', err)\n  }\n\n\n  return stream\n}\n\nfunction check (x, y) {\n  if ('string' === typeof x)\n    return y == x\n  else if (x && 'function' === typeof x.exec)\n    return x.exec(y)\n  else if ('boolean' === typeof x)\n    return x\n  else if ('function' === typeof x)\n    return x(y)\n  return false\n}\n\nexports.stringify = function (op, sep, cl, indent) {\n  indent = indent || 0\n  if (op === false){\n    op = ''\n    sep = '\\n'\n    cl = ''\n  } else if (op == null) {\n\n    op = '[\\n'\n    sep = '\\n,\\n'\n    cl = '\\n]\\n'\n\n  }\n\n  //else, what ever you like\n\n  var stream\n    , first = true\n    , anyData = false\n  stream = through(function (data) {\n    anyData = true\n    var json = JSON.stringify(data, null, indent)\n    if(first) { first = false ; stream.queue(op + json)}\n    else stream.queue(sep + json)\n  },\n  function (data) {\n    if(!anyData)\n      stream.queue(op)\n    stream.queue(cl)\n    stream.queue(null)\n  })\n\n  return stream\n}\n\nexports.stringifyObject = function (op, sep, cl, indent) {\n  indent = indent || 0\n  if (op === false){\n    op = ''\n    sep = '\\n'\n    cl = ''\n  } else if (op == null) {\n\n    op = '{\\n'\n    sep = '\\n,\\n'\n    cl = '\\n}\\n'\n\n  }\n\n  //else, what ever you like\n\n  var first = true\n    , anyData = false\n  stream = through(function (data) {\n    anyData = true\n    var json = JSON.stringify(data[0]) + ':' + JSON.stringify(data[1], null, indent)\n    if(first) { first = false ; this.queue(op + json)}\n    else this.queue(sep + json)\n  },\n  function (data) {\n    if(!anyData) this.queue(op)\n    this.queue(cl)\n\n    this.queue(null)\n  })\n\n  return stream\n}\n\nif(!module.parent && process.title !== 'browser') {\n  process.stdin\n    .pipe(exports.parse(process.argv[2]))\n    .pipe(exports.stringify('[', ',\\n', ']\\n', 2))\n    .pipe(process.stdout)\n}\n\n}).call(this,_dereq_(\"/home/alex/projects/javascript/imjs/node_modules/insert-module-globals/node_modules/process/browser.js\"),_dereq_(\"buffer\").Buffer)\n},{\"/home/alex/projects/javascript/imjs/node_modules/insert-module-globals/node_modules/process/browser.js\":55,\"buffer\":23,\"jsonparse\":19,\"through\":56}],19:[function(_dereq_,module,exports){\n(function (Buffer){\n/*global Buffer*/\n// Named constants with unique integer values\nvar C = {};\n// Tokens\nvar LEFT_BRACE    = C.LEFT_BRACE    = 0x1;\nvar RIGHT_BRACE   = C.RIGHT_BRACE   = 0x2;\nvar LEFT_BRACKET  = C.LEFT_BRACKET  = 0x3;\nvar RIGHT_BRACKET = C.RIGHT_BRACKET = 0x4;\nvar COLON         = C.COLON         = 0x5;\nvar COMMA         = C.COMMA         = 0x6;\nvar TRUE          = C.TRUE          = 0x7;\nvar FALSE         = C.FALSE         = 0x8;\nvar NULL          = C.NULL          = 0x9;\nvar STRING        = C.STRING        = 0xa;\nvar NUMBER        = C.NUMBER        = 0xb;\n// Tokenizer States\nvar START   = C.START   = 0x11;\nvar TRUE1   = C.TRUE1   = 0x21;\nvar TRUE2   = C.TRUE2   = 0x22;\nvar TRUE3   = C.TRUE3   = 0x23;\nvar FALSE1  = C.FALSE1  = 0x31;\nvar FALSE2  = C.FALSE2  = 0x32;\nvar FALSE3  = C.FALSE3  = 0x33;\nvar FALSE4  = C.FALSE4  = 0x34;\nvar NULL1   = C.NULL1   = 0x41;\nvar NULL2   = C.NULL3   = 0x42;\nvar NULL3   = C.NULL2   = 0x43;\nvar NUMBER1 = C.NUMBER1 = 0x51;\nvar NUMBER2 = C.NUMBER2 = 0x52;\nvar NUMBER3 = C.NUMBER3 = 0x53;\nvar NUMBER4 = C.NUMBER4 = 0x54;\nvar NUMBER5 = C.NUMBER5 = 0x55;\nvar NUMBER6 = C.NUMBER6 = 0x56;\nvar NUMBER7 = C.NUMBER7 = 0x57;\nvar NUMBER8 = C.NUMBER8 = 0x58;\nvar STRING1 = C.STRING1 = 0x61;\nvar STRING2 = C.STRING2 = 0x62;\nvar STRING3 = C.STRING3 = 0x63;\nvar STRING4 = C.STRING4 = 0x64;\nvar STRING5 = C.STRING5 = 0x65;\nvar STRING6 = C.STRING6 = 0x66;\n// Parser States\nvar VALUE   = C.VALUE   = 0x71;\nvar KEY     = C.KEY     = 0x72;\n// Parser Modes\nvar OBJECT  = C.OBJECT  = 0x81;\nvar ARRAY   = C.ARRAY   = 0x82;\n\n// Slow code to string converter (only used when throwing syntax errors)\nfunction toknam(code) {\n  var keys = Object.keys(C);\n  for (var i = 0, l = keys.length; i < l; i++) {\n    var key = keys[i];\n    if (C[key] === code) { return key; }\n  }\n  return code && (\"0x\" + code.toString(16));\n}\n\n\nfunction Parser() {\n  this.tState = START;\n  this.value = undefined;\n\n  this.string = undefined; // string data\n  this.unicode = undefined; // unicode escapes\n\n  // For number parsing\n  this.negative = undefined;\n  this.magnatude = undefined;\n  this.position = undefined;\n  this.exponent = undefined;\n  this.negativeExponent = undefined;\n  \n  this.key = undefined;\n  this.mode = undefined;\n  this.stack = [];\n  this.state = VALUE;\n  this.bytes_remaining = 0; // number of bytes remaining in multi byte utf8 char to read after split boundary\n  this.bytes_in_sequence = 0; // bytes in multi byte utf8 char to read\n  this.temp_buffs = { \"2\": new Buffer(2), \"3\": new Buffer(3), \"4\": new Buffer(4) }; // for rebuilding chars split before boundary is reached\n}\nvar proto = Parser.prototype;\nproto.charError = function (buffer, i) {\n  this.onError(new Error(\"Unexpected \" + JSON.stringify(String.fromCharCode(buffer[i])) + \" at position \" + i + \" in state \" + toknam(this.tState)));\n};\nproto.onError = function (err) { throw err; };\nproto.write = function (buffer) {\n  if (typeof buffer === \"string\") buffer = new Buffer(buffer);\n  //process.stdout.write(\"Input: \");\n  //console.dir(buffer.toString());\n  var n;\n  for (var i = 0, l = buffer.length; i < l; i++) {\n    if (this.tState === START){\n      n = buffer[i];\n      if(n === 0x7b){ this.onToken(LEFT_BRACE, \"{\"); // {\n      }else if(n === 0x7d){ this.onToken(RIGHT_BRACE, \"}\"); // }\n      }else if(n === 0x5b){ this.onToken(LEFT_BRACKET, \"[\"); // [\n      }else if(n === 0x5d){ this.onToken(RIGHT_BRACKET, \"]\"); // ]\n      }else if(n === 0x3a){ this.onToken(COLON, \":\");  // :\n      }else if(n === 0x2c){ this.onToken(COMMA, \",\"); // ,\n      }else if(n === 0x74){ this.tState = TRUE1;  // t\n      }else if(n === 0x66){ this.tState = FALSE1;  // f\n      }else if(n === 0x6e){ this.tState = NULL1; // n\n      }else if(n === 0x22){ this.string = \"\"; this.tState = STRING1; // \"\n      }else if(n === 0x2d){ this.negative = true; this.tState = NUMBER1; // -\n      }else if(n === 0x30){ this.magnatude = 0; this.tState = NUMBER2; // 0\n      }else{\n        if (n > 0x30 && n < 0x40) { // 1-9\n          this.magnatude = n - 0x30; this.tState = NUMBER3;\n        } else if (n === 0x20 || n === 0x09 || n === 0x0a || n === 0x0d) {\n          // whitespace\n        } else { this.charError(buffer, i); }\n      }\n    }else if (this.tState === STRING1){ // After open quote\n      n = buffer[i]; // get current byte from buffer\n      // check for carry over of a multi byte char split between data chunks\n      // & fill temp buffer it with start of this data chunk up to the boundary limit set in the last iteration\n      if (this.bytes_remaining > 0) {\n        for (var j = 0; j < this.bytes_remaining; j++) {\n          this.temp_buffs[this.bytes_in_sequence][this.bytes_in_sequence - this.bytes_remaining + j] = buffer[j];\n        }\n        this.string += this.temp_buffs[this.bytes_in_sequence].toString();\n        this.bytes_in_sequence = this.bytes_remaining = 0;\n        i = i + j - 1;\n      } else if (this.bytes_remaining === 0 && n >= 128) { // else if no remainder bytes carried over, parse multi byte (>=128) chars one at a time\n        if ((n >= 194) && (n <= 223)) this.bytes_in_sequence = 2;\n        if ((n >= 224) && (n <= 239)) this.bytes_in_sequence = 3;\n        if ((n >= 240) && (n <= 244)) this.bytes_in_sequence = 4;\n        if ((this.bytes_in_sequence + i) > buffer.length) { // if bytes needed to complete char fall outside buffer length, we have a boundary split\n          for (var k = 0; k <= (buffer.length - 1 - i); k++) {\n            this.temp_buffs[this.bytes_in_sequence][k] = buffer[i + k]; // fill temp buffer of correct size with bytes available in this chunk\n          }\n          this.bytes_remaining = (i + this.bytes_in_sequence) - buffer.length;\n          i = buffer.length - 1;\n        } else {\n          this.string += buffer.slice(i, (i + this.bytes_in_sequence)).toString();\n          i = i + this.bytes_in_sequence - 1;\n        }\n      } else if (n === 0x22) { this.tState = START; this.onToken(STRING, this.string); this.string = undefined; }\n      else if (n === 0x5c) { this.tState = STRING2; }\n      else if (n >= 0x20) { this.string += String.fromCharCode(n); }\n      else { this.charError(buffer, i); }\n    }else if (this.tState === STRING2){ // After backslash\n      n = buffer[i];\n      if(n === 0x22){ this.string += \"\\\"\"; this.tState = STRING1;\n      }else if(n === 0x5c){ this.string += \"\\\\\"; this.tState = STRING1; \n      }else if(n === 0x2f){ this.string += \"\\/\"; this.tState = STRING1; \n      }else if(n === 0x62){ this.string += \"\\b\"; this.tState = STRING1; \n      }else if(n === 0x66){ this.string += \"\\f\"; this.tState = STRING1; \n      }else if(n === 0x6e){ this.string += \"\\n\"; this.tState = STRING1; \n      }else if(n === 0x72){ this.string += \"\\r\"; this.tState = STRING1; \n      }else if(n === 0x74){ this.string += \"\\t\"; this.tState = STRING1; \n      }else if(n === 0x75){ this.unicode = \"\"; this.tState = STRING3;\n      }else{ \n        this.charError(buffer, i); \n      }\n    }else if (this.tState === STRING3 || this.tState === STRING4 || this.tState === STRING5 || this.tState === STRING6){ // unicode hex codes\n      n = buffer[i];\n      // 0-9 A-F a-f\n      if ((n >= 0x30 && n < 0x40) || (n > 0x40 && n <= 0x46) || (n > 0x60 && n <= 0x66)) {\n        this.unicode += String.fromCharCode(n);\n        if (this.tState++ === STRING6) {\n          this.string += String.fromCharCode(parseInt(this.unicode, 16));\n          this.unicode = undefined;\n          this.tState = STRING1; \n        }\n      } else {\n        this.charError(buffer, i);\n      }\n    }else if (this.tState === NUMBER1){ // after minus\n      n = buffer[i];\n      if (n === 0x30) { this.magnatude = 0; this.tState = NUMBER2; }\n      else if (n > 0x30 && n < 0x40) { this.magnatude = n - 0x30; this.tState = NUMBER3; }\n      else { this.charError(buffer, i); }\n    }else if (this.tState === NUMBER2){ // * After initial zero\n      n = buffer[i];\n      if(n === 0x2e){ // .\n        this.position = 0.1; this.tState = NUMBER4;\n      }else if(n === 0x65 ||  n === 0x45){ // e/E\n        this.exponent = 0; this.tState = NUMBER6;\n      }else{\n        this.tState = START;\n        this.onToken(NUMBER, 0);\n        this.magnatude = undefined;\n        this.negative = undefined;\n        i--;\n      }\n    }else if (this.tState === NUMBER3){ // * After digit (before period)\n      n = buffer[i];\n      if(n === 0x2e){ // .\n        this.position = 0.1; this.tState = NUMBER4;\n      }else if(n === 0x65 || n === 0x45){ // e/E\n        this.exponent = 0; this.tState = NUMBER6;\n      }else{\n        if (n >= 0x30 && n < 0x40) { this.magnatude = this.magnatude * 10 + n - 0x30; }\n        else {\n          this.tState = START; \n          if (this.negative) {\n            this.magnatude = -this.magnatude;\n            this.negative = undefined;\n          }\n          this.onToken(NUMBER, this.magnatude); \n          this.magnatude = undefined;\n          i--;\n        }\n      }\n    }else if (this.tState === NUMBER4){ // After period\n      n = buffer[i];\n      if (n >= 0x30 && n < 0x40) { // 0-9\n        this.magnatude += this.position * (n - 0x30);\n        this.position /= 10;\n        this.tState = NUMBER5; \n      } else { this.charError(buffer, i); }\n    }else if (this.tState === NUMBER5){ // * After digit (after period)\n      n = buffer[i];\n      if (n >= 0x30 && n < 0x40) { // 0-9\n        this.magnatude += this.position * (n - 0x30);\n        this.position /= 10;\n      }\n      else if (n === 0x65 || n === 0x45) { this.exponent = 0; this.tState = NUMBER6; } // E/e\n      else {\n        this.tState = START; \n        if (this.negative) {\n          this.magnatude = -this.magnatude;\n          this.negative = undefined;\n        }\n        this.onToken(NUMBER, this.negative ? -this.magnatude : this.magnatude); \n        this.magnatude = undefined;\n        this.position = undefined;\n        i--; \n      }\n    }else if (this.tState === NUMBER6){ // After E\n      n = buffer[i];\n      if (n === 0x2b || n === 0x2d) { // +/-\n        if (n === 0x2d) { this.negativeExponent = true; }\n        this.tState = NUMBER7;\n      }\n      else if (n >= 0x30 && n < 0x40) {\n        this.exponent = this.exponent * 10 + (n - 0x30);\n        this.tState = NUMBER8;\n      }\n      else { this.charError(buffer, i); }  \n    }else if (this.tState === NUMBER7){ // After +/-\n      n = buffer[i];\n      if (n >= 0x30 && n < 0x40) { // 0-9\n        this.exponent = this.exponent * 10 + (n - 0x30);\n        this.tState = NUMBER8;\n      }\n      else { this.charError(buffer, i); }  \n    }else if (this.tState === NUMBER8){ // * After digit (after +/-)\n      n = buffer[i];\n      if (n >= 0x30 && n < 0x40) { // 0-9\n        this.exponent = this.exponent * 10 + (n - 0x30);\n      }\n      else {\n        if (this.negativeExponent) {\n          this.exponent = -this.exponent;\n          this.negativeExponent = undefined;\n        }\n        this.magnatude *= Math.pow(10, this.exponent);\n        this.exponent = undefined;\n        if (this.negative) { \n          this.magnatude = -this.magnatude;\n          this.negative = undefined;\n        }\n        this.tState = START;\n        this.onToken(NUMBER, this.magnatude);\n        this.magnatude = undefined;\n        i--; \n      } \n    }else if (this.tState === TRUE1){ // r\n      if (buffer[i] === 0x72) { this.tState = TRUE2; }\n      else { this.charError(buffer, i); }\n    }else if (this.tState === TRUE2){ // u\n      if (buffer[i] === 0x75) { this.tState = TRUE3; }\n      else { this.charError(buffer, i); }\n    }else if (this.tState === TRUE3){ // e\n      if (buffer[i] === 0x65) { this.tState = START; this.onToken(TRUE, true); }\n      else { this.charError(buffer, i); }\n    }else if (this.tState === FALSE1){ // a\n      if (buffer[i] === 0x61) { this.tState = FALSE2; }\n      else { this.charError(buffer, i); }\n    }else if (this.tState === FALSE2){ // l\n      if (buffer[i] === 0x6c) { this.tState = FALSE3; }\n      else { this.charError(buffer, i); }\n    }else if (this.tState === FALSE3){ // s\n      if (buffer[i] === 0x73) { this.tState = FALSE4; }\n      else { this.charError(buffer, i); }\n    }else if (this.tState === FALSE4){ // e\n      if (buffer[i] === 0x65) { this.tState = START; this.onToken(FALSE, false); }\n      else { this.charError(buffer, i); }\n    }else if (this.tState === NULL1){ // u\n      if (buffer[i] === 0x75) { this.tState = NULL2; }\n      else { this.charError(buffer, i); }\n    }else if (this.tState === NULL2){ // l\n      if (buffer[i] === 0x6c) { this.tState = NULL3; }\n      else { this.charError(buffer, i); }\n    }else if (this.tState === NULL3){ // l\n      if (buffer[i] === 0x6c) { this.tState = START; this.onToken(NULL, null); }\n      else { this.charError(buffer, i); }\n    }\n  }\n};\nproto.onToken = function (token, value) {\n  // Override this to get events\n};\n\nproto.parseError = function (token, value) {\n  this.onError(new Error(\"Unexpected \" + toknam(token) + (value ? (\"(\" + JSON.stringify(value) + \")\") : \"\") + \" in state \" + toknam(this.state)));\n};\nproto.onError = function (err) { throw err; };\nproto.push = function () {\n  this.stack.push({value: this.value, key: this.key, mode: this.mode});\n};\nproto.pop = function () {\n  var value = this.value;\n  var parent = this.stack.pop();\n  this.value = parent.value;\n  this.key = parent.key;\n  this.mode = parent.mode;\n  this.emit(value);\n  if (!this.mode) { this.state = VALUE; }\n};\nproto.emit = function (value) {\n  if (this.mode) { this.state = COMMA; }\n  this.onValue(value);\n};\nproto.onValue = function (value) {\n  // Override me\n};  \nproto.onToken = function (token, value) {\n  //console.log(\"OnToken: state=%s token=%s %s\", toknam(this.state), toknam(token), value?JSON.stringify(value):\"\");\n  if(this.state === VALUE){\n    if(token === STRING || token === NUMBER || token === TRUE || token === FALSE || token === NULL){\n      if (this.value) {\n        this.value[this.key] = value;\n      }\n      this.emit(value);  \n    }else if(token === LEFT_BRACE){\n      this.push();\n      if (this.value) {\n        this.value = this.value[this.key] = {};\n      } else {\n        this.value = {};\n      }\n      this.key = undefined;\n      this.state = KEY;\n      this.mode = OBJECT;\n    }else if(token === LEFT_BRACKET){\n      this.push();\n      if (this.value) {\n        this.value = this.value[this.key] = [];\n      } else {\n        this.value = [];\n      }\n      this.key = 0;\n      this.mode = ARRAY;\n      this.state = VALUE;\n    }else if(token === RIGHT_BRACE){\n      if (this.mode === OBJECT) {\n        this.pop();\n      } else {\n        this.parseError(token, value);\n      }\n    }else if(token === RIGHT_BRACKET){\n      if (this.mode === ARRAY) {\n        this.pop();\n      } else {\n        this.parseError(token, value);\n      }\n    }else{\n      this.parseError(token, value);\n    }\n  }else if(this.state === KEY){\n    if (token === STRING) {\n      this.key = value;\n      this.state = COLON;\n    } else if (token === RIGHT_BRACE) {\n      this.pop();\n    } else {\n      this.parseError(token, value);\n    }\n  }else if(this.state === COLON){\n    if (token === COLON) { this.state = VALUE; }\n    else { this.parseError(token, value); }\n  }else if(this.state === COMMA){\n    if (token === COMMA) { \n      if (this.mode === ARRAY) { this.key++; this.state = VALUE; }\n      else if (this.mode === OBJECT) { this.state = KEY; }\n\n    } else if (token === RIGHT_BRACKET && this.mode === ARRAY || token === RIGHT_BRACE && this.mode === OBJECT) {\n      this.pop();\n    } else {\n      this.parseError(token, value);\n    }\n  }else{\n    this.parseError(token, value);\n  }\n};\n\nmodule.exports = Parser;\n\n}).call(this,_dereq_(\"buffer\").Buffer)\n},{\"buffer\":23}],20:[function(_dereq_,module,exports){\n/**\n * Standalone extraction of Backbone.Events, no external dependency required.\n * Degrades nicely when Backone/underscore are already available in the current\n * global context.\n *\n * Note that docs suggest to use underscore's `_.extend()` method to add Events\n * support to some given object. A `mixin()` method has been added to the Events\n * prototype to avoid using underscore for that sole purpose:\n *\n *     var myEventEmitter = BackboneEvents.mixin({});\n *\n * Or for a function constructor:\n *\n *     function MyConstructor(){}\n *     MyConstructor.prototype.foo = function(){}\n *     BackboneEvents.mixin(MyConstructor.prototype);\n *\n * (c) 2009-2013 Jeremy Ashkenas, DocumentCloud Inc.\n * (c) 2013 Nicolas Perriault\n */\n/* global exports:true, define, module */\n(function() {\n  var root = this,\n      breaker = {},\n      nativeForEach = Array.prototype.forEach,\n      hasOwnProperty = Object.prototype.hasOwnProperty,\n      slice = Array.prototype.slice,\n      idCounter = 0;\n\n  // Returns a partial implementation matching the minimal API subset required\n  // by Backbone.Events\n  function miniscore() {\n    return {\n      keys: Object.keys || function (obj) {\n        if (typeof obj !== \"object\" && typeof obj !== \"function\" || obj === null) {\n          throw new TypeError(\"keys() called on a non-object\");\n        }\n        var key, keys = [];\n        for (key in obj) {\n          if (obj.hasOwnProperty(key)) {\n            keys[keys.length] = key;\n          }\n        }\n        return keys;\n      },\n\n      uniqueId: function(prefix) {\n        var id = ++idCounter + '';\n        return prefix ? prefix + id : id;\n      },\n\n      has: function(obj, key) {\n        return hasOwnProperty.call(obj, key);\n      },\n\n      each: function(obj, iterator, context) {\n        if (obj == null) return;\n        if (nativeForEach && obj.forEach === nativeForEach) {\n          obj.forEach(iterator, context);\n        } else if (obj.length === +obj.length) {\n          for (var i = 0, l = obj.length; i < l; i++) {\n            if (iterator.call(context, obj[i], i, obj) === breaker) return;\n          }\n        } else {\n          for (var key in obj) {\n            if (this.has(obj, key)) {\n              if (iterator.call(context, obj[key], key, obj) === breaker) return;\n            }\n          }\n        }\n      },\n\n      once: function(func) {\n        var ran = false, memo;\n        return function() {\n          if (ran) return memo;\n          ran = true;\n          memo = func.apply(this, arguments);\n          func = null;\n          return memo;\n        };\n      }\n    };\n  }\n\n  var _ = miniscore(), Events;\n\n  // Backbone.Events\n  // ---------------\n\n  // A module that can be mixed in to *any object* in order to provide it with\n  // custom events. You may bind with `on` or remove with `off` callback\n  // functions to an event; `trigger`-ing an event fires all callbacks in\n  // succession.\n  //\n  //     var object = {};\n  //     _.extend(object, Backbone.Events);\n  //     object.on('expand', function(){ alert('expanded'); });\n  //     object.trigger('expand');\n  //\n  Events = {\n\n    // Bind an event to a `callback` function. Passing `\"all\"` will bind\n    // the callback to all events fired.\n    on: function(name, callback, context) {\n      if (!eventsApi(this, 'on', name, [callback, context]) || !callback) return this;\n      this._events || (this._events = {});\n      var events = this._events[name] || (this._events[name] = []);\n      events.push({callback: callback, context: context, ctx: context || this});\n      return this;\n    },\n\n    // Bind an event to only be triggered a single time. After the first time\n    // the callback is invoked, it will be removed.\n    once: function(name, callback, context) {\n      if (!eventsApi(this, 'once', name, [callback, context]) || !callback) return this;\n      var self = this;\n      var once = _.once(function() {\n        self.off(name, once);\n        callback.apply(this, arguments);\n      });\n      once._callback = callback;\n      return this.on(name, once, context);\n    },\n\n    // Remove one or many callbacks. If `context` is null, removes all\n    // callbacks with that function. If `callback` is null, removes all\n    // callbacks for the event. If `name` is null, removes all bound\n    // callbacks for all events.\n    off: function(name, callback, context) {\n      var retain, ev, events, names, i, l, j, k;\n      if (!this._events || !eventsApi(this, 'off', name, [callback, context])) return this;\n      if (!name && !callback && !context) {\n        this._events = {};\n        return this;\n      }\n\n      names = name ? [name] : _.keys(this._events);\n      for (i = 0, l = names.length; i < l; i++) {\n        name = names[i];\n        if (events = this._events[name]) {\n          this._events[name] = retain = [];\n          if (callback || context) {\n            for (j = 0, k = events.length; j < k; j++) {\n              ev = events[j];\n              if ((callback && callback !== ev.callback && callback !== ev.callback._callback) ||\n                  (context && context !== ev.context)) {\n                retain.push(ev);\n              }\n            }\n          }\n          if (!retain.length) delete this._events[name];\n        }\n      }\n\n      return this;\n    },\n\n    // Trigger one or many events, firing all bound callbacks. Callbacks are\n    // passed the same arguments as `trigger` is, apart from the event name\n    // (unless you're listening on `\"all\"`, which will cause your callback to\n    // receive the true name of the event as the first argument).\n    trigger: function(name) {\n      if (!this._events) return this;\n      var args = slice.call(arguments, 1);\n      if (!eventsApi(this, 'trigger', name, args)) return this;\n      var events = this._events[name];\n      var allEvents = this._events.all;\n      if (events) triggerEvents(events, args);\n      if (allEvents) triggerEvents(allEvents, arguments);\n      return this;\n    },\n\n    // Tell this object to stop listening to either specific events ... or\n    // to every object it's currently listening to.\n    stopListening: function(obj, name, callback) {\n      var listeners = this._listeners;\n      if (!listeners) return this;\n      var deleteListener = !name && !callback;\n      if (typeof name === 'object') callback = this;\n      if (obj) (listeners = {})[obj._listenerId] = obj;\n      for (var id in listeners) {\n        listeners[id].off(name, callback, this);\n        if (deleteListener) delete this._listeners[id];\n      }\n      return this;\n    }\n\n  };\n\n  // Regular expression used to split event strings.\n  var eventSplitter = /\\s+/;\n\n  // Implement fancy features of the Events API such as multiple event\n  // names `\"change blur\"` and jQuery-style event maps `{change: action}`\n  // in terms of the existing API.\n  var eventsApi = function(obj, action, name, rest) {\n    if (!name) return true;\n\n    // Handle event maps.\n    if (typeof name === 'object') {\n      for (var key in name) {\n        obj[action].apply(obj, [key, name[key]].concat(rest));\n      }\n      return false;\n    }\n\n    // Handle space separated event names.\n    if (eventSplitter.test(name)) {\n      var names = name.split(eventSplitter);\n      for (var i = 0, l = names.length; i < l; i++) {\n        obj[action].apply(obj, [names[i]].concat(rest));\n      }\n      return false;\n    }\n\n    return true;\n  };\n\n  // A difficult-to-believe, but optimized internal dispatch function for\n  // triggering events. Tries to keep the usual cases speedy (most internal\n  // Backbone events have 3 arguments).\n  var triggerEvents = function(events, args) {\n    var ev, i = -1, l = events.length, a1 = args[0], a2 = args[1], a3 = args[2];\n    switch (args.length) {\n      case 0: while (++i < l) (ev = events[i]).callback.call(ev.ctx); return;\n      case 1: while (++i < l) (ev = events[i]).callback.call(ev.ctx, a1); return;\n      case 2: while (++i < l) (ev = events[i]).callback.call(ev.ctx, a1, a2); return;\n      case 3: while (++i < l) (ev = events[i]).callback.call(ev.ctx, a1, a2, a3); return;\n      default: while (++i < l) (ev = events[i]).callback.apply(ev.ctx, args);\n    }\n  };\n\n  var listenMethods = {listenTo: 'on', listenToOnce: 'once'};\n\n  // Inversion-of-control versions of `on` and `once`. Tell *this* object to\n  // listen to an event in another object ... keeping track of what it's\n  // listening to.\n  _.each(listenMethods, function(implementation, method) {\n    Events[method] = function(obj, name, callback) {\n      var listeners = this._listeners || (this._listeners = {});\n      var id = obj._listenerId || (obj._listenerId = _.uniqueId('l'));\n      listeners[id] = obj;\n      if (typeof name === 'object') callback = this;\n      obj[implementation](name, callback, this);\n      return this;\n    };\n  });\n\n  // Aliases for backwards compatibility.\n  Events.bind   = Events.on;\n  Events.unbind = Events.off;\n\n  // Mixin utility\n  Events.mixin = function(proto) {\n    var exports = ['on', 'once', 'off', 'trigger', 'stopListening', 'listenTo',\n                   'listenToOnce', 'bind', 'unbind'];\n    _.each(exports, function(name) {\n      proto[name] = this[name];\n    }, this);\n    return proto;\n  };\n\n  // Export Events as BackboneEvents depending on current context\n  if (typeof define === \"function\") {\n    define(function() {\n      return Events;\n    });\n  } else if (typeof exports !== 'undefined') {\n    if (typeof module !== 'undefined' && module.exports) {\n      exports = module.exports = Events;\n    }\n    exports.BackboneEvents = Events;\n  } else {\n    root.BackboneEvents = Events;\n  }\n})(this);\n\n},{}],21:[function(_dereq_,module,exports){\nmodule.exports = _dereq_('./backbone-events-standalone');\n\n},{\"./backbone-events-standalone\":20}],22:[function(_dereq_,module,exports){\n(function (process,global){\n/*!\n * @overview es6-promise - a tiny implementation of Promises/A+.\n * @copyright Copyright (c) 2014 Yehuda Katz, Tom Dale, Stefan Penner and contributors (Conversion to ES6 API by Jake Archibald)\n * @license   Licensed under MIT license\n *            See https://raw.githubusercontent.com/jakearchibald/es6-promise/master/LICENSE\n * @version   2.0.1\n */\n\n(function() {\n    \"use strict\";\n\n    function $$utils$$objectOrFunction(x) {\n      return typeof x === 'function' || (typeof x === 'object' && x !== null);\n    }\n\n    function $$utils$$isFunction(x) {\n      return typeof x === 'function';\n    }\n\n    function $$utils$$isMaybeThenable(x) {\n      return typeof x === 'object' && x !== null;\n    }\n\n    var $$utils$$_isArray;\n\n    if (!Array.isArray) {\n      $$utils$$_isArray = function (x) {\n        return Object.prototype.toString.call(x) === '[object Array]';\n      };\n    } else {\n      $$utils$$_isArray = Array.isArray;\n    }\n\n    var $$utils$$isArray = $$utils$$_isArray;\n    var $$utils$$now = Date.now || function() { return new Date().getTime(); };\n    function $$utils$$F() { }\n\n    var $$utils$$o_create = (Object.create || function (o) {\n      if (arguments.length > 1) {\n        throw new Error('Second argument not supported');\n      }\n      if (typeof o !== 'object') {\n        throw new TypeError('Argument must be an object');\n      }\n      $$utils$$F.prototype = o;\n      return new $$utils$$F();\n    });\n\n    var $$asap$$len = 0;\n\n    var $$asap$$default = function asap(callback, arg) {\n      $$asap$$queue[$$asap$$len] = callback;\n      $$asap$$queue[$$asap$$len + 1] = arg;\n      $$asap$$len += 2;\n      if ($$asap$$len === 2) {\n        // If len is 1, that means that we need to schedule an async flush.\n        // If additional callbacks are queued before the queue is flushed, they\n        // will be processed by this flush that we are scheduling.\n        $$asap$$scheduleFlush();\n      }\n    };\n\n    var $$asap$$browserGlobal = (typeof window !== 'undefined') ? window : {};\n    var $$asap$$BrowserMutationObserver = $$asap$$browserGlobal.MutationObserver || $$asap$$browserGlobal.WebKitMutationObserver;\n\n    // test for web worker but not in IE10\n    var $$asap$$isWorker = typeof Uint8ClampedArray !== 'undefined' &&\n      typeof importScripts !== 'undefined' &&\n      typeof MessageChannel !== 'undefined';\n\n    // node\n    function $$asap$$useNextTick() {\n      return function() {\n        process.nextTick($$asap$$flush);\n      };\n    }\n\n    function $$asap$$useMutationObserver() {\n      var iterations = 0;\n      var observer = new $$asap$$BrowserMutationObserver($$asap$$flush);\n      var node = document.createTextNode('');\n      observer.observe(node, { characterData: true });\n\n      return function() {\n        node.data = (iterations = ++iterations % 2);\n      };\n    }\n\n    // web worker\n    function $$asap$$useMessageChannel() {\n      var channel = new MessageChannel();\n      channel.port1.onmessage = $$asap$$flush;\n      return function () {\n        channel.port2.postMessage(0);\n      };\n    }\n\n    function $$asap$$useSetTimeout() {\n      return function() {\n        setTimeout($$asap$$flush, 1);\n      };\n    }\n\n    var $$asap$$queue = new Array(1000);\n\n    function $$asap$$flush() {\n      for (var i = 0; i < $$asap$$len; i+=2) {\n        var callback = $$asap$$queue[i];\n        var arg = $$asap$$queue[i+1];\n\n        callback(arg);\n\n        $$asap$$queue[i] = undefined;\n        $$asap$$queue[i+1] = undefined;\n      }\n\n      $$asap$$len = 0;\n    }\n\n    var $$asap$$scheduleFlush;\n\n    // Decide what async method to use to triggering processing of queued callbacks:\n    if (typeof process !== 'undefined' && {}.toString.call(process) === '[object process]') {\n      $$asap$$scheduleFlush = $$asap$$useNextTick();\n    } else if ($$asap$$BrowserMutationObserver) {\n      $$asap$$scheduleFlush = $$asap$$useMutationObserver();\n    } else if ($$asap$$isWorker) {\n      $$asap$$scheduleFlush = $$asap$$useMessageChannel();\n    } else {\n      $$asap$$scheduleFlush = $$asap$$useSetTimeout();\n    }\n\n    function $$$internal$$noop() {}\n    var $$$internal$$PENDING   = void 0;\n    var $$$internal$$FULFILLED = 1;\n    var $$$internal$$REJECTED  = 2;\n    var $$$internal$$GET_THEN_ERROR = new $$$internal$$ErrorObject();\n\n    function $$$internal$$selfFullfillment() {\n      return new TypeError(\"You cannot resolve a promise with itself\");\n    }\n\n    function $$$internal$$cannotReturnOwn() {\n      return new TypeError('A promises callback cannot return that same promise.')\n    }\n\n    function $$$internal$$getThen(promise) {\n      try {\n        return promise.then;\n      } catch(error) {\n        $$$internal$$GET_THEN_ERROR.error = error;\n        return $$$internal$$GET_THEN_ERROR;\n      }\n    }\n\n    function $$$internal$$tryThen(then, value, fulfillmentHandler, rejectionHandler) {\n      try {\n        then.call(value, fulfillmentHandler, rejectionHandler);\n      } catch(e) {\n        return e;\n      }\n    }\n\n    function $$$internal$$handleForeignThenable(promise, thenable, then) {\n       $$asap$$default(function(promise) {\n        var sealed = false;\n        var error = $$$internal$$tryThen(then, thenable, function(value) {\n          if (sealed) { return; }\n          sealed = true;\n          if (thenable !== value) {\n            $$$internal$$resolve(promise, value);\n          } else {\n            $$$internal$$fulfill(promise, value);\n          }\n        }, function(reason) {\n          if (sealed) { return; }\n          sealed = true;\n\n          $$$internal$$reject(promise, reason);\n        }, 'Settle: ' + (promise._label || ' unknown promise'));\n\n        if (!sealed && error) {\n          sealed = true;\n          $$$internal$$reject(promise, error);\n        }\n      }, promise);\n    }\n\n    function $$$internal$$handleOwnThenable(promise, thenable) {\n      if (thenable._state === $$$internal$$FULFILLED) {\n        $$$internal$$fulfill(promise, thenable._result);\n      } else if (promise._state === $$$internal$$REJECTED) {\n        $$$internal$$reject(promise, thenable._result);\n      } else {\n        $$$internal$$subscribe(thenable, undefined, function(value) {\n          $$$internal$$resolve(promise, value);\n        }, function(reason) {\n          $$$internal$$reject(promise, reason);\n        });\n      }\n    }\n\n    function $$$internal$$handleMaybeThenable(promise, maybeThenable) {\n      if (maybeThenable.constructor === promise.constructor) {\n        $$$internal$$handleOwnThenable(promise, maybeThenable);\n      } else {\n        var then = $$$internal$$getThen(maybeThenable);\n\n        if (then === $$$internal$$GET_THEN_ERROR) {\n          $$$internal$$reject(promise, $$$internal$$GET_THEN_ERROR.error);\n        } else if (then === undefined) {\n          $$$internal$$fulfill(promise, maybeThenable);\n        } else if ($$utils$$isFunction(then)) {\n          $$$internal$$handleForeignThenable(promise, maybeThenable, then);\n        } else {\n          $$$internal$$fulfill(promise, maybeThenable);\n        }\n      }\n    }\n\n    function $$$internal$$resolve(promise, value) {\n      if (promise === value) {\n        $$$internal$$reject(promise, $$$internal$$selfFullfillment());\n      } else if ($$utils$$objectOrFunction(value)) {\n        $$$internal$$handleMaybeThenable(promise, value);\n      } else {\n        $$$internal$$fulfill(promise, value);\n      }\n    }\n\n    function $$$internal$$publishRejection(promise) {\n      if (promise._onerror) {\n        promise._onerror(promise._result);\n      }\n\n      $$$internal$$publish(promise);\n    }\n\n    function $$$internal$$fulfill(promise, value) {\n      if (promise._state !== $$$internal$$PENDING) { return; }\n\n      promise._result = value;\n      promise._state = $$$internal$$FULFILLED;\n\n      if (promise._subscribers.length === 0) {\n      } else {\n        $$asap$$default($$$internal$$publish, promise);\n      }\n    }\n\n    function $$$internal$$reject(promise, reason) {\n      if (promise._state !== $$$internal$$PENDING) { return; }\n      promise._state = $$$internal$$REJECTED;\n      promise._result = reason;\n\n      $$asap$$default($$$internal$$publishRejection, promise);\n    }\n\n    function $$$internal$$subscribe(parent, child, onFulfillment, onRejection) {\n      var subscribers = parent._subscribers;\n      var length = subscribers.length;\n\n      parent._onerror = null;\n\n      subscribers[length] = child;\n      subscribers[length + $$$internal$$FULFILLED] = onFulfillment;\n      subscribers[length + $$$internal$$REJECTED]  = onRejection;\n\n      if (length === 0 && parent._state) {\n        $$asap$$default($$$internal$$publish, parent);\n      }\n    }\n\n    function $$$internal$$publish(promise) {\n      var subscribers = promise._subscribers;\n      var settled = promise._state;\n\n      if (subscribers.length === 0) { return; }\n\n      var child, callback, detail = promise._result;\n\n      for (var i = 0; i < subscribers.length; i += 3) {\n        child = subscribers[i];\n        callback = subscribers[i + settled];\n\n        if (child) {\n          $$$internal$$invokeCallback(settled, child, callback, detail);\n        } else {\n          callback(detail);\n        }\n      }\n\n      promise._subscribers.length = 0;\n    }\n\n    function $$$internal$$ErrorObject() {\n      this.error = null;\n    }\n\n    var $$$internal$$TRY_CATCH_ERROR = new $$$internal$$ErrorObject();\n\n    function $$$internal$$tryCatch(callback, detail) {\n      try {\n        return callback(detail);\n      } catch(e) {\n        $$$internal$$TRY_CATCH_ERROR.error = e;\n        return $$$internal$$TRY_CATCH_ERROR;\n      }\n    }\n\n    function $$$internal$$invokeCallback(settled, promise, callback, detail) {\n      var hasCallback = $$utils$$isFunction(callback),\n          value, error, succeeded, failed;\n\n      if (hasCallback) {\n        value = $$$internal$$tryCatch(callback, detail);\n\n        if (value === $$$internal$$TRY_CATCH_ERROR) {\n          failed = true;\n          error = value.error;\n          value = null;\n        } else {\n          succeeded = true;\n        }\n\n        if (promise === value) {\n          $$$internal$$reject(promise, $$$internal$$cannotReturnOwn());\n          return;\n        }\n\n      } else {\n        value = detail;\n        succeeded = true;\n      }\n\n      if (promise._state !== $$$internal$$PENDING) {\n        // noop\n      } else if (hasCallback && succeeded) {\n        $$$internal$$resolve(promise, value);\n      } else if (failed) {\n        $$$internal$$reject(promise, error);\n      } else if (settled === $$$internal$$FULFILLED) {\n        $$$internal$$fulfill(promise, value);\n      } else if (settled === $$$internal$$REJECTED) {\n        $$$internal$$reject(promise, value);\n      }\n    }\n\n    function $$$internal$$initializePromise(promise, resolver) {\n      try {\n        resolver(function resolvePromise(value){\n          $$$internal$$resolve(promise, value);\n        }, function rejectPromise(reason) {\n          $$$internal$$reject(promise, reason);\n        });\n      } catch(e) {\n        $$$internal$$reject(promise, e);\n      }\n    }\n\n    function $$$enumerator$$makeSettledResult(state, position, value) {\n      if (state === $$$internal$$FULFILLED) {\n        return {\n          state: 'fulfilled',\n          value: value\n        };\n      } else {\n        return {\n          state: 'rejected',\n          reason: value\n        };\n      }\n    }\n\n    function $$$enumerator$$Enumerator(Constructor, input, abortOnReject, label) {\n      this._instanceConstructor = Constructor;\n      this.promise = new Constructor($$$internal$$noop, label);\n      this._abortOnReject = abortOnReject;\n\n      if (this._validateInput(input)) {\n        this._input     = input;\n        this.length     = input.length;\n        this._remaining = input.length;\n\n        this._init();\n\n        if (this.length === 0) {\n          $$$internal$$fulfill(this.promise, this._result);\n        } else {\n          this.length = this.length || 0;\n          this._enumerate();\n          if (this._remaining === 0) {\n            $$$internal$$fulfill(this.promise, this._result);\n          }\n        }\n      } else {\n        $$$internal$$reject(this.promise, this._validationError());\n      }\n    }\n\n    $$$enumerator$$Enumerator.prototype._validateInput = function(input) {\n      return $$utils$$isArray(input);\n    };\n\n    $$$enumerator$$Enumerator.prototype._validationError = function() {\n      return new Error('Array Methods must be provided an Array');\n    };\n\n    $$$enumerator$$Enumerator.prototype._init = function() {\n      this._result = new Array(this.length);\n    };\n\n    var $$$enumerator$$default = $$$enumerator$$Enumerator;\n\n    $$$enumerator$$Enumerator.prototype._enumerate = function() {\n      var length  = this.length;\n      var promise = this.promise;\n      var input   = this._input;\n\n      for (var i = 0; promise._state === $$$internal$$PENDING && i < length; i++) {\n        this._eachEntry(input[i], i);\n      }\n    };\n\n    $$$enumerator$$Enumerator.prototype._eachEntry = function(entry, i) {\n      var c = this._instanceConstructor;\n      if ($$utils$$isMaybeThenable(entry)) {\n        if (entry.constructor === c && entry._state !== $$$internal$$PENDING) {\n          entry._onerror = null;\n          this._settledAt(entry._state, i, entry._result);\n        } else {\n          this._willSettleAt(c.resolve(entry), i);\n        }\n      } else {\n        this._remaining--;\n        this._result[i] = this._makeResult($$$internal$$FULFILLED, i, entry);\n      }\n    };\n\n    $$$enumerator$$Enumerator.prototype._settledAt = function(state, i, value) {\n      var promise = this.promise;\n\n      if (promise._state === $$$internal$$PENDING) {\n        this._remaining--;\n\n        if (this._abortOnReject && state === $$$internal$$REJECTED) {\n          $$$internal$$reject(promise, value);\n        } else {\n          this._result[i] = this._makeResult(state, i, value);\n        }\n      }\n\n      if (this._remaining === 0) {\n        $$$internal$$fulfill(promise, this._result);\n      }\n    };\n\n    $$$enumerator$$Enumerator.prototype._makeResult = function(state, i, value) {\n      return value;\n    };\n\n    $$$enumerator$$Enumerator.prototype._willSettleAt = function(promise, i) {\n      var enumerator = this;\n\n      $$$internal$$subscribe(promise, undefined, function(value) {\n        enumerator._settledAt($$$internal$$FULFILLED, i, value);\n      }, function(reason) {\n        enumerator._settledAt($$$internal$$REJECTED, i, reason);\n      });\n    };\n\n    var $$promise$all$$default = function all(entries, label) {\n      return new $$$enumerator$$default(this, entries, true /* abort on reject */, label).promise;\n    };\n\n    var $$promise$race$$default = function race(entries, label) {\n      /*jshint validthis:true */\n      var Constructor = this;\n\n      var promise = new Constructor($$$internal$$noop, label);\n\n      if (!$$utils$$isArray(entries)) {\n        $$$internal$$reject(promise, new TypeError('You must pass an array to race.'));\n        return promise;\n      }\n\n      var length = entries.length;\n\n      function onFulfillment(value) {\n        $$$internal$$resolve(promise, value);\n      }\n\n      function onRejection(reason) {\n        $$$internal$$reject(promise, reason);\n      }\n\n      for (var i = 0; promise._state === $$$internal$$PENDING && i < length; i++) {\n        $$$internal$$subscribe(Constructor.resolve(entries[i]), undefined, onFulfillment, onRejection);\n      }\n\n      return promise;\n    };\n\n    var $$promise$resolve$$default = function resolve(object, label) {\n      /*jshint validthis:true */\n      var Constructor = this;\n\n      if (object && typeof object === 'object' && object.constructor === Constructor) {\n        return object;\n      }\n\n      var promise = new Constructor($$$internal$$noop, label);\n      $$$internal$$resolve(promise, object);\n      return promise;\n    };\n\n    var $$promise$reject$$default = function reject(reason, label) {\n      /*jshint validthis:true */\n      var Constructor = this;\n      var promise = new Constructor($$$internal$$noop, label);\n      $$$internal$$reject(promise, reason);\n      return promise;\n    };\n\n    var $$es6$promise$promise$$counter = 0;\n\n    function $$es6$promise$promise$$needsResolver() {\n      throw new TypeError('You must pass a resolver function as the first argument to the promise constructor');\n    }\n\n    function $$es6$promise$promise$$needsNew() {\n      throw new TypeError(\"Failed to construct 'Promise': Please use the 'new' operator, this object constructor cannot be called as a function.\");\n    }\n\n    var $$es6$promise$promise$$default = $$es6$promise$promise$$Promise;\n\n    /**\n      Promise objects represent the eventual result of an asynchronous operation. The\n      primary way of interacting with a promise is through its `then` method, which\n      registers callbacks to receive either a promise’s eventual value or the reason\n      why the promise cannot be fulfilled.\n\n      Terminology\n      -----------\n\n      - `promise` is an object or function with a `then` method whose behavior conforms to this specification.\n      - `thenable` is an object or function that defines a `then` method.\n      - `value` is any legal JavaScript value (including undefined, a thenable, or a promise).\n      - `exception` is a value that is thrown using the throw statement.\n      - `reason` is a value that indicates why a promise was rejected.\n      - `settled` the final resting state of a promise, fulfilled or rejected.\n\n      A promise can be in one of three states: pending, fulfilled, or rejected.\n\n      Promises that are fulfilled have a fulfillment value and are in the fulfilled\n      state.  Promises that are rejected have a rejection reason and are in the\n      rejected state.  A fulfillment value is never a thenable.\n\n      Promises can also be said to *resolve* a value.  If this value is also a\n      promise, then the original promise's settled state will match the value's\n      settled state.  So a promise that *resolves* a promise that rejects will\n      itself reject, and a promise that *resolves* a promise that fulfills will\n      itself fulfill.\n\n\n      Basic Usage:\n      ------------\n\n      ```js\n      var promise = new Promise(function(resolve, reject) {\n        // on success\n        resolve(value);\n\n        // on failure\n        reject(reason);\n      });\n\n      promise.then(function(value) {\n        // on fulfillment\n      }, function(reason) {\n        // on rejection\n      });\n      ```\n\n      Advanced Usage:\n      ---------------\n\n      Promises shine when abstracting away asynchronous interactions such as\n      `XMLHttpRequest`s.\n\n      ```js\n      function getJSON(url) {\n        return new Promise(function(resolve, reject){\n          var xhr = new XMLHttpRequest();\n\n          xhr.open('GET', url);\n          xhr.onreadystatechange = handler;\n          xhr.responseType = 'json';\n          xhr.setRequestHeader('Accept', 'application/json');\n          xhr.send();\n\n          function handler() {\n            if (this.readyState === this.DONE) {\n              if (this.status === 200) {\n                resolve(this.response);\n              } else {\n                reject(new Error('getJSON: `' + url + '` failed with status: [' + this.status + ']'));\n              }\n            }\n          };\n        });\n      }\n\n      getJSON('/posts.json').then(function(json) {\n        // on fulfillment\n      }, function(reason) {\n        // on rejection\n      });\n      ```\n\n      Unlike callbacks, promises are great composable primitives.\n\n      ```js\n      Promise.all([\n        getJSON('/posts'),\n        getJSON('/comments')\n      ]).then(function(values){\n        values[0] // => postsJSON\n        values[1] // => commentsJSON\n\n        return values;\n      });\n      ```\n\n      @class Promise\n      @param {function} resolver\n      Useful for tooling.\n      @constructor\n    */\n    function $$es6$promise$promise$$Promise(resolver) {\n      this._id = $$es6$promise$promise$$counter++;\n      this._state = undefined;\n      this._result = undefined;\n      this._subscribers = [];\n\n      if ($$$internal$$noop !== resolver) {\n        if (!$$utils$$isFunction(resolver)) {\n          $$es6$promise$promise$$needsResolver();\n        }\n\n        if (!(this instanceof $$es6$promise$promise$$Promise)) {\n          $$es6$promise$promise$$needsNew();\n        }\n\n        $$$internal$$initializePromise(this, resolver);\n      }\n    }\n\n    $$es6$promise$promise$$Promise.all = $$promise$all$$default;\n    $$es6$promise$promise$$Promise.race = $$promise$race$$default;\n    $$es6$promise$promise$$Promise.resolve = $$promise$resolve$$default;\n    $$es6$promise$promise$$Promise.reject = $$promise$reject$$default;\n\n    $$es6$promise$promise$$Promise.prototype = {\n      constructor: $$es6$promise$promise$$Promise,\n\n    /**\n      The primary way of interacting with a promise is through its `then` method,\n      which registers callbacks to receive either a promise's eventual value or the\n      reason why the promise cannot be fulfilled.\n\n      ```js\n      findUser().then(function(user){\n        // user is available\n      }, function(reason){\n        // user is unavailable, and you are given the reason why\n      });\n      ```\n\n      Chaining\n      --------\n\n      The return value of `then` is itself a promise.  This second, 'downstream'\n      promise is resolved with the return value of the first promise's fulfillment\n      or rejection handler, or rejected if the handler throws an exception.\n\n      ```js\n      findUser().then(function (user) {\n        return user.name;\n      }, function (reason) {\n        return 'default name';\n      }).then(function (userName) {\n        // If `findUser` fulfilled, `userName` will be the user's name, otherwise it\n        // will be `'default name'`\n      });\n\n      findUser().then(function (user) {\n        throw new Error('Found user, but still unhappy');\n      }, function (reason) {\n        throw new Error('`findUser` rejected and we're unhappy');\n      }).then(function (value) {\n        // never reached\n      }, function (reason) {\n        // if `findUser` fulfilled, `reason` will be 'Found user, but still unhappy'.\n        // If `findUser` rejected, `reason` will be '`findUser` rejected and we're unhappy'.\n      });\n      ```\n      If the downstream promise does not specify a rejection handler, rejection reasons will be propagated further downstream.\n\n      ```js\n      findUser().then(function (user) {\n        throw new PedagogicalException('Upstream error');\n      }).then(function (value) {\n        // never reached\n      }).then(function (value) {\n        // never reached\n      }, function (reason) {\n        // The `PedgagocialException` is propagated all the way down to here\n      });\n      ```\n\n      Assimilation\n      ------------\n\n      Sometimes the value you want to propagate to a downstream promise can only be\n      retrieved asynchronously. This can be achieved by returning a promise in the\n      fulfillment or rejection handler. The downstream promise will then be pending\n      until the returned promise is settled. This is called *assimilation*.\n\n      ```js\n      findUser().then(function (user) {\n        return findCommentsByAuthor(user);\n      }).then(function (comments) {\n        // The user's comments are now available\n      });\n      ```\n\n      If the assimliated promise rejects, then the downstream promise will also reject.\n\n      ```js\n      findUser().then(function (user) {\n        return findCommentsByAuthor(user);\n      }).then(function (comments) {\n        // If `findCommentsByAuthor` fulfills, we'll have the value here\n      }, function (reason) {\n        // If `findCommentsByAuthor` rejects, we'll have the reason here\n      });\n      ```\n\n      Simple Example\n      --------------\n\n      Synchronous Example\n\n      ```javascript\n      var result;\n\n      try {\n        result = findResult();\n        // success\n      } catch(reason) {\n        // failure\n      }\n      ```\n\n      Errback Example\n\n      ```js\n      findResult(function(result, err){\n        if (err) {\n          // failure\n        } else {\n          // success\n        }\n      });\n      ```\n\n      Promise Example;\n\n      ```javascript\n      findResult().then(function(result){\n        // success\n      }, function(reason){\n        // failure\n      });\n      ```\n\n      Advanced Example\n      --------------\n\n      Synchronous Example\n\n      ```javascript\n      var author, books;\n\n      try {\n        author = findAuthor();\n        books  = findBooksByAuthor(author);\n        // success\n      } catch(reason) {\n        // failure\n      }\n      ```\n\n      Errback Example\n\n      ```js\n\n      function foundBooks(books) {\n\n      }\n\n      function failure(reason) {\n\n      }\n\n      findAuthor(function(author, err){\n        if (err) {\n          failure(err);\n          // failure\n        } else {\n          try {\n            findBoooksByAuthor(author, function(books, err) {\n              if (err) {\n                failure(err);\n              } else {\n                try {\n                  foundBooks(books);\n                } catch(reason) {\n                  failure(reason);\n                }\n              }\n            });\n          } catch(error) {\n            failure(err);\n          }\n          // success\n        }\n      });\n      ```\n\n      Promise Example;\n\n      ```javascript\n      findAuthor().\n        then(findBooksByAuthor).\n        then(function(books){\n          // found books\n      }).catch(function(reason){\n        // something went wrong\n      });\n      ```\n\n      @method then\n      @param {Function} onFulfilled\n      @param {Function} onRejected\n      Useful for tooling.\n      @return {Promise}\n    */\n      then: function(onFulfillment, onRejection) {\n        var parent = this;\n        var state = parent._state;\n\n        if (state === $$$internal$$FULFILLED && !onFulfillment || state === $$$internal$$REJECTED && !onRejection) {\n          return this;\n        }\n\n        var child = new this.constructor($$$internal$$noop);\n        var result = parent._result;\n\n        if (state) {\n          var callback = arguments[state - 1];\n          $$asap$$default(function(){\n            $$$internal$$invokeCallback(state, child, callback, result);\n          });\n        } else {\n          $$$internal$$subscribe(parent, child, onFulfillment, onRejection);\n        }\n\n        return child;\n      },\n\n    /**\n      `catch` is simply sugar for `then(undefined, onRejection)` which makes it the same\n      as the catch block of a try/catch statement.\n\n      ```js\n      function findAuthor(){\n        throw new Error('couldn't find that author');\n      }\n\n      // synchronous\n      try {\n        findAuthor();\n      } catch(reason) {\n        // something went wrong\n      }\n\n      // async with promises\n      findAuthor().catch(function(reason){\n        // something went wrong\n      });\n      ```\n\n      @method catch\n      @param {Function} onRejection\n      Useful for tooling.\n      @return {Promise}\n    */\n      'catch': function(onRejection) {\n        return this.then(null, onRejection);\n      }\n    };\n\n    var $$es6$promise$polyfill$$default = function polyfill() {\n      var local;\n\n      if (typeof global !== 'undefined') {\n        local = global;\n      } else if (typeof window !== 'undefined' && window.document) {\n        local = window;\n      } else {\n        local = self;\n      }\n\n      var es6PromiseSupport =\n        \"Promise\" in local &&\n        // Some of these methods are missing from\n        // Firefox/Chrome experimental implementations\n        \"resolve\" in local.Promise &&\n        \"reject\" in local.Promise &&\n        \"all\" in local.Promise &&\n        \"race\" in local.Promise &&\n        // Older version of the spec had a resolver object\n        // as the arg rather than a function\n        (function() {\n          var resolve;\n          new local.Promise(function(r) { resolve = r; });\n          return $$utils$$isFunction(resolve);\n        }());\n\n      if (!es6PromiseSupport) {\n        local.Promise = $$es6$promise$promise$$default;\n      }\n    };\n\n    var es6$promise$umd$$ES6Promise = {\n      'Promise': $$es6$promise$promise$$default,\n      'polyfill': $$es6$promise$polyfill$$default\n    };\n\n    /* global define:true module:true window: true */\n    if (typeof define === 'function' && define['amd']) {\n      define(function() { return es6$promise$umd$$ES6Promise; });\n    } else if (typeof module !== 'undefined' && module['exports']) {\n      module['exports'] = es6$promise$umd$$ES6Promise;\n    } else if (typeof this !== 'undefined') {\n      this['ES6Promise'] = es6$promise$umd$$ES6Promise;\n    }\n}).call(this);\n}).call(this,_dereq_(\"/home/alex/projects/javascript/imjs/node_modules/insert-module-globals/node_modules/process/browser.js\"),typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{\"/home/alex/projects/javascript/imjs/node_modules/insert-module-globals/node_modules/process/browser.js\":55}],23:[function(_dereq_,module,exports){\n/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\n\nvar base64 = _dereq_('base64-js')\nvar ieee754 = _dereq_('ieee754')\nvar isArray = _dereq_('is-array')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = Buffer\nexports.INSPECT_MAX_BYTES = 50\nBuffer.poolSize = 8192 // not used by this implementation\n\nvar kMaxLength = 0x3fffffff\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Note:\n *\n * - Implementation must support adding new properties to `Uint8Array` instances.\n *   Firefox 4-29 lacked support, fixed in Firefox 30+.\n *   See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *  - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *  - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *    incorrect length in some situations.\n *\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they will\n * get the Object implementation, which is slower but will work correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = (function () {\n  try {\n    var buf = new ArrayBuffer(0)\n    var arr = new Uint8Array(buf)\n    arr.foo = function () { return 42 }\n    return 42 === arr.foo() && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        new Uint8Array(1).subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n})()\n\n/**\n * Class: Buffer\n * =============\n *\n * The Buffer constructor returns instances of `Uint8Array` that are augmented\n * with function properties for all the node `Buffer` API functions. We use\n * `Uint8Array` so that square bracket notation works as expected -- it returns\n * a single octet.\n *\n * By augmenting the instances, we can avoid modifying the `Uint8Array`\n * prototype.\n */\nfunction Buffer (subject, encoding, noZero) {\n  if (!(this instanceof Buffer))\n    return new Buffer(subject, encoding, noZero)\n\n  var type = typeof subject\n\n  // Find the length\n  var length\n  if (type === 'number')\n    length = subject > 0 ? subject >>> 0 : 0\n  else if (type === 'string') {\n    if (encoding === 'base64')\n      subject = base64clean(subject)\n    length = Buffer.byteLength(subject, encoding)\n  } else if (type === 'object' && subject !== null) { // assume object is array-like\n    if (subject.type === 'Buffer' && isArray(subject.data))\n      subject = subject.data\n    length = +subject.length > 0 ? Math.floor(+subject.length) : 0\n  } else\n    throw new TypeError('must start with number, buffer, array or string')\n\n  if (this.length > kMaxLength)\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n      'size: 0x' + kMaxLength.toString(16) + ' bytes')\n\n  var buf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Preferred: Return an augmented `Uint8Array` instance for best performance\n    buf = Buffer._augment(new Uint8Array(length))\n  } else {\n    // Fallback: Return THIS instance of Buffer (created by `new`)\n    buf = this\n    buf.length = length\n    buf._isBuffer = true\n  }\n\n  var i\n  if (Buffer.TYPED_ARRAY_SUPPORT && typeof subject.byteLength === 'number') {\n    // Speed optimization -- use set if we're copying from a typed array\n    buf._set(subject)\n  } else if (isArrayish(subject)) {\n    // Treat array-ish objects as a byte array\n    if (Buffer.isBuffer(subject)) {\n      for (i = 0; i < length; i++)\n        buf[i] = subject.readUInt8(i)\n    } else {\n      for (i = 0; i < length; i++)\n        buf[i] = ((subject[i] % 256) + 256) % 256\n    }\n  } else if (type === 'string') {\n    buf.write(subject, 0, encoding)\n  } else if (type === 'number' && !Buffer.TYPED_ARRAY_SUPPORT && !noZero) {\n    for (i = 0; i < length; i++) {\n      buf[i] = 0\n    }\n  }\n\n  return buf\n}\n\nBuffer.isBuffer = function (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b))\n    throw new TypeError('Arguments must be Buffers')\n\n  var x = a.length\n  var y = b.length\n  for (var i = 0, len = Math.min(x, y); i < len && a[i] === b[i]; i++) {}\n  if (i !== len) {\n    x = a[i]\n    y = b[i]\n  }\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'binary':\n    case 'base64':\n    case 'raw':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function (list, totalLength) {\n  if (!isArray(list)) throw new TypeError('Usage: Buffer.concat(list[, length])')\n\n  if (list.length === 0) {\n    return new Buffer(0)\n  } else if (list.length === 1) {\n    return list[0]\n  }\n\n  var i\n  if (totalLength === undefined) {\n    totalLength = 0\n    for (i = 0; i < list.length; i++) {\n      totalLength += list[i].length\n    }\n  }\n\n  var buf = new Buffer(totalLength)\n  var pos = 0\n  for (i = 0; i < list.length; i++) {\n    var item = list[i]\n    item.copy(buf, pos)\n    pos += item.length\n  }\n  return buf\n}\n\nBuffer.byteLength = function (str, encoding) {\n  var ret\n  str = str + ''\n  switch (encoding || 'utf8') {\n    case 'ascii':\n    case 'binary':\n    case 'raw':\n      ret = str.length\n      break\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      ret = str.length * 2\n      break\n    case 'hex':\n      ret = str.length >>> 1\n      break\n    case 'utf8':\n    case 'utf-8':\n      ret = utf8ToBytes(str).length\n      break\n    case 'base64':\n      ret = base64ToBytes(str).length\n      break\n    default:\n      ret = str.length\n  }\n  return ret\n}\n\n// pre-set for values that may exist in the future\nBuffer.prototype.length = undefined\nBuffer.prototype.parent = undefined\n\n// toString(encoding, start=0, end=buffer.length)\nBuffer.prototype.toString = function (encoding, start, end) {\n  var loweredCase = false\n\n  start = start >>> 0\n  end = end === undefined || end === Infinity ? this.length : end >>> 0\n\n  if (!encoding) encoding = 'utf8'\n  if (start < 0) start = 0\n  if (end > this.length) end = this.length\n  if (end <= start) return ''\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'binary':\n        return binarySlice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase)\n          throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.equals = function (b) {\n  if(!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max)\n      str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  return Buffer.compare(this, b)\n}\n\n// `get` will be removed in Node 0.13+\nBuffer.prototype.get = function (offset) {\n  console.log('.get() is deprecated. Access using array indexes instead.')\n  return this.readUInt8(offset)\n}\n\n// `set` will be removed in Node 0.13+\nBuffer.prototype.set = function (v, offset) {\n  console.log('.set() is deprecated. Access using array indexes instead.')\n  return this.writeUInt8(v, offset)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new Error('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; i++) {\n    var byte = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(byte)) throw new Error('Invalid hex string')\n    buf[offset + i] = byte\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  var charsWritten = blitBuffer(utf8ToBytes(string), buf, offset, length)\n  return charsWritten\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  var charsWritten = blitBuffer(asciiToBytes(string), buf, offset, length)\n  return charsWritten\n}\n\nfunction binaryWrite (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  var charsWritten = blitBuffer(base64ToBytes(string), buf, offset, length)\n  return charsWritten\n}\n\nfunction utf16leWrite (buf, string, offset, length) {\n  var charsWritten = blitBuffer(utf16leToBytes(string), buf, offset, length, 2)\n  return charsWritten\n}\n\nBuffer.prototype.write = function (string, offset, length, encoding) {\n  // Support both (string, offset, length, encoding)\n  // and the legacy (string, encoding, offset, length)\n  if (isFinite(offset)) {\n    if (!isFinite(length)) {\n      encoding = length\n      length = undefined\n    }\n  } else {  // legacy\n    var swap = encoding\n    encoding = offset\n    offset = length\n    length = swap\n  }\n\n  offset = Number(offset) || 0\n  var remaining = this.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n  encoding = String(encoding || 'utf8').toLowerCase()\n\n  var ret\n  switch (encoding) {\n    case 'hex':\n      ret = hexWrite(this, string, offset, length)\n      break\n    case 'utf8':\n    case 'utf-8':\n      ret = utf8Write(this, string, offset, length)\n      break\n    case 'ascii':\n      ret = asciiWrite(this, string, offset, length)\n      break\n    case 'binary':\n      ret = binaryWrite(this, string, offset, length)\n      break\n    case 'base64':\n      ret = base64Write(this, string, offset, length)\n      break\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      ret = utf16leWrite(this, string, offset, length)\n      break\n    default:\n      throw new TypeError('Unknown encoding: ' + encoding)\n  }\n  return ret\n}\n\nBuffer.prototype.toJSON = function () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  var res = ''\n  var tmp = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; i++) {\n    if (buf[i] <= 0x7F) {\n      res += decodeUtf8Char(tmp) + String.fromCharCode(buf[i])\n      tmp = ''\n    } else {\n      tmp += '%' + buf[i].toString(16)\n    }\n  }\n\n  return res + decodeUtf8Char(tmp)\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; i++) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction binarySlice (buf, start, end) {\n  return asciiSlice(buf, start, end)\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; i++) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len;\n    if (start < 0)\n      start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0)\n      end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start)\n    end = start\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    return Buffer._augment(this.subarray(start, end))\n  } else {\n    var sliceLen = end - start\n    var newBuf = new Buffer(sliceLen, undefined, true)\n    for (var i = 0; i < sliceLen; i++) {\n      newBuf[i] = this[i + start]\n    }\n    return newBuf\n  }\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0)\n    throw new RangeError('offset is not uint')\n  if (offset + ext > length)\n    throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUInt8 = function (offset, noAssert) {\n  if (!noAssert)\n    checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function (offset, noAssert) {\n  if (!noAssert)\n    checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function (offset, noAssert) {\n  if (!noAssert)\n    checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function (offset, noAssert) {\n  if (!noAssert)\n    checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function (offset, noAssert) {\n  if (!noAssert)\n    checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n      ((this[offset + 1] << 16) |\n      (this[offset + 2] << 8) |\n      this[offset + 3])\n}\n\nBuffer.prototype.readInt8 = function (offset, noAssert) {\n  if (!noAssert)\n    checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80))\n    return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function (offset, noAssert) {\n  if (!noAssert)\n    checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function (offset, noAssert) {\n  if (!noAssert)\n    checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function (offset, noAssert) {\n  if (!noAssert)\n    checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16) |\n      (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function (offset, noAssert) {\n  if (!noAssert)\n    checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n      (this[offset + 1] << 16) |\n      (this[offset + 2] << 8) |\n      (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function (offset, noAssert) {\n  if (!noAssert)\n    checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function (offset, noAssert) {\n  if (!noAssert)\n    checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function (offset, noAssert) {\n  if (!noAssert)\n    checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function (offset, noAssert) {\n  if (!noAssert)\n    checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('buffer must be a Buffer instance')\n  if (value > max || value < min) throw new TypeError('value is out of bounds')\n  if (offset + ext > buf.length) throw new TypeError('index out of range')\n}\n\nBuffer.prototype.writeUInt8 = function (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert)\n    checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = value\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; i++) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert)\n    checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = value\n    this[offset + 1] = (value >>> 8)\n  } else objectWriteUInt16(this, value, offset, true)\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert)\n    checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = value\n  } else objectWriteUInt16(this, value, offset, false)\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; i++) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert)\n    checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = value\n  } else objectWriteUInt32(this, value, offset, true)\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert)\n    checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = value\n  } else objectWriteUInt32(this, value, offset, false)\n  return offset + 4\n}\n\nBuffer.prototype.writeInt8 = function (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert)\n    checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = value\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert)\n    checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = value\n    this[offset + 1] = (value >>> 8)\n  } else objectWriteUInt16(this, value, offset, true)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert)\n    checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = value\n  } else objectWriteUInt16(this, value, offset, false)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert)\n    checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = value\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else objectWriteUInt32(this, value, offset, true)\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert)\n    checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = value\n  } else objectWriteUInt32(this, value, offset, false)\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (value > max || value < min) throw new TypeError('value is out of bounds')\n  if (offset + ext > buf.length) throw new TypeError('index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert)\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert)\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function (target, target_start, start, end) {\n  var source = this\n\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (!target_start) target_start = 0\n\n  // Copy 0 bytes; we're done\n  if (end === start) return\n  if (target.length === 0 || source.length === 0) return\n\n  // Fatal error conditions\n  if (end < start) throw new TypeError('sourceEnd < sourceStart')\n  if (target_start < 0 || target_start >= target.length)\n    throw new TypeError('targetStart out of bounds')\n  if (start < 0 || start >= source.length) throw new TypeError('sourceStart out of bounds')\n  if (end < 0 || end > source.length) throw new TypeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length)\n    end = this.length\n  if (target.length - target_start < end - start)\n    end = target.length - target_start + start\n\n  var len = end - start\n\n  if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < len; i++) {\n      target[i + target_start] = this[i + start]\n    }\n  } else {\n    target._set(this.subarray(start, start + len), target_start)\n  }\n}\n\n// fill(value, start=0, end=buffer.length)\nBuffer.prototype.fill = function (value, start, end) {\n  if (!value) value = 0\n  if (!start) start = 0\n  if (!end) end = this.length\n\n  if (end < start) throw new TypeError('end < start')\n\n  // Fill 0 bytes; we're done\n  if (end === start) return\n  if (this.length === 0) return\n\n  if (start < 0 || start >= this.length) throw new TypeError('start out of bounds')\n  if (end < 0 || end > this.length) throw new TypeError('end out of bounds')\n\n  var i\n  if (typeof value === 'number') {\n    for (i = start; i < end; i++) {\n      this[i] = value\n    }\n  } else {\n    var bytes = utf8ToBytes(value.toString())\n    var len = bytes.length\n    for (i = start; i < end; i++) {\n      this[i] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n/**\n * Creates a new `ArrayBuffer` with the *copied* memory of the buffer instance.\n * Added in Node 0.12. Only available in browsers that support ArrayBuffer.\n */\nBuffer.prototype.toArrayBuffer = function () {\n  if (typeof Uint8Array !== 'undefined') {\n    if (Buffer.TYPED_ARRAY_SUPPORT) {\n      return (new Buffer(this)).buffer\n    } else {\n      var buf = new Uint8Array(this.length)\n      for (var i = 0, len = buf.length; i < len; i += 1) {\n        buf[i] = this[i]\n      }\n      return buf.buffer\n    }\n  } else {\n    throw new TypeError('Buffer.toArrayBuffer not supported in this browser')\n  }\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar BP = Buffer.prototype\n\n/**\n * Augment a Uint8Array *instance* (not the Uint8Array class!) with Buffer methods\n */\nBuffer._augment = function (arr) {\n  arr.constructor = Buffer\n  arr._isBuffer = true\n\n  // save reference to original Uint8Array get/set methods before overwriting\n  arr._get = arr.get\n  arr._set = arr.set\n\n  // deprecated, will be removed in node 0.13+\n  arr.get = BP.get\n  arr.set = BP.set\n\n  arr.write = BP.write\n  arr.toString = BP.toString\n  arr.toLocaleString = BP.toString\n  arr.toJSON = BP.toJSON\n  arr.equals = BP.equals\n  arr.compare = BP.compare\n  arr.copy = BP.copy\n  arr.slice = BP.slice\n  arr.readUInt8 = BP.readUInt8\n  arr.readUInt16LE = BP.readUInt16LE\n  arr.readUInt16BE = BP.readUInt16BE\n  arr.readUInt32LE = BP.readUInt32LE\n  arr.readUInt32BE = BP.readUInt32BE\n  arr.readInt8 = BP.readInt8\n  arr.readInt16LE = BP.readInt16LE\n  arr.readInt16BE = BP.readInt16BE\n  arr.readInt32LE = BP.readInt32LE\n  arr.readInt32BE = BP.readInt32BE\n  arr.readFloatLE = BP.readFloatLE\n  arr.readFloatBE = BP.readFloatBE\n  arr.readDoubleLE = BP.readDoubleLE\n  arr.readDoubleBE = BP.readDoubleBE\n  arr.writeUInt8 = BP.writeUInt8\n  arr.writeUInt16LE = BP.writeUInt16LE\n  arr.writeUInt16BE = BP.writeUInt16BE\n  arr.writeUInt32LE = BP.writeUInt32LE\n  arr.writeUInt32BE = BP.writeUInt32BE\n  arr.writeInt8 = BP.writeInt8\n  arr.writeInt16LE = BP.writeInt16LE\n  arr.writeInt16BE = BP.writeInt16BE\n  arr.writeInt32LE = BP.writeInt32LE\n  arr.writeInt32BE = BP.writeInt32BE\n  arr.writeFloatLE = BP.writeFloatLE\n  arr.writeFloatBE = BP.writeFloatBE\n  arr.writeDoubleLE = BP.writeDoubleLE\n  arr.writeDoubleBE = BP.writeDoubleBE\n  arr.fill = BP.fill\n  arr.inspect = BP.inspect\n  arr.toArrayBuffer = BP.toArrayBuffer\n\n  return arr\n}\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-z]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction isArrayish (subject) {\n  return isArray(subject) || Buffer.isBuffer(subject) ||\n      subject && typeof subject === 'object' &&\n      typeof subject.length === 'number'\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; i++) {\n    var b = str.charCodeAt(i)\n    if (b <= 0x7F) {\n      byteArray.push(b)\n    } else {\n      var start = i\n      if (b >= 0xD800 && b <= 0xDFFF) i++\n      var h = encodeURIComponent(str.slice(start, i+1)).substr(1).split('%')\n      for (var j = 0; j < h.length; j++) {\n        byteArray.push(parseInt(h[j], 16))\n      }\n    }\n  }\n  return byteArray\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; i++) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; i++) {\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(str)\n}\n\nfunction blitBuffer (src, dst, offset, length, unitSize) {\n  if (unitSize) length -= length % unitSize;\n  for (var i = 0; i < length; i++) {\n    if ((i + offset >= dst.length) || (i >= src.length))\n      break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction decodeUtf8Char (str) {\n  try {\n    return decodeURIComponent(str)\n  } catch (err) {\n    return String.fromCharCode(0xFFFD) // UTF 8 invalid char\n  }\n}\n\n},{\"base64-js\":24,\"ieee754\":25,\"is-array\":26}],24:[function(_dereq_,module,exports){\nvar lookup = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n\n;(function (exports) {\n\t'use strict';\n\n  var Arr = (typeof Uint8Array !== 'undefined')\n    ? Uint8Array\n    : Array\n\n\tvar PLUS   = '+'.charCodeAt(0)\n\tvar SLASH  = '/'.charCodeAt(0)\n\tvar NUMBER = '0'.charCodeAt(0)\n\tvar LOWER  = 'a'.charCodeAt(0)\n\tvar UPPER  = 'A'.charCodeAt(0)\n\n\tfunction decode (elt) {\n\t\tvar code = elt.charCodeAt(0)\n\t\tif (code === PLUS)\n\t\t\treturn 62 // '+'\n\t\tif (code === SLASH)\n\t\t\treturn 63 // '/'\n\t\tif (code < NUMBER)\n\t\t\treturn -1 //no match\n\t\tif (code < NUMBER + 10)\n\t\t\treturn code - NUMBER + 26 + 26\n\t\tif (code < UPPER + 26)\n\t\t\treturn code - UPPER\n\t\tif (code < LOWER + 26)\n\t\t\treturn code - LOWER + 26\n\t}\n\n\tfunction b64ToByteArray (b64) {\n\t\tvar i, j, l, tmp, placeHolders, arr\n\n\t\tif (b64.length % 4 > 0) {\n\t\t\tthrow new Error('Invalid string. Length must be a multiple of 4')\n\t\t}\n\n\t\t// the number of equal signs (place holders)\n\t\t// if there are two placeholders, than the two characters before it\n\t\t// represent one byte\n\t\t// if there is only one, then the three characters before it represent 2 bytes\n\t\t// this is just a cheap hack to not do indexOf twice\n\t\tvar len = b64.length\n\t\tplaceHolders = '=' === b64.charAt(len - 2) ? 2 : '=' === b64.charAt(len - 1) ? 1 : 0\n\n\t\t// base64 is 4/3 + up to two characters of the original data\n\t\tarr = new Arr(b64.length * 3 / 4 - placeHolders)\n\n\t\t// if there are placeholders, only get up to the last complete 4 chars\n\t\tl = placeHolders > 0 ? b64.length - 4 : b64.length\n\n\t\tvar L = 0\n\n\t\tfunction push (v) {\n\t\t\tarr[L++] = v\n\t\t}\n\n\t\tfor (i = 0, j = 0; i < l; i += 4, j += 3) {\n\t\t\ttmp = (decode(b64.charAt(i)) << 18) | (decode(b64.charAt(i + 1)) << 12) | (decode(b64.charAt(i + 2)) << 6) | decode(b64.charAt(i + 3))\n\t\t\tpush((tmp & 0xFF0000) >> 16)\n\t\t\tpush((tmp & 0xFF00) >> 8)\n\t\t\tpush(tmp & 0xFF)\n\t\t}\n\n\t\tif (placeHolders === 2) {\n\t\t\ttmp = (decode(b64.charAt(i)) << 2) | (decode(b64.charAt(i + 1)) >> 4)\n\t\t\tpush(tmp & 0xFF)\n\t\t} else if (placeHolders === 1) {\n\t\t\ttmp = (decode(b64.charAt(i)) << 10) | (decode(b64.charAt(i + 1)) << 4) | (decode(b64.charAt(i + 2)) >> 2)\n\t\t\tpush((tmp >> 8) & 0xFF)\n\t\t\tpush(tmp & 0xFF)\n\t\t}\n\n\t\treturn arr\n\t}\n\n\tfunction uint8ToBase64 (uint8) {\n\t\tvar i,\n\t\t\textraBytes = uint8.length % 3, // if we have 1 byte left, pad 2 bytes\n\t\t\toutput = \"\",\n\t\t\ttemp, length\n\n\t\tfunction encode (num) {\n\t\t\treturn lookup.charAt(num)\n\t\t}\n\n\t\tfunction tripletToBase64 (num) {\n\t\t\treturn encode(num >> 18 & 0x3F) + encode(num >> 12 & 0x3F) + encode(num >> 6 & 0x3F) + encode(num & 0x3F)\n\t\t}\n\n\t\t// go through the array every three bytes, we'll deal with trailing stuff later\n\t\tfor (i = 0, length = uint8.length - extraBytes; i < length; i += 3) {\n\t\t\ttemp = (uint8[i] << 16) + (uint8[i + 1] << 8) + (uint8[i + 2])\n\t\t\toutput += tripletToBase64(temp)\n\t\t}\n\n\t\t// pad the end with zeros, but make sure to not forget the extra bytes\n\t\tswitch (extraBytes) {\n\t\t\tcase 1:\n\t\t\t\ttemp = uint8[uint8.length - 1]\n\t\t\t\toutput += encode(temp >> 2)\n\t\t\t\toutput += encode((temp << 4) & 0x3F)\n\t\t\t\toutput += '=='\n\t\t\t\tbreak\n\t\t\tcase 2:\n\t\t\t\ttemp = (uint8[uint8.length - 2] << 8) + (uint8[uint8.length - 1])\n\t\t\t\toutput += encode(temp >> 10)\n\t\t\t\toutput += encode((temp >> 4) & 0x3F)\n\t\t\t\toutput += encode((temp << 2) & 0x3F)\n\t\t\t\toutput += '='\n\t\t\t\tbreak\n\t\t}\n\n\t\treturn output\n\t}\n\n\texports.toByteArray = b64ToByteArray\n\texports.fromByteArray = uint8ToBase64\n}(typeof exports === 'undefined' ? (this.base64js = {}) : exports))\n\n},{}],25:[function(_dereq_,module,exports){\nexports.read = function(buffer, offset, isLE, mLen, nBytes) {\n  var e, m,\n      eLen = nBytes * 8 - mLen - 1,\n      eMax = (1 << eLen) - 1,\n      eBias = eMax >> 1,\n      nBits = -7,\n      i = isLE ? (nBytes - 1) : 0,\n      d = isLE ? -1 : 1,\n      s = buffer[offset + i];\n\n  i += d;\n\n  e = s & ((1 << (-nBits)) - 1);\n  s >>= (-nBits);\n  nBits += eLen;\n  for (; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8);\n\n  m = e & ((1 << (-nBits)) - 1);\n  e >>= (-nBits);\n  nBits += mLen;\n  for (; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8);\n\n  if (e === 0) {\n    e = 1 - eBias;\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity);\n  } else {\n    m = m + Math.pow(2, mLen);\n    e = e - eBias;\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen);\n};\n\nexports.write = function(buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c,\n      eLen = nBytes * 8 - mLen - 1,\n      eMax = (1 << eLen) - 1,\n      eBias = eMax >> 1,\n      rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0),\n      i = isLE ? 0 : (nBytes - 1),\n      d = isLE ? 1 : -1,\n      s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0;\n\n  value = Math.abs(value);\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0;\n    e = eMax;\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2);\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--;\n      c *= 2;\n    }\n    if (e + eBias >= 1) {\n      value += rt / c;\n    } else {\n      value += rt * Math.pow(2, 1 - eBias);\n    }\n    if (value * c >= 2) {\n      e++;\n      c /= 2;\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0;\n      e = eMax;\n    } else if (e + eBias >= 1) {\n      m = (value * c - 1) * Math.pow(2, mLen);\n      e = e + eBias;\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen);\n      e = 0;\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8);\n\n  e = (e << mLen) | m;\n  eLen += mLen;\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8);\n\n  buffer[offset + i - d] |= s * 128;\n};\n\n},{}],26:[function(_dereq_,module,exports){\n\n/**\n * isArray\n */\n\nvar isArray = Array.isArray;\n\n/**\n * toString\n */\n\nvar str = Object.prototype.toString;\n\n/**\n * Whether or not the given `val`\n * is an array.\n *\n * example:\n *\n *        isArray([]);\n *        // > true\n *        isArray(arguments);\n *        // > false\n *        isArray('');\n *        // > false\n *\n * @param {mixed} val\n * @return {bool}\n */\n\nmodule.exports = isArray || function (val) {\n  return !! val && '[object Array]' == str.call(val);\n};\n\n},{}],27:[function(_dereq_,module,exports){\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nfunction EventEmitter() {\n  this._events = this._events || {};\n  this._maxListeners = this._maxListeners || undefined;\n}\nmodule.exports = EventEmitter;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nEventEmitter.defaultMaxListeners = 10;\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function(n) {\n  if (!isNumber(n) || n < 0 || isNaN(n))\n    throw TypeError('n must be a positive number');\n  this._maxListeners = n;\n  return this;\n};\n\nEventEmitter.prototype.emit = function(type) {\n  var er, handler, len, args, i, listeners;\n\n  if (!this._events)\n    this._events = {};\n\n  // If there is no 'error' event listener then throw.\n  if (type === 'error') {\n    if (!this._events.error ||\n        (isObject(this._events.error) && !this._events.error.length)) {\n      er = arguments[1];\n      if (er instanceof Error) {\n        throw er; // Unhandled 'error' event\n      }\n      throw TypeError('Uncaught, unspecified \"error\" event.');\n    }\n  }\n\n  handler = this._events[type];\n\n  if (isUndefined(handler))\n    return false;\n\n  if (isFunction(handler)) {\n    switch (arguments.length) {\n      // fast cases\n      case 1:\n        handler.call(this);\n        break;\n      case 2:\n        handler.call(this, arguments[1]);\n        break;\n      case 3:\n        handler.call(this, arguments[1], arguments[2]);\n        break;\n      // slower\n      default:\n        len = arguments.length;\n        args = new Array(len - 1);\n        for (i = 1; i < len; i++)\n          args[i - 1] = arguments[i];\n        handler.apply(this, args);\n    }\n  } else if (isObject(handler)) {\n    len = arguments.length;\n    args = new Array(len - 1);\n    for (i = 1; i < len; i++)\n      args[i - 1] = arguments[i];\n\n    listeners = handler.slice();\n    len = listeners.length;\n    for (i = 0; i < len; i++)\n      listeners[i].apply(this, args);\n  }\n\n  return true;\n};\n\nEventEmitter.prototype.addListener = function(type, listener) {\n  var m;\n\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  if (!this._events)\n    this._events = {};\n\n  // To avoid recursion in the case that type === \"newListener\"! Before\n  // adding it to the listeners, first emit \"newListener\".\n  if (this._events.newListener)\n    this.emit('newListener', type,\n              isFunction(listener.listener) ?\n              listener.listener : listener);\n\n  if (!this._events[type])\n    // Optimize the case of one listener. Don't need the extra array object.\n    this._events[type] = listener;\n  else if (isObject(this._events[type]))\n    // If we've already got an array, just append.\n    this._events[type].push(listener);\n  else\n    // Adding the second element, need to change to array.\n    this._events[type] = [this._events[type], listener];\n\n  // Check for listener leak\n  if (isObject(this._events[type]) && !this._events[type].warned) {\n    var m;\n    if (!isUndefined(this._maxListeners)) {\n      m = this._maxListeners;\n    } else {\n      m = EventEmitter.defaultMaxListeners;\n    }\n\n    if (m && m > 0 && this._events[type].length > m) {\n      this._events[type].warned = true;\n      console.error('(node) warning: possible EventEmitter memory ' +\n                    'leak detected. %d listeners added. ' +\n                    'Use emitter.setMaxListeners() to increase limit.',\n                    this._events[type].length);\n      if (typeof console.trace === 'function') {\n        // not supported in IE 10\n        console.trace();\n      }\n    }\n  }\n\n  return this;\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.once = function(type, listener) {\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  var fired = false;\n\n  function g() {\n    this.removeListener(type, g);\n\n    if (!fired) {\n      fired = true;\n      listener.apply(this, arguments);\n    }\n  }\n\n  g.listener = listener;\n  this.on(type, g);\n\n  return this;\n};\n\n// emits a 'removeListener' event iff the listener was removed\nEventEmitter.prototype.removeListener = function(type, listener) {\n  var list, position, length, i;\n\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  if (!this._events || !this._events[type])\n    return this;\n\n  list = this._events[type];\n  length = list.length;\n  position = -1;\n\n  if (list === listener ||\n      (isFunction(list.listener) && list.listener === listener)) {\n    delete this._events[type];\n    if (this._events.removeListener)\n      this.emit('removeListener', type, listener);\n\n  } else if (isObject(list)) {\n    for (i = length; i-- > 0;) {\n      if (list[i] === listener ||\n          (list[i].listener && list[i].listener === listener)) {\n        position = i;\n        break;\n      }\n    }\n\n    if (position < 0)\n      return this;\n\n    if (list.length === 1) {\n      list.length = 0;\n      delete this._events[type];\n    } else {\n      list.splice(position, 1);\n    }\n\n    if (this._events.removeListener)\n      this.emit('removeListener', type, listener);\n  }\n\n  return this;\n};\n\nEventEmitter.prototype.removeAllListeners = function(type) {\n  var key, listeners;\n\n  if (!this._events)\n    return this;\n\n  // not listening for removeListener, no need to emit\n  if (!this._events.removeListener) {\n    if (arguments.length === 0)\n      this._events = {};\n    else if (this._events[type])\n      delete this._events[type];\n    return this;\n  }\n\n  // emit removeListener for all listeners on all events\n  if (arguments.length === 0) {\n    for (key in this._events) {\n      if (key === 'removeListener') continue;\n      this.removeAllListeners(key);\n    }\n    this.removeAllListeners('removeListener');\n    this._events = {};\n    return this;\n  }\n\n  listeners = this._events[type];\n\n  if (isFunction(listeners)) {\n    this.removeListener(type, listeners);\n  } else {\n    // LIFO order\n    while (listeners.length)\n      this.removeListener(type, listeners[listeners.length - 1]);\n  }\n  delete this._events[type];\n\n  return this;\n};\n\nEventEmitter.prototype.listeners = function(type) {\n  var ret;\n  if (!this._events || !this._events[type])\n    ret = [];\n  else if (isFunction(this._events[type]))\n    ret = [this._events[type]];\n  else\n    ret = this._events[type].slice();\n  return ret;\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  var ret;\n  if (!emitter._events || !emitter._events[type])\n    ret = 0;\n  else if (isFunction(emitter._events[type]))\n    ret = 1;\n  else\n    ret = emitter._events[type].length;\n  return ret;\n};\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\n\n},{}],28:[function(_dereq_,module,exports){\nif (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    ctor.prototype = Object.create(superCtor.prototype, {\n      constructor: {\n        value: ctor,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    var TempCtor = function () {}\n    TempCtor.prototype = superCtor.prototype\n    ctor.prototype = new TempCtor()\n    ctor.prototype.constructor = ctor\n  }\n}\n\n},{}],29:[function(_dereq_,module,exports){\nmodule.exports = Array.isArray || function (arr) {\n  return Object.prototype.toString.call(arr) == '[object Array]';\n};\n\n},{}],30:[function(_dereq_,module,exports){\n(function (global){\n/*! http://mths.be/punycode v1.2.4 by @mathias */\n;(function(root) {\n\n\t/** Detect free variables */\n\tvar freeExports = typeof exports == 'object' && exports;\n\tvar freeModule = typeof module == 'object' && module &&\n\t\tmodule.exports == freeExports && module;\n\tvar freeGlobal = typeof global == 'object' && global;\n\tif (freeGlobal.global === freeGlobal || freeGlobal.window === freeGlobal) {\n\t\troot = freeGlobal;\n\t}\n\n\t/**\n\t * The `punycode` object.\n\t * @name punycode\n\t * @type Object\n\t */\n\tvar punycode,\n\n\t/** Highest positive signed 32-bit float value */\n\tmaxInt = 2147483647, // aka. 0x7FFFFFFF or 2^31-1\n\n\t/** Bootstring parameters */\n\tbase = 36,\n\ttMin = 1,\n\ttMax = 26,\n\tskew = 38,\n\tdamp = 700,\n\tinitialBias = 72,\n\tinitialN = 128, // 0x80\n\tdelimiter = '-', // '\\x2D'\n\n\t/** Regular expressions */\n\tregexPunycode = /^xn--/,\n\tregexNonASCII = /[^ -~]/, // unprintable ASCII chars + non-ASCII chars\n\tregexSeparators = /\\x2E|\\u3002|\\uFF0E|\\uFF61/g, // RFC 3490 separators\n\n\t/** Error messages */\n\terrors = {\n\t\t'overflow': 'Overflow: input needs wider integers to process',\n\t\t'not-basic': 'Illegal input >= 0x80 (not a basic code point)',\n\t\t'invalid-input': 'Invalid input'\n\t},\n\n\t/** Convenience shortcuts */\n\tbaseMinusTMin = base - tMin,\n\tfloor = Math.floor,\n\tstringFromCharCode = String.fromCharCode,\n\n\t/** Temporary variable */\n\tkey;\n\n\t/*--------------------------------------------------------------------------*/\n\n\t/**\n\t * A generic error utility function.\n\t * @private\n\t * @param {String} type The error type.\n\t * @returns {Error} Throws a `RangeError` with the applicable error message.\n\t */\n\tfunction error(type) {\n\t\tthrow RangeError(errors[type]);\n\t}\n\n\t/**\n\t * A generic `Array#map` utility function.\n\t * @private\n\t * @param {Array} array The array to iterate over.\n\t * @param {Function} callback The function that gets called for every array\n\t * item.\n\t * @returns {Array} A new array of values returned by the callback function.\n\t */\n\tfunction map(array, fn) {\n\t\tvar length = array.length;\n\t\twhile (length--) {\n\t\t\tarray[length] = fn(array[length]);\n\t\t}\n\t\treturn array;\n\t}\n\n\t/**\n\t * A simple `Array#map`-like wrapper to work with domain name strings.\n\t * @private\n\t * @param {String} domain The domain name.\n\t * @param {Function} callback The function that gets called for every\n\t * character.\n\t * @returns {Array} A new string of characters returned by the callback\n\t * function.\n\t */\n\tfunction mapDomain(string, fn) {\n\t\treturn map(string.split(regexSeparators), fn).join('.');\n\t}\n\n\t/**\n\t * Creates an array containing the numeric code points of each Unicode\n\t * character in the string. While JavaScript uses UCS-2 internally,\n\t * this function will convert a pair of surrogate halves (each of which\n\t * UCS-2 exposes as separate characters) into a single code point,\n\t * matching UTF-16.\n\t * @see `punycode.ucs2.encode`\n\t * @see <http://mathiasbynens.be/notes/javascript-encoding>\n\t * @memberOf punycode.ucs2\n\t * @name decode\n\t * @param {String} string The Unicode input string (UCS-2).\n\t * @returns {Array} The new array of code points.\n\t */\n\tfunction ucs2decode(string) {\n\t\tvar output = [],\n\t\t    counter = 0,\n\t\t    length = string.length,\n\t\t    value,\n\t\t    extra;\n\t\twhile (counter < length) {\n\t\t\tvalue = string.charCodeAt(counter++);\n\t\t\tif (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n\t\t\t\t// high surrogate, and there is a next character\n\t\t\t\textra = string.charCodeAt(counter++);\n\t\t\t\tif ((extra & 0xFC00) == 0xDC00) { // low surrogate\n\t\t\t\t\toutput.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n\t\t\t\t} else {\n\t\t\t\t\t// unmatched surrogate; only append this code unit, in case the next\n\t\t\t\t\t// code unit is the high surrogate of a surrogate pair\n\t\t\t\t\toutput.push(value);\n\t\t\t\t\tcounter--;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\toutput.push(value);\n\t\t\t}\n\t\t}\n\t\treturn output;\n\t}\n\n\t/**\n\t * Creates a string based on an array of numeric code points.\n\t * @see `punycode.ucs2.decode`\n\t * @memberOf punycode.ucs2\n\t * @name encode\n\t * @param {Array} codePoints The array of numeric code points.\n\t * @returns {String} The new Unicode string (UCS-2).\n\t */\n\tfunction ucs2encode(array) {\n\t\treturn map(array, function(value) {\n\t\t\tvar output = '';\n\t\t\tif (value > 0xFFFF) {\n\t\t\t\tvalue -= 0x10000;\n\t\t\t\toutput += stringFromCharCode(value >>> 10 & 0x3FF | 0xD800);\n\t\t\t\tvalue = 0xDC00 | value & 0x3FF;\n\t\t\t}\n\t\t\toutput += stringFromCharCode(value);\n\t\t\treturn output;\n\t\t}).join('');\n\t}\n\n\t/**\n\t * Converts a basic code point into a digit/integer.\n\t * @see `digitToBasic()`\n\t * @private\n\t * @param {Number} codePoint The basic numeric code point value.\n\t * @returns {Number} The numeric value of a basic code point (for use in\n\t * representing integers) in the range `0` to `base - 1`, or `base` if\n\t * the code point does not represent a value.\n\t */\n\tfunction basicToDigit(codePoint) {\n\t\tif (codePoint - 48 < 10) {\n\t\t\treturn codePoint - 22;\n\t\t}\n\t\tif (codePoint - 65 < 26) {\n\t\t\treturn codePoint - 65;\n\t\t}\n\t\tif (codePoint - 97 < 26) {\n\t\t\treturn codePoint - 97;\n\t\t}\n\t\treturn base;\n\t}\n\n\t/**\n\t * Converts a digit/integer into a basic code point.\n\t * @see `basicToDigit()`\n\t * @private\n\t * @param {Number} digit The numeric value of a basic code point.\n\t * @returns {Number} The basic code point whose value (when used for\n\t * representing integers) is `digit`, which needs to be in the range\n\t * `0` to `base - 1`. If `flag` is non-zero, the uppercase form is\n\t * used; else, the lowercase form is used. The behavior is undefined\n\t * if `flag` is non-zero and `digit` has no uppercase form.\n\t */\n\tfunction digitToBasic(digit, flag) {\n\t\t//  0..25 map to ASCII a..z or A..Z\n\t\t// 26..35 map to ASCII 0..9\n\t\treturn digit + 22 + 75 * (digit < 26) - ((flag != 0) << 5);\n\t}\n\n\t/**\n\t * Bias adaptation function as per section 3.4 of RFC 3492.\n\t * http://tools.ietf.org/html/rfc3492#section-3.4\n\t * @private\n\t */\n\tfunction adapt(delta, numPoints, firstTime) {\n\t\tvar k = 0;\n\t\tdelta = firstTime ? floor(delta / damp) : delta >> 1;\n\t\tdelta += floor(delta / numPoints);\n\t\tfor (/* no initialization */; delta > baseMinusTMin * tMax >> 1; k += base) {\n\t\t\tdelta = floor(delta / baseMinusTMin);\n\t\t}\n\t\treturn floor(k + (baseMinusTMin + 1) * delta / (delta + skew));\n\t}\n\n\t/**\n\t * Converts a Punycode string of ASCII-only symbols to a string of Unicode\n\t * symbols.\n\t * @memberOf punycode\n\t * @param {String} input The Punycode string of ASCII-only symbols.\n\t * @returns {String} The resulting string of Unicode symbols.\n\t */\n\tfunction decode(input) {\n\t\t// Don't use UCS-2\n\t\tvar output = [],\n\t\t    inputLength = input.length,\n\t\t    out,\n\t\t    i = 0,\n\t\t    n = initialN,\n\t\t    bias = initialBias,\n\t\t    basic,\n\t\t    j,\n\t\t    index,\n\t\t    oldi,\n\t\t    w,\n\t\t    k,\n\t\t    digit,\n\t\t    t,\n\t\t    /** Cached calculation results */\n\t\t    baseMinusT;\n\n\t\t// Handle the basic code points: let `basic` be the number of input code\n\t\t// points before the last delimiter, or `0` if there is none, then copy\n\t\t// the first basic code points to the output.\n\n\t\tbasic = input.lastIndexOf(delimiter);\n\t\tif (basic < 0) {\n\t\t\tbasic = 0;\n\t\t}\n\n\t\tfor (j = 0; j < basic; ++j) {\n\t\t\t// if it's not a basic code point\n\t\t\tif (input.charCodeAt(j) >= 0x80) {\n\t\t\t\terror('not-basic');\n\t\t\t}\n\t\t\toutput.push(input.charCodeAt(j));\n\t\t}\n\n\t\t// Main decoding loop: start just after the last delimiter if any basic code\n\t\t// points were copied; start at the beginning otherwise.\n\n\t\tfor (index = basic > 0 ? basic + 1 : 0; index < inputLength; /* no final expression */) {\n\n\t\t\t// `index` is the index of the next character to be consumed.\n\t\t\t// Decode a generalized variable-length integer into `delta`,\n\t\t\t// which gets added to `i`. The overflow checking is easier\n\t\t\t// if we increase `i` as we go, then subtract off its starting\n\t\t\t// value at the end to obtain `delta`.\n\t\t\tfor (oldi = i, w = 1, k = base; /* no condition */; k += base) {\n\n\t\t\t\tif (index >= inputLength) {\n\t\t\t\t\terror('invalid-input');\n\t\t\t\t}\n\n\t\t\t\tdigit = basicToDigit(input.charCodeAt(index++));\n\n\t\t\t\tif (digit >= base || digit > floor((maxInt - i) / w)) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\ti += digit * w;\n\t\t\t\tt = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\n\t\t\t\tif (digit < t) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tbaseMinusT = base - t;\n\t\t\t\tif (w > floor(maxInt / baseMinusT)) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\tw *= baseMinusT;\n\n\t\t\t}\n\n\t\t\tout = output.length + 1;\n\t\t\tbias = adapt(i - oldi, out, oldi == 0);\n\n\t\t\t// `i` was supposed to wrap around from `out` to `0`,\n\t\t\t// incrementing `n` each time, so we'll fix that now:\n\t\t\tif (floor(i / out) > maxInt - n) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\tn += floor(i / out);\n\t\t\ti %= out;\n\n\t\t\t// Insert `n` at position `i` of the output\n\t\t\toutput.splice(i++, 0, n);\n\n\t\t}\n\n\t\treturn ucs2encode(output);\n\t}\n\n\t/**\n\t * Converts a string of Unicode symbols to a Punycode string of ASCII-only\n\t * symbols.\n\t * @memberOf punycode\n\t * @param {String} input The string of Unicode symbols.\n\t * @returns {String} The resulting Punycode string of ASCII-only symbols.\n\t */\n\tfunction encode(input) {\n\t\tvar n,\n\t\t    delta,\n\t\t    handledCPCount,\n\t\t    basicLength,\n\t\t    bias,\n\t\t    j,\n\t\t    m,\n\t\t    q,\n\t\t    k,\n\t\t    t,\n\t\t    currentValue,\n\t\t    output = [],\n\t\t    /** `inputLength` will hold the number of code points in `input`. */\n\t\t    inputLength,\n\t\t    /** Cached calculation results */\n\t\t    handledCPCountPlusOne,\n\t\t    baseMinusT,\n\t\t    qMinusT;\n\n\t\t// Convert the input in UCS-2 to Unicode\n\t\tinput = ucs2decode(input);\n\n\t\t// Cache the length\n\t\tinputLength = input.length;\n\n\t\t// Initialize the state\n\t\tn = initialN;\n\t\tdelta = 0;\n\t\tbias = initialBias;\n\n\t\t// Handle the basic code points\n\t\tfor (j = 0; j < inputLength; ++j) {\n\t\t\tcurrentValue = input[j];\n\t\t\tif (currentValue < 0x80) {\n\t\t\t\toutput.push(stringFromCharCode(currentValue));\n\t\t\t}\n\t\t}\n\n\t\thandledCPCount = basicLength = output.length;\n\n\t\t// `handledCPCount` is the number of code points that have been handled;\n\t\t// `basicLength` is the number of basic code points.\n\n\t\t// Finish the basic string - if it is not empty - with a delimiter\n\t\tif (basicLength) {\n\t\t\toutput.push(delimiter);\n\t\t}\n\n\t\t// Main encoding loop:\n\t\twhile (handledCPCount < inputLength) {\n\n\t\t\t// All non-basic code points < n have been handled already. Find the next\n\t\t\t// larger one:\n\t\t\tfor (m = maxInt, j = 0; j < inputLength; ++j) {\n\t\t\t\tcurrentValue = input[j];\n\t\t\t\tif (currentValue >= n && currentValue < m) {\n\t\t\t\t\tm = currentValue;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Increase `delta` enough to advance the decoder's <n,i> state to <m,0>,\n\t\t\t// but guard against overflow\n\t\t\thandledCPCountPlusOne = handledCPCount + 1;\n\t\t\tif (m - n > floor((maxInt - delta) / handledCPCountPlusOne)) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\tdelta += (m - n) * handledCPCountPlusOne;\n\t\t\tn = m;\n\n\t\t\tfor (j = 0; j < inputLength; ++j) {\n\t\t\t\tcurrentValue = input[j];\n\n\t\t\t\tif (currentValue < n && ++delta > maxInt) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\tif (currentValue == n) {\n\t\t\t\t\t// Represent delta as a generalized variable-length integer\n\t\t\t\t\tfor (q = delta, k = base; /* no condition */; k += base) {\n\t\t\t\t\t\tt = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\t\t\t\t\t\tif (q < t) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tqMinusT = q - t;\n\t\t\t\t\t\tbaseMinusT = base - t;\n\t\t\t\t\t\toutput.push(\n\t\t\t\t\t\t\tstringFromCharCode(digitToBasic(t + qMinusT % baseMinusT, 0))\n\t\t\t\t\t\t);\n\t\t\t\t\t\tq = floor(qMinusT / baseMinusT);\n\t\t\t\t\t}\n\n\t\t\t\t\toutput.push(stringFromCharCode(digitToBasic(q, 0)));\n\t\t\t\t\tbias = adapt(delta, handledCPCountPlusOne, handledCPCount == basicLength);\n\t\t\t\t\tdelta = 0;\n\t\t\t\t\t++handledCPCount;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t++delta;\n\t\t\t++n;\n\n\t\t}\n\t\treturn output.join('');\n\t}\n\n\t/**\n\t * Converts a Punycode string representing a domain name to Unicode. Only the\n\t * Punycoded parts of the domain name will be converted, i.e. it doesn't\n\t * matter if you call it on a string that has already been converted to\n\t * Unicode.\n\t * @memberOf punycode\n\t * @param {String} domain The Punycode domain name to convert to Unicode.\n\t * @returns {String} The Unicode representation of the given Punycode\n\t * string.\n\t */\n\tfunction toUnicode(domain) {\n\t\treturn mapDomain(domain, function(string) {\n\t\t\treturn regexPunycode.test(string)\n\t\t\t\t? decode(string.slice(4).toLowerCase())\n\t\t\t\t: string;\n\t\t});\n\t}\n\n\t/**\n\t * Converts a Unicode string representing a domain name to Punycode. Only the\n\t * non-ASCII parts of the domain name will be converted, i.e. it doesn't\n\t * matter if you call it with a domain that's already in ASCII.\n\t * @memberOf punycode\n\t * @param {String} domain The domain name to convert, as a Unicode string.\n\t * @returns {String} The Punycode representation of the given domain name.\n\t */\n\tfunction toASCII(domain) {\n\t\treturn mapDomain(domain, function(string) {\n\t\t\treturn regexNonASCII.test(string)\n\t\t\t\t? 'xn--' + encode(string)\n\t\t\t\t: string;\n\t\t});\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\t/** Define the public API */\n\tpunycode = {\n\t\t/**\n\t\t * A string representing the current Punycode.js version number.\n\t\t * @memberOf punycode\n\t\t * @type String\n\t\t */\n\t\t'version': '1.2.4',\n\t\t/**\n\t\t * An object of methods to convert from JavaScript's internal character\n\t\t * representation (UCS-2) to Unicode code points, and back.\n\t\t * @see <http://mathiasbynens.be/notes/javascript-encoding>\n\t\t * @memberOf punycode\n\t\t * @type Object\n\t\t */\n\t\t'ucs2': {\n\t\t\t'decode': ucs2decode,\n\t\t\t'encode': ucs2encode\n\t\t},\n\t\t'decode': decode,\n\t\t'encode': encode,\n\t\t'toASCII': toASCII,\n\t\t'toUnicode': toUnicode\n\t};\n\n\t/** Expose `punycode` */\n\t// Some AMD build optimizers, like r.js, check for specific condition patterns\n\t// like the following:\n\tif (\n\t\ttypeof define == 'function' &&\n\t\ttypeof define.amd == 'object' &&\n\t\tdefine.amd\n\t) {\n\t\tdefine('punycode', function() {\n\t\t\treturn punycode;\n\t\t});\n\t} else if (freeExports && !freeExports.nodeType) {\n\t\tif (freeModule) { // in Node.js or RingoJS v0.8.0+\n\t\t\tfreeModule.exports = punycode;\n\t\t} else { // in Narwhal or RingoJS v0.7.0-\n\t\t\tfor (key in punycode) {\n\t\t\t\tpunycode.hasOwnProperty(key) && (freeExports[key] = punycode[key]);\n\t\t\t}\n\t\t}\n\t} else { // in Rhino or a web browser\n\t\troot.punycode = punycode;\n\t}\n\n}(this));\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{}],31:[function(_dereq_,module,exports){\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\n// If obj.hasOwnProperty has been overridden, then calling\n// obj.hasOwnProperty(prop) will break.\n// See: https://github.com/joyent/node/issues/1707\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\nmodule.exports = function(qs, sep, eq, options) {\n  sep = sep || '&';\n  eq = eq || '=';\n  var obj = {};\n\n  if (typeof qs !== 'string' || qs.length === 0) {\n    return obj;\n  }\n\n  var regexp = /\\+/g;\n  qs = qs.split(sep);\n\n  var maxKeys = 1000;\n  if (options && typeof options.maxKeys === 'number') {\n    maxKeys = options.maxKeys;\n  }\n\n  var len = qs.length;\n  // maxKeys <= 0 means that we should not limit keys count\n  if (maxKeys > 0 && len > maxKeys) {\n    len = maxKeys;\n  }\n\n  for (var i = 0; i < len; ++i) {\n    var x = qs[i].replace(regexp, '%20'),\n        idx = x.indexOf(eq),\n        kstr, vstr, k, v;\n\n    if (idx >= 0) {\n      kstr = x.substr(0, idx);\n      vstr = x.substr(idx + 1);\n    } else {\n      kstr = x;\n      vstr = '';\n    }\n\n    k = decodeURIComponent(kstr);\n    v = decodeURIComponent(vstr);\n\n    if (!hasOwnProperty(obj, k)) {\n      obj[k] = v;\n    } else if (isArray(obj[k])) {\n      obj[k].push(v);\n    } else {\n      obj[k] = [obj[k], v];\n    }\n  }\n\n  return obj;\n};\n\nvar isArray = Array.isArray || function (xs) {\n  return Object.prototype.toString.call(xs) === '[object Array]';\n};\n\n},{}],32:[function(_dereq_,module,exports){\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar stringifyPrimitive = function(v) {\n  switch (typeof v) {\n    case 'string':\n      return v;\n\n    case 'boolean':\n      return v ? 'true' : 'false';\n\n    case 'number':\n      return isFinite(v) ? v : '';\n\n    default:\n      return '';\n  }\n};\n\nmodule.exports = function(obj, sep, eq, name) {\n  sep = sep || '&';\n  eq = eq || '=';\n  if (obj === null) {\n    obj = undefined;\n  }\n\n  if (typeof obj === 'object') {\n    return map(objectKeys(obj), function(k) {\n      var ks = encodeURIComponent(stringifyPrimitive(k)) + eq;\n      if (isArray(obj[k])) {\n        return map(obj[k], function(v) {\n          return ks + encodeURIComponent(stringifyPrimitive(v));\n        }).join(sep);\n      } else {\n        return ks + encodeURIComponent(stringifyPrimitive(obj[k]));\n      }\n    }).join(sep);\n\n  }\n\n  if (!name) return '';\n  return encodeURIComponent(stringifyPrimitive(name)) + eq +\n         encodeURIComponent(stringifyPrimitive(obj));\n};\n\nvar isArray = Array.isArray || function (xs) {\n  return Object.prototype.toString.call(xs) === '[object Array]';\n};\n\nfunction map (xs, f) {\n  if (xs.map) return xs.map(f);\n  var res = [];\n  for (var i = 0; i < xs.length; i++) {\n    res.push(f(xs[i], i));\n  }\n  return res;\n}\n\nvar objectKeys = Object.keys || function (obj) {\n  var res = [];\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) res.push(key);\n  }\n  return res;\n};\n\n},{}],33:[function(_dereq_,module,exports){\n'use strict';\n\nexports.decode = exports.parse = _dereq_('./decode');\nexports.encode = exports.stringify = _dereq_('./encode');\n\n},{\"./decode\":31,\"./encode\":32}],34:[function(_dereq_,module,exports){\nmodule.exports = _dereq_(\"./lib/_stream_duplex.js\")\n\n},{\"./lib/_stream_duplex.js\":35}],35:[function(_dereq_,module,exports){\n(function (process){\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a duplex stream is just a stream that is both readable and writable.\n// Since JS doesn't have multiple prototypal inheritance, this class\n// prototypally inherits from Readable, and then parasitically from\n// Writable.\n\nmodule.exports = Duplex;\n\n/*<replacement>*/\nvar objectKeys = Object.keys || function (obj) {\n  var keys = [];\n  for (var key in obj) keys.push(key);\n  return keys;\n}\n/*</replacement>*/\n\n\n/*<replacement>*/\nvar util = _dereq_('core-util-is');\nutil.inherits = _dereq_('inherits');\n/*</replacement>*/\n\nvar Readable = _dereq_('./_stream_readable');\nvar Writable = _dereq_('./_stream_writable');\n\nutil.inherits(Duplex, Readable);\n\nforEach(objectKeys(Writable.prototype), function(method) {\n  if (!Duplex.prototype[method])\n    Duplex.prototype[method] = Writable.prototype[method];\n});\n\nfunction Duplex(options) {\n  if (!(this instanceof Duplex))\n    return new Duplex(options);\n\n  Readable.call(this, options);\n  Writable.call(this, options);\n\n  if (options && options.readable === false)\n    this.readable = false;\n\n  if (options && options.writable === false)\n    this.writable = false;\n\n  this.allowHalfOpen = true;\n  if (options && options.allowHalfOpen === false)\n    this.allowHalfOpen = false;\n\n  this.once('end', onend);\n}\n\n// the no-half-open enforcer\nfunction onend() {\n  // if we allow half-open state, or if the writable side ended,\n  // then we're ok.\n  if (this.allowHalfOpen || this._writableState.ended)\n    return;\n\n  // no more data can be written.\n  // But allow more writes to happen in this tick.\n  process.nextTick(this.end.bind(this));\n}\n\nfunction forEach (xs, f) {\n  for (var i = 0, l = xs.length; i < l; i++) {\n    f(xs[i], i);\n  }\n}\n\n}).call(this,_dereq_(\"/home/alex/projects/javascript/imjs/node_modules/insert-module-globals/node_modules/process/browser.js\"))\n},{\"./_stream_readable\":37,\"./_stream_writable\":39,\"/home/alex/projects/javascript/imjs/node_modules/insert-module-globals/node_modules/process/browser.js\":55,\"core-util-is\":40,\"inherits\":28}],36:[function(_dereq_,module,exports){\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a passthrough stream.\n// basically just the most minimal sort of Transform stream.\n// Every written chunk gets output as-is.\n\nmodule.exports = PassThrough;\n\nvar Transform = _dereq_('./_stream_transform');\n\n/*<replacement>*/\nvar util = _dereq_('core-util-is');\nutil.inherits = _dereq_('inherits');\n/*</replacement>*/\n\nutil.inherits(PassThrough, Transform);\n\nfunction PassThrough(options) {\n  if (!(this instanceof PassThrough))\n    return new PassThrough(options);\n\n  Transform.call(this, options);\n}\n\nPassThrough.prototype._transform = function(chunk, encoding, cb) {\n  cb(null, chunk);\n};\n\n},{\"./_stream_transform\":38,\"core-util-is\":40,\"inherits\":28}],37:[function(_dereq_,module,exports){\n(function (process){\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nmodule.exports = Readable;\n\n/*<replacement>*/\nvar isArray = _dereq_('isarray');\n/*</replacement>*/\n\n\n/*<replacement>*/\nvar Buffer = _dereq_('buffer').Buffer;\n/*</replacement>*/\n\nReadable.ReadableState = ReadableState;\n\nvar EE = _dereq_('events').EventEmitter;\n\n/*<replacement>*/\nif (!EE.listenerCount) EE.listenerCount = function(emitter, type) {\n  return emitter.listeners(type).length;\n};\n/*</replacement>*/\n\nvar Stream = _dereq_('stream');\n\n/*<replacement>*/\nvar util = _dereq_('core-util-is');\nutil.inherits = _dereq_('inherits');\n/*</replacement>*/\n\nvar StringDecoder;\n\nutil.inherits(Readable, Stream);\n\nfunction ReadableState(options, stream) {\n  options = options || {};\n\n  // the point at which it stops calling _read() to fill the buffer\n  // Note: 0 is a valid value, means \"don't call _read preemptively ever\"\n  var hwm = options.highWaterMark;\n  this.highWaterMark = (hwm || hwm === 0) ? hwm : 16 * 1024;\n\n  // cast to ints.\n  this.highWaterMark = ~~this.highWaterMark;\n\n  this.buffer = [];\n  this.length = 0;\n  this.pipes = null;\n  this.pipesCount = 0;\n  this.flowing = false;\n  this.ended = false;\n  this.endEmitted = false;\n  this.reading = false;\n\n  // In streams that never have any data, and do push(null) right away,\n  // the consumer can miss the 'end' event if they do some I/O before\n  // consuming the stream.  So, we don't emit('end') until some reading\n  // happens.\n  this.calledRead = false;\n\n  // a flag to be able to tell if the onwrite cb is called immediately,\n  // or on a later tick.  We set this to true at first, becuase any\n  // actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first write call.\n  this.sync = true;\n\n  // whenever we return null, then we set a flag to say\n  // that we're awaiting a 'readable' event emission.\n  this.needReadable = false;\n  this.emittedReadable = false;\n  this.readableListening = false;\n\n\n  // object stream flag. Used to make read(n) ignore n and to\n  // make all the buffer merging and length checks go away\n  this.objectMode = !!options.objectMode;\n\n  // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n  this.defaultEncoding = options.defaultEncoding || 'utf8';\n\n  // when piping, we only care about 'readable' events that happen\n  // after read()ing all the bytes and not getting any pushback.\n  this.ranOut = false;\n\n  // the number of writers that are awaiting a drain event in .pipe()s\n  this.awaitDrain = 0;\n\n  // if true, a maybeReadMore has been scheduled\n  this.readingMore = false;\n\n  this.decoder = null;\n  this.encoding = null;\n  if (options.encoding) {\n    if (!StringDecoder)\n      StringDecoder = _dereq_('string_decoder/').StringDecoder;\n    this.decoder = new StringDecoder(options.encoding);\n    this.encoding = options.encoding;\n  }\n}\n\nfunction Readable(options) {\n  if (!(this instanceof Readable))\n    return new Readable(options);\n\n  this._readableState = new ReadableState(options, this);\n\n  // legacy\n  this.readable = true;\n\n  Stream.call(this);\n}\n\n// Manually shove something into the read() buffer.\n// This returns true if the highWaterMark has not been hit yet,\n// similar to how Writable.write() returns true if you should\n// write() some more.\nReadable.prototype.push = function(chunk, encoding) {\n  var state = this._readableState;\n\n  if (typeof chunk === 'string' && !state.objectMode) {\n    encoding = encoding || state.defaultEncoding;\n    if (encoding !== state.encoding) {\n      chunk = new Buffer(chunk, encoding);\n      encoding = '';\n    }\n  }\n\n  return readableAddChunk(this, state, chunk, encoding, false);\n};\n\n// Unshift should *always* be something directly out of read()\nReadable.prototype.unshift = function(chunk) {\n  var state = this._readableState;\n  return readableAddChunk(this, state, chunk, '', true);\n};\n\nfunction readableAddChunk(stream, state, chunk, encoding, addToFront) {\n  var er = chunkInvalid(state, chunk);\n  if (er) {\n    stream.emit('error', er);\n  } else if (chunk === null || chunk === undefined) {\n    state.reading = false;\n    if (!state.ended)\n      onEofChunk(stream, state);\n  } else if (state.objectMode || chunk && chunk.length > 0) {\n    if (state.ended && !addToFront) {\n      var e = new Error('stream.push() after EOF');\n      stream.emit('error', e);\n    } else if (state.endEmitted && addToFront) {\n      var e = new Error('stream.unshift() after end event');\n      stream.emit('error', e);\n    } else {\n      if (state.decoder && !addToFront && !encoding)\n        chunk = state.decoder.write(chunk);\n\n      // update the buffer info.\n      state.length += state.objectMode ? 1 : chunk.length;\n      if (addToFront) {\n        state.buffer.unshift(chunk);\n      } else {\n        state.reading = false;\n        state.buffer.push(chunk);\n      }\n\n      if (state.needReadable)\n        emitReadable(stream);\n\n      maybeReadMore(stream, state);\n    }\n  } else if (!addToFront) {\n    state.reading = false;\n  }\n\n  return needMoreData(state);\n}\n\n\n\n// if it's past the high water mark, we can push in some more.\n// Also, if we have no data yet, we can stand some\n// more bytes.  This is to work around cases where hwm=0,\n// such as the repl.  Also, if the push() triggered a\n// readable event, and the user called read(largeNumber) such that\n// needReadable was set, then we ought to push more, so that another\n// 'readable' event will be triggered.\nfunction needMoreData(state) {\n  return !state.ended &&\n         (state.needReadable ||\n          state.length < state.highWaterMark ||\n          state.length === 0);\n}\n\n// backwards compatibility.\nReadable.prototype.setEncoding = function(enc) {\n  if (!StringDecoder)\n    StringDecoder = _dereq_('string_decoder/').StringDecoder;\n  this._readableState.decoder = new StringDecoder(enc);\n  this._readableState.encoding = enc;\n};\n\n// Don't raise the hwm > 128MB\nvar MAX_HWM = 0x800000;\nfunction roundUpToNextPowerOf2(n) {\n  if (n >= MAX_HWM) {\n    n = MAX_HWM;\n  } else {\n    // Get the next highest power of 2\n    n--;\n    for (var p = 1; p < 32; p <<= 1) n |= n >> p;\n    n++;\n  }\n  return n;\n}\n\nfunction howMuchToRead(n, state) {\n  if (state.length === 0 && state.ended)\n    return 0;\n\n  if (state.objectMode)\n    return n === 0 ? 0 : 1;\n\n  if (n === null || isNaN(n)) {\n    // only flow one buffer at a time\n    if (state.flowing && state.buffer.length)\n      return state.buffer[0].length;\n    else\n      return state.length;\n  }\n\n  if (n <= 0)\n    return 0;\n\n  // If we're asking for more than the target buffer level,\n  // then raise the water mark.  Bump up to the next highest\n  // power of 2, to prevent increasing it excessively in tiny\n  // amounts.\n  if (n > state.highWaterMark)\n    state.highWaterMark = roundUpToNextPowerOf2(n);\n\n  // don't have that much.  return null, unless we've ended.\n  if (n > state.length) {\n    if (!state.ended) {\n      state.needReadable = true;\n      return 0;\n    } else\n      return state.length;\n  }\n\n  return n;\n}\n\n// you can override either this method, or the async _read(n) below.\nReadable.prototype.read = function(n) {\n  var state = this._readableState;\n  state.calledRead = true;\n  var nOrig = n;\n  var ret;\n\n  if (typeof n !== 'number' || n > 0)\n    state.emittedReadable = false;\n\n  // if we're doing read(0) to trigger a readable event, but we\n  // already have a bunch of data in the buffer, then just trigger\n  // the 'readable' event and move on.\n  if (n === 0 &&\n      state.needReadable &&\n      (state.length >= state.highWaterMark || state.ended)) {\n    emitReadable(this);\n    return null;\n  }\n\n  n = howMuchToRead(n, state);\n\n  // if we've ended, and we're now clear, then finish it up.\n  if (n === 0 && state.ended) {\n    ret = null;\n\n    // In cases where the decoder did not receive enough data\n    // to produce a full chunk, then immediately received an\n    // EOF, state.buffer will contain [<Buffer >, <Buffer 00 ...>].\n    // howMuchToRead will see this and coerce the amount to\n    // read to zero (because it's looking at the length of the\n    // first <Buffer > in state.buffer), and we'll end up here.\n    //\n    // This can only happen via state.decoder -- no other venue\n    // exists for pushing a zero-length chunk into state.buffer\n    // and triggering this behavior. In this case, we return our\n    // remaining data and end the stream, if appropriate.\n    if (state.length > 0 && state.decoder) {\n      ret = fromList(n, state);\n      state.length -= ret.length;\n    }\n\n    if (state.length === 0)\n      endReadable(this);\n\n    return ret;\n  }\n\n  // All the actual chunk generation logic needs to be\n  // *below* the call to _read.  The reason is that in certain\n  // synthetic stream cases, such as passthrough streams, _read\n  // may be a completely synchronous operation which may change\n  // the state of the read buffer, providing enough data when\n  // before there was *not* enough.\n  //\n  // So, the steps are:\n  // 1. Figure out what the state of things will be after we do\n  // a read from the buffer.\n  //\n  // 2. If that resulting state will trigger a _read, then call _read.\n  // Note that this may be asynchronous, or synchronous.  Yes, it is\n  // deeply ugly to write APIs this way, but that still doesn't mean\n  // that the Readable class should behave improperly, as streams are\n  // designed to be sync/async agnostic.\n  // Take note if the _read call is sync or async (ie, if the read call\n  // has returned yet), so that we know whether or not it's safe to emit\n  // 'readable' etc.\n  //\n  // 3. Actually pull the requested chunks out of the buffer and return.\n\n  // if we need a readable event, then we need to do some reading.\n  var doRead = state.needReadable;\n\n  // if we currently have less than the highWaterMark, then also read some\n  if (state.length - n <= state.highWaterMark)\n    doRead = true;\n\n  // however, if we've ended, then there's no point, and if we're already\n  // reading, then it's unnecessary.\n  if (state.ended || state.reading)\n    doRead = false;\n\n  if (doRead) {\n    state.reading = true;\n    state.sync = true;\n    // if the length is currently zero, then we *need* a readable event.\n    if (state.length === 0)\n      state.needReadable = true;\n    // call internal read method\n    this._read(state.highWaterMark);\n    state.sync = false;\n  }\n\n  // If _read called its callback synchronously, then `reading`\n  // will be false, and we need to re-evaluate how much data we\n  // can return to the user.\n  if (doRead && !state.reading)\n    n = howMuchToRead(nOrig, state);\n\n  if (n > 0)\n    ret = fromList(n, state);\n  else\n    ret = null;\n\n  if (ret === null) {\n    state.needReadable = true;\n    n = 0;\n  }\n\n  state.length -= n;\n\n  // If we have nothing in the buffer, then we want to know\n  // as soon as we *do* get something into the buffer.\n  if (state.length === 0 && !state.ended)\n    state.needReadable = true;\n\n  // If we happened to read() exactly the remaining amount in the\n  // buffer, and the EOF has been seen at this point, then make sure\n  // that we emit 'end' on the very next tick.\n  if (state.ended && !state.endEmitted && state.length === 0)\n    endReadable(this);\n\n  return ret;\n};\n\nfunction chunkInvalid(state, chunk) {\n  var er = null;\n  if (!Buffer.isBuffer(chunk) &&\n      'string' !== typeof chunk &&\n      chunk !== null &&\n      chunk !== undefined &&\n      !state.objectMode) {\n    er = new TypeError('Invalid non-string/buffer chunk');\n  }\n  return er;\n}\n\n\nfunction onEofChunk(stream, state) {\n  if (state.decoder && !state.ended) {\n    var chunk = state.decoder.end();\n    if (chunk && chunk.length) {\n      state.buffer.push(chunk);\n      state.length += state.objectMode ? 1 : chunk.length;\n    }\n  }\n  state.ended = true;\n\n  // if we've ended and we have some data left, then emit\n  // 'readable' now to make sure it gets picked up.\n  if (state.length > 0)\n    emitReadable(stream);\n  else\n    endReadable(stream);\n}\n\n// Don't emit readable right away in sync mode, because this can trigger\n// another read() call => stack overflow.  This way, it might trigger\n// a nextTick recursion warning, but that's not so bad.\nfunction emitReadable(stream) {\n  var state = stream._readableState;\n  state.needReadable = false;\n  if (state.emittedReadable)\n    return;\n\n  state.emittedReadable = true;\n  if (state.sync)\n    process.nextTick(function() {\n      emitReadable_(stream);\n    });\n  else\n    emitReadable_(stream);\n}\n\nfunction emitReadable_(stream) {\n  stream.emit('readable');\n}\n\n\n// at this point, the user has presumably seen the 'readable' event,\n// and called read() to consume some data.  that may have triggered\n// in turn another _read(n) call, in which case reading = true if\n// it's in progress.\n// However, if we're not ended, or reading, and the length < hwm,\n// then go ahead and try to read some more preemptively.\nfunction maybeReadMore(stream, state) {\n  if (!state.readingMore) {\n    state.readingMore = true;\n    process.nextTick(function() {\n      maybeReadMore_(stream, state);\n    });\n  }\n}\n\nfunction maybeReadMore_(stream, state) {\n  var len = state.length;\n  while (!state.reading && !state.flowing && !state.ended &&\n         state.length < state.highWaterMark) {\n    stream.read(0);\n    if (len === state.length)\n      // didn't get any data, stop spinning.\n      break;\n    else\n      len = state.length;\n  }\n  state.readingMore = false;\n}\n\n// abstract method.  to be overridden in specific implementation classes.\n// call cb(er, data) where data is <= n in length.\n// for virtual (non-string, non-buffer) streams, \"length\" is somewhat\n// arbitrary, and perhaps not very meaningful.\nReadable.prototype._read = function(n) {\n  this.emit('error', new Error('not implemented'));\n};\n\nReadable.prototype.pipe = function(dest, pipeOpts) {\n  var src = this;\n  var state = this._readableState;\n\n  switch (state.pipesCount) {\n    case 0:\n      state.pipes = dest;\n      break;\n    case 1:\n      state.pipes = [state.pipes, dest];\n      break;\n    default:\n      state.pipes.push(dest);\n      break;\n  }\n  state.pipesCount += 1;\n\n  var doEnd = (!pipeOpts || pipeOpts.end !== false) &&\n              dest !== process.stdout &&\n              dest !== process.stderr;\n\n  var endFn = doEnd ? onend : cleanup;\n  if (state.endEmitted)\n    process.nextTick(endFn);\n  else\n    src.once('end', endFn);\n\n  dest.on('unpipe', onunpipe);\n  function onunpipe(readable) {\n    if (readable !== src) return;\n    cleanup();\n  }\n\n  function onend() {\n    dest.end();\n  }\n\n  // when the dest drains, it reduces the awaitDrain counter\n  // on the source.  This would be more elegant with a .once()\n  // handler in flow(), but adding and removing repeatedly is\n  // too slow.\n  var ondrain = pipeOnDrain(src);\n  dest.on('drain', ondrain);\n\n  function cleanup() {\n    // cleanup event handlers once the pipe is broken\n    dest.removeListener('close', onclose);\n    dest.removeListener('finish', onfinish);\n    dest.removeListener('drain', ondrain);\n    dest.removeListener('error', onerror);\n    dest.removeListener('unpipe', onunpipe);\n    src.removeListener('end', onend);\n    src.removeListener('end', cleanup);\n\n    // if the reader is waiting for a drain event from this\n    // specific writer, then it would cause it to never start\n    // flowing again.\n    // So, if this is awaiting a drain, then we just call it now.\n    // If we don't know, then assume that we are waiting for one.\n    if (!dest._writableState || dest._writableState.needDrain)\n      ondrain();\n  }\n\n  // if the dest has an error, then stop piping into it.\n  // however, don't suppress the throwing behavior for this.\n  function onerror(er) {\n    unpipe();\n    dest.removeListener('error', onerror);\n    if (EE.listenerCount(dest, 'error') === 0)\n      dest.emit('error', er);\n  }\n  // This is a brutally ugly hack to make sure that our error handler\n  // is attached before any userland ones.  NEVER DO THIS.\n  if (!dest._events || !dest._events.error)\n    dest.on('error', onerror);\n  else if (isArray(dest._events.error))\n    dest._events.error.unshift(onerror);\n  else\n    dest._events.error = [onerror, dest._events.error];\n\n\n\n  // Both close and finish should trigger unpipe, but only once.\n  function onclose() {\n    dest.removeListener('finish', onfinish);\n    unpipe();\n  }\n  dest.once('close', onclose);\n  function onfinish() {\n    dest.removeListener('close', onclose);\n    unpipe();\n  }\n  dest.once('finish', onfinish);\n\n  function unpipe() {\n    src.unpipe(dest);\n  }\n\n  // tell the dest that it's being piped to\n  dest.emit('pipe', src);\n\n  // start the flow if it hasn't been started already.\n  if (!state.flowing) {\n    // the handler that waits for readable events after all\n    // the data gets sucked out in flow.\n    // This would be easier to follow with a .once() handler\n    // in flow(), but that is too slow.\n    this.on('readable', pipeOnReadable);\n\n    state.flowing = true;\n    process.nextTick(function() {\n      flow(src);\n    });\n  }\n\n  return dest;\n};\n\nfunction pipeOnDrain(src) {\n  return function() {\n    var dest = this;\n    var state = src._readableState;\n    state.awaitDrain--;\n    if (state.awaitDrain === 0)\n      flow(src);\n  };\n}\n\nfunction flow(src) {\n  var state = src._readableState;\n  var chunk;\n  state.awaitDrain = 0;\n\n  function write(dest, i, list) {\n    var written = dest.write(chunk);\n    if (false === written) {\n      state.awaitDrain++;\n    }\n  }\n\n  while (state.pipesCount && null !== (chunk = src.read())) {\n\n    if (state.pipesCount === 1)\n      write(state.pipes, 0, null);\n    else\n      forEach(state.pipes, write);\n\n    src.emit('data', chunk);\n\n    // if anyone needs a drain, then we have to wait for that.\n    if (state.awaitDrain > 0)\n      return;\n  }\n\n  // if every destination was unpiped, either before entering this\n  // function, or in the while loop, then stop flowing.\n  //\n  // NB: This is a pretty rare edge case.\n  if (state.pipesCount === 0) {\n    state.flowing = false;\n\n    // if there were data event listeners added, then switch to old mode.\n    if (EE.listenerCount(src, 'data') > 0)\n      emitDataEvents(src);\n    return;\n  }\n\n  // at this point, no one needed a drain, so we just ran out of data\n  // on the next readable event, start it over again.\n  state.ranOut = true;\n}\n\nfunction pipeOnReadable() {\n  if (this._readableState.ranOut) {\n    this._readableState.ranOut = false;\n    flow(this);\n  }\n}\n\n\nReadable.prototype.unpipe = function(dest) {\n  var state = this._readableState;\n\n  // if we're not piping anywhere, then do nothing.\n  if (state.pipesCount === 0)\n    return this;\n\n  // just one destination.  most common case.\n  if (state.pipesCount === 1) {\n    // passed in one, but it's not the right one.\n    if (dest && dest !== state.pipes)\n      return this;\n\n    if (!dest)\n      dest = state.pipes;\n\n    // got a match.\n    state.pipes = null;\n    state.pipesCount = 0;\n    this.removeListener('readable', pipeOnReadable);\n    state.flowing = false;\n    if (dest)\n      dest.emit('unpipe', this);\n    return this;\n  }\n\n  // slow case. multiple pipe destinations.\n\n  if (!dest) {\n    // remove all.\n    var dests = state.pipes;\n    var len = state.pipesCount;\n    state.pipes = null;\n    state.pipesCount = 0;\n    this.removeListener('readable', pipeOnReadable);\n    state.flowing = false;\n\n    for (var i = 0; i < len; i++)\n      dests[i].emit('unpipe', this);\n    return this;\n  }\n\n  // try to find the right one.\n  var i = indexOf(state.pipes, dest);\n  if (i === -1)\n    return this;\n\n  state.pipes.splice(i, 1);\n  state.pipesCount -= 1;\n  if (state.pipesCount === 1)\n    state.pipes = state.pipes[0];\n\n  dest.emit('unpipe', this);\n\n  return this;\n};\n\n// set up data events if they are asked for\n// Ensure readable listeners eventually get something\nReadable.prototype.on = function(ev, fn) {\n  var res = Stream.prototype.on.call(this, ev, fn);\n\n  if (ev === 'data' && !this._readableState.flowing)\n    emitDataEvents(this);\n\n  if (ev === 'readable' && this.readable) {\n    var state = this._readableState;\n    if (!state.readableListening) {\n      state.readableListening = true;\n      state.emittedReadable = false;\n      state.needReadable = true;\n      if (!state.reading) {\n        this.read(0);\n      } else if (state.length) {\n        emitReadable(this, state);\n      }\n    }\n  }\n\n  return res;\n};\nReadable.prototype.addListener = Readable.prototype.on;\n\n// pause() and resume() are remnants of the legacy readable stream API\n// If the user uses them, then switch into old mode.\nReadable.prototype.resume = function() {\n  emitDataEvents(this);\n  this.read(0);\n  this.emit('resume');\n};\n\nReadable.prototype.pause = function() {\n  emitDataEvents(this, true);\n  this.emit('pause');\n};\n\nfunction emitDataEvents(stream, startPaused) {\n  var state = stream._readableState;\n\n  if (state.flowing) {\n    // https://github.com/isaacs/readable-stream/issues/16\n    throw new Error('Cannot switch to old mode now.');\n  }\n\n  var paused = startPaused || false;\n  var readable = false;\n\n  // convert to an old-style stream.\n  stream.readable = true;\n  stream.pipe = Stream.prototype.pipe;\n  stream.on = stream.addListener = Stream.prototype.on;\n\n  stream.on('readable', function() {\n    readable = true;\n\n    var c;\n    while (!paused && (null !== (c = stream.read())))\n      stream.emit('data', c);\n\n    if (c === null) {\n      readable = false;\n      stream._readableState.needReadable = true;\n    }\n  });\n\n  stream.pause = function() {\n    paused = true;\n    this.emit('pause');\n  };\n\n  stream.resume = function() {\n    paused = false;\n    if (readable)\n      process.nextTick(function() {\n        stream.emit('readable');\n      });\n    else\n      this.read(0);\n    this.emit('resume');\n  };\n\n  // now make it start, just in case it hadn't already.\n  stream.emit('readable');\n}\n\n// wrap an old-style stream as the async data source.\n// This is *not* part of the readable stream interface.\n// It is an ugly unfortunate mess of history.\nReadable.prototype.wrap = function(stream) {\n  var state = this._readableState;\n  var paused = false;\n\n  var self = this;\n  stream.on('end', function() {\n    if (state.decoder && !state.ended) {\n      var chunk = state.decoder.end();\n      if (chunk && chunk.length)\n        self.push(chunk);\n    }\n\n    self.push(null);\n  });\n\n  stream.on('data', function(chunk) {\n    if (state.decoder)\n      chunk = state.decoder.write(chunk);\n\n    // don't skip over falsy values in objectMode\n    //if (state.objectMode && util.isNullOrUndefined(chunk))\n    if (state.objectMode && (chunk === null || chunk === undefined))\n      return;\n    else if (!state.objectMode && (!chunk || !chunk.length))\n      return;\n\n    var ret = self.push(chunk);\n    if (!ret) {\n      paused = true;\n      stream.pause();\n    }\n  });\n\n  // proxy all the other methods.\n  // important when wrapping filters and duplexes.\n  for (var i in stream) {\n    if (typeof stream[i] === 'function' &&\n        typeof this[i] === 'undefined') {\n      this[i] = function(method) { return function() {\n        return stream[method].apply(stream, arguments);\n      }}(i);\n    }\n  }\n\n  // proxy certain important events.\n  var events = ['error', 'close', 'destroy', 'pause', 'resume'];\n  forEach(events, function(ev) {\n    stream.on(ev, self.emit.bind(self, ev));\n  });\n\n  // when we try to consume some more bytes, simply unpause the\n  // underlying stream.\n  self._read = function(n) {\n    if (paused) {\n      paused = false;\n      stream.resume();\n    }\n  };\n\n  return self;\n};\n\n\n\n// exposed for testing purposes only.\nReadable._fromList = fromList;\n\n// Pluck off n bytes from an array of buffers.\n// Length is the combined lengths of all the buffers in the list.\nfunction fromList(n, state) {\n  var list = state.buffer;\n  var length = state.length;\n  var stringMode = !!state.decoder;\n  var objectMode = !!state.objectMode;\n  var ret;\n\n  // nothing in the list, definitely empty.\n  if (list.length === 0)\n    return null;\n\n  if (length === 0)\n    ret = null;\n  else if (objectMode)\n    ret = list.shift();\n  else if (!n || n >= length) {\n    // read it all, truncate the array.\n    if (stringMode)\n      ret = list.join('');\n    else\n      ret = Buffer.concat(list, length);\n    list.length = 0;\n  } else {\n    // read just some of it.\n    if (n < list[0].length) {\n      // just take a part of the first list item.\n      // slice is the same for buffers and strings.\n      var buf = list[0];\n      ret = buf.slice(0, n);\n      list[0] = buf.slice(n);\n    } else if (n === list[0].length) {\n      // first list is a perfect match\n      ret = list.shift();\n    } else {\n      // complex case.\n      // we have enough to cover it, but it spans past the first buffer.\n      if (stringMode)\n        ret = '';\n      else\n        ret = new Buffer(n);\n\n      var c = 0;\n      for (var i = 0, l = list.length; i < l && c < n; i++) {\n        var buf = list[0];\n        var cpy = Math.min(n - c, buf.length);\n\n        if (stringMode)\n          ret += buf.slice(0, cpy);\n        else\n          buf.copy(ret, c, 0, cpy);\n\n        if (cpy < buf.length)\n          list[0] = buf.slice(cpy);\n        else\n          list.shift();\n\n        c += cpy;\n      }\n    }\n  }\n\n  return ret;\n}\n\nfunction endReadable(stream) {\n  var state = stream._readableState;\n\n  // If we get here before consuming all the bytes, then that is a\n  // bug in node.  Should never happen.\n  if (state.length > 0)\n    throw new Error('endReadable called on non-empty stream');\n\n  if (!state.endEmitted && state.calledRead) {\n    state.ended = true;\n    process.nextTick(function() {\n      // Check that we didn't get one last unshift.\n      if (!state.endEmitted && state.length === 0) {\n        state.endEmitted = true;\n        stream.readable = false;\n        stream.emit('end');\n      }\n    });\n  }\n}\n\nfunction forEach (xs, f) {\n  for (var i = 0, l = xs.length; i < l; i++) {\n    f(xs[i], i);\n  }\n}\n\nfunction indexOf (xs, x) {\n  for (var i = 0, l = xs.length; i < l; i++) {\n    if (xs[i] === x) return i;\n  }\n  return -1;\n}\n\n}).call(this,_dereq_(\"/home/alex/projects/javascript/imjs/node_modules/insert-module-globals/node_modules/process/browser.js\"))\n},{\"/home/alex/projects/javascript/imjs/node_modules/insert-module-globals/node_modules/process/browser.js\":55,\"buffer\":23,\"core-util-is\":40,\"events\":27,\"inherits\":28,\"isarray\":29,\"stream\":45,\"string_decoder/\":46}],38:[function(_dereq_,module,exports){\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n\n// a transform stream is a readable/writable stream where you do\n// something with the data.  Sometimes it's called a \"filter\",\n// but that's not a great name for it, since that implies a thing where\n// some bits pass through, and others are simply ignored.  (That would\n// be a valid example of a transform, of course.)\n//\n// While the output is causally related to the input, it's not a\n// necessarily symmetric or synchronous transformation.  For example,\n// a zlib stream might take multiple plain-text writes(), and then\n// emit a single compressed chunk some time in the future.\n//\n// Here's how this works:\n//\n// The Transform stream has all the aspects of the readable and writable\n// stream classes.  When you write(chunk), that calls _write(chunk,cb)\n// internally, and returns false if there's a lot of pending writes\n// buffered up.  When you call read(), that calls _read(n) until\n// there's enough pending readable data buffered up.\n//\n// In a transform stream, the written data is placed in a buffer.  When\n// _read(n) is called, it transforms the queued up data, calling the\n// buffered _write cb's as it consumes chunks.  If consuming a single\n// written chunk would result in multiple output chunks, then the first\n// outputted bit calls the readcb, and subsequent chunks just go into\n// the read buffer, and will cause it to emit 'readable' if necessary.\n//\n// This way, back-pressure is actually determined by the reading side,\n// since _read has to be called to start processing a new chunk.  However,\n// a pathological inflate type of transform can cause excessive buffering\n// here.  For example, imagine a stream where every byte of input is\n// interpreted as an integer from 0-255, and then results in that many\n// bytes of output.  Writing the 4 bytes {ff,ff,ff,ff} would result in\n// 1kb of data being output.  In this case, you could write a very small\n// amount of input, and end up with a very large amount of output.  In\n// such a pathological inflating mechanism, there'd be no way to tell\n// the system to stop doing the transform.  A single 4MB write could\n// cause the system to run out of memory.\n//\n// However, even in such a pathological case, only a single written chunk\n// would be consumed, and then the rest would wait (un-transformed) until\n// the results of the previous transformed chunk were consumed.\n\nmodule.exports = Transform;\n\nvar Duplex = _dereq_('./_stream_duplex');\n\n/*<replacement>*/\nvar util = _dereq_('core-util-is');\nutil.inherits = _dereq_('inherits');\n/*</replacement>*/\n\nutil.inherits(Transform, Duplex);\n\n\nfunction TransformState(options, stream) {\n  this.afterTransform = function(er, data) {\n    return afterTransform(stream, er, data);\n  };\n\n  this.needTransform = false;\n  this.transforming = false;\n  this.writecb = null;\n  this.writechunk = null;\n}\n\nfunction afterTransform(stream, er, data) {\n  var ts = stream._transformState;\n  ts.transforming = false;\n\n  var cb = ts.writecb;\n\n  if (!cb)\n    return stream.emit('error', new Error('no writecb in Transform class'));\n\n  ts.writechunk = null;\n  ts.writecb = null;\n\n  if (data !== null && data !== undefined)\n    stream.push(data);\n\n  if (cb)\n    cb(er);\n\n  var rs = stream._readableState;\n  rs.reading = false;\n  if (rs.needReadable || rs.length < rs.highWaterMark) {\n    stream._read(rs.highWaterMark);\n  }\n}\n\n\nfunction Transform(options) {\n  if (!(this instanceof Transform))\n    return new Transform(options);\n\n  Duplex.call(this, options);\n\n  var ts = this._transformState = new TransformState(options, this);\n\n  // when the writable side finishes, then flush out anything remaining.\n  var stream = this;\n\n  // start out asking for a readable event once data is transformed.\n  this._readableState.needReadable = true;\n\n  // we have implemented the _read method, and done the other things\n  // that Readable wants before the first _read call, so unset the\n  // sync guard flag.\n  this._readableState.sync = false;\n\n  this.once('finish', function() {\n    if ('function' === typeof this._flush)\n      this._flush(function(er) {\n        done(stream, er);\n      });\n    else\n      done(stream);\n  });\n}\n\nTransform.prototype.push = function(chunk, encoding) {\n  this._transformState.needTransform = false;\n  return Duplex.prototype.push.call(this, chunk, encoding);\n};\n\n// This is the part where you do stuff!\n// override this function in implementation classes.\n// 'chunk' is an input chunk.\n//\n// Call `push(newChunk)` to pass along transformed output\n// to the readable side.  You may call 'push' zero or more times.\n//\n// Call `cb(err)` when you are done with this chunk.  If you pass\n// an error, then that'll put the hurt on the whole operation.  If you\n// never call cb(), then you'll never get another chunk.\nTransform.prototype._transform = function(chunk, encoding, cb) {\n  throw new Error('not implemented');\n};\n\nTransform.prototype._write = function(chunk, encoding, cb) {\n  var ts = this._transformState;\n  ts.writecb = cb;\n  ts.writechunk = chunk;\n  ts.writeencoding = encoding;\n  if (!ts.transforming) {\n    var rs = this._readableState;\n    if (ts.needTransform ||\n        rs.needReadable ||\n        rs.length < rs.highWaterMark)\n      this._read(rs.highWaterMark);\n  }\n};\n\n// Doesn't matter what the args are here.\n// _transform does all the work.\n// That we got here means that the readable side wants more data.\nTransform.prototype._read = function(n) {\n  var ts = this._transformState;\n\n  if (ts.writechunk !== null && ts.writecb && !ts.transforming) {\n    ts.transforming = true;\n    this._transform(ts.writechunk, ts.writeencoding, ts.afterTransform);\n  } else {\n    // mark that we need a transform, so that any data that comes in\n    // will get processed, now that we've asked for it.\n    ts.needTransform = true;\n  }\n};\n\n\nfunction done(stream, er) {\n  if (er)\n    return stream.emit('error', er);\n\n  // if there's nothing in the write buffer, then that means\n  // that nothing more will ever be provided\n  var ws = stream._writableState;\n  var rs = stream._readableState;\n  var ts = stream._transformState;\n\n  if (ws.length)\n    throw new Error('calling transform done when ws.length != 0');\n\n  if (ts.transforming)\n    throw new Error('calling transform done when still transforming');\n\n  return stream.push(null);\n}\n\n},{\"./_stream_duplex\":35,\"core-util-is\":40,\"inherits\":28}],39:[function(_dereq_,module,exports){\n(function (process){\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// A bit simpler than readable streams.\n// Implement an async ._write(chunk, cb), and it'll handle all\n// the drain event emission and buffering.\n\nmodule.exports = Writable;\n\n/*<replacement>*/\nvar Buffer = _dereq_('buffer').Buffer;\n/*</replacement>*/\n\nWritable.WritableState = WritableState;\n\n\n/*<replacement>*/\nvar util = _dereq_('core-util-is');\nutil.inherits = _dereq_('inherits');\n/*</replacement>*/\n\nvar Stream = _dereq_('stream');\n\nutil.inherits(Writable, Stream);\n\nfunction WriteReq(chunk, encoding, cb) {\n  this.chunk = chunk;\n  this.encoding = encoding;\n  this.callback = cb;\n}\n\nfunction WritableState(options, stream) {\n  options = options || {};\n\n  // the point at which write() starts returning false\n  // Note: 0 is a valid value, means that we always return false if\n  // the entire buffer is not flushed immediately on write()\n  var hwm = options.highWaterMark;\n  this.highWaterMark = (hwm || hwm === 0) ? hwm : 16 * 1024;\n\n  // object stream flag to indicate whether or not this stream\n  // contains buffers or objects.\n  this.objectMode = !!options.objectMode;\n\n  // cast to ints.\n  this.highWaterMark = ~~this.highWaterMark;\n\n  this.needDrain = false;\n  // at the start of calling end()\n  this.ending = false;\n  // when end() has been called, and returned\n  this.ended = false;\n  // when 'finish' is emitted\n  this.finished = false;\n\n  // should we decode strings into buffers before passing to _write?\n  // this is here so that some node-core streams can optimize string\n  // handling at a lower level.\n  var noDecode = options.decodeStrings === false;\n  this.decodeStrings = !noDecode;\n\n  // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n  this.defaultEncoding = options.defaultEncoding || 'utf8';\n\n  // not an actual buffer we keep track of, but a measurement\n  // of how much we're waiting to get pushed to some underlying\n  // socket or file.\n  this.length = 0;\n\n  // a flag to see when we're in the middle of a write.\n  this.writing = false;\n\n  // a flag to be able to tell if the onwrite cb is called immediately,\n  // or on a later tick.  We set this to true at first, becuase any\n  // actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first write call.\n  this.sync = true;\n\n  // a flag to know if we're processing previously buffered items, which\n  // may call the _write() callback in the same tick, so that we don't\n  // end up in an overlapped onwrite situation.\n  this.bufferProcessing = false;\n\n  // the callback that's passed to _write(chunk,cb)\n  this.onwrite = function(er) {\n    onwrite(stream, er);\n  };\n\n  // the callback that the user supplies to write(chunk,encoding,cb)\n  this.writecb = null;\n\n  // the amount that is being written when _write is called.\n  this.writelen = 0;\n\n  this.buffer = [];\n\n  // True if the error was already emitted and should not be thrown again\n  this.errorEmitted = false;\n}\n\nfunction Writable(options) {\n  var Duplex = _dereq_('./_stream_duplex');\n\n  // Writable ctor is applied to Duplexes, though they're not\n  // instanceof Writable, they're instanceof Readable.\n  if (!(this instanceof Writable) && !(this instanceof Duplex))\n    return new Writable(options);\n\n  this._writableState = new WritableState(options, this);\n\n  // legacy.\n  this.writable = true;\n\n  Stream.call(this);\n}\n\n// Otherwise people can pipe Writable streams, which is just wrong.\nWritable.prototype.pipe = function() {\n  this.emit('error', new Error('Cannot pipe. Not readable.'));\n};\n\n\nfunction writeAfterEnd(stream, state, cb) {\n  var er = new Error('write after end');\n  // TODO: defer error events consistently everywhere, not just the cb\n  stream.emit('error', er);\n  process.nextTick(function() {\n    cb(er);\n  });\n}\n\n// If we get something that is not a buffer, string, null, or undefined,\n// and we're not in objectMode, then that's an error.\n// Otherwise stream chunks are all considered to be of length=1, and the\n// watermarks determine how many objects to keep in the buffer, rather than\n// how many bytes or characters.\nfunction validChunk(stream, state, chunk, cb) {\n  var valid = true;\n  if (!Buffer.isBuffer(chunk) &&\n      'string' !== typeof chunk &&\n      chunk !== null &&\n      chunk !== undefined &&\n      !state.objectMode) {\n    var er = new TypeError('Invalid non-string/buffer chunk');\n    stream.emit('error', er);\n    process.nextTick(function() {\n      cb(er);\n    });\n    valid = false;\n  }\n  return valid;\n}\n\nWritable.prototype.write = function(chunk, encoding, cb) {\n  var state = this._writableState;\n  var ret = false;\n\n  if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n\n  if (Buffer.isBuffer(chunk))\n    encoding = 'buffer';\n  else if (!encoding)\n    encoding = state.defaultEncoding;\n\n  if (typeof cb !== 'function')\n    cb = function() {};\n\n  if (state.ended)\n    writeAfterEnd(this, state, cb);\n  else if (validChunk(this, state, chunk, cb))\n    ret = writeOrBuffer(this, state, chunk, encoding, cb);\n\n  return ret;\n};\n\nfunction decodeChunk(state, chunk, encoding) {\n  if (!state.objectMode &&\n      state.decodeStrings !== false &&\n      typeof chunk === 'string') {\n    chunk = new Buffer(chunk, encoding);\n  }\n  return chunk;\n}\n\n// if we're already writing something, then just put this\n// in the queue, and wait our turn.  Otherwise, call _write\n// If we return false, then we need a drain event, so set that flag.\nfunction writeOrBuffer(stream, state, chunk, encoding, cb) {\n  chunk = decodeChunk(state, chunk, encoding);\n  if (Buffer.isBuffer(chunk))\n    encoding = 'buffer';\n  var len = state.objectMode ? 1 : chunk.length;\n\n  state.length += len;\n\n  var ret = state.length < state.highWaterMark;\n  // we must ensure that previous needDrain will not be reset to false.\n  if (!ret)\n    state.needDrain = true;\n\n  if (state.writing)\n    state.buffer.push(new WriteReq(chunk, encoding, cb));\n  else\n    doWrite(stream, state, len, chunk, encoding, cb);\n\n  return ret;\n}\n\nfunction doWrite(stream, state, len, chunk, encoding, cb) {\n  state.writelen = len;\n  state.writecb = cb;\n  state.writing = true;\n  state.sync = true;\n  stream._write(chunk, encoding, state.onwrite);\n  state.sync = false;\n}\n\nfunction onwriteError(stream, state, sync, er, cb) {\n  if (sync)\n    process.nextTick(function() {\n      cb(er);\n    });\n  else\n    cb(er);\n\n  stream._writableState.errorEmitted = true;\n  stream.emit('error', er);\n}\n\nfunction onwriteStateUpdate(state) {\n  state.writing = false;\n  state.writecb = null;\n  state.length -= state.writelen;\n  state.writelen = 0;\n}\n\nfunction onwrite(stream, er) {\n  var state = stream._writableState;\n  var sync = state.sync;\n  var cb = state.writecb;\n\n  onwriteStateUpdate(state);\n\n  if (er)\n    onwriteError(stream, state, sync, er, cb);\n  else {\n    // Check if we're actually ready to finish, but don't emit yet\n    var finished = needFinish(stream, state);\n\n    if (!finished && !state.bufferProcessing && state.buffer.length)\n      clearBuffer(stream, state);\n\n    if (sync) {\n      process.nextTick(function() {\n        afterWrite(stream, state, finished, cb);\n      });\n    } else {\n      afterWrite(stream, state, finished, cb);\n    }\n  }\n}\n\nfunction afterWrite(stream, state, finished, cb) {\n  if (!finished)\n    onwriteDrain(stream, state);\n  cb();\n  if (finished)\n    finishMaybe(stream, state);\n}\n\n// Must force callback to be called on nextTick, so that we don't\n// emit 'drain' before the write() consumer gets the 'false' return\n// value, and has a chance to attach a 'drain' listener.\nfunction onwriteDrain(stream, state) {\n  if (state.length === 0 && state.needDrain) {\n    state.needDrain = false;\n    stream.emit('drain');\n  }\n}\n\n\n// if there's something in the buffer waiting, then process it\nfunction clearBuffer(stream, state) {\n  state.bufferProcessing = true;\n\n  for (var c = 0; c < state.buffer.length; c++) {\n    var entry = state.buffer[c];\n    var chunk = entry.chunk;\n    var encoding = entry.encoding;\n    var cb = entry.callback;\n    var len = state.objectMode ? 1 : chunk.length;\n\n    doWrite(stream, state, len, chunk, encoding, cb);\n\n    // if we didn't call the onwrite immediately, then\n    // it means that we need to wait until it does.\n    // also, that means that the chunk and cb are currently\n    // being processed, so move the buffer counter past them.\n    if (state.writing) {\n      c++;\n      break;\n    }\n  }\n\n  state.bufferProcessing = false;\n  if (c < state.buffer.length)\n    state.buffer = state.buffer.slice(c);\n  else\n    state.buffer.length = 0;\n}\n\nWritable.prototype._write = function(chunk, encoding, cb) {\n  cb(new Error('not implemented'));\n};\n\nWritable.prototype.end = function(chunk, encoding, cb) {\n  var state = this._writableState;\n\n  if (typeof chunk === 'function') {\n    cb = chunk;\n    chunk = null;\n    encoding = null;\n  } else if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n\n  if (typeof chunk !== 'undefined' && chunk !== null)\n    this.write(chunk, encoding);\n\n  // ignore unnecessary end() calls.\n  if (!state.ending && !state.finished)\n    endWritable(this, state, cb);\n};\n\n\nfunction needFinish(stream, state) {\n  return (state.ending &&\n          state.length === 0 &&\n          !state.finished &&\n          !state.writing);\n}\n\nfunction finishMaybe(stream, state) {\n  var need = needFinish(stream, state);\n  if (need) {\n    state.finished = true;\n    stream.emit('finish');\n  }\n  return need;\n}\n\nfunction endWritable(stream, state, cb) {\n  state.ending = true;\n  finishMaybe(stream, state);\n  if (cb) {\n    if (state.finished)\n      process.nextTick(cb);\n    else\n      stream.once('finish', cb);\n  }\n  state.ended = true;\n}\n\n}).call(this,_dereq_(\"/home/alex/projects/javascript/imjs/node_modules/insert-module-globals/node_modules/process/browser.js\"))\n},{\"./_stream_duplex\":35,\"/home/alex/projects/javascript/imjs/node_modules/insert-module-globals/node_modules/process/browser.js\":55,\"buffer\":23,\"core-util-is\":40,\"inherits\":28,\"stream\":45}],40:[function(_dereq_,module,exports){\n(function (Buffer){\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// NOTE: These type checking functions intentionally don't use `instanceof`\n// because it is fragile and can be easily faked with `Object.create()`.\nfunction isArray(ar) {\n  return Array.isArray(ar);\n}\nexports.isArray = isArray;\n\nfunction isBoolean(arg) {\n  return typeof arg === 'boolean';\n}\nexports.isBoolean = isBoolean;\n\nfunction isNull(arg) {\n  return arg === null;\n}\nexports.isNull = isNull;\n\nfunction isNullOrUndefined(arg) {\n  return arg == null;\n}\nexports.isNullOrUndefined = isNullOrUndefined;\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\nexports.isNumber = isNumber;\n\nfunction isString(arg) {\n  return typeof arg === 'string';\n}\nexports.isString = isString;\n\nfunction isSymbol(arg) {\n  return typeof arg === 'symbol';\n}\nexports.isSymbol = isSymbol;\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\nexports.isUndefined = isUndefined;\n\nfunction isRegExp(re) {\n  return isObject(re) && objectToString(re) === '[object RegExp]';\n}\nexports.isRegExp = isRegExp;\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\nexports.isObject = isObject;\n\nfunction isDate(d) {\n  return isObject(d) && objectToString(d) === '[object Date]';\n}\nexports.isDate = isDate;\n\nfunction isError(e) {\n  return isObject(e) &&\n      (objectToString(e) === '[object Error]' || e instanceof Error);\n}\nexports.isError = isError;\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\nexports.isFunction = isFunction;\n\nfunction isPrimitive(arg) {\n  return arg === null ||\n         typeof arg === 'boolean' ||\n         typeof arg === 'number' ||\n         typeof arg === 'string' ||\n         typeof arg === 'symbol' ||  // ES6 symbol\n         typeof arg === 'undefined';\n}\nexports.isPrimitive = isPrimitive;\n\nfunction isBuffer(arg) {\n  return Buffer.isBuffer(arg);\n}\nexports.isBuffer = isBuffer;\n\nfunction objectToString(o) {\n  return Object.prototype.toString.call(o);\n}\n}).call(this,_dereq_(\"buffer\").Buffer)\n},{\"buffer\":23}],41:[function(_dereq_,module,exports){\nmodule.exports = _dereq_(\"./lib/_stream_passthrough.js\")\n\n},{\"./lib/_stream_passthrough.js\":36}],42:[function(_dereq_,module,exports){\nvar Stream = _dereq_('stream'); // hack to fix a circular dependency issue when used with browserify\nexports = module.exports = _dereq_('./lib/_stream_readable.js');\nexports.Stream = Stream;\nexports.Readable = exports;\nexports.Writable = _dereq_('./lib/_stream_writable.js');\nexports.Duplex = _dereq_('./lib/_stream_duplex.js');\nexports.Transform = _dereq_('./lib/_stream_transform.js');\nexports.PassThrough = _dereq_('./lib/_stream_passthrough.js');\n\n},{\"./lib/_stream_duplex.js\":35,\"./lib/_stream_passthrough.js\":36,\"./lib/_stream_readable.js\":37,\"./lib/_stream_transform.js\":38,\"./lib/_stream_writable.js\":39,\"stream\":45}],43:[function(_dereq_,module,exports){\nmodule.exports = _dereq_(\"./lib/_stream_transform.js\")\n\n},{\"./lib/_stream_transform.js\":38}],44:[function(_dereq_,module,exports){\nmodule.exports = _dereq_(\"./lib/_stream_writable.js\")\n\n},{\"./lib/_stream_writable.js\":39}],45:[function(_dereq_,module,exports){\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nmodule.exports = Stream;\n\nvar EE = _dereq_('events').EventEmitter;\nvar inherits = _dereq_('inherits');\n\ninherits(Stream, EE);\nStream.Readable = _dereq_('readable-stream/readable.js');\nStream.Writable = _dereq_('readable-stream/writable.js');\nStream.Duplex = _dereq_('readable-stream/duplex.js');\nStream.Transform = _dereq_('readable-stream/transform.js');\nStream.PassThrough = _dereq_('readable-stream/passthrough.js');\n\n// Backwards-compat with node 0.4.x\nStream.Stream = Stream;\n\n\n\n// old-style streams.  Note that the pipe method (the only relevant\n// part of this class) is overridden in the Readable class.\n\nfunction Stream() {\n  EE.call(this);\n}\n\nStream.prototype.pipe = function(dest, options) {\n  var source = this;\n\n  function ondata(chunk) {\n    if (dest.writable) {\n      if (false === dest.write(chunk) && source.pause) {\n        source.pause();\n      }\n    }\n  }\n\n  source.on('data', ondata);\n\n  function ondrain() {\n    if (source.readable && source.resume) {\n      source.resume();\n    }\n  }\n\n  dest.on('drain', ondrain);\n\n  // If the 'end' option is not supplied, dest.end() will be called when\n  // source gets the 'end' or 'close' events.  Only dest.end() once.\n  if (!dest._isStdio && (!options || options.end !== false)) {\n    source.on('end', onend);\n    source.on('close', onclose);\n  }\n\n  var didOnEnd = false;\n  function onend() {\n    if (didOnEnd) return;\n    didOnEnd = true;\n\n    dest.end();\n  }\n\n\n  function onclose() {\n    if (didOnEnd) return;\n    didOnEnd = true;\n\n    if (typeof dest.destroy === 'function') dest.destroy();\n  }\n\n  // don't leave dangling pipes when there are errors.\n  function onerror(er) {\n    cleanup();\n    if (EE.listenerCount(this, 'error') === 0) {\n      throw er; // Unhandled stream error in pipe.\n    }\n  }\n\n  source.on('error', onerror);\n  dest.on('error', onerror);\n\n  // remove all the event listeners that were added.\n  function cleanup() {\n    source.removeListener('data', ondata);\n    dest.removeListener('drain', ondrain);\n\n    source.removeListener('end', onend);\n    source.removeListener('close', onclose);\n\n    source.removeListener('error', onerror);\n    dest.removeListener('error', onerror);\n\n    source.removeListener('end', cleanup);\n    source.removeListener('close', cleanup);\n\n    dest.removeListener('close', cleanup);\n  }\n\n  source.on('end', cleanup);\n  source.on('close', cleanup);\n\n  dest.on('close', cleanup);\n\n  dest.emit('pipe', source);\n\n  // Allow for unix-like usage: A.pipe(B).pipe(C)\n  return dest;\n};\n\n},{\"events\":27,\"inherits\":28,\"readable-stream/duplex.js\":34,\"readable-stream/passthrough.js\":41,\"readable-stream/readable.js\":42,\"readable-stream/transform.js\":43,\"readable-stream/writable.js\":44}],46:[function(_dereq_,module,exports){\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar Buffer = _dereq_('buffer').Buffer;\n\nvar isBufferEncoding = Buffer.isEncoding\n  || function(encoding) {\n       switch (encoding && encoding.toLowerCase()) {\n         case 'hex': case 'utf8': case 'utf-8': case 'ascii': case 'binary': case 'base64': case 'ucs2': case 'ucs-2': case 'utf16le': case 'utf-16le': case 'raw': return true;\n         default: return false;\n       }\n     }\n\n\nfunction assertEncoding(encoding) {\n  if (encoding && !isBufferEncoding(encoding)) {\n    throw new Error('Unknown encoding: ' + encoding);\n  }\n}\n\n// StringDecoder provides an interface for efficiently splitting a series of\n// buffers into a series of JS strings without breaking apart multi-byte\n// characters. CESU-8 is handled as part of the UTF-8 encoding.\n//\n// @TODO Handling all encodings inside a single object makes it very difficult\n// to reason about this code, so it should be split up in the future.\n// @TODO There should be a utf8-strict encoding that rejects invalid UTF-8 code\n// points as used by CESU-8.\nvar StringDecoder = exports.StringDecoder = function(encoding) {\n  this.encoding = (encoding || 'utf8').toLowerCase().replace(/[-_]/, '');\n  assertEncoding(encoding);\n  switch (this.encoding) {\n    case 'utf8':\n      // CESU-8 represents each of Surrogate Pair by 3-bytes\n      this.surrogateSize = 3;\n      break;\n    case 'ucs2':\n    case 'utf16le':\n      // UTF-16 represents each of Surrogate Pair by 2-bytes\n      this.surrogateSize = 2;\n      this.detectIncompleteChar = utf16DetectIncompleteChar;\n      break;\n    case 'base64':\n      // Base-64 stores 3 bytes in 4 chars, and pads the remainder.\n      this.surrogateSize = 3;\n      this.detectIncompleteChar = base64DetectIncompleteChar;\n      break;\n    default:\n      this.write = passThroughWrite;\n      return;\n  }\n\n  // Enough space to store all bytes of a single character. UTF-8 needs 4\n  // bytes, but CESU-8 may require up to 6 (3 bytes per surrogate).\n  this.charBuffer = new Buffer(6);\n  // Number of bytes received for the current incomplete multi-byte character.\n  this.charReceived = 0;\n  // Number of bytes expected for the current incomplete multi-byte character.\n  this.charLength = 0;\n};\n\n\n// write decodes the given buffer and returns it as JS string that is\n// guaranteed to not contain any partial multi-byte characters. Any partial\n// character found at the end of the buffer is buffered up, and will be\n// returned when calling write again with the remaining bytes.\n//\n// Note: Converting a Buffer containing an orphan surrogate to a String\n// currently works, but converting a String to a Buffer (via `new Buffer`, or\n// Buffer#write) will replace incomplete surrogates with the unicode\n// replacement character. See https://codereview.chromium.org/121173009/ .\nStringDecoder.prototype.write = function(buffer) {\n  var charStr = '';\n  // if our last write ended with an incomplete multibyte character\n  while (this.charLength) {\n    // determine how many remaining bytes this buffer has to offer for this char\n    var available = (buffer.length >= this.charLength - this.charReceived) ?\n        this.charLength - this.charReceived :\n        buffer.length;\n\n    // add the new bytes to the char buffer\n    buffer.copy(this.charBuffer, this.charReceived, 0, available);\n    this.charReceived += available;\n\n    if (this.charReceived < this.charLength) {\n      // still not enough chars in this buffer? wait for more ...\n      return '';\n    }\n\n    // remove bytes belonging to the current character from the buffer\n    buffer = buffer.slice(available, buffer.length);\n\n    // get the character that was split\n    charStr = this.charBuffer.slice(0, this.charLength).toString(this.encoding);\n\n    // CESU-8: lead surrogate (D800-DBFF) is also the incomplete character\n    var charCode = charStr.charCodeAt(charStr.length - 1);\n    if (charCode >= 0xD800 && charCode <= 0xDBFF) {\n      this.charLength += this.surrogateSize;\n      charStr = '';\n      continue;\n    }\n    this.charReceived = this.charLength = 0;\n\n    // if there are no more bytes in this buffer, just emit our char\n    if (buffer.length === 0) {\n      return charStr;\n    }\n    break;\n  }\n\n  // determine and set charLength / charReceived\n  this.detectIncompleteChar(buffer);\n\n  var end = buffer.length;\n  if (this.charLength) {\n    // buffer the incomplete character bytes we got\n    buffer.copy(this.charBuffer, 0, buffer.length - this.charReceived, end);\n    end -= this.charReceived;\n  }\n\n  charStr += buffer.toString(this.encoding, 0, end);\n\n  var end = charStr.length - 1;\n  var charCode = charStr.charCodeAt(end);\n  // CESU-8: lead surrogate (D800-DBFF) is also the incomplete character\n  if (charCode >= 0xD800 && charCode <= 0xDBFF) {\n    var size = this.surrogateSize;\n    this.charLength += size;\n    this.charReceived += size;\n    this.charBuffer.copy(this.charBuffer, size, 0, size);\n    buffer.copy(this.charBuffer, 0, 0, size);\n    return charStr.substring(0, end);\n  }\n\n  // or just emit the charStr\n  return charStr;\n};\n\n// detectIncompleteChar determines if there is an incomplete UTF-8 character at\n// the end of the given buffer. If so, it sets this.charLength to the byte\n// length that character, and sets this.charReceived to the number of bytes\n// that are available for this character.\nStringDecoder.prototype.detectIncompleteChar = function(buffer) {\n  // determine how many bytes we have to check at the end of this buffer\n  var i = (buffer.length >= 3) ? 3 : buffer.length;\n\n  // Figure out if one of the last i bytes of our buffer announces an\n  // incomplete char.\n  for (; i > 0; i--) {\n    var c = buffer[buffer.length - i];\n\n    // See http://en.wikipedia.org/wiki/UTF-8#Description\n\n    // 110XXXXX\n    if (i == 1 && c >> 5 == 0x06) {\n      this.charLength = 2;\n      break;\n    }\n\n    // 1110XXXX\n    if (i <= 2 && c >> 4 == 0x0E) {\n      this.charLength = 3;\n      break;\n    }\n\n    // 11110XXX\n    if (i <= 3 && c >> 3 == 0x1E) {\n      this.charLength = 4;\n      break;\n    }\n  }\n  this.charReceived = i;\n};\n\nStringDecoder.prototype.end = function(buffer) {\n  var res = '';\n  if (buffer && buffer.length)\n    res = this.write(buffer);\n\n  if (this.charReceived) {\n    var cr = this.charReceived;\n    var buf = this.charBuffer;\n    var enc = this.encoding;\n    res += buf.slice(0, cr).toString(enc);\n  }\n\n  return res;\n};\n\nfunction passThroughWrite(buffer) {\n  return buffer.toString(this.encoding);\n}\n\nfunction utf16DetectIncompleteChar(buffer) {\n  this.charReceived = buffer.length % 2;\n  this.charLength = this.charReceived ? 2 : 0;\n}\n\nfunction base64DetectIncompleteChar(buffer) {\n  this.charReceived = buffer.length % 3;\n  this.charLength = this.charReceived ? 3 : 0;\n}\n\n},{\"buffer\":23}],47:[function(_dereq_,module,exports){\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar punycode = _dereq_('punycode');\n\nexports.parse = urlParse;\nexports.resolve = urlResolve;\nexports.resolveObject = urlResolveObject;\nexports.format = urlFormat;\n\nexports.Url = Url;\n\nfunction Url() {\n  this.protocol = null;\n  this.slashes = null;\n  this.auth = null;\n  this.host = null;\n  this.port = null;\n  this.hostname = null;\n  this.hash = null;\n  this.search = null;\n  this.query = null;\n  this.pathname = null;\n  this.path = null;\n  this.href = null;\n}\n\n// Reference: RFC 3986, RFC 1808, RFC 2396\n\n// define these here so at least they only have to be\n// compiled once on the first module load.\nvar protocolPattern = /^([a-z0-9.+-]+:)/i,\n    portPattern = /:[0-9]*$/,\n\n    // RFC 2396: characters reserved for delimiting URLs.\n    // We actually just auto-escape these.\n    delims = ['<', '>', '\"', '`', ' ', '\\r', '\\n', '\\t'],\n\n    // RFC 2396: characters not allowed for various reasons.\n    unwise = ['{', '}', '|', '\\\\', '^', '`'].concat(delims),\n\n    // Allowed by RFCs, but cause of XSS attacks.  Always escape these.\n    autoEscape = ['\\''].concat(unwise),\n    // Characters that are never ever allowed in a hostname.\n    // Note that any invalid chars are also handled, but these\n    // are the ones that are *expected* to be seen, so we fast-path\n    // them.\n    nonHostChars = ['%', '/', '?', ';', '#'].concat(autoEscape),\n    hostEndingChars = ['/', '?', '#'],\n    hostnameMaxLen = 255,\n    hostnamePartPattern = /^[a-z0-9A-Z_-]{0,63}$/,\n    hostnamePartStart = /^([a-z0-9A-Z_-]{0,63})(.*)$/,\n    // protocols that can allow \"unsafe\" and \"unwise\" chars.\n    unsafeProtocol = {\n      'javascript': true,\n      'javascript:': true\n    },\n    // protocols that never have a hostname.\n    hostlessProtocol = {\n      'javascript': true,\n      'javascript:': true\n    },\n    // protocols that always contain a // bit.\n    slashedProtocol = {\n      'http': true,\n      'https': true,\n      'ftp': true,\n      'gopher': true,\n      'file': true,\n      'http:': true,\n      'https:': true,\n      'ftp:': true,\n      'gopher:': true,\n      'file:': true\n    },\n    querystring = _dereq_('querystring');\n\nfunction urlParse(url, parseQueryString, slashesDenoteHost) {\n  if (url && isObject(url) && url instanceof Url) return url;\n\n  var u = new Url;\n  u.parse(url, parseQueryString, slashesDenoteHost);\n  return u;\n}\n\nUrl.prototype.parse = function(url, parseQueryString, slashesDenoteHost) {\n  if (!isString(url)) {\n    throw new TypeError(\"Parameter 'url' must be a string, not \" + typeof url);\n  }\n\n  var rest = url;\n\n  // trim before proceeding.\n  // This is to support parse stuff like \"  http://foo.com  \\n\"\n  rest = rest.trim();\n\n  var proto = protocolPattern.exec(rest);\n  if (proto) {\n    proto = proto[0];\n    var lowerProto = proto.toLowerCase();\n    this.protocol = lowerProto;\n    rest = rest.substr(proto.length);\n  }\n\n  // figure out if it's got a host\n  // user@server is *always* interpreted as a hostname, and url\n  // resolution will treat //foo/bar as host=foo,path=bar because that's\n  // how the browser resolves relative URLs.\n  if (slashesDenoteHost || proto || rest.match(/^\\/\\/[^@\\/]+@[^@\\/]+/)) {\n    var slashes = rest.substr(0, 2) === '//';\n    if (slashes && !(proto && hostlessProtocol[proto])) {\n      rest = rest.substr(2);\n      this.slashes = true;\n    }\n  }\n\n  if (!hostlessProtocol[proto] &&\n      (slashes || (proto && !slashedProtocol[proto]))) {\n\n    // there's a hostname.\n    // the first instance of /, ?, ;, or # ends the host.\n    //\n    // If there is an @ in the hostname, then non-host chars *are* allowed\n    // to the left of the last @ sign, unless some host-ending character\n    // comes *before* the @-sign.\n    // URLs are obnoxious.\n    //\n    // ex:\n    // http://a@b@c/ => user:a@b host:c\n    // http://a@b?@c => user:a host:c path:/?@c\n\n    // v0.12 TODO(isaacs): This is not quite how Chrome does things.\n    // Review our test case against browsers more comprehensively.\n\n    // find the first instance of any hostEndingChars\n    var hostEnd = -1;\n    for (var i = 0; i < hostEndingChars.length; i++) {\n      var hec = rest.indexOf(hostEndingChars[i]);\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd))\n        hostEnd = hec;\n    }\n\n    // at this point, either we have an explicit point where the\n    // auth portion cannot go past, or the last @ char is the decider.\n    var auth, atSign;\n    if (hostEnd === -1) {\n      // atSign can be anywhere.\n      atSign = rest.lastIndexOf('@');\n    } else {\n      // atSign must be in auth portion.\n      // http://a@b/c@d => host:b auth:a path:/c@d\n      atSign = rest.lastIndexOf('@', hostEnd);\n    }\n\n    // Now we have a portion which is definitely the auth.\n    // Pull that off.\n    if (atSign !== -1) {\n      auth = rest.slice(0, atSign);\n      rest = rest.slice(atSign + 1);\n      this.auth = decodeURIComponent(auth);\n    }\n\n    // the host is the remaining to the left of the first non-host char\n    hostEnd = -1;\n    for (var i = 0; i < nonHostChars.length; i++) {\n      var hec = rest.indexOf(nonHostChars[i]);\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd))\n        hostEnd = hec;\n    }\n    // if we still have not hit it, then the entire thing is a host.\n    if (hostEnd === -1)\n      hostEnd = rest.length;\n\n    this.host = rest.slice(0, hostEnd);\n    rest = rest.slice(hostEnd);\n\n    // pull out port.\n    this.parseHost();\n\n    // we've indicated that there is a hostname,\n    // so even if it's empty, it has to be present.\n    this.hostname = this.hostname || '';\n\n    // if hostname begins with [ and ends with ]\n    // assume that it's an IPv6 address.\n    var ipv6Hostname = this.hostname[0] === '[' &&\n        this.hostname[this.hostname.length - 1] === ']';\n\n    // validate a little.\n    if (!ipv6Hostname) {\n      var hostparts = this.hostname.split(/\\./);\n      for (var i = 0, l = hostparts.length; i < l; i++) {\n        var part = hostparts[i];\n        if (!part) continue;\n        if (!part.match(hostnamePartPattern)) {\n          var newpart = '';\n          for (var j = 0, k = part.length; j < k; j++) {\n            if (part.charCodeAt(j) > 127) {\n              // we replace non-ASCII char with a temporary placeholder\n              // we need this to make sure size of hostname is not\n              // broken by replacing non-ASCII by nothing\n              newpart += 'x';\n            } else {\n              newpart += part[j];\n            }\n          }\n          // we test again with ASCII char only\n          if (!newpart.match(hostnamePartPattern)) {\n            var validParts = hostparts.slice(0, i);\n            var notHost = hostparts.slice(i + 1);\n            var bit = part.match(hostnamePartStart);\n            if (bit) {\n              validParts.push(bit[1]);\n              notHost.unshift(bit[2]);\n            }\n            if (notHost.length) {\n              rest = '/' + notHost.join('.') + rest;\n            }\n            this.hostname = validParts.join('.');\n            break;\n          }\n        }\n      }\n    }\n\n    if (this.hostname.length > hostnameMaxLen) {\n      this.hostname = '';\n    } else {\n      // hostnames are always lower case.\n      this.hostname = this.hostname.toLowerCase();\n    }\n\n    if (!ipv6Hostname) {\n      // IDNA Support: Returns a puny coded representation of \"domain\".\n      // It only converts the part of the domain name that\n      // has non ASCII characters. I.e. it dosent matter if\n      // you call it with a domain that already is in ASCII.\n      var domainArray = this.hostname.split('.');\n      var newOut = [];\n      for (var i = 0; i < domainArray.length; ++i) {\n        var s = domainArray[i];\n        newOut.push(s.match(/[^A-Za-z0-9_-]/) ?\n            'xn--' + punycode.encode(s) : s);\n      }\n      this.hostname = newOut.join('.');\n    }\n\n    var p = this.port ? ':' + this.port : '';\n    var h = this.hostname || '';\n    this.host = h + p;\n    this.href += this.host;\n\n    // strip [ and ] from the hostname\n    // the host field still retains them, though\n    if (ipv6Hostname) {\n      this.hostname = this.hostname.substr(1, this.hostname.length - 2);\n      if (rest[0] !== '/') {\n        rest = '/' + rest;\n      }\n    }\n  }\n\n  // now rest is set to the post-host stuff.\n  // chop off any delim chars.\n  if (!unsafeProtocol[lowerProto]) {\n\n    // First, make 100% sure that any \"autoEscape\" chars get\n    // escaped, even if encodeURIComponent doesn't think they\n    // need to be.\n    for (var i = 0, l = autoEscape.length; i < l; i++) {\n      var ae = autoEscape[i];\n      var esc = encodeURIComponent(ae);\n      if (esc === ae) {\n        esc = escape(ae);\n      }\n      rest = rest.split(ae).join(esc);\n    }\n  }\n\n\n  // chop off from the tail first.\n  var hash = rest.indexOf('#');\n  if (hash !== -1) {\n    // got a fragment string.\n    this.hash = rest.substr(hash);\n    rest = rest.slice(0, hash);\n  }\n  var qm = rest.indexOf('?');\n  if (qm !== -1) {\n    this.search = rest.substr(qm);\n    this.query = rest.substr(qm + 1);\n    if (parseQueryString) {\n      this.query = querystring.parse(this.query);\n    }\n    rest = rest.slice(0, qm);\n  } else if (parseQueryString) {\n    // no query string, but parseQueryString still requested\n    this.search = '';\n    this.query = {};\n  }\n  if (rest) this.pathname = rest;\n  if (slashedProtocol[lowerProto] &&\n      this.hostname && !this.pathname) {\n    this.pathname = '/';\n  }\n\n  //to support http.request\n  if (this.pathname || this.search) {\n    var p = this.pathname || '';\n    var s = this.search || '';\n    this.path = p + s;\n  }\n\n  // finally, reconstruct the href based on what has been validated.\n  this.href = this.format();\n  return this;\n};\n\n// format a parsed object into a url string\nfunction urlFormat(obj) {\n  // ensure it's an object, and not a string url.\n  // If it's an obj, this is a no-op.\n  // this way, you can call url_format() on strings\n  // to clean up potentially wonky urls.\n  if (isString(obj)) obj = urlParse(obj);\n  if (!(obj instanceof Url)) return Url.prototype.format.call(obj);\n  return obj.format();\n}\n\nUrl.prototype.format = function() {\n  var auth = this.auth || '';\n  if (auth) {\n    auth = encodeURIComponent(auth);\n    auth = auth.replace(/%3A/i, ':');\n    auth += '@';\n  }\n\n  var protocol = this.protocol || '',\n      pathname = this.pathname || '',\n      hash = this.hash || '',\n      host = false,\n      query = '';\n\n  if (this.host) {\n    host = auth + this.host;\n  } else if (this.hostname) {\n    host = auth + (this.hostname.indexOf(':') === -1 ?\n        this.hostname :\n        '[' + this.hostname + ']');\n    if (this.port) {\n      host += ':' + this.port;\n    }\n  }\n\n  if (this.query &&\n      isObject(this.query) &&\n      Object.keys(this.query).length) {\n    query = querystring.stringify(this.query);\n  }\n\n  var search = this.search || (query && ('?' + query)) || '';\n\n  if (protocol && protocol.substr(-1) !== ':') protocol += ':';\n\n  // only the slashedProtocols get the //.  Not mailto:, xmpp:, etc.\n  // unless they had them to begin with.\n  if (this.slashes ||\n      (!protocol || slashedProtocol[protocol]) && host !== false) {\n    host = '//' + (host || '');\n    if (pathname && pathname.charAt(0) !== '/') pathname = '/' + pathname;\n  } else if (!host) {\n    host = '';\n  }\n\n  if (hash && hash.charAt(0) !== '#') hash = '#' + hash;\n  if (search && search.charAt(0) !== '?') search = '?' + search;\n\n  pathname = pathname.replace(/[?#]/g, function(match) {\n    return encodeURIComponent(match);\n  });\n  search = search.replace('#', '%23');\n\n  return protocol + host + pathname + search + hash;\n};\n\nfunction urlResolve(source, relative) {\n  return urlParse(source, false, true).resolve(relative);\n}\n\nUrl.prototype.resolve = function(relative) {\n  return this.resolveObject(urlParse(relative, false, true)).format();\n};\n\nfunction urlResolveObject(source, relative) {\n  if (!source) return relative;\n  return urlParse(source, false, true).resolveObject(relative);\n}\n\nUrl.prototype.resolveObject = function(relative) {\n  if (isString(relative)) {\n    var rel = new Url();\n    rel.parse(relative, false, true);\n    relative = rel;\n  }\n\n  var result = new Url();\n  Object.keys(this).forEach(function(k) {\n    result[k] = this[k];\n  }, this);\n\n  // hash is always overridden, no matter what.\n  // even href=\"\" will remove it.\n  result.hash = relative.hash;\n\n  // if the relative url is empty, then there's nothing left to do here.\n  if (relative.href === '') {\n    result.href = result.format();\n    return result;\n  }\n\n  // hrefs like //foo/bar always cut to the protocol.\n  if (relative.slashes && !relative.protocol) {\n    // take everything except the protocol from relative\n    Object.keys(relative).forEach(function(k) {\n      if (k !== 'protocol')\n        result[k] = relative[k];\n    });\n\n    //urlParse appends trailing / to urls like http://www.example.com\n    if (slashedProtocol[result.protocol] &&\n        result.hostname && !result.pathname) {\n      result.path = result.pathname = '/';\n    }\n\n    result.href = result.format();\n    return result;\n  }\n\n  if (relative.protocol && relative.protocol !== result.protocol) {\n    // if it's a known url protocol, then changing\n    // the protocol does weird things\n    // first, if it's not file:, then we MUST have a host,\n    // and if there was a path\n    // to begin with, then we MUST have a path.\n    // if it is file:, then the host is dropped,\n    // because that's known to be hostless.\n    // anything else is assumed to be absolute.\n    if (!slashedProtocol[relative.protocol]) {\n      Object.keys(relative).forEach(function(k) {\n        result[k] = relative[k];\n      });\n      result.href = result.format();\n      return result;\n    }\n\n    result.protocol = relative.protocol;\n    if (!relative.host && !hostlessProtocol[relative.protocol]) {\n      var relPath = (relative.pathname || '').split('/');\n      while (relPath.length && !(relative.host = relPath.shift()));\n      if (!relative.host) relative.host = '';\n      if (!relative.hostname) relative.hostname = '';\n      if (relPath[0] !== '') relPath.unshift('');\n      if (relPath.length < 2) relPath.unshift('');\n      result.pathname = relPath.join('/');\n    } else {\n      result.pathname = relative.pathname;\n    }\n    result.search = relative.search;\n    result.query = relative.query;\n    result.host = relative.host || '';\n    result.auth = relative.auth;\n    result.hostname = relative.hostname || relative.host;\n    result.port = relative.port;\n    // to support http.request\n    if (result.pathname || result.search) {\n      var p = result.pathname || '';\n      var s = result.search || '';\n      result.path = p + s;\n    }\n    result.slashes = result.slashes || relative.slashes;\n    result.href = result.format();\n    return result;\n  }\n\n  var isSourceAbs = (result.pathname && result.pathname.charAt(0) === '/'),\n      isRelAbs = (\n          relative.host ||\n          relative.pathname && relative.pathname.charAt(0) === '/'\n      ),\n      mustEndAbs = (isRelAbs || isSourceAbs ||\n                    (result.host && relative.pathname)),\n      removeAllDots = mustEndAbs,\n      srcPath = result.pathname && result.pathname.split('/') || [],\n      relPath = relative.pathname && relative.pathname.split('/') || [],\n      psychotic = result.protocol && !slashedProtocol[result.protocol];\n\n  // if the url is a non-slashed url, then relative\n  // links like ../.. should be able\n  // to crawl up to the hostname, as well.  This is strange.\n  // result.protocol has already been set by now.\n  // Later on, put the first path part into the host field.\n  if (psychotic) {\n    result.hostname = '';\n    result.port = null;\n    if (result.host) {\n      if (srcPath[0] === '') srcPath[0] = result.host;\n      else srcPath.unshift(result.host);\n    }\n    result.host = '';\n    if (relative.protocol) {\n      relative.hostname = null;\n      relative.port = null;\n      if (relative.host) {\n        if (relPath[0] === '') relPath[0] = relative.host;\n        else relPath.unshift(relative.host);\n      }\n      relative.host = null;\n    }\n    mustEndAbs = mustEndAbs && (relPath[0] === '' || srcPath[0] === '');\n  }\n\n  if (isRelAbs) {\n    // it's absolute.\n    result.host = (relative.host || relative.host === '') ?\n                  relative.host : result.host;\n    result.hostname = (relative.hostname || relative.hostname === '') ?\n                      relative.hostname : result.hostname;\n    result.search = relative.search;\n    result.query = relative.query;\n    srcPath = relPath;\n    // fall through to the dot-handling below.\n  } else if (relPath.length) {\n    // it's relative\n    // throw away the existing file, and take the new path instead.\n    if (!srcPath) srcPath = [];\n    srcPath.pop();\n    srcPath = srcPath.concat(relPath);\n    result.search = relative.search;\n    result.query = relative.query;\n  } else if (!isNullOrUndefined(relative.search)) {\n    // just pull out the search.\n    // like href='?foo'.\n    // Put this after the other two cases because it simplifies the booleans\n    if (psychotic) {\n      result.hostname = result.host = srcPath.shift();\n      //occationaly the auth can get stuck only in host\n      //this especialy happens in cases like\n      //url.resolveObject('mailto:local1@domain1', 'local2@domain2')\n      var authInHost = result.host && result.host.indexOf('@') > 0 ?\n                       result.host.split('@') : false;\n      if (authInHost) {\n        result.auth = authInHost.shift();\n        result.host = result.hostname = authInHost.shift();\n      }\n    }\n    result.search = relative.search;\n    result.query = relative.query;\n    //to support http.request\n    if (!isNull(result.pathname) || !isNull(result.search)) {\n      result.path = (result.pathname ? result.pathname : '') +\n                    (result.search ? result.search : '');\n    }\n    result.href = result.format();\n    return result;\n  }\n\n  if (!srcPath.length) {\n    // no path at all.  easy.\n    // we've already handled the other stuff above.\n    result.pathname = null;\n    //to support http.request\n    if (result.search) {\n      result.path = '/' + result.search;\n    } else {\n      result.path = null;\n    }\n    result.href = result.format();\n    return result;\n  }\n\n  // if a url ENDs in . or .., then it must get a trailing slash.\n  // however, if it ends in anything else non-slashy,\n  // then it must NOT get a trailing slash.\n  var last = srcPath.slice(-1)[0];\n  var hasTrailingSlash = (\n      (result.host || relative.host) && (last === '.' || last === '..') ||\n      last === '');\n\n  // strip single dots, resolve double dots to parent dir\n  // if the path tries to go above the root, `up` ends up > 0\n  var up = 0;\n  for (var i = srcPath.length; i >= 0; i--) {\n    last = srcPath[i];\n    if (last == '.') {\n      srcPath.splice(i, 1);\n    } else if (last === '..') {\n      srcPath.splice(i, 1);\n      up++;\n    } else if (up) {\n      srcPath.splice(i, 1);\n      up--;\n    }\n  }\n\n  // if the path is allowed to go above the root, restore leading ..s\n  if (!mustEndAbs && !removeAllDots) {\n    for (; up--; up) {\n      srcPath.unshift('..');\n    }\n  }\n\n  if (mustEndAbs && srcPath[0] !== '' &&\n      (!srcPath[0] || srcPath[0].charAt(0) !== '/')) {\n    srcPath.unshift('');\n  }\n\n  if (hasTrailingSlash && (srcPath.join('/').substr(-1) !== '/')) {\n    srcPath.push('');\n  }\n\n  var isAbsolute = srcPath[0] === '' ||\n      (srcPath[0] && srcPath[0].charAt(0) === '/');\n\n  // put the host back\n  if (psychotic) {\n    result.hostname = result.host = isAbsolute ? '' :\n                                    srcPath.length ? srcPath.shift() : '';\n    //occationaly the auth can get stuck only in host\n    //this especialy happens in cases like\n    //url.resolveObject('mailto:local1@domain1', 'local2@domain2')\n    var authInHost = result.host && result.host.indexOf('@') > 0 ?\n                     result.host.split('@') : false;\n    if (authInHost) {\n      result.auth = authInHost.shift();\n      result.host = result.hostname = authInHost.shift();\n    }\n  }\n\n  mustEndAbs = mustEndAbs || (result.host && srcPath.length);\n\n  if (mustEndAbs && !isAbsolute) {\n    srcPath.unshift('');\n  }\n\n  if (!srcPath.length) {\n    result.pathname = null;\n    result.path = null;\n  } else {\n    result.pathname = srcPath.join('/');\n  }\n\n  //to support request.http\n  if (!isNull(result.pathname) || !isNull(result.search)) {\n    result.path = (result.pathname ? result.pathname : '') +\n                  (result.search ? result.search : '');\n  }\n  result.auth = relative.auth || result.auth;\n  result.slashes = result.slashes || relative.slashes;\n  result.href = result.format();\n  return result;\n};\n\nUrl.prototype.parseHost = function() {\n  var host = this.host;\n  var port = portPattern.exec(host);\n  if (port) {\n    port = port[0];\n    if (port !== ':') {\n      this.port = port.substr(1);\n    }\n    host = host.substr(0, host.length - port.length);\n  }\n  if (host) this.hostname = host;\n};\n\nfunction isString(arg) {\n  return typeof arg === \"string\";\n}\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\n\nfunction isNull(arg) {\n  return arg === null;\n}\nfunction isNullOrUndefined(arg) {\n  return  arg == null;\n}\n\n},{\"punycode\":30,\"querystring\":33}],48:[function(_dereq_,module,exports){\nmodule.exports = function isBuffer(arg) {\n  return arg && typeof arg === 'object'\n    && typeof arg.copy === 'function'\n    && typeof arg.fill === 'function'\n    && typeof arg.readUInt8 === 'function';\n}\n},{}],49:[function(_dereq_,module,exports){\n(function (process,global){\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar formatRegExp = /%[sdj%]/g;\nexports.format = function(f) {\n  if (!isString(f)) {\n    var objects = [];\n    for (var i = 0; i < arguments.length; i++) {\n      objects.push(inspect(arguments[i]));\n    }\n    return objects.join(' ');\n  }\n\n  var i = 1;\n  var args = arguments;\n  var len = args.length;\n  var str = String(f).replace(formatRegExp, function(x) {\n    if (x === '%%') return '%';\n    if (i >= len) return x;\n    switch (x) {\n      case '%s': return String(args[i++]);\n      case '%d': return Number(args[i++]);\n      case '%j':\n        try {\n          return JSON.stringify(args[i++]);\n        } catch (_) {\n          return '[Circular]';\n        }\n      default:\n        return x;\n    }\n  });\n  for (var x = args[i]; i < len; x = args[++i]) {\n    if (isNull(x) || !isObject(x)) {\n      str += ' ' + x;\n    } else {\n      str += ' ' + inspect(x);\n    }\n  }\n  return str;\n};\n\n\n// Mark that a method should not be used.\n// Returns a modified function which warns once by default.\n// If --no-deprecation is set, then it is a no-op.\nexports.deprecate = function(fn, msg) {\n  // Allow for deprecating things in the process of starting up.\n  if (isUndefined(global.process)) {\n    return function() {\n      return exports.deprecate(fn, msg).apply(this, arguments);\n    };\n  }\n\n  if (process.noDeprecation === true) {\n    return fn;\n  }\n\n  var warned = false;\n  function deprecated() {\n    if (!warned) {\n      if (process.throwDeprecation) {\n        throw new Error(msg);\n      } else if (process.traceDeprecation) {\n        console.trace(msg);\n      } else {\n        console.error(msg);\n      }\n      warned = true;\n    }\n    return fn.apply(this, arguments);\n  }\n\n  return deprecated;\n};\n\n\nvar debugs = {};\nvar debugEnviron;\nexports.debuglog = function(set) {\n  if (isUndefined(debugEnviron))\n    debugEnviron = process.env.NODE_DEBUG || '';\n  set = set.toUpperCase();\n  if (!debugs[set]) {\n    if (new RegExp('\\\\b' + set + '\\\\b', 'i').test(debugEnviron)) {\n      var pid = process.pid;\n      debugs[set] = function() {\n        var msg = exports.format.apply(exports, arguments);\n        console.error('%s %d: %s', set, pid, msg);\n      };\n    } else {\n      debugs[set] = function() {};\n    }\n  }\n  return debugs[set];\n};\n\n\n/**\n * Echos the value of a value. Trys to print the value out\n * in the best way possible given the different types.\n *\n * @param {Object} obj The object to print out.\n * @param {Object} opts Optional options object that alters the output.\n */\n/* legacy: obj, showHidden, depth, colors*/\nfunction inspect(obj, opts) {\n  // default options\n  var ctx = {\n    seen: [],\n    stylize: stylizeNoColor\n  };\n  // legacy...\n  if (arguments.length >= 3) ctx.depth = arguments[2];\n  if (arguments.length >= 4) ctx.colors = arguments[3];\n  if (isBoolean(opts)) {\n    // legacy...\n    ctx.showHidden = opts;\n  } else if (opts) {\n    // got an \"options\" object\n    exports._extend(ctx, opts);\n  }\n  // set default options\n  if (isUndefined(ctx.showHidden)) ctx.showHidden = false;\n  if (isUndefined(ctx.depth)) ctx.depth = 2;\n  if (isUndefined(ctx.colors)) ctx.colors = false;\n  if (isUndefined(ctx.customInspect)) ctx.customInspect = true;\n  if (ctx.colors) ctx.stylize = stylizeWithColor;\n  return formatValue(ctx, obj, ctx.depth);\n}\nexports.inspect = inspect;\n\n\n// http://en.wikipedia.org/wiki/ANSI_escape_code#graphics\ninspect.colors = {\n  'bold' : [1, 22],\n  'italic' : [3, 23],\n  'underline' : [4, 24],\n  'inverse' : [7, 27],\n  'white' : [37, 39],\n  'grey' : [90, 39],\n  'black' : [30, 39],\n  'blue' : [34, 39],\n  'cyan' : [36, 39],\n  'green' : [32, 39],\n  'magenta' : [35, 39],\n  'red' : [31, 39],\n  'yellow' : [33, 39]\n};\n\n// Don't use 'blue' not visible on cmd.exe\ninspect.styles = {\n  'special': 'cyan',\n  'number': 'yellow',\n  'boolean': 'yellow',\n  'undefined': 'grey',\n  'null': 'bold',\n  'string': 'green',\n  'date': 'magenta',\n  // \"name\": intentionally not styling\n  'regexp': 'red'\n};\n\n\nfunction stylizeWithColor(str, styleType) {\n  var style = inspect.styles[styleType];\n\n  if (style) {\n    return '\\u001b[' + inspect.colors[style][0] + 'm' + str +\n           '\\u001b[' + inspect.colors[style][1] + 'm';\n  } else {\n    return str;\n  }\n}\n\n\nfunction stylizeNoColor(str, styleType) {\n  return str;\n}\n\n\nfunction arrayToHash(array) {\n  var hash = {};\n\n  array.forEach(function(val, idx) {\n    hash[val] = true;\n  });\n\n  return hash;\n}\n\n\nfunction formatValue(ctx, value, recurseTimes) {\n  // Provide a hook for user-specified inspect functions.\n  // Check that value is an object with an inspect function on it\n  if (ctx.customInspect &&\n      value &&\n      isFunction(value.inspect) &&\n      // Filter out the util module, it's inspect function is special\n      value.inspect !== exports.inspect &&\n      // Also filter out any prototype objects using the circular check.\n      !(value.constructor && value.constructor.prototype === value)) {\n    var ret = value.inspect(recurseTimes, ctx);\n    if (!isString(ret)) {\n      ret = formatValue(ctx, ret, recurseTimes);\n    }\n    return ret;\n  }\n\n  // Primitive types cannot have properties\n  var primitive = formatPrimitive(ctx, value);\n  if (primitive) {\n    return primitive;\n  }\n\n  // Look up the keys of the object.\n  var keys = Object.keys(value);\n  var visibleKeys = arrayToHash(keys);\n\n  if (ctx.showHidden) {\n    keys = Object.getOwnPropertyNames(value);\n  }\n\n  // IE doesn't make error fields non-enumerable\n  // http://msdn.microsoft.com/en-us/library/ie/dww52sbt(v=vs.94).aspx\n  if (isError(value)\n      && (keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)) {\n    return formatError(value);\n  }\n\n  // Some type of object without properties can be shortcutted.\n  if (keys.length === 0) {\n    if (isFunction(value)) {\n      var name = value.name ? ': ' + value.name : '';\n      return ctx.stylize('[Function' + name + ']', 'special');\n    }\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    }\n    if (isDate(value)) {\n      return ctx.stylize(Date.prototype.toString.call(value), 'date');\n    }\n    if (isError(value)) {\n      return formatError(value);\n    }\n  }\n\n  var base = '', array = false, braces = ['{', '}'];\n\n  // Make Array say that they are Array\n  if (isArray(value)) {\n    array = true;\n    braces = ['[', ']'];\n  }\n\n  // Make functions say that they are functions\n  if (isFunction(value)) {\n    var n = value.name ? ': ' + value.name : '';\n    base = ' [Function' + n + ']';\n  }\n\n  // Make RegExps say that they are RegExps\n  if (isRegExp(value)) {\n    base = ' ' + RegExp.prototype.toString.call(value);\n  }\n\n  // Make dates with properties first say the date\n  if (isDate(value)) {\n    base = ' ' + Date.prototype.toUTCString.call(value);\n  }\n\n  // Make error with message first say the error\n  if (isError(value)) {\n    base = ' ' + formatError(value);\n  }\n\n  if (keys.length === 0 && (!array || value.length == 0)) {\n    return braces[0] + base + braces[1];\n  }\n\n  if (recurseTimes < 0) {\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    } else {\n      return ctx.stylize('[Object]', 'special');\n    }\n  }\n\n  ctx.seen.push(value);\n\n  var output;\n  if (array) {\n    output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);\n  } else {\n    output = keys.map(function(key) {\n      return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);\n    });\n  }\n\n  ctx.seen.pop();\n\n  return reduceToSingleString(output, base, braces);\n}\n\n\nfunction formatPrimitive(ctx, value) {\n  if (isUndefined(value))\n    return ctx.stylize('undefined', 'undefined');\n  if (isString(value)) {\n    var simple = '\\'' + JSON.stringify(value).replace(/^\"|\"$/g, '')\n                                             .replace(/'/g, \"\\\\'\")\n                                             .replace(/\\\\\"/g, '\"') + '\\'';\n    return ctx.stylize(simple, 'string');\n  }\n  if (isNumber(value))\n    return ctx.stylize('' + value, 'number');\n  if (isBoolean(value))\n    return ctx.stylize('' + value, 'boolean');\n  // For some reason typeof null is \"object\", so special case here.\n  if (isNull(value))\n    return ctx.stylize('null', 'null');\n}\n\n\nfunction formatError(value) {\n  return '[' + Error.prototype.toString.call(value) + ']';\n}\n\n\nfunction formatArray(ctx, value, recurseTimes, visibleKeys, keys) {\n  var output = [];\n  for (var i = 0, l = value.length; i < l; ++i) {\n    if (hasOwnProperty(value, String(i))) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          String(i), true));\n    } else {\n      output.push('');\n    }\n  }\n  keys.forEach(function(key) {\n    if (!key.match(/^\\d+$/)) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          key, true));\n    }\n  });\n  return output;\n}\n\n\nfunction formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {\n  var name, str, desc;\n  desc = Object.getOwnPropertyDescriptor(value, key) || { value: value[key] };\n  if (desc.get) {\n    if (desc.set) {\n      str = ctx.stylize('[Getter/Setter]', 'special');\n    } else {\n      str = ctx.stylize('[Getter]', 'special');\n    }\n  } else {\n    if (desc.set) {\n      str = ctx.stylize('[Setter]', 'special');\n    }\n  }\n  if (!hasOwnProperty(visibleKeys, key)) {\n    name = '[' + key + ']';\n  }\n  if (!str) {\n    if (ctx.seen.indexOf(desc.value) < 0) {\n      if (isNull(recurseTimes)) {\n        str = formatValue(ctx, desc.value, null);\n      } else {\n        str = formatValue(ctx, desc.value, recurseTimes - 1);\n      }\n      if (str.indexOf('\\n') > -1) {\n        if (array) {\n          str = str.split('\\n').map(function(line) {\n            return '  ' + line;\n          }).join('\\n').substr(2);\n        } else {\n          str = '\\n' + str.split('\\n').map(function(line) {\n            return '   ' + line;\n          }).join('\\n');\n        }\n      }\n    } else {\n      str = ctx.stylize('[Circular]', 'special');\n    }\n  }\n  if (isUndefined(name)) {\n    if (array && key.match(/^\\d+$/)) {\n      return str;\n    }\n    name = JSON.stringify('' + key);\n    if (name.match(/^\"([a-zA-Z_][a-zA-Z_0-9]*)\"$/)) {\n      name = name.substr(1, name.length - 2);\n      name = ctx.stylize(name, 'name');\n    } else {\n      name = name.replace(/'/g, \"\\\\'\")\n                 .replace(/\\\\\"/g, '\"')\n                 .replace(/(^\"|\"$)/g, \"'\");\n      name = ctx.stylize(name, 'string');\n    }\n  }\n\n  return name + ': ' + str;\n}\n\n\nfunction reduceToSingleString(output, base, braces) {\n  var numLinesEst = 0;\n  var length = output.reduce(function(prev, cur) {\n    numLinesEst++;\n    if (cur.indexOf('\\n') >= 0) numLinesEst++;\n    return prev + cur.replace(/\\u001b\\[\\d\\d?m/g, '').length + 1;\n  }, 0);\n\n  if (length > 60) {\n    return braces[0] +\n           (base === '' ? '' : base + '\\n ') +\n           ' ' +\n           output.join(',\\n  ') +\n           ' ' +\n           braces[1];\n  }\n\n  return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];\n}\n\n\n// NOTE: These type checking functions intentionally don't use `instanceof`\n// because it is fragile and can be easily faked with `Object.create()`.\nfunction isArray(ar) {\n  return Array.isArray(ar);\n}\nexports.isArray = isArray;\n\nfunction isBoolean(arg) {\n  return typeof arg === 'boolean';\n}\nexports.isBoolean = isBoolean;\n\nfunction isNull(arg) {\n  return arg === null;\n}\nexports.isNull = isNull;\n\nfunction isNullOrUndefined(arg) {\n  return arg == null;\n}\nexports.isNullOrUndefined = isNullOrUndefined;\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\nexports.isNumber = isNumber;\n\nfunction isString(arg) {\n  return typeof arg === 'string';\n}\nexports.isString = isString;\n\nfunction isSymbol(arg) {\n  return typeof arg === 'symbol';\n}\nexports.isSymbol = isSymbol;\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\nexports.isUndefined = isUndefined;\n\nfunction isRegExp(re) {\n  return isObject(re) && objectToString(re) === '[object RegExp]';\n}\nexports.isRegExp = isRegExp;\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\nexports.isObject = isObject;\n\nfunction isDate(d) {\n  return isObject(d) && objectToString(d) === '[object Date]';\n}\nexports.isDate = isDate;\n\nfunction isError(e) {\n  return isObject(e) &&\n      (objectToString(e) === '[object Error]' || e instanceof Error);\n}\nexports.isError = isError;\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\nexports.isFunction = isFunction;\n\nfunction isPrimitive(arg) {\n  return arg === null ||\n         typeof arg === 'boolean' ||\n         typeof arg === 'number' ||\n         typeof arg === 'string' ||\n         typeof arg === 'symbol' ||  // ES6 symbol\n         typeof arg === 'undefined';\n}\nexports.isPrimitive = isPrimitive;\n\nexports.isBuffer = _dereq_('./support/isBuffer');\n\nfunction objectToString(o) {\n  return Object.prototype.toString.call(o);\n}\n\n\nfunction pad(n) {\n  return n < 10 ? '0' + n.toString(10) : n.toString(10);\n}\n\n\nvar months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep',\n              'Oct', 'Nov', 'Dec'];\n\n// 26 Feb 16:19:34\nfunction timestamp() {\n  var d = new Date();\n  var time = [pad(d.getHours()),\n              pad(d.getMinutes()),\n              pad(d.getSeconds())].join(':');\n  return [d.getDate(), months[d.getMonth()], time].join(' ');\n}\n\n\n// log is just a thin wrapper to console.log that prepends a timestamp\nexports.log = function() {\n  console.log('%s - %s', timestamp(), exports.format.apply(exports, arguments));\n};\n\n\n/**\n * Inherit the prototype methods from one constructor into another.\n *\n * The Function.prototype.inherits from lang.js rewritten as a standalone\n * function (not on Function.prototype). NOTE: If this file is to be loaded\n * during bootstrapping this function needs to be rewritten using some native\n * functions as prototype setup using normal JavaScript does not work as\n * expected during bootstrapping (see mirror.js in r114903).\n *\n * @param {function} ctor Constructor function which needs to inherit the\n *     prototype.\n * @param {function} superCtor Constructor function to inherit prototype from.\n */\nexports.inherits = _dereq_('inherits');\n\nexports._extend = function(origin, add) {\n  // Don't do anything if add isn't an object\n  if (!add || !isObject(add)) return origin;\n\n  var keys = Object.keys(add);\n  var i = keys.length;\n  while (i--) {\n    origin[keys[i]] = add[keys[i]];\n  }\n  return origin;\n};\n\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\n}).call(this,_dereq_(\"/home/alex/projects/javascript/imjs/node_modules/insert-module-globals/node_modules/process/browser.js\"),typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{\"./support/isBuffer\":48,\"/home/alex/projects/javascript/imjs/node_modules/insert-module-globals/node_modules/process/browser.js\":55,\"inherits\":28}],50:[function(_dereq_,module,exports){\nvar http = module.exports;\nvar EventEmitter = _dereq_('events').EventEmitter;\nvar Request = _dereq_('./lib/request');\nvar url = _dereq_('url')\n\nhttp.request = function (params, cb) {\n    if (typeof params === 'string') {\n        params = url.parse(params)\n    }\n    if (!params) params = {};\n    if (!params.host && !params.port) {\n        params.port = parseInt(window.location.port, 10);\n    }\n    if (!params.host && params.hostname) {\n        params.host = params.hostname;\n    }\n\n    if (!params.protocol) {\n        if (params.scheme) {\n            params.protocol = params.scheme + ':';\n        } else {\n            params.protocol = window.location.protocol;\n        }\n    }\n\n    if (!params.host) {\n        params.host = window.location.hostname || window.location.host;\n    }\n    if (/:/.test(params.host)) {\n        if (!params.port) {\n            params.port = params.host.split(':')[1];\n        }\n        params.host = params.host.split(':')[0];\n    }\n    if (!params.port) params.port = params.protocol == 'https:' ? 443 : 80;\n    \n    var req = new Request(new xhrHttp, params);\n    if (cb) req.on('response', cb);\n    return req;\n};\n\nhttp.get = function (params, cb) {\n    params.method = 'GET';\n    var req = http.request(params, cb);\n    req.end();\n    return req;\n};\n\nhttp.Agent = function () {};\nhttp.Agent.defaultMaxSockets = 4;\n\nvar xhrHttp = (function () {\n    if (typeof window === 'undefined') {\n        throw new Error('no window object present');\n    }\n    else if (window.XMLHttpRequest) {\n        return window.XMLHttpRequest;\n    }\n    else if (window.ActiveXObject) {\n        var axs = [\n            'Msxml2.XMLHTTP.6.0',\n            'Msxml2.XMLHTTP.3.0',\n            'Microsoft.XMLHTTP'\n        ];\n        for (var i = 0; i < axs.length; i++) {\n            try {\n                var ax = new(window.ActiveXObject)(axs[i]);\n                return function () {\n                    if (ax) {\n                        var ax_ = ax;\n                        ax = null;\n                        return ax_;\n                    }\n                    else {\n                        return new(window.ActiveXObject)(axs[i]);\n                    }\n                };\n            }\n            catch (e) {}\n        }\n        throw new Error('ajax not supported in this browser')\n    }\n    else {\n        throw new Error('ajax not supported in this browser');\n    }\n})();\n\nhttp.STATUS_CODES = {\n    100 : 'Continue',\n    101 : 'Switching Protocols',\n    102 : 'Processing',                 // RFC 2518, obsoleted by RFC 4918\n    200 : 'OK',\n    201 : 'Created',\n    202 : 'Accepted',\n    203 : 'Non-Authoritative Information',\n    204 : 'No Content',\n    205 : 'Reset Content',\n    206 : 'Partial Content',\n    207 : 'Multi-Status',               // RFC 4918\n    300 : 'Multiple Choices',\n    301 : 'Moved Permanently',\n    302 : 'Moved Temporarily',\n    303 : 'See Other',\n    304 : 'Not Modified',\n    305 : 'Use Proxy',\n    307 : 'Temporary Redirect',\n    400 : 'Bad Request',\n    401 : 'Unauthorized',\n    402 : 'Payment Required',\n    403 : 'Forbidden',\n    404 : 'Not Found',\n    405 : 'Method Not Allowed',\n    406 : 'Not Acceptable',\n    407 : 'Proxy Authentication Required',\n    408 : 'Request Time-out',\n    409 : 'Conflict',\n    410 : 'Gone',\n    411 : 'Length Required',\n    412 : 'Precondition Failed',\n    413 : 'Request Entity Too Large',\n    414 : 'Request-URI Too Large',\n    415 : 'Unsupported Media Type',\n    416 : 'Requested Range Not Satisfiable',\n    417 : 'Expectation Failed',\n    418 : 'I\\'m a teapot',              // RFC 2324\n    422 : 'Unprocessable Entity',       // RFC 4918\n    423 : 'Locked',                     // RFC 4918\n    424 : 'Failed Dependency',          // RFC 4918\n    425 : 'Unordered Collection',       // RFC 4918\n    426 : 'Upgrade Required',           // RFC 2817\n    428 : 'Precondition Required',      // RFC 6585\n    429 : 'Too Many Requests',          // RFC 6585\n    431 : 'Request Header Fields Too Large',// RFC 6585\n    500 : 'Internal Server Error',\n    501 : 'Not Implemented',\n    502 : 'Bad Gateway',\n    503 : 'Service Unavailable',\n    504 : 'Gateway Time-out',\n    505 : 'HTTP Version Not Supported',\n    506 : 'Variant Also Negotiates',    // RFC 2295\n    507 : 'Insufficient Storage',       // RFC 4918\n    509 : 'Bandwidth Limit Exceeded',\n    510 : 'Not Extended',               // RFC 2774\n    511 : 'Network Authentication Required' // RFC 6585\n};\n},{\"./lib/request\":51,\"events\":27,\"url\":47}],51:[function(_dereq_,module,exports){\nvar Stream = _dereq_('stream');\nvar Response = _dereq_('./response');\nvar Base64 = _dereq_('Base64');\nvar inherits = _dereq_('inherits');\n\nvar Request = module.exports = function (xhr, params) {\n    var self = this;\n    self.writable = true;\n    self.xhr = xhr;\n    self.body = [];\n    \n    self.uri = (params.protocol || 'http:') + '//'\n        + params.host\n        + (params.port ? ':' + params.port : '')\n        + (params.path || '/')\n    ;\n    \n    if (typeof params.withCredentials === 'undefined') {\n        params.withCredentials = true;\n    }\n\n    try { xhr.withCredentials = params.withCredentials }\n    catch (e) {}\n    \n    if (params.responseType) try { xhr.responseType = params.responseType }\n    catch (e) {}\n    \n    xhr.open(\n        params.method || 'GET',\n        self.uri,\n        true\n    );\n\n    xhr.onerror = function(event) {\n        self.emit('error', new Error('Network error'));\n    };\n\n    self._headers = {};\n    \n    if (params.headers) {\n        var keys = objectKeys(params.headers);\n        for (var i = 0; i < keys.length; i++) {\n            var key = keys[i];\n            if (!self.isSafeRequestHeader(key)) continue;\n            var value = params.headers[key];\n            self.setHeader(key, value);\n        }\n    }\n    \n    if (params.auth) {\n        //basic auth\n        this.setHeader('Authorization', 'Basic ' + Base64.btoa(params.auth));\n    }\n\n    var res = new Response;\n    res.on('close', function () {\n        self.emit('close');\n    });\n    \n    res.on('ready', function () {\n        self.emit('response', res);\n    });\n\n    res.on('error', function (err) {\n        self.emit('error', err);\n    });\n    \n    xhr.onreadystatechange = function () {\n        // Fix for IE9 bug\n        // SCRIPT575: Could not complete the operation due to error c00c023f\n        // It happens when a request is aborted, calling the success callback anyway with readyState === 4\n        if (xhr.__aborted) return;\n        res.handle(xhr);\n    };\n};\n\ninherits(Request, Stream);\n\nRequest.prototype.setHeader = function (key, value) {\n    this._headers[key.toLowerCase()] = value\n};\n\nRequest.prototype.getHeader = function (key) {\n    return this._headers[key.toLowerCase()]\n};\n\nRequest.prototype.removeHeader = function (key) {\n    delete this._headers[key.toLowerCase()]\n};\n\nRequest.prototype.write = function (s) {\n    this.body.push(s);\n};\n\nRequest.prototype.destroy = function (s) {\n    this.xhr.__aborted = true;\n    this.xhr.abort();\n    this.emit('close');\n};\n\nRequest.prototype.end = function (s) {\n    if (s !== undefined) this.body.push(s);\n\n    var keys = objectKeys(this._headers);\n    for (var i = 0; i < keys.length; i++) {\n        var key = keys[i];\n        var value = this._headers[key];\n        if (isArray(value)) {\n            for (var j = 0; j < value.length; j++) {\n                this.xhr.setRequestHeader(key, value[j]);\n            }\n        }\n        else this.xhr.setRequestHeader(key, value)\n    }\n\n    if (this.body.length === 0) {\n        this.xhr.send('');\n    }\n    else if (typeof this.body[0] === 'string') {\n        this.xhr.send(this.body.join(''));\n    }\n    else if (isArray(this.body[0])) {\n        var body = [];\n        for (var i = 0; i < this.body.length; i++) {\n            body.push.apply(body, this.body[i]);\n        }\n        this.xhr.send(body);\n    }\n    else if (/Array/.test(Object.prototype.toString.call(this.body[0]))) {\n        var len = 0;\n        for (var i = 0; i < this.body.length; i++) {\n            len += this.body[i].length;\n        }\n        var body = new(this.body[0].constructor)(len);\n        var k = 0;\n        \n        for (var i = 0; i < this.body.length; i++) {\n            var b = this.body[i];\n            for (var j = 0; j < b.length; j++) {\n                body[k++] = b[j];\n            }\n        }\n        this.xhr.send(body);\n    }\n    else if (isXHR2Compatible(this.body[0])) {\n        this.xhr.send(this.body[0]);\n    }\n    else {\n        var body = '';\n        for (var i = 0; i < this.body.length; i++) {\n            body += this.body[i].toString();\n        }\n        this.xhr.send(body);\n    }\n};\n\n// Taken from http://dxr.mozilla.org/mozilla/mozilla-central/content/base/src/nsXMLHttpRequest.cpp.html\nRequest.unsafeHeaders = [\n    \"accept-charset\",\n    \"accept-encoding\",\n    \"access-control-request-headers\",\n    \"access-control-request-method\",\n    \"connection\",\n    \"content-length\",\n    \"cookie\",\n    \"cookie2\",\n    \"content-transfer-encoding\",\n    \"date\",\n    \"expect\",\n    \"host\",\n    \"keep-alive\",\n    \"origin\",\n    \"referer\",\n    \"te\",\n    \"trailer\",\n    \"transfer-encoding\",\n    \"upgrade\",\n    \"user-agent\",\n    \"via\"\n];\n\nRequest.prototype.isSafeRequestHeader = function (headerName) {\n    if (!headerName) return false;\n    return indexOf(Request.unsafeHeaders, headerName.toLowerCase()) === -1;\n};\n\nvar objectKeys = Object.keys || function (obj) {\n    var keys = [];\n    for (var key in obj) keys.push(key);\n    return keys;\n};\n\nvar isArray = Array.isArray || function (xs) {\n    return Object.prototype.toString.call(xs) === '[object Array]';\n};\n\nvar indexOf = function (xs, x) {\n    if (xs.indexOf) return xs.indexOf(x);\n    for (var i = 0; i < xs.length; i++) {\n        if (xs[i] === x) return i;\n    }\n    return -1;\n};\n\nvar isXHR2Compatible = function (obj) {\n    if (typeof Blob !== 'undefined' && obj instanceof Blob) return true;\n    if (typeof ArrayBuffer !== 'undefined' && obj instanceof ArrayBuffer) return true;\n    if (typeof FormData !== 'undefined' && obj instanceof FormData) return true;\n};\n\n},{\"./response\":52,\"Base64\":53,\"inherits\":54,\"stream\":45}],52:[function(_dereq_,module,exports){\nvar Stream = _dereq_('stream');\nvar util = _dereq_('util');\n\nvar Response = module.exports = function (res) {\n    this.offset = 0;\n    this.readable = true;\n};\n\nutil.inherits(Response, Stream);\n\nvar capable = {\n    streaming : true,\n    status2 : true\n};\n\nfunction parseHeaders (res) {\n    var lines = res.getAllResponseHeaders().split(/\\r?\\n/);\n    var headers = {};\n    for (var i = 0; i < lines.length; i++) {\n        var line = lines[i];\n        if (line === '') continue;\n        \n        var m = line.match(/^([^:]+):\\s*(.*)/);\n        if (m) {\n            var key = m[1].toLowerCase(), value = m[2];\n            \n            if (headers[key] !== undefined) {\n            \n                if (isArray(headers[key])) {\n                    headers[key].push(value);\n                }\n                else {\n                    headers[key] = [ headers[key], value ];\n                }\n            }\n            else {\n                headers[key] = value;\n            }\n        }\n        else {\n            headers[line] = true;\n        }\n    }\n    return headers;\n}\n\nResponse.prototype.getResponse = function (xhr) {\n    var respType = String(xhr.responseType).toLowerCase();\n    if (respType === 'blob') return xhr.responseBlob || xhr.response;\n    if (respType === 'arraybuffer') return xhr.response;\n    return xhr.responseText;\n}\n\nResponse.prototype.getHeader = function (key) {\n    return this.headers[key.toLowerCase()];\n};\n\nResponse.prototype.handle = function (res) {\n    if (res.readyState === 2 && capable.status2) {\n        try {\n            this.statusCode = res.status;\n            this.headers = parseHeaders(res);\n        }\n        catch (err) {\n            capable.status2 = false;\n        }\n        \n        if (capable.status2) {\n            this.emit('ready');\n        }\n    }\n    else if (capable.streaming && res.readyState === 3) {\n        try {\n            if (!this.statusCode) {\n                this.statusCode = res.status;\n                this.headers = parseHeaders(res);\n                this.emit('ready');\n            }\n        }\n        catch (err) {}\n        \n        try {\n            this._emitData(res);\n        }\n        catch (err) {\n            capable.streaming = false;\n        }\n    }\n    else if (res.readyState === 4) {\n        if (!this.statusCode) {\n            this.statusCode = res.status;\n            this.emit('ready');\n        }\n        this._emitData(res);\n        \n        if (res.error) {\n            this.emit('error', this.getResponse(res));\n        }\n        else this.emit('end');\n        \n        this.emit('close');\n    }\n};\n\nResponse.prototype._emitData = function (res) {\n    var respBody = this.getResponse(res);\n    if (respBody.toString().match(/ArrayBuffer/)) {\n        this.emit('data', new Uint8Array(respBody, this.offset));\n        this.offset = respBody.byteLength;\n        return;\n    }\n    if (respBody.length > this.offset) {\n        this.emit('data', respBody.slice(this.offset));\n        this.offset = respBody.length;\n    }\n};\n\nvar isArray = Array.isArray || function (xs) {\n    return Object.prototype.toString.call(xs) === '[object Array]';\n};\n\n},{\"stream\":45,\"util\":49}],53:[function(_dereq_,module,exports){\n;(function () {\n\n  var object = typeof exports != 'undefined' ? exports : this; // #8: web workers\n  var chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\n\n  function InvalidCharacterError(message) {\n    this.message = message;\n  }\n  InvalidCharacterError.prototype = new Error;\n  InvalidCharacterError.prototype.name = 'InvalidCharacterError';\n\n  // encoder\n  // [https://gist.github.com/999166] by [https://github.com/nignag]\n  object.btoa || (\n  object.btoa = function (input) {\n    for (\n      // initialize result and counter\n      var block, charCode, idx = 0, map = chars, output = '';\n      // if the next input index does not exist:\n      //   change the mapping table to \"=\"\n      //   check if d has no fractional digits\n      input.charAt(idx | 0) || (map = '=', idx % 1);\n      // \"8 - idx % 1 * 8\" generates the sequence 2, 4, 6, 8\n      output += map.charAt(63 & block >> 8 - idx % 1 * 8)\n    ) {\n      charCode = input.charCodeAt(idx += 3/4);\n      if (charCode > 0xFF) {\n        throw new InvalidCharacterError(\"'btoa' failed: The string to be encoded contains characters outside of the Latin1 range.\");\n      }\n      block = block << 8 | charCode;\n    }\n    return output;\n  });\n\n  // decoder\n  // [https://gist.github.com/1020396] by [https://github.com/atk]\n  object.atob || (\n  object.atob = function (input) {\n    input = input.replace(/=+$/, '');\n    if (input.length % 4 == 1) {\n      throw new InvalidCharacterError(\"'atob' failed: The string to be decoded is not correctly encoded.\");\n    }\n    for (\n      // initialize result and counters\n      var bc = 0, bs, buffer, idx = 0, output = '';\n      // get next character\n      buffer = input.charAt(idx++);\n      // character found in table? initialize bit storage and add its ascii value;\n      ~buffer && (bs = bc % 4 ? bs * 64 + buffer : buffer,\n        // and if not first of each 4 characters,\n        // convert the first 8 bits to one ascii character\n        bc++ % 4) ? output += String.fromCharCode(255 & bs >> (-2 * bc & 6)) : 0\n    ) {\n      // try to find character in table (0-63, not found => -1)\n      buffer = chars.indexOf(buffer);\n    }\n    return output;\n  });\n\n}());\n\n},{}],54:[function(_dereq_,module,exports){\nmodule.exports=_dereq_(28)\n},{\"/home/alex/projects/javascript/imjs/node_modules/grunt-browserify/node_modules/browserify/node_modules/inherits/inherits_browser.js\":28}],55:[function(_dereq_,module,exports){\n// shim for using process in browser\n\nvar process = module.exports = {};\n\nprocess.nextTick = (function () {\n    var canSetImmediate = typeof window !== 'undefined'\n    && window.setImmediate;\n    var canPost = typeof window !== 'undefined'\n    && window.postMessage && window.addEventListener\n    ;\n\n    if (canSetImmediate) {\n        return function (f) { return window.setImmediate(f) };\n    }\n\n    if (canPost) {\n        var queue = [];\n        window.addEventListener('message', function (ev) {\n            var source = ev.source;\n            if ((source === window || source === null) && ev.data === 'process-tick') {\n                ev.stopPropagation();\n                if (queue.length > 0) {\n                    var fn = queue.shift();\n                    fn();\n                }\n            }\n        }, true);\n\n        return function nextTick(fn) {\n            queue.push(fn);\n            window.postMessage('process-tick', '*');\n        };\n    }\n\n    return function nextTick(fn) {\n        setTimeout(fn, 0);\n    };\n})();\n\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.emit = noop;\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n}\n\n// TODO(shtylman)\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\n\n},{}],56:[function(_dereq_,module,exports){\n(function (process){\nvar Stream = _dereq_('stream')\n\n// through\n//\n// a stream that does nothing but re-emit the input.\n// useful for aggregating a series of changing but not ending streams into one stream)\n\nexports = module.exports = through\nthrough.through = through\n\n//create a readable writable stream.\n\nfunction through (write, end, opts) {\n  write = write || function (data) { this.queue(data) }\n  end = end || function () { this.queue(null) }\n\n  var ended = false, destroyed = false, buffer = [], _ended = false\n  var stream = new Stream()\n  stream.readable = stream.writable = true\n  stream.paused = false\n\n//  stream.autoPause   = !(opts && opts.autoPause   === false)\n  stream.autoDestroy = !(opts && opts.autoDestroy === false)\n\n  stream.write = function (data) {\n    write.call(this, data)\n    return !stream.paused\n  }\n\n  function drain() {\n    while(buffer.length && !stream.paused) {\n      var data = buffer.shift()\n      if(null === data)\n        return stream.emit('end')\n      else\n        stream.emit('data', data)\n    }\n  }\n\n  stream.queue = stream.push = function (data) {\n//    console.error(ended)\n    if(_ended) return stream\n    if(data == null) _ended = true\n    buffer.push(data)\n    drain()\n    return stream\n  }\n\n  //this will be registered as the first 'end' listener\n  //must call destroy next tick, to make sure we're after any\n  //stream piped from here.\n  //this is only a problem if end is not emitted synchronously.\n  //a nicer way to do this is to make sure this is the last listener for 'end'\n\n  stream.on('end', function () {\n    stream.readable = false\n    if(!stream.writable && stream.autoDestroy)\n      process.nextTick(function () {\n        stream.destroy()\n      })\n  })\n\n  function _end () {\n    stream.writable = false\n    end.call(stream)\n    if(!stream.readable && stream.autoDestroy)\n      stream.destroy()\n  }\n\n  stream.end = function (data) {\n    if(ended) return\n    ended = true\n    if(arguments.length) stream.write(data)\n    _end() // will emit or queue\n    return stream\n  }\n\n  stream.destroy = function () {\n    if(destroyed) return\n    destroyed = true\n    ended = true\n    buffer.length = 0\n    stream.writable = stream.readable = false\n    stream.emit('close')\n    return stream\n  }\n\n  stream.pause = function () {\n    if(stream.paused) return\n    stream.paused = true\n    return stream\n  }\n\n  stream.resume = function () {\n    if(stream.paused) {\n      stream.paused = false\n      stream.emit('resume')\n    }\n    drain()\n    //may have become paused again,\n    //as drain emits 'data'.\n    if(!stream.paused)\n      stream.emit('drain')\n    return stream\n  }\n  return stream\n}\n\n\n}).call(this,_dereq_(\"/home/alex/projects/javascript/imjs/node_modules/insert-module-globals/node_modules/process/browser.js\"))\n},{\"/home/alex/projects/javascript/imjs/node_modules/insert-module-globals/node_modules/process/browser.js\":55,\"stream\":45}]},{},[2])(2)\n});\n})(window.intermine);","var cymine = {\n  toNodesAndEdges : function(records, parentNode){\n    var d = {\n      nodes : [],\n      edges : []\n    };\n\n    for (var i in records) {\n      var thisNode, row = records[i];\n      thisNode = this.recordToNode(row);\n\n      if(row.interactions) {\n        //recursively make the interactions into nodes,\n        //because node entities are nested at two levels.\n        d = this.mergeObjects(d, this.toNodesAndEdges(row.interactions, thisNode));\n      } else {\n        //if it doesn't have an interaction list, it probably *is* an interaction\n        //and thus needs to be an edge\n        d.edges.push(this.interactionToEdge(parentNode, thisNode));\n\n      }\n      d.nodes.push(thisNode);\n\n    }\n\n    return d;\n  },\n  recordToNode : function (obj) {\n    var ret;\n    ret = obj.gene2 ? obj.gene2 : obj;\n    return {\n      data : {\n        details : this.addDetails(obj),\n        label   : this.nameNode(obj),\n        class   : ret.class,\n        symbol  : ret.symbol,\n        id : ret.objectId.toString() //cytoscape needs strings, not ints\n      }\n    }\n  },\n  addDetails : function(obj) {\n    return obj.details ? obj.details[0] : {};\n  },\n  nameNode : function(obj) {\n    if (obj.gene2 && obj.gene2.symbol) {\n      return obj.gene2.symbol;\n    } else if (obj.symbol) {\n      return obj.symbol;\n    } else if (obj.details) {\n      return obj.details[0].name;\n    } else {\n      return \"NAME MISSING\"\n    }\n  },\n  interactionToEdge : function(node, node2) {\n    //todo: we almost certainly want to add more complexity to the return object\n    return {\n      data : {\n        source : node.data.id,\n        target : node2.data.id\n      }\n    };\n  },\n  /**\n  * Overwrites obj1's values with obj2's and adds obj2's if non existent in obj1\n  * @param obj1\n  * @param obj2\n  * @returns obj3 a new object based on obj1 and obj2\n  */\n\n  //TODO: make sure we handle edge cases better, e.g. duplicate values.\n  mergeObjects : function(obj1,obj2){\n    var obj3 = {};\n    for (var attrname in obj1) { obj3[attrname] = obj1[attrname]; }\n    for (var attrname in obj2) { obj3[attrname] = obj2[attrname]; }\n    return obj3;\n  }\n\n};\n\nmodule.exports = cymine;\n","var cymine = require('./cymine'),\ncytoscape = require('./../bower_components/cytoscape/dist/cytoscape'),\nimjs = require('./../bower_components/imjs/js/im.js'),\nnodeDataDisplay = require('./nodeDataDisplay');\n\n//Todo: generify query.\nvar cy, humanmine = new imjs.Service({root: 'www.humanmine.org/humanmine'}),\nquery = {\n  \"name\": \"Gene_Interactions\",\n  \"title\": \"Gene --> Interactions\",\n  \"description\": \"Show all interactions for a given gene.\",\n  \"constraintLogic\": \"A and B\",\n  \"from\": \"Gene\",\n  \"select\": [\n    \"symbol\",\n    \"interactions.gene2.symbol\",\n    \"interactions.details.name\",\n    \"interactions.details.role1\",\n    \"interactions.details.role2\",\n    \"interactions.details.type\",\n    \"interactions.details.experiment.interactionDetectionMethods.name\",\n    \"interactions.details.experiment.publication.pubMedId\",\n    \"interactions.details.relationshipType.name\",\n    \"interactions.details.dataSets.name\"\n  ],\n  \"orderBy\": [\n    {\n      \"path\": \"symbol\",\n      \"direction\": \"ASC\"\n    }\n  ],\n  \"where\": [\n    {\n      \"path\": \"Gene\",\n      \"op\": \"LOOKUP\",\n      \"value\": \"PPARG\",\n      \"extraValue\": \"H. sapiens\",\n      \"code\": \"A\",\n      \"editable\": true,\n      \"switched\": \"LOCKED\",\n      \"switchable\": false\n    }\n  ]\n};\n\nhumanmine.records(query).then(function(response) {\n  if (response) {\n    try {\n\n      var graph = {};\n        graph.data = cymine.toNodesAndEdges(response),\n        graph.targetElem = document.getElementById('cy'),\n        graph.statusBar = graph.targetElem.querySelector('.status');\n\n      console.debug('response:', response, 'graph data', graph.data);\n\n      cy = cytoscape({\n        container: graph.targetElem,\n        layout: { name: 'cose'},\n        style: cytoscape.stylesheet()\n    .selector('node')\n      .css({\n        'content': 'data(label)'\n      })\n    .selector(':selected')\n      .css({\n        'background-color': 'black',\n        'line-color': 'black',\n        'target-arrow-color': 'black',\n        'source-arrow-color': 'black',\n        'text-outline-color': 'black'\n      }),\n        elements: graph.data,\n        ready: function(){\n          window.cy = this;\n          graph.statusBar.remove();\n        }\n      });\n\n      cy.on('tap', 'node', function(){\n        nodeDataDisplay.display(this.data());\n      });\n\n\n    } catch(e) {console.error(e);}\n  } else {\n    //todo make sure error handling works\n    graph.statusBar.class = \"status no-results\";\n  }\n});\n","var nodeInfo = {\n  display : function(node) {\n    this.targetElem = document.getElementById('nodeDetails'),\n    console.log(node);\n    this.node = node;\n    this.setTitle();\n    this.listProperties();\n  },\n  setTitle : function () {\n    var title = nodeInfo.targetElem.querySelector('.nodeTitle');\n    title.innerHTML = this.node.label;\n  },\n  listProperties : function() {\n    //todo: make this more sane. bold tags and inline html, not so brainy\n    var display = this.expandPropertyVals(this.node);\n    nodeInfo.targetElem.querySelector('.nodeInfo').innerHTML = display;\n  },\n  addProperty : function(prop, key) {\n    return '<b> ' + key + '</b>: ' + prop[key] + \"<br />\";\n  },\n  expandPropertyVals : function(obj) {\n    var display = \"\";\n    for (var prop in obj) {\n      if(typeof obj[prop] === \"object\") {\n        display += this.addProperty(this.expandPropertyVals(obj[prop]), prop);\n        console.log('object:', obj[prop], 'prop:', prop);\n      } else{\n        display += this.addProperty(obj, prop);\n      }\n    }\n    return display;\n  }\n};\n\nmodule.exports = nodeInfo;\n","exports.endianness = function () { return 'LE' };\n\nexports.hostname = function () {\n    if (typeof location !== 'undefined') {\n        return location.hostname\n    }\n    else return '';\n};\n\nexports.loadavg = function () { return [] };\n\nexports.uptime = function () { return 0 };\n\nexports.freemem = function () {\n    return Number.MAX_VALUE;\n};\n\nexports.totalmem = function () {\n    return Number.MAX_VALUE;\n};\n\nexports.cpus = function () { return [] };\n\nexports.type = function () { return 'Browser' };\n\nexports.release = function () {\n    if (typeof navigator !== 'undefined') {\n        return navigator.appVersion;\n    }\n    return '';\n};\n\nexports.networkInterfaces\n= exports.getNetworkInterfaces\n= function () { return {} };\n\nexports.arch = function () { return 'javascript' };\n\nexports.platform = function () { return 'browser' };\n\nexports.tmpdir = exports.tmpDir = function () {\n    return '/tmp';\n};\n\nexports.EOL = '\\n';\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// resolves . and .. elements in a path array with directory names there\n// must be no slashes, empty elements, or device names (c:\\) in the array\n// (so also no leading and trailing slashes - it does not distinguish\n// relative and absolute paths)\nfunction normalizeArray(parts, allowAboveRoot) {\n  // if the path tries to go above the root, `up` ends up > 0\n  var up = 0;\n  for (var i = parts.length - 1; i >= 0; i--) {\n    var last = parts[i];\n    if (last === '.') {\n      parts.splice(i, 1);\n    } else if (last === '..') {\n      parts.splice(i, 1);\n      up++;\n    } else if (up) {\n      parts.splice(i, 1);\n      up--;\n    }\n  }\n\n  // if the path is allowed to go above the root, restore leading ..s\n  if (allowAboveRoot) {\n    for (; up--; up) {\n      parts.unshift('..');\n    }\n  }\n\n  return parts;\n}\n\n// Split a filename into [root, dir, basename, ext], unix version\n// 'root' is just a slash, or nothing.\nvar splitPathRe =\n    /^(\\/?|)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?|)(\\.[^.\\/]*|))(?:[\\/]*)$/;\nvar splitPath = function(filename) {\n  return splitPathRe.exec(filename).slice(1);\n};\n\n// path.resolve([from ...], to)\n// posix version\nexports.resolve = function() {\n  var resolvedPath = '',\n      resolvedAbsolute = false;\n\n  for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n    var path = (i >= 0) ? arguments[i] : process.cwd();\n\n    // Skip empty and invalid entries\n    if (typeof path !== 'string') {\n      throw new TypeError('Arguments to path.resolve must be strings');\n    } else if (!path) {\n      continue;\n    }\n\n    resolvedPath = path + '/' + resolvedPath;\n    resolvedAbsolute = path.charAt(0) === '/';\n  }\n\n  // At this point the path should be resolved to a full absolute path, but\n  // handle relative paths to be safe (might happen when process.cwd() fails)\n\n  // Normalize the path\n  resolvedPath = normalizeArray(filter(resolvedPath.split('/'), function(p) {\n    return !!p;\n  }), !resolvedAbsolute).join('/');\n\n  return ((resolvedAbsolute ? '/' : '') + resolvedPath) || '.';\n};\n\n// path.normalize(path)\n// posix version\nexports.normalize = function(path) {\n  var isAbsolute = exports.isAbsolute(path),\n      trailingSlash = substr(path, -1) === '/';\n\n  // Normalize the path\n  path = normalizeArray(filter(path.split('/'), function(p) {\n    return !!p;\n  }), !isAbsolute).join('/');\n\n  if (!path && !isAbsolute) {\n    path = '.';\n  }\n  if (path && trailingSlash) {\n    path += '/';\n  }\n\n  return (isAbsolute ? '/' : '') + path;\n};\n\n// posix version\nexports.isAbsolute = function(path) {\n  return path.charAt(0) === '/';\n};\n\n// posix version\nexports.join = function() {\n  var paths = Array.prototype.slice.call(arguments, 0);\n  return exports.normalize(filter(paths, function(p, index) {\n    if (typeof p !== 'string') {\n      throw new TypeError('Arguments to path.join must be strings');\n    }\n    return p;\n  }).join('/'));\n};\n\n\n// path.relative(from, to)\n// posix version\nexports.relative = function(from, to) {\n  from = exports.resolve(from).substr(1);\n  to = exports.resolve(to).substr(1);\n\n  function trim(arr) {\n    var start = 0;\n    for (; start < arr.length; start++) {\n      if (arr[start] !== '') break;\n    }\n\n    var end = arr.length - 1;\n    for (; end >= 0; end--) {\n      if (arr[end] !== '') break;\n    }\n\n    if (start > end) return [];\n    return arr.slice(start, end - start + 1);\n  }\n\n  var fromParts = trim(from.split('/'));\n  var toParts = trim(to.split('/'));\n\n  var length = Math.min(fromParts.length, toParts.length);\n  var samePartsLength = length;\n  for (var i = 0; i < length; i++) {\n    if (fromParts[i] !== toParts[i]) {\n      samePartsLength = i;\n      break;\n    }\n  }\n\n  var outputParts = [];\n  for (var i = samePartsLength; i < fromParts.length; i++) {\n    outputParts.push('..');\n  }\n\n  outputParts = outputParts.concat(toParts.slice(samePartsLength));\n\n  return outputParts.join('/');\n};\n\nexports.sep = '/';\nexports.delimiter = ':';\n\nexports.dirname = function(path) {\n  var result = splitPath(path),\n      root = result[0],\n      dir = result[1];\n\n  if (!root && !dir) {\n    // No dirname whatsoever\n    return '.';\n  }\n\n  if (dir) {\n    // It has a dirname, strip trailing slash\n    dir = dir.substr(0, dir.length - 1);\n  }\n\n  return root + dir;\n};\n\n\nexports.basename = function(path, ext) {\n  var f = splitPath(path)[2];\n  // TODO: make this comparison case-insensitive on windows?\n  if (ext && f.substr(-1 * ext.length) === ext) {\n    f = f.substr(0, f.length - ext.length);\n  }\n  return f;\n};\n\n\nexports.extname = function(path) {\n  return splitPath(path)[3];\n};\n\nfunction filter (xs, f) {\n    if (xs.filter) return xs.filter(f);\n    var res = [];\n    for (var i = 0; i < xs.length; i++) {\n        if (f(xs[i], i, xs)) res.push(xs[i]);\n    }\n    return res;\n}\n\n// String.prototype.substr - negative index don't work in IE8\nvar substr = 'ab'.substr(-1) === 'b'\n    ? function (str, start, len) { return str.substr(start, len) }\n    : function (str, start, len) {\n        if (start < 0) start = str.length + start;\n        return str.substr(start, len);\n    }\n;\n","// shim for using process in browser\n\nvar process = module.exports = {};\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = setTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            currentQueue[queueIndex].run();\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    clearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        setTimeout(drainQueue, 0);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\n// TODO(shtylman)\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n"],"sourceRoot":"/source/"}